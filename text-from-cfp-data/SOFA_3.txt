Anmelden 
  Registrierung 
  Deutsch  English 
  Español 
  Português 
  Français 

     Dom 
  Najlepsze kategorie | CAREER & MONEY 
  PERSONAL GROWTH 
  POLITICS & CURRENT AFFAIRS 
  SCIENCE & TECH 
  HEALTH & FITNESS 
  LIFESTYLE 
  ENTERTAINMENT 
  BIOGRAPHIES & HISTORY 
  FICTION 
  Najlepsze historie 
  Najlepsze historie 
  Dodaj historię 
  Moje historie 

 Home 
  Marketing Intelligent Systems Using Soft Computing: Managerial and Research Applications (Studies in Fuzziness and Soft Computing, 258) 3642156053, 9783642156052 

 Marketing Intelligent Systems Using Soft Computing: Managerial and Research Applications (Studies in Fuzziness and Soft Computing, 258) 3642156053, 9783642156052   
 Dr. Jay Liebowitz Orkand Endowed Chair in Management and Technology University of Maryland University College Graduate S   
  208    91    8MB    
  English   Pages 492 [476]   Year 2010    
  Report DMCA / Copyright    
  DOWNLOAD FILE   
   
 Polecaj historie   

 Intelligent and Soft Computing Systems for Green Energy 1394166370, 9781394166374  
 INTELLIGENT AND SOFT COMPUTING SYSTEMS FOR GREEN ENERGY Written and edited by some of the world’s top experts in the fie  
  710    145    48MB    Read more   

 Evolutionary Computation in Economics and Finance (Studies in Fuzziness and Soft Computing, 100) 9783790825121, 9783790817843, 3790825123  
 After a decade's development, evolutionary computation (EC) proves to be a powerful tool kit for economic analysis.  
  197    113    44MB    Read more   

 Soft Computing: Fundamentals and Applications 9781842658635, 9781783320851  
 SOFT COMPUTING: Fundamentals and Applications starts with an introduction to soft computing, a family consists of many m  
  5,162    510    4MB    Read more   

 Fuzzy Graph Theory (Studies in Fuzziness and Soft Computing Book 363) 9783319714073, 9783639270952, 3319714074  
  
  184    45    9MB    Read more   

 Texture Spaces (Studies in Fuzziness and Soft Computing, 411) 3031397479, 9783031397479  
 This book provides a complete framework for the fundamental concepts and results of texture spaces and its applications.  
  154    85    2MB    Read more   

 Soft Computing: Theories and Applications : Proceedings of SoCTA 2019 (Advances in Intelligent Systems and Computing) [1st ed. 2020] 9811540314, 9789811540318  
 This book focuses on soft computing and how it can be applied to solve real-world problems arising in various domains, r  
  3,635    166    43MB    Read more   

 Monte Carlo Methods in Fuzzy Optimization (Studies in Fuzziness and Soft Computing, 222) 9783540762898, 3540762892  
 1. 1 Introduction The objective of this book is to introduce Monte Carlo methods to ?nd good approximate solutions to fu  
  169    33    4MB    Read more   

 Evolutionary Computation in Data Mining (Studies in Fuzziness and Soft Computing, 163) 9783540223702, 3540223703  
 Data mining (DM) consists of extracting interesting knowledge from re- world, large & complex data sets; and is the  
  141    106    Read more   

 Principles of Soft Computing Using Python Programming : Learn How to Deploy Soft Computing Models in Real World Applications 9781394173136  
 An accessible guide to the revolutionary techniques of Soft Computing. Soft computing is a computing approach designed  
  268    36    14MB    Read more   

 Foundations of Reasoning under Uncertainty (Studies in Fuzziness and Soft Computing, 249) 3642107265, 9783642107269  
 Uncertainty exists almost everywhere, except in the most idealized situations; it is not only an inevitable and ubiquito  
  140    83    Read more   

 Author / Uploaded 
  Jorge Casillas (editor) 
  Francisco J. Martínez López (editor) 

 Table of contents :  
  Title  
  Foreword  
  Preface  
  Contents  
  Essays  
  Marketing and Artificial Intelligence: Great Opportunities, Reluctant Partners  
  Introduction  
  Marketing Problem-Solving Modes  
  Marketing Problem-Solving Modes and Decision Support Technologies  
  The State of Artificial Intelligence (AI) in Marketing  
  Applications of AI in Marketing  
  Perspective  
  References  
  Data Mining and Scientific Knowledge: Some Cautions for Scholarly Researchers  
  Introduction  
  The Data Mining Method  
  Data Mining and Scientific Knowledge  
  Data Mining in a Practical Context  
  Discussion and Conclusions  
  References  
  Observations on Soft Computing in Marketing  
  References  
  Soft Computing Methods in Marketing: Phenomena and Management Problems  
  Introduction  
  Marketplace Phenomena  
  Management Problems  
  Summary  
  References  
  User-Generated Content: The “Voice of the Customer” in the 21st Century  
  Introduction  
  Marketing Scientists Should Care about UGC or Should They?  
  Marketing Scientists and Data Mining Experts Need Each Other Now More Than Ever  
  References  
  Fuzzy Networks  
  References  
  KDD: Applying in Marketing Practice Using Point of Sale Information  
  Introduction  
  The Store Layout  
  The Buying Association: A Way to Measure the Relationship among Products  
  Method and Results  
  Discussion  
  References  
  Marketing – Sales Interface and the Role of KDD  
  Marketing Versus Sales  
  A Call for Change  
  KDD as a Catalyst for Paradigmatic Change  
  References  
  Segmentation and Targeting  
  Applying Soft Cluster Analysis Techniques to Customer Interaction Information  
  Introduction  
  Literature Review  
  Background of Cluster Analysis  
  Applications in the Financial Services Industry and Customer Relationship Management  
  Business Context and Data Used for Analysis  
  Business Context  
  Synthetic Data Structure and Design  
  Synthetic Data Group Characteristics  
  Research Approach  
  Variable Selection  
  Data Validation  
  Data Standardization  
  Addressing Outliers  
  Decide Number of Clusters  
  Validate Clustering Results  
  Results  
  Variable Selection  
  Standardize Data  
  Decide Number of Clusters  
  Validate Clustering Results  
  Discussion and Analysis  
  Conclusion  
  References  
  Marketing Intelligent System for Customer Segmentation  
  Introduction  
  Components of Marketing Intelligent System  
  Operational Data  
  Derived Data  
  Customers’ Segmentation Using Partitioning Method  
  Interpretation of Intelligent Systems Outputs by Expert Systems  
  Marketing Intelligent Sytems for Customers Clustering Using Fuzzy C-Means Clustering  
  Experimental Results  
  Collaboration of Knowledge Based System and the Fuzzy C-Means Clustering Implementation Results  
  Conclusion  
  Practical Utilities for Marketing Management  
  References  
  Using Data Fusion to Enrich Customer Databases with Survey Data for Database Marketing  
  Introduction and Motivation  
  DataFusion  
  Data Fusion Concepts  
  Core Data Fusion Algorithms  
  Data Fusion Evaluation and Deployment  
  Case Study: Cross Selling Credit Cards  
  Internal Evaluation  
  External Evaluation  
  Case Discussion  
  A Process Model for a Fusion Factory  
  Conclusion  
  References  
  Collective Intelligence in Marketing  
  Introduction  
  Data Mining Technology in Marketing  
  Business Applications of Data Mining  
  Predicting Customer Preferences  
  Finding Similar Customers or Consumers  
  Applying Collective Intelligence in Marketing  
  Challenges of Applying Collective Intelligence in Marketing  
  Case Study: Keyword-Based Product Suggestions  
  Summary and Conclusions  
  References  
  Marketing Modelling  
  Predictive Modeling on Multiple Marketing Objectives Using Evolutionary Computation  
  Introduction  
  Background  
  Non-dominated Solutions  
  Genetic Search  
  Multi-objective Evolutionary Computation  
  Multi-objective Models Using Genetic Search  
  Model Representation  
  Genetic Search Operators  
  Multi-objective Models Using Pareto-Selection  
  Fitness Function  
  Performance Measures  
  Data and Multi-objective Model Performance  
  Data  
  Models along the Pareto-Frontier  
  Conclusions  
  References  
  Automatic Discovery of Potential Causal Structures in Marketing Databases Based on Fuzzy Association Rules  
  Introduction  
  Previous Considerations on the Adaptation of Marketing Data  
  Data Collection in Marketing  
  The Classical Approach to Deal with Marketing Data  
  Transformation of Marketing Scales into Fuzzy Semantic  
  Application of Machine Learning to the Marketing Data  
  Mining Association Rules  
  Association Rules: The Beginning  
  Association Rule Mining with Continuous Variables  
  Description of Fuzzy-CSar  
  Knowledge Representation  
  Multi-item Fuzzification  
  Process Organization  
  Problem Description and Methodology  
  Problem Description  
  Experimental Methodology  
  Analysis of the Results  
  Analysis of the Rules in the Objective Space  
  Analysis of the Utility of the Rules from the Marketing Expert Perspective  
  Conclusions and Further Work  
  References  
  Fuzzy–Evolutionary Modeling of Customer Behavior for Business Intelligence  
  Introduction  
  TheContext  
  Application Scenarios  
  Related Work  
  Data Mining  
  Fuzzy Rule-Based Systems  
  Fuzzy Sets  
  Operations on Fuzzy Sets  
  Fuzzy Propositions and Predicates  
  Fuzzy Rulebases  
  Evolutionary Algorithms  
  An Island-Based Evolutionary Algorithm for Fuzzy Rule-Base Optimization  
  Genetic Operators  
  Fitness  
  Selection and Overfitting Control  
  A Case Study on Customer Revenue Modeling  
  The Company  
  Aim of the Study  
  The Data  
  Discussion of the Results  
  Validation of the Model  
  Conclusions  
  References  
  Communication/Direct Marketing  
  An Evaluation Model for Selecting Integrated Marketing Communication Strategies for Customer Relationship Management  
  Introduction  
  Literature Review  
  Customer Relationship Management (CRM)  
  Customer Relational Benefit  
  Integrated Marketing Communication Strategy  
  Quality Function Deployment  
  Fuzzy Analytic Hierarchy Process  
  Construction of an Evaluation Model for Selecting IMC Strategy on CRM  
  Empirical Illustrations  
  The Hierarchy Construction of Customer Relational Benefit  
  The Relative Importance Weights of Categories and Attributes for Customer Relational Benefit  
  The Relationship Matrix between Customer Relational Benefit and IMC Strategy  
  The Completed Evaluation Model for Selecting IMC Strategy on CRM  
  Conclusion  
  Discussion and Implications  
  References  
  Direct Marketing Based on a Distributed Intelligent System  
  Introduction  
  Formation of Clusters to Boost Direct Marketing  
  Formal Presentation of Methods  
  The Analytical Hierarchy Process  
  Fuzzy C Means Clustering Algorithm  
  The Hybrid Approach to Process Customers Evaluations  
  The Multi-Agent System  
  Experimental Results  
  Clients’ Evaluation  
  Concluding Remarks  
  References  
  Direct Marketing Modeling Using Evolutionary Bayesian Network Learning Algorithm  
  Introduction  
  Background  
  Direct Marketing Modeling  
  Bayesian Networks  
  The Missing Value Problem  
  Basic SEM Algorithm  
  HEA  
  Learning Bayesian Networks from Incomplete Databases  
  The EBN Algorithm  
  The EM Procedure in EBN  
  The Initial Network Structure for G$_best$  
  Data Completing Procedure  
  HEA Search Procedure  
  Application in Direct Marketing Modeling  
  Methodology  
  Cross-Validation Results  
  Conclusion  
  References  
  Product  
  Designing Optimal Products: Algorithms and Systems  
  Introduction  
  The Optimal Product (Line) Design Problem  
  Choice Rule  
  Optimization Criteria  
  Number of Products to be Designed  
  Procedure Steps  
  Optimization Algorithm  
  Problem Formulation  
  Deterministic Choice Rules  
  Probabilistic Choice Rules  
  Optimization Algorithms Applied to the Problem  
  Greedy Heuristic  
  Interchange Heuristic  
  Divide and Conquer  
  Coordinate Ascent  
  Dynamic Programming  
  Beam Search  
  Nested Partitions  
  Genetic Algorithms  
  Lagrangian Relaxation with Branch and Bound  
  Comparison of the Algorithms  
  A Comparison of Genetic Algorithm to Simulated Annealing  
  Genetic Algorithm Implementation  
  Simulated Annealing Implementation  
  Monte Carlo Simulation  
  A Real World Case  
  Programs and Systems  
  DESOP-LINEOP  
  SIMOPT  
  GENESYS  
  MDSS  
  Advanced Simulation Module  
  Discussion  
  Conclusions  
  References  
  PRODLINE: Architecture of an Artificial Intelligence Based Marketing Decision Support System for PRODuct LINE Designs  
  Introduction  
  The Product Line Problem  
  Existing Approaches to Product Line Design Problem  
  Architecture of PRODLINE  
  Database  
  Model Base  
  PRODLINE: User Interaction  
  Inputs  
  Discussion and Future Directions  
  References  
  A Dempster-Shafer Theory Based Exposition of Probabilistic Reasoning in Consumer Choice  
  Introduction  
  Background  
  Dempster-Shafer Theory  
  Formulisation of DS/AHP and Consumer Choice  
  DS/AHP Analysis of Car Choice Problem  
  Future Trends  
  Conclusions  
  References  
  E-Commerce  
  Decision Making in Multiagent Web Services Based on Soft Computing  
  Introduction  
  Fundamentals for Web Services  
  E-Services and Web Services  
  Parties in Web Services  
  SESS: A Unified Multilayer Architecture for E-Services  
  First Layer: Infrastructure Services  
  Second Layer: Web Services  
  Third Layer: E-Services  
  SESS: A Service Centered System Architecture  
  Web Service Lifecycle  
  Introduction  
  Provider's Demand Driven Web Service Lifecycle  
  Requester's Demand Driven Web Service Lifecycle  
  Broker's Demand Driven Web Service Lifecycle  
  Summary of Demand Driven Web Service Lifecycle  
  Decision Making in Web Services  
  Decision Making  
  Decision Making in Web Services  
  Soft Computing for Web Services  
  WUDS: A Unified Decision Support System for Web Services  
  Agents within WUDS  
  WS Decision Supporter  
  Agents Workflowing in WUDS  
  Case Based Web Services  
  Introduction  
  Web Services vs. CBR  
  A Unified Treatment of Case Based Web Services  
  Conclusions and Future Work  
  References  
  Dynamic Price Forecasting in Simultaneous Online Art Auctions  
  Introduction  
  Simultaneous Online Auctions  
  Data Used in This Study  
  Bidder Competition in Simultaneous Online Auctions  
  Dynamic Price Forecasting  
  Model Formulation  
  Benchmark Models  
  Model Estimation and Evaluation  
  Results  
  Estimated Models  
  Forecasting Performance  
  Bidder Competition and Price Forecasting  
  Bidder Competition as Time-Varying Predictors  
  Bidder Competition as a Conditioning Variable  
  Conclusion and Future Direction  
  References  
  Analysing Incomplete Consumer Web Data Using the Classification and Ranking Belief Simplex (Probabilistic Reasoning and Evolutionary Computation)  
  Introduction  
  Background  
  Measuring Consumer Web Purchasing Attitudes and CaRBS Analyses  
  Conceptualisation and Operationalisation of Web Purchasing Involvement  
  Internet Survey Design  
  CaRBS Analysis of ‘Incomplete’ Web Experience Data Set  
  CaRBS Analysis of ‘Completed’ Web Experience Data Set  
  Future Trends  
  Conclusions  
  References  
  Author Index   
 Citation preview   
  Jorge Casillas and Francisco J. Martínez-López (Eds.) Marketing Intelligent Systems Using Soft Computing: Managerial and Research Applications  
   
  Studies in Fuzziness and Soft Computing, Volume 258 Editor-in-Chief Prof. Janusz Kacprzyk Systems Research Institute Polish Academy of Sciences ul. Newelska 6 01-447 Warsaw Poland E-mail: [email protected]  Further volumes of this series can be found on our homepage: springer.com Vol. 243. Rudolf Seising (Ed.) Views on Fuzzy Sets and Systems from Different Perspectives, 2009 ISBN 978-3-540-93801-9  
   
  Vol. 251. George A. Anastassiou Fuzzy Mathematics: Approximation Theory, 2010 ISBN 978-3-642-11219-5  
   
  Vol. 244. Xiaodong Liu and Witold Pedrycz Axiomatic Fuzzy Set Theory and Its Applications, 2009 ISBN 978-3-642-00401-8  
   
  Vol. 252. Cengiz Kahraman, Mesut Yavuz (Eds.) Production Engineering and Management under Fuzziness, 2010 ISBN 978-3-642-12051-0 Vol. 253. Badredine Arfi Linguistic Fuzzy Logic Methods in Social Sciences, 2010 ISBN 978-3-642-13342-8 Vol. 254. Weldon A. Lodwick, Janusz Kacprzyk (Eds.) Fuzzy Optimization, 2010 ISBN 978-3-642-13934-5 Vol. 255. Zongmin Ma, Li Yan (Eds.) Soft Computing in XML Data Management, 2010 ISBN 978-3-642-14009-9 Vol. 256. Robert Jeansoulin, Odile Papini, Henri Prade, and Steven Schockaert (Eds.) Methods for Handling Imperfect Spatial Information, 2010 ISBN 978-3-642-14754-8 Vol. 257. Salvatore Greco, Ricardo Alberto Marques Pereira, Massimo Squillante, Ronald R. Yager, and Janusz Kacprzyk (Eds.) Preferences and Decisions,2010 ISBN 978-3-642-15975-6  
   
  Vol. 245. Xuzhu Wang, Da Ruan, Etienne E. Kerre Mathematics of Fuzziness – Basic Issues, 2009 ISBN 978-3-540-78310-7 Vol. 246. Piedad Brox, Iluminada Castillo, Santiago Sánchez Solano Fuzzy Logic-Based Algorithms for Video De-Interlacing, 2010 ISBN 978-3-642-10694-1 Vol. 247. Michael Glykas Fuzzy Cognitive Maps, 2010 ISBN 978-3-642-03219-6 Vol. 248. Bing-Yuan Cao Optimal Models and Methods with Fuzzy Quantities, 2010 ISBN 978-3-642-10710-8 Vol. 249. Bernadette Bouchon-Meunier, Luis Magdalena, Manuel Ojeda-Aciego, José-Luis Verdegay, Ronald R. Yager (Eds.) Foundations of Reasoning under Uncertainty, 2010 ISBN 978-3-642-10726-9 Vol. 250. Xiaoxia Huang Portfolio Analysis, 2010 ISBN 978-3-642-11213-3  
   
  Vol. 258. Jorge Casillas and Francisco J. Martínez-López (Eds.) Marketing Intelligent Systems Using Soft Computing: Managerial and Research Applications, 2010 ISBN 978-3-642-15605-2  
   
  Jorge Casillas and Francisco J. Martínez-López (Eds.)  
   
  Marketing Intelligent Systems Using Soft Computing: Managerial and Research Applications  
   
  ABC  
   
  Editors Dr. Jorge Casillas Department of Computer Science and Artificial Intelligence Computer and Telecommunication Engineering School University of Granada Granada E-18071 Spain E-mail: [email protected]   
   
  Dr. Francisco J. Martínez-López Department of Marketing Business Faculty University of Granada Granada, Spain E-18.071 E-mail: [email protected]   
   
  ISBN 978-3-642-15605-2  
   
  e-ISBN 978-3-642-15606-9  
   
  and Department of Economics and Business – Marketing Group Open University of Catalonia Barcelona, Spain E-08.035 E-mail: [email protected]   
   
  DOI 10.1007/978-3-642-15606-9 Studies in Fuzziness and Soft Computing  
   
  ISSN 1434-9922  
   
  Library of Congress Control Number: 2010934965 c 2010 Springer-Verlag Berlin Heidelberg  This work is subject to copyright. All rights are reserved, whether the whole or part of the material is concerned, specifically the rights of translation, reprinting, reuse of illustrations, recitation, broadcasting, reproduction on microfilm or in any other way, and storage in data banks. Duplication of this publication or parts thereof is permitted only under the provisions of the German Copyright Law of September 9, 1965, in its current version, and permission for use must always be obtained from Springer. Violations are liable to prosecution under the German Copyright Law. The use of general descriptive names, registered names, trademarks, etc. in this publication does not imply, even in the absence of a specific statement, that such names are exempt from the relevant protective laws and regulations and therefore free for general use. Typeset & Cover Design: Scientific Publishing Services Pvt. Ltd., Chennai, India. Printed on acid-free paper 987654321 springer.com  
   
  Foreword  
   
  Dr. Jay Liebowitz Orkand Endowed Chair in Management and Technology University of Maryland University College Graduate School of Management & Technology 3501 University Boulevard East Adelphi, Maryland 20783-8030 USA [email protected]   
   
  When I first heard the general topic of this book, Marketing Intelligent Systems or what I’ll refer to as Marketing Intelligence, it sounded quite intriguing. Certainly, the marketing field is laden with numeric and symbolic data, ripe for various types of mining—data, text, multimedia, and web mining. It’s an open laboratory for applying numerous forms of intelligentsia—neural networks, data mining, expert systems, intelligent agents, genetic algorithms, support vector machines, hidden Markov models, fuzzy logic, hybrid intelligent systems, and other techniques. I always felt that the marketing and finance domains are wonderful application areas for intelligent systems, and this book demonstrates the synergy between marketing and intelligent systems, especially soft computing. Interactive advertising is a complementary field to marketing where intelligent systems can play a role. I had the pleasure of working on a summer faculty fellowship with R/GA in New York City—they have been ranked as the top interactive advertising agency worldwide. I quickly learned that interactive advertising also takes advantage of data visualization and intelligent systems technologies to help inform the Chief Marketing Officer of various companies. Having improved ways to present information for strategic decision making through use of these technologies is a great benefit. A number of interactive advertising agencies have groups working on “data intelligence” in order to present different views of sales and other data in order to help their clients make better marketing decisions. Let’s explore the term “marketing intelligence”. The Marketing Intelligence & Planning journal, published by Emerald Publishers, “aims to provide a vehicle that will help marketing managers put research and plans into action.” In its aims and scope, the editors further explain, “Within that broad description lies a wealth of skills encompassing information-gathering, data interpretation, consumer psychology, technological resource knowledge, demographics and the marshalling of human and technical resources to create a powerful strategy.” Data interpretation seems to be at the intersection of “marketing” and “intelligence”. By applying advanced technologies, data can be interpreted and visualized in order to enhance the decision making ability of the marketing executives. Certainly, blogs and social networking sites are rich forums for applying mining techniques to look for hidden  
   
  VI  
   
  Foreword  
   
  patterns and relationships. These patterns may enrich the discovery process and allow different views, perhaps those unexpected, from those initially conceived. In Inderscience’s International Journal of Business Forecasting and Marketing Intelligence, the focus is on applying innovative intelligence methodologies, such as rule-based forecasting, fuzzy logic forecasting, and other intelligent system techniques, to improve forecasting and marketing decisions. In looking at the Winter 2010 Marketing Educator’s American Marketing Association Conference, there are a number of tracks presented where the use of intelligent systems could be helpful: Consumer behavior, global marketing, brand marketing, business-tobusiness marketing, research methods, marketing strategy, sales and customer relationship management, service science, retailing, and marketing & technology. Digital-centered marketing where one takes advantage of such digital marketing elements as mobile, viral, and social marketing channels is a growing field that can apply the synergies of marketing and intelligent systems. Positions for Directors of Marketing Intelligence are also appearing to be the champions of new marketing methods. Gartner Group reports, such as the August 2008 report on “Social Media Delivers Marketing Intelligence”, are further evidence of this evolving field. In a recent report of “hot topics” for college undergraduates to select as majors in the coming years, the fields of service science, sustainability, health informatics, and computational sciences were cited as the key emerging fields. Certainly, marketing intelligence can play a key role in the service science field, as well as perhaps some of the other fields noted. In May 2008, there was even a special issue on “Service Intelligence and Service Science” published in the Springer Service-Oriented Computing and Applications Journal. In July 2009, there was the 3rd International Workshop on Service Intelligence and Computing to look at the synergies between the service intelligence and service sciences fields. In the years ahead, advanced computational technologies will be applied to the service science domain to enhance marketing types of decisions. In 2006, I edited a book titled Strategic Intelligence: Business Intelligence, Competitive Intelligence, and Knowledge Management (Taylor & Francis). I defined strategic intelligence as the aggregation of the other types of intelligentsia to provide value-added information and knowledge toward making organizational strategic decisions. I see strategic intelligence as the intersection of business intelligence, competitive intelligence, and knowledge management, whereby business intelligence and knowledge management have a more internal focus and competitive intelligence has a greater external view. Marketing intelligence seems to contribute to both business and competitive intelligence—helping to identify hidden patterns and relationships of large masses of data and text and also assisting in developing a systematic program for collecting, analyzing, and managing external information relating to an organization’s decision making process. I believe that this book sheds important light on how marketing intelligence, through the use of complementary marketing and intelligent systems techniques, can add to the strategic intelligence of an organization. The chapters present both a marketing and soft computing/intelligent systems perspective, respectively. I commend the editors and authors towards filling the vacuum in providing a key reference text in the marketing intelligence field. Enjoy!  
   
  Preface  
   
  The development of ad hoc Knowledge Discovery in Databases (KDD) applications for the resolution of information and decision-taking problems in marketing is more necessary than ever. If we observe the evolution of so-called Marketing Management Support Systems (MkMSS) through time, it is easy to see how the new categories of systems which have appeared over the last two decades have led in that direction. In fact, during the eighties, the inflection point was set that marked a transition stage from what are known as Data-driven Systems to Knowledge-based Systems, i.e. MkMSS based on Artificial Intelligent (AI) methods. The popular Marketing Expert Systems were the first type in this MkMSS category. Then, other new types within this category appeared, such as Casebased Reasoning Marketing Systems, Systems for the Improvement of Creativity in Marketing, Marketing Systems based on Artificial Neural Networks, Fuzzy Rules, etc. Most of these systems have been recent proposals and, in any case, their application is still scarce in marketing practical and, specially, academic domains. Anyhow, we have noticed a clear greater interest and use of these Knowledge-based Systems among marketing professionals than among marketing academics. Indeed, we perceive a notable disconnection of the latter from these systems, who still base most of their analytical methods on techniques belonging to statistics. Doubtless, this fact contributes to these two dimensions of marketing—i.e. the professional and the academic—grow apart. During the years that we have been working on this research stream, we have realized the significant lack of papers, especially in marketing journals, which focus on developing ad hoc AI-based methods and tools to solve marketing problems. Obviously, this also implies a lack of involvement by marketing academics in this promising research stream in marketing. Among the reasons that can be argued to justify the residual use that marketing academics make of AI, we highlight a generalized ignorance of what some branches of the AI discipline (such as knowledge-based systems, machine learning, soft computing, search and optimization algorithms, etc.) can offer. Of course, we encourage marketing academics to show a strong determination to approximate AI to the marketing discipline. When we talk about approximation, we refer to going far beyond a superficial knowledge of what these AI concepts are. On the contrary, we believe that multidisciplinary research projects, formed by hybrid teams of marketing and artificial intelligence people, are more than necessary. In essence, the AI discipline has a notable number of good researchers who are interested in applying their proposals, where business in general, management  
   
  VIII  
   
  Preface  
   
  and, in particular, marketing are target areas for application. However, the quality of such applications necessarily depends on how well described the marketing problem to be solved is, as well as how well developed and applied the AI-based methods are. This means having the support and involvement of people belonging to marketing, the users of such applications. Considering the above, this editorial project has two strategic aims: 1.  
   
  2.  
   
  Contribute and encourage the worldwide take-off of what we have called Marketing Intelligent Systems. These are, in general, AI-based systems applied to aid decision-taking in marketing. Moreover, when we recently proposed this term of Marketing Intelligent Systems, we specifically related it to the development and application of intelligent systems based on Soft Computing and other machine-learning methods for marketing. This is the main scope of interest. Promote the idea of interdisciplinary research projects, with members belonging to AI and marketing, in order to develop better applications thanks to the collaboration of both disciplines.  
   
  This book volume presented here is a worthy start for these purposes. Next, we briefly comment on its structural parts. Prior to the presentation of the manuscripts selected after a competitive call for chapters, the first block of this book is dedicated to introducing diverse leading marketing academics’ reflections on the potential of Soft Computing and other AIbased methods for the marketing domain. Following these essays, the book is structured in five main parts, in order to articulate in a more congruent manner the rest of the chapters. In this regard, the reader should be aware of the fact that some of the chapters could be reasonably assigned to more than one part, though they have been finally grouped as follows. The first part deals with segmentation and targeting. Duran et al. analyze the use of different clustering techniques such as k-means, fuzzy c-means, genetic kmeans and neural-gas algorithms to identify common characteristics and segment customers. Next, Markic and Tomic investigate the integration of crisp and fuzzy clustering techniques with knowledge-based expert systems for customer segmentation. Thirdly, Van der Putten and Kok develop predictive data mining for behavioral targeting by data fusion and analyze different techniques such as neural networks, linear regression, k-nearest neighbor and naive Bayes to deal with targeting. Finally, Bruckhaus reviews collective intelligent techniques which allow marketing managers to discover and approach behaviors, preferences and ideas of groups of people. These techniques are useful for new insights into firms’ customer portfolios so they can be better identified and targeted. The second part contains several contributions grouped around marketing modeling. Bhattacharyya explores the use of multi-objective genetic programming to derive predictive models from a marketing-related dataset. Orriols-Puig et al. propose an unsupervised genetic learning approach based on fuzzy association rules to extract causal patterns from consumer behavior databases. Finally, Pereira  
   
  Preface  
   
  IX  
   
  and Tettamanzi introduce a distributed evolutionary algorithm to optimize fuzzy rule-based predictive models of various types of customer behavior. Next, there are two parts devoted to elements of the marketing-mix, specifically applications and solutions for Communication and Product policies. In the third part, Hsu et al. show how a fuzzy analytic hierarchy process helps to reduce imprecision and improve judgment when evaluating the preference of customer opinions about customer relationship management. López and López propose a distributed intelligent system based on multi-agent systems, an analytic hierarchy process and fuzzy c-means to analyze customers’ preferences for direct marketing. Wong also addresses direct marketing but using evolutionary algorithms that describe Bayesian networks from incomplete databases. The fourth part consists of two chapters directly related to Product policy, plus a third dealing with a problem of consumer’s choice based on diverse criteria, mainly functional characteristics of products, though this contribution also has implications for strategic and other marketing-mix areas. Genetic algorithms have proved to be effective in optimizing product line design, according to both Tsafarakis-Matsatsinis and Balakrishnan et al. in their chapters. A dynamic programming algorithm is also used in the second case to seed the genetic algorithm with promising initial solutions. In Beynon et al.’s chapter, probabilistic reasoning is hybridized with analytic hierarchy processes to approach the problem of consumer judgment and the grouping of the preference criteria that drive their product/brand choices. The final part is a set of contributions grouped under e-commerce applications. Sun et al. propose a multiagent system based on case-based reasoning and fuzzy logic for web service composition and recommendation. Dass et al. investigate the use of functional data analysis for the dynamic forecasting of price prediction in simultaneous online auctions. Finally, Beynon and Page deploy probabilistic reasoning and differential evolution to deal with incomplete data for measuring consumer web purchasing attitudes. This book is useful for technicians who apply intelligent systems to marketing, as well as for those marketing academics and professionals interested in the application of advanced intelligent systems. Synthetically, it is especially recommended for the following groups: • • • •  
   
  Computer Science engineers working on intelligent systems applications, especially Soft-Computing-based Intelligent Systems. Marketers and business managers of firms working with complex information systems. Computer Science and Marketing academics, in particular those investigating synergies between the AI and Marketing. PhD students studying intelligent systems applications and advanced analytical methods for marketing.  
   
  X  
   
  Preface  
   
  Finally, we wish to thank Springer and in particular Prof. J. Kacprzyk, for having given us the opportunity to make real this fascinating and challenging dream. We are also honored and privileged to have received help and encouragement from several notable world marketing academics; we thank you for your support, smart ideas and thoughts. Likewise, we offer our most sincere acknowledgment and gratitude to all the contributors for their rigor and generosity in producing such high quality papers. Last but not least, we especially thank the team of reviewers for their great work.  
   
  March 2010  
   
  Granada (Spain) Jorge Casillas and Francisco J. Martínez-López University of Granada, Spain  
   
  Contents  
   
  Essays Marketing and Artiﬁcial Intelligence: Great Opportunities, Reluctant Partners . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Berend Wierenga  
   
  1  
   
  Data Mining and Scientiﬁc Knowledge: Some Cautions for Scholarly Researchers . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Nick Lee, Gordon Greenley  
   
  9  
   
  Observations on Soft Computing in Marketing . . . . . . . . . . . . . . . David W. Stewart  
   
  17  
   
  Soft Computing Methods in Marketing: Phenomena and Management Problems . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . John Roberts  
   
  21  
   
  User-Generated Content: The “Voice of the Customer” in the 21st Century . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Eric T. Bradlow  
   
  27  
   
  Fuzzy Networks . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Dawn Iacobucci KDD: Applying in Marketing Practice Using Point of Sale Information . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Adilson Borges, Barry J. Babin Marketing – Sales Interface and the Role of KDD . . . . . . . . . . . Greg W. Marshall  
   
  31  
   
  35 43  
   
  XII  
   
  Contents  
   
  Segmentation and Targeting Applying Soft Cluster Analysis Techniques to Customer Interaction Information . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Randall E. Duran, Li Zhang, Tom Hayhurst Marketing Intelligent System for Customer Segmentation . . . Brano Markic, Drazena Tomic  
   
  49 79  
   
  Using Data Fusion to Enrich Customer Databases with Survey Data for Database Marketing . . . . . . . . . . . . . . . . . . . . . . . . 113 Peter van der Putten, Joost N. Kok Collective Intelligence in Marketing . . . . . . . . . . . . . . . . . . . . . . . . . 131 Tilmann Bruckhaus  
   
  Marketing Modelling Predictive Modeling on Multiple Marketing Objectives Using Evolutionary Computation . . . . . . . . . . . . . . . . . . . . . . . . . . . . 155 Siddhartha Bhattacharyya Automatic Discovery of Potential Causal Structures in Marketing Databases Based on Fuzzy Association Rules . . . . . 181 Albert Orriols-Puig, Jorge Casillas, Francisco J. Mart´ınez-L´ opez Fuzzy–Evolutionary Modeling of Customer Behavior for Business Intelligence . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 207 C´elia da Costa Pereira, Andrea G.B. Tettamanzi  
   
  Communication/Direct Marketing An Evaluation Model for Selecting Integrated Marketing Communication Strategies for Customer Relationship Management . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 227 Tsuen-Ho Hsu, Yen-Ting Helena Chiu, Jia-Wei Tang Direct Marketing Based on a Distributed Intelligent System . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 255 Virgilio L´ opez Morales, Omar L´ opez Ortega Direct Marketing Modeling Using Evolutionary Bayesian Network Learning Algorithm . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 273 Man Leung Wong  
   
  Contents  
   
  XIII  
   
  Product Designing Optimal Products: Algorithms and Systems . . . . . . . 295 Stelios Tsafarakis, Nikolaos Matsatsinis PRODLINE: Architecture of an Artiﬁcial Intelligence Based Marketing Decision Support System for PRODuct LINE Designs . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 337 P.V. (Sundar) Balakrishnan, Varghese S. Jacob, Hao Xia A Dempster-Shafer Theory Based Exposition of Probabilistic Reasoning in Consumer Choice . . . . . . . . . . . . . . . . 365 Malcolm J. Beynon, Luiz Moutinho, Cleopatra Veloutsou  
   
  E-Commerce Decision Making in Multiagent Web Services Based on Soft Computing . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 389 Zhaohao Sun, Minhong Wang, Dong Dong Dynamic Price Forecasting in Simultaneous Online Art Auctions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 417 Mayukh Dass, Wolfgang Jank, Galit Shmueli Analysing Incomplete Consumer Web Data Using the Classiﬁcation and Ranking Belief Simplex (Probabilistic Reasoning and Evolutionary Computation) . . . . . . . . . . . . . . . . . . 447 Malcolm J. Beynon, Kelly Page Author Index . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 475  
   
  Marketing and Artificial Intelligence: Great Opportunities, Reluctant Partners Berend Wierenga Professor of Marketing Rotterdam School of Management, Erasmus University e-mail: [email protected]   
   
  1 Introduction Marketing managers make decisions about products, brands, advertising, promotions, price, and distribution channels, based on deep knowledge about customers. The outcomes of marketing decisions are dependent on the behavior of other actors such as competitors, suppliers and resellers. Furthermore, uncertain factors such as the overall economy, the state of the financial sector and (international) political developments play an important role. Marketing decision making not only refers to tactical marketing mix instruments (the well-known 4Ps), but also to strategic issues, such as product development and innovation and long term decisions with respect to positioning, segmentation, expansion, and growth. This short description illustrates that marketing is a complex field of decision making. Some marketing problems are relatively well-structured (especially the more tactical marketing mix problems), but there are also many weakly-structured or even ill-structured problems. Many marketing phenomena can be expressed in numbers, for example sales (in units or dollars), market share, price, advertising expenditures, number of resellers, retention/churn, customer value, etc. Such variables can be computed and their mutual relationships can be quantified. However, there are also many qualitative problems in marketing, especially the more strategic ones. Therefore, besides computation, marketing decision making also involves a large degree of judgment and intuition in which the knowledge, expertise, and experience of professionals play an important role. It is clear that marketing decision making is a combination of analysis and judgment. As we will see below, the analytical part of marketing decision making is well served with a rich collection of sophisticated mathematical models and procedures for estimation and optimization that support marketing decision making. However, this is much less the case for the judgmental part where knowledge and expertise play an important role. The question is whether the acquisition and use of knowledge and expertise by marketing decision makers and their application to actual marketing problems can also benefit from appropriate decision support technologies. In this book on marketing intelligent systems, it is logical to ask what the field of Artificial Intelligence can contribute here. Artificial Intelligence (AI) deals J. Casillas & F.J. Martínez-López (Eds.): Marketing Intelligence Systems, STUDFUZZ 258, pp. 1–8. © Springer-Verlag Berlin Heidelberg 2010 springerlink.com  
   
  2  
   
  B. Wierenga  
   
  with human intelligence and how this can be represented in computers. Important topics in AI are knowledge, knowledge representation, reasoning, learning, expertise, heuristic search, and pattern recognition. All these elements are relevant in the daily life of marketing decision makers who constantly use their knowledge, expertise and intuition to solve marketing problems. Therefore, potentially AI can make an important contribution to marketing decision making. However, so far this potential has only been realized to a very limited extent. This contribution takes a closer look at the opportunities for AI in marketing, takes stock of what has been achieved so far, and discusses perspectives for the future.  
   
  2 Marketing Problem-Solving Modes We start with a discussion about marketing problem-solving modes. These are specific ways of making marketing decisions. Basically, decision making is dependent on three factors: the marketing problem, the decision maker, and the decision environment. This results in four different marketing problem-solving modes: Optimizing, Reasoning, Analogizing, and Creating (ORAC) (Wierenga and Van Bruggen 1997; 2000). The ORAC model is depicted in Figure 1 and shows the full continuum of how marketing decision makers deal with problems. At the one extreme we have hard calculation (“clocks of mind”), and at the other we have free flows of thought, mental processes without a clear goal (“clouds of mind’). We briefly discuss the four marketing problem-solving modes.  
   
  O  
   
  =  
   
  Optimizing  
   
  R  
   
  =  
   
  Reasoning  
   
  A  
   
  =  
   
  Analogizing  
   
  C  
   
  =  
   
  Creating  
   
  Clocks of Mind ↑ . . . ↓ Clouds of Mind  
   
  Fig. 1 The ORAC model of marketing problem-solving modes (Wierenga and van Bruggen 1997; 2000)  
   
  Optimizing implies that there is an objectively best solution that can be reached by proper use of the marketing instruments. This is only possible if we have precise insight in the mechanism behind the variable that we want to optimize (e.g. sales, market share or profit). Once this mechanism is captured in a mathematical model, the best values for the marketing instruments (dependent on the objective function) can be found by applying optimization or simulation. An example of optimizing is deciding on the best media plan (i.e. the allocation over media such as TV, press, internet) for an advertising campaign, once the advertising budget and the relevant reach and costs data of the media are known.  
   
  Marketing and Artificial Intelligence: Great Opportunities, Reluctant Partners  
   
  3  
   
  Reasoning means that a marketer has a representation (mental model) of certain marketing phenomena in mind, and uses this as a basis for making inferences and drawing conclusions. For example, the decision maker may have a mental model of the factors that determine the market share of his brand. Suppose that this is relatively low in one particular geographical area. The manager might then reason (if ….then…) that this can be due to several possible causes, (i) deviant preferences of consumers; (ii) low efforts of salespeople; or (iii) relatively strong competition (Goldstein 2001). Market research can help to verify each of these possible causes and will result in decisions about possible actions (e.g. change the taste of the product; increase the salesforce). The outcomes of market research may also lead to the updating of managers’ mental models. Analogizing takes place when marketing decision makers, confronted with a problem, recall a similar problem that previously occurred and was solved in a satisfactory way. Decision makers often organize their experiences in the form of “stories”. New cases are easily interpreted using existing stories, and solutions are found quickly, often automatically. This type of analogical reasoning occurs very often in marketing. For example, when a new product is introduced, experiences with earlier product introductions act as points of reference. Creating occurs when the decision maker searches for novel and effective ideas and solutions. This means mapping and exploring the problem’s conceptual space and involves divergent thinking. In marketing, creating is a very important marketing problem-solving mode. Marketers are always looking for innovative product ideas, catchy advertising themes and imaginative sales promotion campaigns.  
   
  3 Marketing Problem-Solving Modes and Decision Support Technologies Over time a rich collection of decision aids have become available that can support marketing managers to improve the effectiveness and efficiency of their decisions. The complete set is referred to as marketing management support systems (MMSS). (Wierenga and van Bruggen 2000). Figure 2 shows how the decision support technologies used in these MMSS are related to the marketing problemsolving modes. The mapping to marketing problem-solving modes is not exactly one-to-one, but Figure 2 shows the overall tendencies. Marketing management support systems can be divided in two categories, datadriven and knowledge-driven. Marketing data have become available abundantly over the last few decades (e.g. scanner data; internet data) and data-driven decision support technologies are very prominent in marketing. They are particularly important for optimizing and reasoning. Methods from operations research (OR) and econometrics play an important role here. For example, OR methods can be used to optimally allocate the advertising budget over advertising media and econometric analysis can help to statistically determine the factors that affect market share. As we have just seen, the latter information is useful for reasoning about possible marketing actions, and for the updating of managers’ mental models.  
   
  4  
   
  B. Wierenga  
   
  Marketing ProblemSolving Modes Optimizing  
   
  Decision Support Technologies Data-driven • • •  
   
  Operations Research (OR) Econometric Modeling Predictive Modeling/NN  
   
  Reasoning Knowledge-driven • Analogizing  
   
  • •  
   
  Knowledge-Based Systems/ Expert Systems Analogical Reasoning/ Case-Based Reasoning Creativity Support Systems  
   
  Creating  
   
  Fig. 2 Marketing problem-solving modes and decision support technologies  
   
  Predictive modeling techniques used in Customer Relationship Management (CRM) and direct marketing are also data-driven. (Neural nets-NN is a predictive modeling technique that has its roots in AI). Knowledge-driven decision support technologies are particularly useful for marketing problem-solving modes that deal with weakly structured problems, parts (i.e. the qualitative element) of reasoning, analogizing, and creating. Knowledge-based systems (KBS) and expert systems (ES) are important examples. The latter, in particular, can also be used for reasoning about the factors behind particular marketing phenomena, for example the success of new products, or the effect of an advertising campaign. Decision support technologies based on analogical reasoning, such as case-based reasoning (CBR) have great potential for the analogizing and creating modes. This is also a potential application area for creativity support systems (Garfield 2008).  
   
  4 The State of Artificial Intelligence (AI) in Marketing Figure 2 shows that the potential for knowledge-driven decision support technologies in marketing is high. Contributions from AI are possible for three of the four marketing problem-solving modes. However, reality does not reflect this. To date, data-driven approaches, mostly a combination of operations research and econometric methods are dominant in marketing management support systems. It is safe to say that data-driven, quantitative models (i.e. the upper-right corner of Figure 2) make up over 80% of all the work in decision support systems for marketing at  
   
  Marketing and Artificial Intelligence: Great Opportunities, Reluctant Partners  
   
  5  
   
  this moment. Compared to this, the role of artificial intelligence in marketing is minor1. The number of publications about AI approaches in marketing literature is limited and the same holds true for the presence of marketing in AI literature. In 1958 Simon and Newell wrote that “the very core of managerial activity is the exercise of judgment and intuition” and that “large areas of managerial activity have hardly been touched by operations and management science”. In the same paper (in Operations Research) they foresaw the day that it would be possible “to handle with appropriate analytical tools the problems that we now tackle with judgment and guess”. Strangely enough, it does not seem that judgment and intuition in marketing have benefitted a lot from the progress in AI since the late fifties. It is true that AI techniques are used in marketing (as we will see below), but only to a limited degree. There are several (possible) reasons for the limited use of AI in marketing. • Modern marketing management as a field emerged in the late 1950s. At that time, operations research and econometrics were already established fields. In fact, they played a key role in the development of the area of marketing models (Wierenga 2008), which is one of the three academic pillars of contemporary marketing (the other pillars are consumer behavior and managerial marketing). Artificial intelligence as a field was only just emerging at that time. • OR and econometrics are fields with well-defined sets of techniques and algorithms, with clear purposes and application goals. They mostly come with userfriendly computer programs that marketers can directly implement for their problems. However, AI is a heterogeneous, maybe even eclectic, set of approaches, which often takes considerable effort to implement. Moreover, most marketing academics are not trained in the concepts and theories of AI. • The results of applications of OR and econometrics can usually be quantified, for example as the increase in number of sales or in dollars of profit. AI techniques, however, are mostly applied to weakly-structured problems and it is often difficult to measure how much better a solution is due to the use of AI, for example a new product design or a new advertising campaign. Marketers seem to be better at ease with rigorous results than with soft computing. There may also be reasons on the side of AI. • There seems to be little attention for marketing problems in AI. A recent poster of the “The AI Landscape” (Leake 2008) shows many (potential) applications of AI, ranging from education, logistics, surgery, security, to art, music, and entertainment, but fails to mention marketing, advertising, selling, promotions or other marketing-related fields.  
   
  1  
   
  Here we refer to the explicit use of AI in marketing. Of course, AI principles may be imbedded in marketing-related procedures such as search algorithms for the Internet).  
   
  6  
   
  B. Wierenga  
   
  • Perhaps the progress in AI has been less than was foreseen in 1958. In general, there has been a tendency of over-optimism in AI (a point in case is prediction about when a computer would be the world’s chess champion). The promised analytical tools to tackle judgmental marketing problems may come later than expected.  
   
  4.1 Applications of AI in Marketing The main applications of AI in marketing so far are expert systems, neural nets, and case-based reasoning. We discuss them briefly. 4.1.1 Expert Systems In the late eighties, marketing knowledge emerged as a major topic, together with the notion that it can be captured and subsequently applied by using knowledgebased systems. In marketing, this created a wave of interest in expert systems. They were developed for several domains of marketing (McCann and Gallagher 1990). For example: systems (i) to find the most suitable type of sales promotion; (ii) to recommend the execution of advertisements (positioning, message, presenter); (iii) to screen new product ideas, and (iv) to automate the interpretation of scanner data, including writing reports. Around that time, over twenty expert systems were published in marketing literature (Wierenga & van Bruggen 2000 Chapter 5).An example of a system specially developed for a particular marketing function is BRANDFRAME (developed by Wierenga, Dalebout, and Dutta 2000; see also Wierenga and van Bruggen 2001). This system supports a brand manager, which is a typical marketing job. In BRANDFRAME the situation of the (focal) brand is specified in terms of its attributes, competing brands, retail channels, targets and budgets. When new marketing information comes in, for example from panel data companies such as Nielsen and IRI, BRANDFRAME analyzes this data and recommends the marketing mix instruments (for example: lower the price; start a sales promotion campaign). It is also possible to design marketing programs in BRANDFRAME, for example for advertising or sales promotion campaigns. The system uses frame-based knowledge representation, combined with a rulebased reasoning system. In recent years, marketing literature has reported few further developments in marketing expert systems. 4.1.2 Neural Networks and Predictive Modeling Around 2000, customer relationship management (CRM) became an important topic in marketing. An essential element of CRM (which is closely related to direct marketing) is the customer database which contains information about each individual customer. This information may refer to socio-economic characteristics (age, gender, education, income), earlier interactions with the customer (e.g. offers made and responses to these offers, complaints, service), and information about the purchase history of the customer (i.e. how much purchased and when). This data can be used to predict the response of customers to a new offer or to predict customer retention/churn. Such  
   
  Marketing and Artificial Intelligence: Great Opportunities, Reluctant Partners  
   
  7  
   
  predictions are very useful, for example for selecting the most promising prospects for a mailing or for selecting customers in need of special attention because they have a high likelihood of leaving the company. A large set of techniques is available for predictive modeling. Prominent techniques are neural networks (NN) and classification and regression trees (CART), both with their roots in artificial intelligence. However, also more classical statistical techniques are used such as discriminant analysis and (logit) regression (Malthouse and Blattberg 2005; Neslin et al 2006). CRM is a quickly growing area of marketing. Companies want to achieve maximum return on the often huge investments in customer databases. Therefore, further sophistication of predictive modeling techniques for future customer behavior is very important. Fortunately, this volume contains several contributions on this topic. 4.1.3 Analogical Reasoning and Case-Based Reasoning (CBR) Analogical reasoning plays an important role in human perception and decision making. When confronted with a new problem, people seek similarities with earlier situations and use previous solutions as the starting point for dealing with the problem at hand. This is especially the case in weakly structured areas, where there is no clear set of variables that explain the relevant phenomena or define a precise objective. In marketing we have many such problems, for example in product development, sales promotions, and advertising. Goldstein (2001) found that product managers organize what they learn from analyzing scanner data into a set of stories about brands and their environments. Analogical reasoning is also the principle behind the field of case-based reasoning (CBR) in Artificial Intelligence. A CBR system comprises a set of previous cases from the domain under study and a set of search criteria for retrieving cases for situations that are similar (or analogous) to the target problem. Applications of CBR can be found in domains such as architecture, engineering, law, and medicine. By their nature, many marketing problems have a perfect fit with CBR. Several applications have already emerged, for example CBR systems for promotion planning and for forecasting retail sales (see Wierenga & van Bruggen 2000, Chapter 6). A recent application uses CBR as a decision support technology for designing creative sales promotion campaigns (Althuizen and Wierenga 2009). We believe that analogical reasoning is a fruitful area for synergy between marketing and AI.  
   
  4.2 Perspective Although there is some adoption of AI approaches in marketing, the two areas are almost completely disjoint. This is surprising and also a shame, because the nature of many marketing problems makes them very suitable for AI techniques. There is a real need for decision technologies that support the solution of weakly-structured marketing problems. Van Bruggen and Wierenga (2001) found that most of the existing MMSS support the marketing problem-solving mode of optimizing, but that they are often applied in decision situations for which they are less suitable (i.e. where the marketing problem-solving modes of reasoning, analogizing orcreating are applicable). Their study also showed that a bad fit between the  
   
  8  
   
  B. Wierenga  
   
  marketing-problem-solving mode and the applied decision support technology results in significantly less impact of the support system. It would be fortunate if further progress in AI can help marketing to deal with the more judgmental problems of its field. Reducing the distance between marketing and AI also has an important pay-off for AI. Marketing is a unique combination of quantitative and qualitative problems, which gives AI the opportunity to demonstrate its power in areas where operations research and econometrics cannot reach. Marketing is also a field where innovation and creativity play an important role. This should appeal to the imaginative AI people. Hopefully the current volume will be instrumental in bringing marketing and AI closer together.  
   
  References Althuizen, N.A.P., Wierenga, B.: Deploying Analogical Reasoning as a Decision Support Technology for Creatively Solving Managerial Design Problems. Working paper. Rotterdam School of Management, Erasmus University (2009) Garfield, M.J.: Creativity Support Systems. In: Burnstein, F., Holsapple, C.W. (eds.) Handbook on Decision Support Systems. Variations, vol. 2, pp. 745–758. Springer, New York (2008) Goldstein, D.K.: Product Manager’s Use of Scanner Data: a Story of Organizational Learning. In: Desphandé, R. (ed.) Using Market Knowledge, pp. 191–216. Sage, Thousand Oaks (2001) Leake, D.B.: AI Magazine Poster: The AI Landscape. AI Magazine 29(2), 3 Malthouse, E.C., Blattberg, R.C.: Can we predict customer lifetime value? Journal of Interactive Marketing 19(1), 2–16 (2005) Mc Cann, J.M., Gallagher, J.P.: Expert Systems for Scanner Data Environments. Kluwer Academic Publishers, Boston (1990) Neslin, S.A., Gupta, S., Kamakura, W., Lu, J., Mason, C.H.: Defection Detection: Measuring and Understanding the Predictive Accuracy of Customer Churn Models. Journal of Marketing Research 43, 204–211 (2006) Simon, H.A., Newell, A.: Heuristic Problem Solving: the Next Advance in Operations Research. Operations Research 6, 1–10 (1958) Van Bruggen, G.H., Wierenga, B.: Matching Management Support Systems and Managerial Problem-Solving Modes: The Key to Effective Decision Support. European Management Journal 19(3), 228–238 (2001) Wierenga, B. (ed.): Handbook of Marketing Decision Models, p. 630. Springer Science + Business Media, New York (2008) Wierenga, B., van Bruggen, G.H.: The Integration of Marketing Problem-Solving Modes and Marketing Management Support Systems. Journal of Marketing 61(3), 21–37 (1997) Wierenga, B., van Bruggen, G.H.: Marketing Management Support Systems: Principles, Tools, and Implementaiton, p. 341. Kluwer Academic Publishers, Boston (2000) Wierenga, B., Van Bruggen, G.H.: Developing a Customized Decision Support System for Brand Managers. Interfaces 31(3) Part 2(2), 128–145 (2001) Wierenga, B., Dalebout, A., Dutta, S.: BRANDFRAME: A Marketing Management Support System for the Brand Manager. In: Wierenga, B., van Bruggen, G. (eds.) Marketing Management Support Systems: Principles, Tools, and Implementation, pp. 231–262. Kluwer Academic Publishers, Boston (2000)  
   
  Data Mining and Scientific Knowledge: Some Cautions for Scholarly Researchers Nick Lee1 and Gordon Greenley2 1 Professor of Marketing and Organizational Research and Marketing Research Group Convenor Aston Business School, Birmingham, UK Co-Editor: European Journal of Marketing 2 Professor of Marketing and Marketing Subject Group Convenor Aston Business School, Birmingham, UK Co-Editor: European Journal of Marketing  
   
  1 Introduction Recent years have seen the emergence of data analytic techniques requiring for their practical use previously unimaginable raw computational power. Such techniques include neural network analysis, genetic algorithms, classification and regression trees, v-fold cross-validation clustering and suchlike. Many of these methods are what could be called ‘learning’ algorithms, which can be used for prediction, classification, association, and clustering of data based on previouslyestimated features of a data set. In other words, they are ‘trained’ on a data set with both predictors and target variables, and the model estimated is then used on future data which does not contain measured values of the target variable. Or in clustering methods, an iterative algorithm looks to generate clusters which are as homogenous within and as heterogeneous between as possible. Such analytic methods can be used on data collected with the express purposes of testing hypotheses. However, it is when such methods are employed on large sets of data, without a priori theoretical hypotheses or expectations, that they are known as data mining. In fact, it appears that such is the explosion in use of such methods, and in particular their use in commercial contexts such as customer relationship management or consumer profiling, that it is the methods themselves which are considered to be ‘data mining’ methods. However, it should be made clear at the outset of this essay that it is the use that they are put to which should be termed ‘data mining’, not the tools themselves (Larose 2005). This is despite the naming of software packages like ‘Statistica Data Miner’, which sell for sums at the higher end of 6-figures to commercial operations. In fact, a technique as ubiquitous as multiple regression can be used as a data mining tool if one wishes. It is the aim of this essay to place the recent exponential growth of the use of data mining methods into the context of scientific marketing and business research, and in particular to sound a note of caution for social scientific researchers about the over-use of a data-mining approach. In doing so, the fundamental nature J. Casillas & F.J. Martínez-López (Eds.): Marketing Intelligence Systems, STUDFUZZ 258, pp. 9–15. © Springer-Verlag Berlin Heidelberg 2010 springerlink.com  
   
  10  
   
  N. Lee and G. Greenley  
   
  of data mining is briefly outlined. Following this, data mining is discussed within a framework of scientific knowledge development and epistemology. Finally, the potential use of data mining in certain contexts is noted. We will conclude with some important points that business and marketing scholars should consider when considering the use of data mining approaches.  
   
  2 The Data Mining Method Data mining is one part of a wider methodology termed Knowledge Discovery in Databases (KDD). Within this process, the term data mining refers to the uncovering of new and unsuspected relationships in, and the discovery of new and useful knowledge from, databases (e.g. Adriaans and Zantinge, 1996; Hand et al, 2001). While it should be natural for the scholar to immediately consider the question of what exactly is knowledge, this will be dealt with in the next section. In a more practical context, scientists and businesspeople deal with large databases on a dayto-day basis. In many cases, they use the data to answer questions that they pose in a very structured way – such as ‘what is the difference between the mean level of job satisfaction across high and low-stress salespeople’ or ‘which customers bought brand x during August’. Such structured queries have been common practice for many years. The difference between the data mining approach and a normal structured interrogation of a data set is that, when data mining, one starts without such a structured question, but instead is interested in exploring the database for any potential ‘nuggets’ of interest. Another key point of interest is that – while this is not an essential component of a data-mining approach – most methods of data mining involve learning algorithms. Unlike traditional analysis of data, learning algorithms (such as genetic algorithms or neural networks) are able to be ‘trained’ to create rules which are able to describe a data set, that are then able to work on new data. While humans could of course train themselves to do this, the advantage of the learning algorithm is that it can work with far larger data sets, in far less time, than humans – as long as the data set contains at least some structure.  
   
  3 Data Mining and Scientific Knowledge The characteristics of the data mining approach introduced above have significant relevance to its use to generate scientific knowledge. Of course, as shall be seen subsequently, data mining has use in many contexts outside of science as well. However, as Editors of the European Journal of Marketing, a major journal dedicated to advances in marketing theory, it is their use in scientific knowledge development in marketing (and by extension more general business or social research) which is our primary concern in this essay1. Marketing has long debated 1  
   
  It is important to note that – while we were invited to write this essay as Editors of EJM – the opinions expressed here should not be taken to represent a formal editorial policy or direction for EJM in any manner.  
   
  Data Mining and Scientific Knowledge: Some Cautions for Scholarly Researchers  
   
  11  
   
  its status as a science (e.g. Buzzell, 1963, Hunt, 1983; 1990; 2003, Brown, 1995), with various scholars taking different viewpoints on both the nature of science itself, and whether marketing can be considered to be a science. Hunt’s (e.g. 1983) work is arguably the most articulate and significant corpus regarding this issue, and it is defensible to say that – working with the premise that one wants to class marketing as a science – Hunt’s delineation of the nature of science (e.g. 1983) can be taken as broadly coherent in the context of marketing research. Hunt defines three essential characteristics of a science (1983: pp. 18); “(1) a distinct subject matter, (2) the description and classification of the subject matter, and (3) the presumption that underlying the subject matter are uniformities and regularities which science seeks to discover”. Hunt also adds (pp. 18-19) that to be termed a science, a discipline must employ the scientific method; which he defines as a “set of procedures”. Like the nature of science itself, the scientific method has been subject to considerable debate and controversy over the last century (e.g. Feyerabend, 1993). One of the key areas of misunderstanding is whether the method refers to the practical techniques used for discovery, or the conceptual/theoretical method used to justify a discovery as knowledge (Lee and Lings 2008). Hunt (1983) points out that the scientific method is not dependent on the use of particular data collection methods, tools, or analysis techniques, since it is of course the case that different sciences use different tools as appropriate. Instead, the scientific method should more accurately be perceived as a method for justifying the knowledge claims uncovered by investigation (Lee and Lings 2008). In this sense, there are multiple (perhaps infinite) ways of discovery, and of making knowledge claims about the world, but at present only one scientific method of justifying those claims as actual knowledge. This method – termed more formally the hypothetico-deductive method – has proven to be the foundation of scientific research since its formal articulation by Karl Popper. Thus, in exploring the usefulness of data mining for scientific research, it is naturally necessary to do so in relation to where it may sit within a hypothetico-deductive approach to research. While a full explication of the hypothetico-deductive method is outside the scope of this short essay, it is the term deductive which is of most relevance to the present discussion. Of course, deduction refers to the creation of theory from logical argument, which may then be tested through empirical observation. While it is often characterized as a cycle of induction and deduction, the essence of the hypothetico-deductive method is the idea that one should create theoretical hypotheses through deductive reasoning, and then collect empirical data in an attempt to falsify those hypotheses. Certainly, one may begin the cycle by using inductive reasoning from some empirical observation or discovery, but until formal hypotheses are generated and subsequently tested, one should not claim to have created any scientific knowledge. The idea of falsification is of critical importance in this context. Current definitions of the nature of scientific research depend on the assumption that empirical data alone can never prove a hypothesis, but only disprove it. Thus, the hypothetico-deductive method can be seen as a way of systemizing the search for falsifying evidence about our hypotheses. This is in direct opposition to the pure empiricist or logical positivist position which was heretofore dominant in  
   
  12  
   
  N. Lee and G. Greenley  
   
  scientific research. Such approaches instead considered empirical observations not just to be sufficient proof alone, but in fact that all other types of evidence (e.g. rational thought and logical deduction) were of no use in knowledge generation. If one considers the hypothetico-deductive method to be the foundation of scientific research within marketing (cf. Hunt 1983), then the place of data mining is worthy of some discussion. Drawing from the nature of data mining as defined above, it would seem that data mining may have some use in a scientific knowledge creation process, but that this use would be limited. More specifically, the data mining approach is fundamentally an inductive one, in which a data set is interrogated in an exploratory fashion, in the hope of turning up something of interest. Surely, if one is working within a hypothetico-deductive paradigm of knowledge generation, any findings from a purely data mining study could never be considered as actual knowledge. Instead, such findings should be treated as knowledge claims, and used to help generate explicit theoretical hypotheses which can then be tested in newly-designed empirical studies, which collect new data. Only when these theoretical hypotheses fail to be falsified with additional empirical work can the knowledge claim then be considered as knowledge. It is certainly the case that the use of theory to help explain these empirical discoveries is also worthy of significant discussion. Or in other words whether purely empirical results from a data mining study only are enough to justify hypothesis generation and further testing. However, a full discussion of this is outside the present scope, given the short space available. Even so, our short answer to this question would be that the emergent inductive empirical relations would need theoretical deductive explanation as well, in order to justify them as testable hypotheses in a scientific context. In this sense, empirical data mining results are but a single strand of evidence or justification for a hypothesis, rather than sufficient alone. It is important to make clear however that this position refers to the data mining method, not to any particular technique or algorithm. Certainly, many algorithms commonly of use in data mining applications can and have been usefully employed in a deductive manner in scientific studies – such as multiple regression, principle components analysis, clustering, classification trees, and the like. However, the critical issue is not one of technique, but of the underlying epistemological position of the task employing the technique.  
   
  4 Data Mining in a Practical Context Notwithstanding the above, it is not the intention of this essay to decry the use of data mining approaches in general, since they are clearly of major potential use in both commercial and some scientific applications. Beginning with commercial applications, it is clear that marketing-focused firms can employ data mining methods to interrogate the huge customer databases which they routinely generate. Such work is common, and can include such tasks as market segmentation, customer profiling, and auditing. For example, it is well-known that Google utilizes data mining methods to predict which advertisements are best matched to which websites. Thus, without any actual knowledge (as we would term it) of why, Google can predict an advertisement’s likely success depending on how it is  
   
  Data Mining and Scientific Knowledge: Some Cautions for Scholarly Researchers  
   
  13  
   
  matched (Anderson 2008). Considering the terabytes of data Google collects constantly, such methods are likely to be the most effective way to predict success. Yet the question of whether raw prediction is actually scientific knowledge is moot in this and most other practical situations. As most business researchers know, few business organizations are particularly interested in explaining the theory of why things are related, but only in predicting what will happen if variables are changed. In other words, what ‘levers’ can be manipulated to improve performance? Data mining is an ideal tool for this task. However, raw data mining is also of significant use in many scientific fields outside of the business or social sciences. For example, sciences such as biochemistry work with massive data sets in many cases. In these situations, data mining can be usefully employed in uncovering relationships between for example genetic polymorphisms and the prevalence of disease. There is a significant difference between such scientific work and a typical business research study. In such biosciences, researchers often work within a very exploratory, or descriptive, context, and they also often work within contexts without large amounts of competing or unmeasured variables. For example, if one is working within a database of the human genome, then this is all the data. Conversely, if one is working within a database of customer characteristics, there may be many hundreds of unmeasured variables of interest, and any description of that database will be able to incorporate but a tiny subset of the possible explanatory variables. Even so – as is the case within neuroscientific research at present – purely exploratory or descriptive approaches (which data mining is useful for) must eventually be superseded by theory-driven hypothetico-deductive approaches (e.g. Senior and Russell, 2000).  
   
  5 Discussion and Conclusions The aim of this invited essay was to explore the implications and uses of data mining in the context of scientific knowledge generation for marketing and business research. In doing so, we defined both data mining and scientific knowledge. Importantly, data mining was defined as a method of exploration, not as a set of particular tools or algorithms. Knowledge was defined as distinct from a knowledge claim, in that a knowledge claim had not been subject to a hypothetico-deductive attempt at falsification. The importance of this distinction is that in most cases one cannot claim data mining approaches as tools of knowledge generation in a scientific context. At best, they are highly useful for the generation of hypotheses from data sets, which may previously have been unexplored. In this way, it is interesting to draw parallels with qualitative research approaches such as grounded theory (e.g. Glaser and Strauss, 1967). Glaser’s approach to grounded theory instructs that no appreciation of prior theories should be made before either collecting or analyzing data, in order to ‘let the data speak’ (Glaser 1992). Any argument in favor of data mining as a knowledge generation tool must therefore look to such approaches as justification. However, it is our view that – while such methods can result in truly original findings which would be unlikely to emerge from any other method – those findings should always be considered preliminary knowledge claims until further confirmatory testing.  
   
  14  
   
  N. Lee and G. Greenley  
   
  This is because, without a priori theoretical expectations (i.e. hypotheses), one is always at risk of over-interpreting the data. In fact, many data mining techniques use the term ‘overfitting’ to refer to this situation (Larose, 2005). In such an instance, one’s findings are essentially an artifact of the data set, and may not bear relation to the rest of the world. In other words, the training set is explained increasingly exactly, but the results are increasingly less generalizable to other data. Of course, if your data set is all of the relevant data in the world (as is the case in some scientific contexts), this is not a problem. However in most situations, and particularly within the business and social research contexts, our data contains only a subset of the available data, in terms of both subjects and possible variables. Overfitting in this case results in findings which are likely to have low external validity. Thus, we urge business and social researchers to exercise caution in the application of data mining in scientific knowledge generation. Even so, this is not to say that we consider it to be of no use at all. Just as many other exploratory techniques are of use in the hypothetico-deductive cycle, data mining may provide extremely valuable results in the context of the knowledge generation process as a whole. However, researchers would be well advised to avoid presenting the findings of pure data mining as anything other than preliminary or exploratory research (although of course this may be of significant use in many cases). Although we did not specifically discuss it here, we would also urge researchers to make sure they are knowledgeable in the appropriate use of various data mining algorithms, rather than using them as a ‘black box’ between their data and results. Such an approach runs the risk of being characterized as ‘data-driven’ and therefore should be given little time at top-level journals. In this way, we also urge editors and reviewers at journals to think carefully about the actual contribution of such studies, despite their often complex and impressive technical content. In conclusion, it is our view that explanatory theory is the key contribution of scientific research, and this should not be forgotten. Theory allows us to explain situations and contexts beyond our data, in contrast to pure prediction, which may have no real explanatory value whatsoever. While it may be of interest in many situations, it should not be characterized as scientific knowledge.  
   
  References Adriaans, P., Zantinge, D.: Data Mining. Addison-Wesley, Harlow, England (1996) Anderson, C.: The End of Science: The Data Deluge Makes the Scientific Method Obsolete. In: WIRED, vol. 16 (7), pp. 108–109 (2008) Buzzell, R.D.: Is Marketing a Science? Harvard Business Review 41(1), 32–40 (1963) Brown, S.: Postmodern Marketing, Thompson, London (1995) Feyerabend, P.K.: Against Method, 3rd edn. Verso, London (1993) Glaser, B.G.: Basics of Grounded Theory Analysis. Sociology Press, Mill Valley (1992) Glaser, B.G., Strauss, A.L.: The Discovery of Grounded Theory: Strategies for Qualitative Research. Aldine, Chicago (1967) Hand, D., Mannila, H., Smyth, P.: Principles of Data Mining. MIT Press, Cambridge (2001)  
   
  Data Mining and Scientific Knowledge: Some Cautions for Scholarly Researchers  
   
  15  
   
  Hunt, S.D.: Marketing Theory: The Philosophy of Marketing Science. Irwin, Homewood, IL (1983) Hunt, S.D.: Controversy in Marketing Theory: For Reason, Realism, Truth and Objectivity. M.E. Sharpe, Armonk (2003) Hunt, S.D.: Truth in Marketing Theory and Research. Journal of Marketing 54, 1–15 (1990) Lee, N., Lings, I.: Doing Business Research. Sage, London (2008) Senior, C., Russell, T.: Cognitive neuroscience for the 21st century. Trends in Cognitive Science 4, 444–445 (2000)  
   
  Observations on Soft Computing in Marketing David W. Stewart Dean of and Professor of Management and Marketing, A. Gary Anderson Graduate School of Management, University of California, Riverside, California, USA  
   
  Marketing managers make use of a variety of computer-based systems to aid decision- making. Some of these models would be considered “hard” models in the sense that they are based on quantitative data, usually historical data related to some type of market response and some empirically derived functional form of the relationships among actions in the market and market response (Hanssens, Parsons and Schultz 2008). Such models have been widely employed to decisions involving pricing and promotion, advertising scheduling and response, product design, and sales call scheduling, among others (Lilien and Rangaswamy 2006). These models, while very useful, require very rich data, as well strong assumptions about the generalizability of historical data to future events. These are assumptions likely to be less and less valid in an increasingly volatile world that includes regular introduction of new means of communications and product/service distribution, as well as new product and service innovations. Quantitative models in marketing are also limited by two other factors. First, it is often not possible to obtain certain types of data that would be desirable for making marketing decision - for example, experimental data on customer response to different product characteristics, advertising levels, product prices, etc. Although some data may be available from interviews, test market experiments, and the like, it is often necessary to supplement them with the judgment of experienced marketing managers. The second limitation is related to the complexity of many marketing factors, many of which are unquantifiable. The decision environment may simply to be too complex to develop a quantitative model that captures all of the relevant parameters. As a result of these limitations marketers have sought to build models that not include hard quantitative components, but also soft models that incorporate managerial judgment. These models are not “expert systems” in the classic sense of the term because they do not capture a set of replicable rules that would be characteristic of the use of artificial intelligence (Giarratano and Riley 2004, Little and Lodish 1981). Rather, decision calculus attempts to capture the subjective judgments, and hence, the experience of a decision maker within the context of a predictive model. For at least four decades the marketing literature has documented the development and commercial use of models that incorporate the judgments of experienced managers. Models have been published which assist managers in making decisions about a wide range of marketing variables, including prices, couponing J. Casillas & F.J. Martínez-López (Eds.): Marketing Intelligence Systems, STUDFUZZ 258, pp. 17–19. © Springer-Verlag Berlin Heidelberg 2010 springerlink.com  
   
  18  
   
  D.W. Stewart  
   
  efforts, advertising spending, media selection, and sales force scheduling. Many of these systems require that managerial expertise be used to set parameters and even to specify model forms. The way in which these models use judgmental data, the nature of their construction, and the purposes to which they are put differ in important ways from those of the typical expert system. Montgomery and Weinberg (1973) describe the typical decision calculus modeling exercise as: • •  
   
  • •  
   
  Managers first verbalize their implicit model of the situation or issue of interest, specifying factors that influence a criterion variable of interest and the relationships of factors to one another and to the criterion variable; This verbal model is translated to a formal mathematical model. In most applications the response function has two components, a current component and a delayed (or lagged) component. Lilien and Kotler (1983) provide a useful overview of typical forms these models take in marketing applications; Parameters associated with the mathematical model are estimated; and An interactive procedure is implemented that allows managers to examine the influence of variations of particular factors on the criterion. By examining the model outputs obtained by changing model inputs, managers can examine alternative decisions and determine the sensitivity of the criterion to changes in particular input factors;  
   
  Obviously, the development of a useful decision support tool is a primary benefit of model building involving decision calculus. Little and Lodish (1981) argue that numerous additional benefits also accrue from the model building exercise. Among these additional benefits are: • • • •  
   
  Model building facilitates the collection of data; It makes assumptions explicit; It identifies areas of disagreement and the nature of that disagreement; and It helps identify needs for information that have a high payoff potential.  
   
  Decision calculus models have a great deal in common with soft computer, though soft computing clearly brings a broader array of tools and methods to the task of informing decision-making. Soft computing also takes advantage of the enormous increase in computational power and the new techniques in biological computation that have emerged since the development of decision calculus models (Abraham, Das, and Roy 2007). Nevertheless, there is a common philosophical and methodological history that unites these different types of models. The underlying notion is that complex problems can be solved at a molar level as an alternative computational models that seek to fit quantitative models at a more micro level. Although it has demonstrate its utility in a host of venues, soft computing has yet to demonstrate its utility in solving practical marketing problems. It seems only a matter of time before it does so given the complex data sets now available to marketing organizations. It is also likely that these tools will carry benefits similar to those already demonstrated for decision calculus models in marketing.  
   
  Observations on Soft Computing in Marketing  
   
  19  
   
  References Abraham, A., Das, S., Roy, S.: Swarm Intelligence Algorithms for Data Clustering. In: Maimon, O., Rokach, L. (eds.) Soft Computing for Knowledge Discovery and Data Mining, pp. 279–313. Springer, New York (2007) Giarratano, J.C., Riley, G.: Expert Systems, Principles and Programming, 4th edn. PWS Publishing, New York (2004) Hanssens, D.M., Parsons, L.J., Schultz, R.L.: Market Response Models: Econometric and Time Series Analysis, 2nd edn. Springer, New York (2008) Lilien, G., Kotler, P.: Marketing Decision Making: A Model-building Approach. Harper and Row, New York (1983) Lilien, G.L., Rangaswamy, A.: Marketing Decision Support Models. In: Grover, R., Vriens, M. (eds.) The Handbook of Marketing Research, pp. 230–254. Sage, Thousand Oaks (2006) Little, J.D.C., Lodish, L.M.: Judgment-based marketing decision models: Problems and possible solutions/commentary on Judgment-Based Marketing Decision Models. Journal of Marketing 45(4), 13–40 (1981) Montgomery, D., Weinberg, C.: Modeling Marketing Phenomena: A Managerial Perspective. Journal of Contemporary Business (Autumn), 17–43 (1973)  
   
  Soft Computing Methods in Marketing: Phenomena and Management Problems John Roberts Professor of Marketing College of Business and Economics, Australian National University (Australia) and London Business School (UK) e-mail: [email protected]   
   
  1 Introduction Soft computing techniques gained popularity in the 1990s for highly complex problems in science and engineering (e.g., Jang et al. 1997). Since then, they have slowly been making their way into management disciplines (Mitra et al. 2002). In order to understand the potential of these methods in marketing, it is useful to have a framework with which to analyze how analytical methods can provide insight to marketing problems.  
   
  Marketing actions Brands and the marketing mix that supports them  
   
  Customer linking  
   
  Customer management including acquisition, retention and maximization  
   
  Marketplace phenomena Customer behavior, including beliefs, needs, preferences and actions Market environment including competition, channels, collaborators, and climate  
   
  Market feedback Market information: marketing research and intelligence Market analysis and insight  
   
  Market sensing  
   
  Fig. 1 A Model of the Market Decision Making Process  
   
  J. Casillas & F.J. Martínez-López (Eds.): Marketing Intelligence Systems, STUDFUZZ 258, pp. 21–26. © Springer-Verlag Berlin Heidelberg 2010 springerlink.com  
   
  22  
   
  J. Roberts  
   
  Marketing may be regarded as harnessing the resources of the organization to address the needs of its target customers, given the marketplace environment in which it competes (the top arrow in Figure 1). George Day calls this process “customer linking” (Day 1994). Actions in the top right box can be analyzed either from an internal perspective in terms of the products and services of the organization and the marketing mix that supports them, or externally in terms of its customers: how it attracts, retains and maximizes the value it provides to and captures from them. However, in order to focus the organization’s actions, an understanding of the environment is necessary, and feedback from the marketplace helps the manager better target her actions to where they will be most effective (the bottom arrows in Figure 1). Day calls this function “market sensing.” Market sensing has the dual elements of gathering data from the market and transforming those data into insights for action, by using suitable analytical tools. Soft computing tools form one weapon in the marketing analyst’s toolkit to provide that insight. In understanding the potential (and limitations) of soft computing tools, it is useful to analyze this environment. This chapter specifically examines the management actions for which the suite of techniques is well-suited, and the phenomena on which it can throw insight (the two top boxes in Figure 1). Details of the techniques of soft computing that belong to the bottom box are covered elsewhere in this volume.  
   
  2 Marketplace Phenomena Soft computing has particular strengths in the case of large databases and complex phenomena. To understand where these are most likely to occur it is useful to decompose the consumer decision. One traditional method of analyzing consumer decisions is by use of Lavidge and Steiner (1961)’s Hierarchy of Effects model (also known as the demand funnel and a variety of other names). This model is illustrated in Figure 2: One major driver of complexity of models (in terms of number of observations, parameters, and interactions between variables) is that of heterogeneity. When we have to allow for differences between individual consumers (or a large number of groups of consumers), the tractability of traditional models is likely to come under threat. In marketing, in reference to Figure 2, we do see situations where consumers vary in their proclivity to enter the category (need arousal). Both the diffusion of innovation and hazard rate literatures address this problem (for example, see Roberts and Lattin 2000). Similarly, Fotheringham (1988) has used a fuzzy set approach to modeling consideration set membership in the information search stage to probabilistically describe whether a brand will be evoked. Next, it is in the modeling of beliefs (perceptions), preferences, and choice that probabilistic representations of consumer decision processes have really come into their own, with Hierarchical Bayes now used as a standard approach to modeling consumer differences (see, Rossi and Allenby 2003 for a review). Finally, as we move from the acquisition stages to the retention and value maximization ones, customer satisfaction models have used a variety of soft computing techniques to identify individual or segment-level threats and opportunities.  
   
  Soft Computing Methods in Marketing: Phenomena and Management Problems  
   
  Need Arousal  
   
  Information search  
   
  23  
   
  Awareness  
   
  Consideration  
   
  Perceptions Evaluation Preference Purchase  
   
  Post purchase  
   
  Fig. 2 Lavidge and Steiner (1961)’s Hierarchy of Effects Model  
   
  While soft computing has much to recommend it in each stage of the hierarchy of effects, where it has the most to offer is when these complexities are compounded. That is, while we can encounter large scale problems in each of these areas, it is the convolution of these large scale problems that particularly lends itself to the approach. Typical examples of such multi-level problems include the following: •  
   
  •  
   
  •  
   
  Multidimensional consumer differences. We may have to segment on more than one basis (either within or between the levels of Figure 2). For example, within levels we may need to segment on the application to which the consumer is putting a service and her socio-economic profile. Between levels we may have to segment on the susceptibility of a consumer to an innovation at the need arousal level and the firm’s competitive capability at the purchase level. Multiple consumer purchases. The consumer may make multiple purchases within the category (suggesting a need to study share of wallet) or across categories (requiring estimation of cross-selling potential across multiple products). Interactions between consumers. Consumer networks may be critical, necessitating a study of order of magnitude of n2 with respect to customers, rather than just n (where n is the number of customers).  
   
  24  
   
  •  
   
  J. Roberts  
   
  Interactions between members of the market environment. Interactions between members of the channel, collaborators, competitors, and other groups (such as government regulators) may further compound the complexity of the problem.  
   
  3 Management Problems While multidimensional differences may exist at the level of the consumer or in the climate, they may not require complex models on the part of the manager to understand that variance. Before advocating a move to complex computing and modeling approaches, we must understand where just looking at the mean of distributions of heterogeneity is not going to lead to appropriate decisions, relative to a study of the entire distribution (or some middle approach such as looking at variances). Sometimes demand side factors alone may lead to a requirement to study the distribution of consumer tastes. The fallacy of averages in marketing is often illustrated by the fact that some people like iced tea, while others like hot tea. The fallacy of averages would suggest (incorrectly) that generally people like their tea lukewarm. In other situations, it is the context of managerial decision making in Figure 1 that makes complexity in the marketplace phenomena intractable to simplification and the use of means. The most obvious example of when modeling averages is problematic is when asymmetric loss functions exist: the benefit to the manager of upside error is not equal to the loss of downside. This will occur in a variety of situations. With lumpy investment decisions based on forecasts of consumer demand, over- and under-forecasts are likely to lead to very different consequences. Over-estimating demand is likely to lead to idle equipment and capital, while under-estimation will cause foregone contribution and possible customer dissatisfaction. Risk aversion on the part of the manager is another factor that will lead to asymmetric loss functions (Wehrung and Maccrimmon 1986). Finally, the presence of multiple decisions will lead to a requirement to study the whole distribution of customer outcomes, not just the mean. For example, in the ready to eat cereal and snacks market, Kellogg’s website lists 29 sub-brands1. Obviously, there are major interactions between these various sub-brands, and category optimization across them is an extremely complex problem. It is impossible to address without reference to the total distribution of beliefs, preferences and behaviors. Averages will not enable to answers to such portfolio management problems.  
   
  4 Summary Soft computing techniques have a number of advantages. Primarily, their ability to handle complex phenomena means that restrictive and potentially unrealistic assumptions do not need to be imposed on marketing problems. Balanced against 1  
   
  http://www2.kelloggs.com/brand/brand.aspx?brand=2  
   
  Soft Computing Methods in Marketing: Phenomena and Management Problems  
   
  25  
   
  this advantage is the loss of simplicity and parsimony, and this may incur associated costs of a loss of transparency and robustness. The mix of situations that favor soft computing techniques is increasing for a variety of reasons which may be understood by reference to Figure 1. Perhaps the primary drivers are trends in the market feedback tools available. Digital data capture means that large data sets are becoming available, enabling the modeling (and estimation) of consumer behavior in considerably finer detail than was previously possible. Computing power has obviously increased, and Moore’s law now enables calculations that would have been impossible, excessively onerous, or time intractable to be readily available. However, developments in both marketplace phenomena and managerial actions have also increased the potential application of soft computing approaches. Markets have become increasingly fragmented with the advent of highly targeted media and mass customization of products. For example, the U.K.’s largest retailer, Tesco, addresses over four million segments (Humby et al. 2008). In the top left box of Figure 1, managers have become increasingly sophisticated, with many firms employing sophisticated data mining techniques to address their customers. The emergence of specialist consulting and software firms (such as salesforce.com, dunhumby, and SAP) to support them has accelerated adoption in this area. Digitization has also increased the ability of the manager to experiment with a variety of strategies, leading to much richer mental models of the market, favoring the use of soft computing methods. Soft computing has the ability to lead us along paths that, as Keynes said, are more likely to be “vaguely right” rather than “precisely wrong” (e.g., Chick 1998). It is important that the migration path towards its use does not come at the cost of transparency or credibility. One way to ensure that this does not occur is to apply the techniques to environments that need the explanatory power they afford, and which influence management decisions for which the distribution of outcomes is critical, as well as the mean.  
   
  References Chick, V.: On Knowing One’s Place: The Role of Formalism in Economics. The Economic Journal 108(451), 1859–1869 (1998) Day, G.S.: The Capabilities of Market-Driven Organizations. Journal of Marketing 58(4), 37–52 (1994) Stewart, F.A.: Consumer Store Choice and Choice Set Definition. Marketing Science 7(3) (Summer), 299–310 (1988) Humby, C., Hunt, T., Phillips, T.: Scoring Points: How Tesco Continues to Win Customer Loyalty. Kogan Page, London (2008) Jang, J.-S.R., Sun, C.-T., Mizutani, E.: Neuro-Fuzzy and Soft Computing-A Computational Approach to Learning and Machine Intelligence. Matlab Curriculum Series, Boston (1997) Lavidge, R.J., Steiner, G.A.: A Model for Predictive Measurements of Advertising Effectiveness. Journal of Marketing 25(6), 59–62 (1961)  
   
  26  
   
  J. Roberts  
   
  Mitra, S., Pal, S.K., Mitra, P.: Data Mining in Soft Computing Framework: A Survey. IEEE Transactions On Neural Networks 13(1), 3–14 (2002) Roberts, J.H., Lattin, J.M.: Disaggregate Level Diffusion Models. In: Mahajan, V., Muller, E., Wind, Y. (eds.) New Product Diffusion Models, pp. 207–236. Kluwer Academic Publishers, Norwell (2000) Rossi, P.E., Greg, M.: Bayesian Statistics and Marketing. Marketing Science 22(3), 304–328 (Summer, 2003) Wehrung, D., Maccrimmon, K.R.: Taking Risks. The Free Press, New York (1986)  
   
  User-Generated Content: The “Voice of the Customer” in the 21st Century* Eric T. Bradlow K.P. Chao Professor, Professor of Marketing, Statistics, and Education, Editor-in-Chief of Marketing Science, and Co-Director of the Wharton Interactive Media Initiative, University of Pennsylvania, Pennsylvania, USA  
   
  1 Introduction It doesn’t take an academic paper to point out the prominence that companies like Facebook, MySpace, YouTube, etc. have had on our popular culture today. Many see it as an efficient communication mechanism (Web 2.0 if you will) in comparison to email and static content postings which now, remarkably only 15 years later after the internet ‘launch’, some people see as “old school”. In some sense, Andy Warhol’s prediction of “15 minutes fame” for each and any one of us can now be “self-generated” through our own hard work and user-generated content. Thus, with all of this impact (societally) as backdrop, where does it leave many of us, as academics? The answer, and I hope this essay provides some impetus for that, is not on the sidelines. As a good sign, recently a joint call for funded research proposals between the Wharton Interactive Media Initiative (WIMI, www.whartoninteractive.com) and the Marketing Science Institute (MSI, www.msi.org) on the impact and modeling of user-generated content (UGC) generated an overwhelming response with over 50 submissions. Even better news was that these submissions were broad in their scope. As a non-random sampling of ideas generated, consider the following. •  
   
  •  
   
  *  
   
  What is the impact of UGC on customer satisfaction and stock prices? Is there information contained in UGC that can help predict supra-normal returns? This can be considered, if you will, an update to the work of Fornell and colleagues (e.g. Anderson et. al, 1994), but now one based on UGC. How does the quantity and valence of UGC impact the diffusion (Bass, 1969) of new products? Note, that while the “scraping” of quantity information for the ‘amount’ of UGC may be somewhat simple, the valence of that information (‘quality’) is less so. While this may make the  
   
  Financial support for this work was provided by the Wharton Interactive Media Initiative (www.whartoninteractive.com).  
   
  J. Casillas & F.J. Martínez-López (Eds.): Marketing Intelligence Systems, STUDFUZZ 258, pp. 27–29. springerlink.com © Springer-Verlag Berlin Heidelberg 2010  
   
  28  
   
  E.T. Bradlow  
   
  •  
   
  timid shy away, this is one example of an opportunity where data mining and marketing scientists can partner together. Conjoint Analysis (Green and Rao, 1971) has long been a mainstay of marketing researchers as a method to understand consumer preferences for product features. But, how does one know that one has the right attributes in the first place – i.e. the classic “garbage in garbage out”? In a recent paper, Lee and Bradlow (2009) utilize feature extraction and clustering techniques to discover attributes that may be left off via standard focus group or managerial judgment methods.  
   
  While these three examples are different in spirit, they all share a common theme, what can really be extracted from UGC that would aid decision-makers? In the next section, I discuss some thoughts, supportively encouraging and otherwise.  
   
  2 Marketing Scientists Should Care about UGC or Should They? Forecasting is big business. The ability to predict consumer’s actions in the future allows marketing interventions such as targeted pricing (Rossi et al, 1996), target promotions (Shaffer and Zhang, 2002), and the like. The promise that UGC can improve these marketing levers is certainly one reason that firms are investing heavily in data warehouses that can store this information and without this does UGC really have a “business future”? While it might seem tautological that UGC can help predict “who wants what” and “when”, it becomes less obvious when one conditions on past behavioral measures such as purchasing, visitation, etc… (Moe and Fader, 2004). In addition, what is the cost of keeping UGC at the individual-level? Thus, a new stream of research on data minimization methods, i.e. What is the least amount of information that needs to be kept for accurate forecasting? (Musalem et. al, 2006 and Fader et al, 2009) will soon, I believe, be at the forefront of managerial importance. Fear, created by the loss of not keeping something that may somehow, someday be useful, will be replaced by the guiding principles of parsimony and sufficiency (in the statistical sense and otherwise). Or, let us consider another example of UGC, viral spreading through social networks (Stephen and Lehmann, 2009). Does having content that users provide, knowing who their friends are, and how and to what extent they are sharing that information provide increased ability for targeted advertising? Does it provide the ability to predict “customer engagement” which can include pageviews, number of visits (Sismeiro and Bucklin, 2004), use of applications (now very popular on websites) and a firm’s ability to monetize it? These are open empirical questions which marketing scientists likely can not answer alone because of the widespread data collection that is necessary. We conclude next with a call for Data Mining and Marketing Science to converge.  
   
  User-Generated Content: The “Voice of the Customer” in the 21st Century  
   
  29  
   
  3 Marketing Scientists and Data Mining Experts Need Each Other Now More Than Ever With all of the data that is abundant today, theory is now needed more than ever. Yes, I will say it again, theory is need now more than ever despite the belief of some that the massive amounts of data available today might make “brute empiricism” a solution to many problems. Without theory, all we are left with is exploration and sometimes massively unguided at that. Through the partnering of data mining/KDD experts in data collection and theory, and marketing scientists who can help link that data and theory to practice, UGC presents the next great horizon for “practical empiricism”. While the lowest hanging fruit might be including UGC covariates as predictors in models of behavior, hopefully our scientific efforts will move beyond that towards an understanding of its endogenous formation (the whys of people’s creation of it) and also an understanding of when it is truly insightful.  
   
  References Anderson, E.W., Fornell, C., Lehmann, D.R.: Customer Satisfaction, Market Share, and Profitability: Findings from Sweden. Journal of Marketing 58(3), 53–66 (1994) Bass, F.M.: A New Product Growth Model for Consumer Durables. Management Science 15, 215–227 (1969) Fader, P.S., Zheng, Z., Padmanabhan, B.: Inferring Competitive Measures from Aggregate Data: Information Sharing Using Stochastic Models, Wharton School Working Paper (2009) Green, P.E., Rao, V.R.: Conjoint measurement for quantifying judgmental data. Journal of Marketing Research 8, 355–363 (1971) Griffin, A., Hauser, J.R.: The Voice of the Customer. Marketing Science 12(1), 1–27 (Winter 1993) Lee, T.Y., Bradlow, E.T.: Automatic Construction of Conjoint Attributes and Levels From Online Customer Reviews, Wharton School Working Paper (2009) Moe, W.W., Fader, P.S.: Dynamic Conversion Behavior at E-Commerce Sites. Management Science 50(3), 326–335 (2004) Musalem, A., Bradlow, E.T., Raju, J.: Bayesian Estimation of Random-Coefficients Choice Models using Aggregate Data. Journal of Applied Econometrics (2006) (to appear) Rossi, P.E., McCulloch, R.E., Allenby, G.M.: The Value of Purchase History Data in Target Marketing. Marketing Science 15, 321–340 (1996) Shaffer, G., Zhang, Z.J.: Competitive One-to-One Promotions. Management Science 48(9), 1143–1160 (2002) Sismeiro, C., Bucklin, R.E.: Modeling Purchase Behavior at an E-Commerce Web Site: A Task Completion Approach. Journal of Marketing Research, 306–323 (August 2004) Stephen, A.T., Lehmann, D.R.: Is Anyone Listening? Modeling the Impact of Word-ofMouth at the Individual Level, Columbia University Working Paper (2009)  
   
  Fuzzy Networks Dawn Iacobucci E. Bronson Ingram Professor in Marketing, Owen Graduate School of Management, Vanderbilt University, Nashville, TN, USA  
   
  Knowledge discovery and fuzzy logic have great potential for social network models. Networks are currently extraordinarily popular, and while it’s fun to work in an area that people find interesting, there is such a thing as a topic being too popular. Networks are too popular in the sense that they are not widely understood by users, hence they are thought to be the new, new thing, capable of answering all questions, from “Will my brand’s presence on Facebook help its equity?” to “ Will a network bring peace to the Middle East?” Fuzzy logic should help new users proceed from naïve enthusiasm to thoughtful application, because fuzzification embraces approximation; huge questions cannot be answered with simple, precise estimates, but a fuzzy approach can put the inquirer in the rough vicinity of an answer (Martínez-López and Casillas, 2008). This essay considers three popular uses of networks: word-of-mouth, brand communities, and recommendation agents, and the application of fuzziness in each realm. The first of these, word-of-mouth, has long been recognized as a powerful marketing force. Marketers routinely consider the diffusion of a new product or idea into and throughout the marketplace using models that posit the mechanism of customers informing each other. Those who adopt early are thought to influence the choices of those who adopt later. Hence, currently, the marketing question that seems to be the “holy grail” takes this form, “How can networks help me identify my influential customers?” This question is remarkably easy to answer via social network techniques. Actors in the network are assessed for their volume and strength of interconnections. Actors that are more interconnected with others are said to be “central” compared to more “peripheral” in the network. Depending on what the network ties reflect, centrality may manifest an actor’s importance, power, communication access, and the like. In a word-of-mouth network such as those sought in diffusion studies, these central players are the very essence of an influential opinion leader. There are several criteria to assess centrality, and as a result, indices abound (Knoke and Yang, 2007). For example, some measures reflect the sheer number of connections, or their weighted strengths or frequencies of connections. Other indices capture the extent to which actors are key in bridging multiple parts of the network map. Still other centrality measures reflect a sense of closeness among the network players, as in the number of steps between pairs of actors, or their “degrees of separation.” Nevertheless, the centrality indices share the property J. Casillas & F.J. Martínez-López (Eds.): Marketing Intelligence Systems, STUDFUZZ 258, pp. 31–34. © Springer-Verlag Berlin Heidelberg 2010 springerlink.com  
   
  32  
   
  D. Iacobucci  
   
  that each captures the extent to which an actor has more connections to others, or stronger, or more frequently activated ties to others. These ties may be primarily inbound, and then the actor is said to be popular. The ties may be predominately outward bound, and then the actor is said to be expansive (e.g., extroverted). So where does fuzziness come in? Marketers understand that just because a customer engages in high activity, whether they claim many friends on a mobile phone plan, or are a frequent blogger, or actively recruit many friends on their Facebook page, it does not necessarily translate into their being an influential. But for all practical purposes, isn’t this status “close”? If someone posts to a blog, and some readers dismiss the posting as being uninformed, the marketer may be disappointed that this blogger isn’t as influential as first thought. Yet given their blogging volume and sheer statistical incidence, would it not likely be the case that their postings would impact some readers? Their blogging activity is presumably motivated by high customer involvement, thus may convey credibility, or at least passion. Thus, managing brand perceptions in the eyes of these frequent posters, frequent frienders, or frequent callers would be a social marketing activity whose result would be sufficiently close to the strategic aims of identifying and leveraging the influential customer. It is close enough. Brand communities are a contemporary marketing and social network phenomenon. Brand communities exist in real life and frequently online. People gather to share and learn and simply enjoy like-minded others. Some scholars claim they comprise a marketing or business strategy. I disagree. Marketing managers can try to launch such a community, and they can certainly insert marketing materials (brands, services, information) into the community in the hopes of effective persuasion. However, most authentic brand communities are grass-roots efforts, created by the love of a common element. For example, Harley riders got together long before some marketer coined the term, “brand community.” Marketing managers of brands that create such buzz and fondness can only hope to leverage the resulting community. Marketing managers of brands that create a collective yawn could persevere to eternity and not be successful in creating a community. When brand communities do exist, marketing phenomena such as diffusion can occur relatively quickly for two reasons. First, while the brand community can be rather large and its membership absolutely informal (e.g., no list of such actors exists), the community is still better defined and smaller to manage than the amorphous set of customers sought in the first application (of finding influentials among all customers). The marketer needs simply to be present at the auto / bike / beer / quilting event or website, and the community itself will take care of the information management, if it perceives value in the market offering. In addition, brand communities are largely democratic. In social network parlance, this egalitarian status shows itself distinctively in highly reciprocal or mutual ties. The ties create a clique of relatively highly interconnected actors comprising a subgroup within the network. Unlike the hierarchical relations between an early adopter exerting influence over a later adopter, customer elements in brand communities share mutual respect and communication. In such structures, those actors who extend ties in great volume tend to also receive them proportionally frequently.  
   
  Fuzzy Networks  
   
  33  
   
  There is a lot to be learned from the patterns of social networks of brand communities—how do the Saturn and Harley communities compare? How do communities of brands whose customers are predominately women compare with those for men’s brands? How do Latin American constituted communities compare with networks for British brands and customers? And of course, is there a structural network distinction between communities of highly profitable brands and those that are less so?The very egalitarian nature of the brand community is related to the fuzziness principle for this social network phenomenon. Specifically, while it is true that members of a brand community are not created equal in terms of facility and likelihood of becoming a brand champion, it is not important. The marketing manager’s actions can be somewhat imprecise. If the marketer gets the brands and communications into the hands of the brand champion, diffusion will be rapid within the community. But even if the marketer misses, and the materials reach a proxy actor, doing so will eventually affect the same result, with the simple delay of the proxy communicating to the real community leaders. It is close enough. Finally, the third marketing phenomenon that can benefit from a fuzzy application of social networks is that of recommendation agents (Iacobucci, Arabie and Bodapati, 2000). Current data-based algorithms for suggesting new products to purchase or new hyperlinks to follow for related articles to read are based on clustering techniques. Social networks models can contribute to this pursuit in lending the concept and techniques of structural equivalence. Two actors are said to be structurally equivalent if they share the same pattern of ties to others. If we are willing to fuzz up this criterion, then two customers would be said to be stochastically equivalent if they share similar searches, purchases, or preference ratings. This third application is different from the first two in that they had been true social networks—the entities in a word-of-mouth network or in a brand community are predominately human, and the ties between these actors, social, be they communication links or ties of liking, respect, sharing, etc. The recommendation agency problem is contextualized in a mixed network of ties among entities that are human, electronic, tangible goods and brands and intangible services. The nonhuman actors may be said to be connected to the extent they are similar, bundled, complementary, etc. The human actors may be interconnected via the usual social ties, but may not be; the recommendation system in Amazon uses no friending patterns, but that in Netflix allows for others to make direct suggestions to people they know. For this phenomenon, like seeking influentials and seeding brand communities, fuzzy networks should suffice to yield good marketing results. Browsing book titles, music CDs, or movie DVDs in stores is easier than doing so online, yet a model-derived suggestion can put the customer in the ball-park of a new set of titles that may be of interest. Amazon’s statistics indicate that recommendations are not mindlessly embraced; e.g., the website offers indices such as, “After viewing this item, 45% of customers purchased it, whereas 23% of customers purchased this next item.” When one item is viewed, and another is suggested, the suggested item need not be embraced for the tool to be approximately useful. The suggested item puts the user down a new search path, restarting a nonrandom  
   
  34  
   
  D. Iacobucci  
   
  walk. The user begins with a goal, which may be achieved immediately upon initial search, or it may be more optimally achieved upon corrected iteration based on inputs of recommendations resulting in successive approximations. Thus, we see that the system’s recommendation need not be “spot on.” Rather, the system only needs to be close enough. The study of network structures is a huge enterprise, and the application of networks to marketing and business phenomena is only in its infancy. These three examples were meant to be illustrative, drawing on popular and contemporary uses with which most readers will be familiar. Other examples at the nexus of fuzzy and networks will also benefit from the advantages of both. What was highlighted with the three exemplar fuzzy networks was the good news—that the application of networks does not need to be super precise for there to be great benefits realized.  
   
  References Iacobucci, D., Arabie, P., Bodapati, A.: Recommendation Agents on the Internet. Journal of Interactive Marketing 14(3), 2–11 (2000) Knoke, D., Yang, S.: Social Network Analysis, 2nd edn. Sage, Thousand Oaks (2007) Martinez-Lopez, F.J., Casillas, J.: Marketing Intelligent Systems for Consumer Behavior Modeling by a Descriptive Induction Approach Based on Genetic Fuzzy Systems. Industrial Marketing Management Press (2008), doi:10.1016/j.indmarman.2008.02.003  
   
  KDD: Applying in Marketing Practice Using Point of Sale Information Adilson Borges1 and Barry J. Babin2 1  
   
  Reims Management School IRC Professor of Marketing Reims Cedex, France 2 Louisiana Tech University Reims Management School Max P. Watson, Jr. Professor of Business Chair, Department of Marketing and Analysis Louisiana Tech University, Ruston, LA, USA  
   
  1 Introduction The dramatic increase in computing power that has emerged over the past two to three decades has revolutionized decision making in most business domains. In particular, point of sale data has been recorded by retailers now since the time of scanner technology. However, the great volumes of data overwhelmed conventional computation routines until more recently. Although the basic principles of data mining can be found in automatic interaction detection routines dating back to the 1960s, the computational limitations of those days prevented a thorough analysis of all the possible combinations of variables. Today, KDD procedures are commonplace as data mining hardware and software provides power to search for patterns among practically any imaginable number of combinations. No longer do we talk about computer capacity in terms of megabytes, but more commonly, data storage is discussed in terms of terabytes (1000 gigabytes) or petabytes (1000 terabytes). Thus, although this may seem like an overwhelming amount of data and to be less theory driven than is appropriate for conventional multivariate data analysis procedures, it is clear that multivariate data analysis is applicable within soft computing and other data mining procedures (see Hair, Black, Babin and Anderson 2010). In particular, routines such as cluster analysis, multidimensional scaling, and factor analysis can be integrated into these routines to help establish patterns that can be validated and reduce the risk of identifying patterns based on randomly occurring generalizations. Retail management, like all marketing efforts, deals with decision making under conditions of uncertainty. This paper describes a KDD application from a retail setting. Managers constantly seek the best arrangement of products to maximize the value experience for consumers and maximize sales revenues for the retailer. Can KDD procedures assist in the store layout question? Here is a description of one attempt to do so. J. Casillas & F.J. Martínez-López (Eds.): Marketing Intelligence Systems, STUDFUZZ 258, pp. 35 – 41. © Springer-Verlag Berlin Heidelberg 2010 springerlink.com  
   
  36  
   
  A. Borges and B.J. Babin  
   
  This paper proposes a new grocery store layout based on the association among categories. We use the buying association measure to create a category correlation matrix and we apply the multidimensional scale technique to display the set of products in the store space. We will imply that the buying association, measured through the market basket analysis, is the best way to find product organization that are best suited to one stop shopping.  
   
  2 The Store Layout Increasing space productivity represents a powerful truism in retailing: customers buy more when products are merchandised better. By careful planning of the store layout, retailers can encourage customers to flow through more shopping areas, and see a wider variety of merchandise (Levy and Weitz, 1998). There are at least two layout approaches: the traditional grid layout and the consumption universe layout. The traditional approach consists in repeating the industrial logic implementation, which means putting products that share some functional characteristics or origins in the same area. So we will find the bakery area (with bread, cakes, biscuits, etc), the vegetable area (with carrots, beans, etc), and so on. This traditional approach has been improved by the use of cross-elasticities, which should measure use association. Retailers have changed some categories and put more complementary in use items together. If a consumer wants take photos at a family party, s/he needs at least the camera and the film. In these cases, both products are complementary, because consumers need both at same time to achieve a specific goal (Walters, 1991). The nature of the relationship among products could be twofold: the use association (UA) or the buying association (BA). UA is the relationship among two or more products that meet specific consumer need by their functional characteristics. We can classify the relationship among different categories by their uses: the products can be substitutes, independent and complementary (Henderson and Quandt, 1958 ; Walter, 1991). The BA is the relationship established by consumers through their transaction acts and it will be verified in the market basket. While UA is not a necessary condition for BA, because UA depends much more on the products functional characteristics, BA depends on buying and re-buying cycles as well as on store marketing efforts. Despite improvements, the store remains organized in “product categories” as defined by the manufacturers or category buyers. This approach is company oriented and it fails to respond to the needs of the time pressured consumer. Some retailers are trying to move from this organization to something new, and are trying to become ¨consumer oriented¨ in their layout approach. Tesco has rethought their store layout with ¨plan-o-grams¨ to try to reflect local consumers needs (Shahidi, 2002). Other French retailers have used consumption universe layouts to make it easier for consumers to find their product in a more hedonic environment. This approach allows supermarkets to cluster products around meaningful purchase opportunities related to use association. Instead of finding coffee in the beverage section, cheese in fresh cheese, ham in the meat section, and cornflakes in  
   
  KDD: Applying in Marketing Practice Using Point of Sale Information  
   
  37  
   
  the cereal section, we could find all those products in the breakfast consumption universe. Other universes, such as the baby universe or tableware universe, propose the same scheme to cluster different product categories. It is too soon to foresee the financial results of such applications, but it shows, however, the retailer’s desire to improve in store product display. These new layout applications do not take the one stop shop phenomenon into account. In fact, this approach is based on the principle that conjoint use of products will unconditionally produce conjoint buying. The main problem with this rationale is that use association alone cannot be used to explain the associations carried out in the buying process (the market basket), because it fails to take buying time cycles into account. For example, bread and butter should be classified as occasional complements, and then they should be found in the same market basket (Walters, 1991). However, this could be not true, since the products have different buying and re-buying cycles. In that case, buying association may be weak, because bread is usually bought on a daily basis, and butter once every week or two. On the other hand, ‘independent products’ don’t have any use relationship, so they should not have any stable buying association. Meanwhile, Betancourt and Gautschi (1990) show that some products could be bought at the same time as a result of the store merchandising structure, store assortment, the marketing efforts and consumption cycles. So, the fact that two products are complementary is not a guarantee that those products will be present in the same market basket. In addition, some researchers have found that independent products have the same correlation intensity as complementary ones in the market baskets (Borges et alli, 2001). So, the store layout construction has to incorporate the market basket analysis to improve the one stop shopping experience. This allows retailers to cluster products around the consumer buying habits, and then to create a very strong appeal for today’s busy consumers.  
   
  3 The Buying Association: A Way to Measure the Relationship among Products The relationship between categories has always been articulated through their use, but this is not enough to explain conjoint presence in the market basket. These two kinds of relationships were clear for Balderston (1956), who presented it as (1) use complementary, if products are used together, and (2) buying complementary, if products are bought together. BA can be computed from supermarket tickets, and indicates real consumer behavior (it is not based on consumers’ declaration or intention). Loyalty cards and store scanners have produced a huge amount of data that is stored in data warehouses and analyzed by data mining techniques. Data Mining is regarded as the analysis step in the Knowledge Discovery in Databases (KDD) process, which is a "non-trivial process of extracting patterns from data that are useful, novel and comprehensive". In data mining, BA is considered as an association rule. This  
   
  38  
   
  A. Borges and B.J. Babin  
   
  association rule is composed of an antecedent and consequence set : A ⇒ B, where A is an antecedent and B a consequent; or A,B ⇒ C, where there are two antecedents and one consequence (Fayyad et alli, 1996). The BA is calculated by the following formula:  
   
  δ AB =  
   
  f ( AB) , f ( A)  
   
  (1)  
   
  where f(AB) represents the conjoint frequency of both products A and B and f(A) represents the product A frequency in the database. This equation is similar to the conditional probability that could be written as (A∩B)/A, given that A intersection B represents the market baskets where both products, A and B, are present at same time. The buying association represents the percentages of consumers that buy product A and who also buy product B. It shows the relationship strength between products, considering only the relationships carried out on buying behavior. This can be represented as a percentage: a BA of 35% between coffee and laundry is interpreted as 35% of consumers have bought coffee also bought laundry in the same shopping trip. In the same way that cross-elasticity is not symmetric, BA is also not symmetric. The BAFC can be different from BACF (this relationship depends mainly on the category penetration rates over the total sales). Mathematically: ∀ F>C, so (F∩C)/F < (F∩C)/C. So, if A frequency is different from B frequency, then the relationship among those products will always be asymmetric. For example, “F” represents the film and “C” the camera. Suppose the condition F>C is confirmed, then the film has a larger penetration in the market baskets than camera. If this condition is satisfied, then BAFC π dj ( f b ( x )) . Otherwise the models f a(x)and f b(x) are non-dominated with respect to each other. The set of models that are non-dominated by other models forms the nondominated or Pareto-optimal set of models. Several non-dominated models typically exist for multi-objective problems, especially when considering conflicting objectives. Here, high performance on one  
   
  Predictive Modeling on Multiple Marketing Objectives Using EC  
   
  159  
   
  objective corresponds to poor performance on the other. The set of non-dominated models along the Pareto-frontier represent different levels of tradeoff amongst the objectives. Solutions from traditional methods that optimize single objectives will typically be towards the extremities of the frontier. Adequately addressing multi-objectives requires consideration of solutions along the entire Pareto frontier, so that decision makers can examine different tradeoffs. Traditional methods attempt to find solutions distributed across the nondominated frontier by, for example, optimizing on an aggregated function of the objectives (Zeleny 1982) and varying the parameters to obtain individual solutions. Weighted combination of objectives into a single function to optimize will foster search towards a specific part of the tradeoff frontier. Linear weighted averages are often considered, with weights on the objectives based on desired tradeoffs or other domain knowledge. Without adequate prior understanding of the nature of tradeoffs and different solutions obtainable, considering such weighted combinations of objectives presents an unreliable and ad-hoc approach (Freitas 2004). This, however, remains the common approach to addressing multiple objectives in data mining. Other traditional approaches like hierarchical regressions also yield only a single solution, with the model-builder having little control over the tradeoff manifest in this solution. Evolutionary computation based approaches, with their population based search process, present effective mechanisms for searching along multiple objectives in parallel (Coello 2000, Coello et al. 2006, Deb 2001). Here, solutions along the entire Pareto frontier are simultaneously obtained, without any need for preference weighting on objectives. It thus readily provides decision-makers with a range of models exhibiting varying levels of tradeoff. Decision on a model to implement may then be taken after consideration of performance tradeoffs that different models along the Pareto frontier reveal.  
   
  2.2 Genetic Search Genetic algorithms provide a stochastic search procedure based on principles of natural genetics and survival of the fittest. They operate through a simulated evolution process on a population of structures that represent candidate solutions in the search space. Evolution occurs through (1) a selection mechanism that implements a survival of the fittest strategy, and (2) genetic recombination of the selected strings to produce ‘offspring’ for the next generation. The basic operation of a simple GA is illustrated in Figure 2, where each population carries N solutions. Each solution is evaluated against a fitness function (the search objective) that assigns a numeric fitness fi. The selection operation probabilistically chooses high fitness solutions into a ‘mating pool’ – solutions with higher than average fitness have a higher occurrence in the mating pool, while low fitness solutions may be eliminated from further consideration. Next, pairs of solutions from the mating pool are recombined to form new solutions (‘offspring’) for the next generation population. Crossover is a recombination operator where offspring are formed by combining parts of the ‘parent’ solutions.  
   
  160  
   
  S. Bhattacharyya  
   
  Selection  
   
  Recombination Crossover Mutation  
   
  Solution1 (f1)  
   
  Solution1  
   
  Solution2 (f2)  
   
  Solution2  
   
  Offspring2(1,4)  
   
  Solution3 (f3)  
   
  Solution2  
   
  Offspring3(2,7)  
   
  Solution4 (f4)  
   
  Solution4  
   
  Offspring4(2,7)  
   
  Offspring1(1,4)  
   
  ...  
   
  ...  
   
  ...  
   
  ...  
   
  ...  
   
  ...  
   
  SolutionN (fN)  
   
  SolutionX  
   
  OffspringN(x,y)  
   
  Generation t +1 Fig. 2 Genetic search –basic operation  
   
  For example, in Figure 2, crossover applied to Solution1 and Solution4 yields Offspring 1 and Offspring2. The mutation operator makes random changes to theoffspring and is applied with low probability. The population of new solutions is then again evaluated against the search objective in an iterative search procedure. Genetic search is known to be effective because of its ability to process and obtain good ‘building blocks’ – sub-structures in the solution -- that progressively yield better solutions, and from the implicit parallelism that arises from its simultaneous consideration of multiple solutions (see Goldberg (1989) for a detailed discussion.) GAs are considered suitable for application to complex search spaces not easily amenable to traditional techniques, and are noted to provide an effective tradeoff between exploitation of currently known solutions and a robust exploration of the entire search space. The selection scheme operationalizes exploitation and recombination effects exploration.  
   
  2.3 Multi-objective Evolutionary Computation Various multi-objective evolutionary algorithms (MOEA) have been proposed (Coello et al. 2006, Deb 2001). Key differences among these are in terms of selection and Pareto ranking, diversity preservation approaches, and use of secondary populations. In the vector-evaluated GA (Schaffer 1985), sub-populations are selected separately based on fitness along each of the different objectives; reproduction operators are then applied after shuffling all these sub-populations In Paretobased selection schemes, the selection of members for the new generation is based on some non-dominance criterion. Non-dominated solutions may be assigned equal selective pressure or population members can be ranked by the number of  
   
  Predictive Modeling on Multiple Marketing Objectives Using EC  
   
  161  
   
  solutions in the population that they are dominated by. Various approaches have been suggested for ranking population members based on non-dominance (see Coello et al. (2006), Deb (2001) for a full discussion). Genetic search typically converges to a single solution due to stochastic errors in selection. Fitness sharing (Goldberg and Richardson 1987), whereby population members in the same neighborhood have their fitness reduced through a sharing function, is used to foster search around multiple peaks in the fitness landscape and thus maintain diversity among population members. A sharing parameter determines the neighborhood distance within which such fitness adjustment occurs. In the multi-objective context, such techniques help maintain population members from across the Pareto frontier. Various sharing/niching techniques have been proposed to enhance Pareto-GAs by fostering wider sampling along the nondominated frontier (Coello 2000, Deb 2001, Veldhuizen and Lamont 2000). Performance of sharing is sensitive to sharing parameters, and guidelines for appropriate values have been suggested for some of the techniques. Among recent MOEA algorithms with noted strong performance are the nondominated sorting GA (Deb et al. 2002), the strength Pareto approach (Zitzler and Theile 1999), the Pareto archived evolutionary strategy (Knowles and Corne 2000), and the evolutionary local search algorithm (Menczer et al. 2000). Studies have reported comparisons between different MOEAs (Kollat and Reed 2005, Shaw et al. 1999, Veldhuizen and Lamont 1999), though as noted in Veldhuizen and Lamont (2000), there is no clear evidence favoring a specific ranking method or sharing approach. Another important aspect to MOEAs in practice is the use of a secondary population to store the non-dominated solutions found as genetic search progresses. This is necessary since non-dominated solutions in one generation can be lost in the stochastic search process. A basic approach can store all non-dominated solutions from each generation in the second population, which can be updated to remove dominated solutions. Alternately, solutions from this second population can be inserted periodically into the regular population to participate in the search (Veldhuizen and Lamont 2000). This is similar in concept to elitist selection in genetic search which preserves the current best solution into the next population. For Pareto-optimal solutions, the current non-dominated set can take up much of the next population; care thus needs to be taken to ensure adequate search. A number of papers in recent years report on application of MOEA to data mining problems. For classification, MOEAs have been suggested to simultaneously optimize accuracy as well as model compactness (Freitas et al. 2002; Kim, 2004; Dehuri and Mall, 2006; Pappa and Freitas, 2009). While most reported work considers objectives arising from traditional measures of data-mining performance, MOEAs can also directly try to optimize business objectives (Bhattacharyya 2000). MOEA has been applied to association rules mining considering support, interestingness and comprehensibility as different objectives (Ghosh and Nath, 2004; Kaya, 2006; Thilagam and Ananthanarayana, 2008). MOEAs have also been found useful for clustering (Handl and Knowles 2004, Kim et al. 2000, Murty et al. 2008), where different objectives can consider cluster cohesiveness, separation between clusters, minimal number of clusters, and minimal attributes used to describe clusters (Dehuri et al. 2008). A recent  
   
  162  
   
  S. Bhattacharyya  
   
  paper (Casillas and Martinez-Lopez 2009) obtains fuzzy rules predicting consumer behavior using MOEA, with error, rule set size and a measure of rule set interpretability as three objectives. Becerra et al. (2008) gives an overview on incorporating knowledge to facilitate search in MOEA through fitness function, search operators and initialization. Such mechanisms can be useful in improving the efficiency and efficacy of MOEAs in real-world applications.  
   
  3 Multi-objective Models Using Genetic Search This section describes the algorithm used to obtain multi-objective predictive models in this chapter, the fitness function formulation to incorporate business objectives for the marketing problem and dataset considered, and how performance of obtained models is evaluated.  
   
  3.1 Model Representation Solutions in a population can take a variety of representational forms, and in a data-mining context, the representation determines the nature of patterns that can be discerned from the data. Each population member can specify a weight vector on the predictor variables as in a linear regression; solutions then represent models of the form y = 1.67x1 + 11.6x2+ … Solutions can also represent a model expressed in symbolic rule form as in, for example, [(50K < Income =5.5K) OR ( …) …] => Buyer. Such representations can capture varied non-linear relationships in data. + *  
   
  *  
   
  +  
   
  exp *  
   
  X2 X1  
   
  *  
   
  X4  
   
  X1  
   
  X1  
   
  2.1 (2.1x1 + x2) exp(x1) + 0.7x1x4 Fig. 3 Non-linear representation of GP  
   
  0.7  
   
  Predictive Modeling on Multiple Marketing Objectives Using EC  
   
  163  
   
  The tree-structured representation of genetic programming (Koza 1993) allows arbitrary functional forms based on a set of functional primitives. Models here specify a function f (x) of the predictor variables that can be depicted as a parse tree, thus allowing arbitrarily complex functions based on a defined set of primitives. The functional primitives usable at different internal (non-terminal) nodes are defined through the Function Set, and terminal nodes are obtained from the Terminal Set. For the models reported in this paper, the function-set F = {+, -, *, /, exp, log} is used, and the terminal-set is T = {ℜ, x1, x2, ..., xn}, where ℜ denotes the set of real numbers (in a specified range) and xi the predictor variables in the data. Figure 3 provides an example of a GP tree-based model.  
   
  3.2 Genetic Search Operators Crossover and mutation form the two basic recombination operators. Crossover implements a mating scheme between pairs of “parents” to produce “offspring” that carry characteristics of both parents. Mutation is a random operator applied to insure against premature convergence of the population; mutation also maintains the possibility that any population representative can be ultimately generated. Appropriate implementations of the crossover and mutation operators are used based on model representation, and are detailed in various standard texts. For the tree-structured models used for the experiments reported here, regular GP crossover and mutation operators are used. Crossover exchanges randomly chosen subtrees of two parents to create two new offspring; Figure 4 shows an example. The tree mutation operator randomly changes a sub-tree. Regular GP attempts to learn numeric constants through the combination of numeric values (terminals in the tree) by function sets operators; as detailed in Evett and Fernandez (1998), this is often inadequate for obtaining accurate constants. Non-uniform mutation where the search gets focused with increasing generations is used here for learning numeric constants. Non-uniform mutation (Michalewicz, 1994): A numeric value sk at a terminal node is replaced by  
   
  ⎧sk + Δ (t , u − sk ) . sk′ = ⎨ ⎩ sk − Δ (t , sk − l ) Here, [u, l] represents the legal range of values for each element and a uniform random choice determines whether the increment or the decrement be applied. The mutation value Δ(t , x) returns a value in [0,x] that decreases with increasing t. Thus, with t as the number of generations of search, this operator seeks used wider search in the initial stages, but gradually focuses the search as the generations progress. The following implementation is used:  
   
  164  
   
  S. Bhattacharyya  
   
  +  
   
  *  
   
  *  
   
  exp +  
   
  X2 X1  
   
  *  
   
  X2  
   
  X1  
   
  X5  
   
  2  
   
  X3  
   
  Model A  
   
  Model B  
   
  +  
   
  *  
   
  *  
   
  exp *  
   
  X2  
   
  X5  
   
  X1  
   
  X1 2  
   
  +  
   
  X2  
   
  X3  
   
  Model D  
   
  Model C  
   
  Fig. 4 Crossover of models A and B to give two new models C and D  
   
  Δ(t , x ) = x (1 − r  
   
  t (1− ) b T  
   
  )  
   
  where r is uniformly generated in [0,1], T gives the total number of generations of search, and b is a parameter determining degree of non-uniformity (a value of b=2 was used for the experiments).  
   
  3.3 Multi-objective Models Using Pareto-Selection This study adopts the simple and elegant Pareto-based scheme of Louis and Rawlins (1993) to obtain the set of non-dominated solutions. This is a variant of binary tournament selection and operates as follows: a pair of solutions (parents) is randomly selected from the current population, and the recombination operators (crossover and mutation) applied in the usual manner to generate two new solutions (offspring). Then the Pareto-optimal set of parents and offspring is produced, and two solutions from this set are randomly selected for the new population. This  
   
  Predictive Modeling on Multiple Marketing Objectives Using EC  
   
  165  
   
  procedure is repeated to fill the entire population for the next generation. The process in general can be applied with tournament sizes greater than two also. This manner of selection is noted to naturally foster the development of niches exploring different regions of fitness tradeoffs (Louis and Rawlins 1993). We incorporate elitism into the Pareto selection process. Elitism, where the best solution is retained intact into the next generation, has been noted to be crucial for effective search. In a Pareto-GA context, a population will usually contain several non-dominated solutions. Elitism is incorporated by retaining the current population's non-dominated solutions into the next generation. Note that elitist selection here reduces the number of population members that actively participate in the search using the genetic recombination operators, and can thus impose a burden. The genetic learning procedure begins with a population of randomly generated models, and can be summarized as: While (not terminating-condition) { Evaluate-fitness of population members Determine the non-dominated set in the population Insert non-dominated set into the next generation While next-generation population is not full { Select two parents randomly from current population With probability pcross perform crossover on two parents to get two new offspring, With probability pmutate perform mutation on each offspring With probability pnumutate perform non-uniform mutation on each offspring Obtain the Pareto-optimal set of parents and offspring Select two solutions randomly from the Pareto-optimal set Insert selected solutions into next generation } } The search is terminated after a fixed number of iterations.  
   
  3.4 Fitness Function The fitness function specifies the search objective and provides a numerical figure-of-merit or utility measure for a solution in the population. A key advantage of GA/GP arises from the flexibility allowed in formulation of the fitness function. Unlike in many other techniques, there are no constraints of smoothness, continuity or linearity in the function – the only requirement is that the fitness function provide a numerical value indicating desirability of a solution; it may even be specified as a rule-set for model performance assessment. The flexibility in fitness function formulation allows the development of models tailored to specific business objectives. For predictive modeling tasks, the search objective is often framed around the dependent variable. For example, with  
   
  166  
   
  S. Bhattacharyya  
   
  a binary dependent variable measuring a buy/no-buy decision, customer churn, response to a solicitation, etc., the fitness function can be specified along traditional performance measures to maximize overall accuracy, correctly identify ‘responders’, etc. Considering the way models will be implemented and given budgetary or other constraints, the fitness function can also be defined to identify, say, 30% of individuals most likely to buy (Bhattacharyya 1999). Traditional objectives (and models developed using conventional approaches that seek to maximize overall likelihood, minimize errors, etc.) may not yield models that are best suited with respect to specific implementation considerations like these. For continuous dependent variables, too, the fitness function can be set to obtain a ‘profit’ model that seeks, for example, the most profitable customers for specific targetingdepths, or those with the highest frequency of response, etc. In the decile-maximization approach (Bhattacharyya 1999) that obtains models to maximize performance at specific targeting depths, fitness of models is estimated at a specified depth-of-file d (d is specified as a fraction of the total data e.g. d=0.1 for the top 10 percent or first decile, etc.). Given multiple objectives πi, fitness may be evaluated along each of the objectives as follows: Consider a data set D containing N observations: D = {(x, z)k, k=1,..N}, where x denotes the vector of predictors, and z = {zi, i=1,..n} gives the variables corresponding to n objectives. Then, considering a specific model f, model evaluation scores the observations as: yˆ k = f ( x k ) . Let the data ranked in descending order of model scores be denoted as yˆ ks , and the ranked observations up to the specified depth d be given by  
   
  Dd = { (x, z)k: yˆ ks , k=1,..,Nd}, where Nd = d.N gives the number of observations up to the depth d. Then, the model's fitness for the i-th objective is obtained as  
   
  π id =  
   
  ∑ (z ) i  
   
  k∈D d  
   
  k  
   
  .  
   
  Evaluating the fitness of a model involves obtaining values for each of the multiple objectives defining the problem. Alternately, to generally maximize lifts across all deciles, rather than focus on specific deciles, fitness functions can be defined to seek an optimal ordering of observations based on the dependent variables. This can be obtained by considering differences between the dependent variable values in score-ranked observation and in the optimal ordering of observations from high to low values of the dependent variables. This is the approach taken for the results presented in this chapter. The fitness evaluation may also be defined to guard against over-fit by, for example, utilizing resampling techniques, as found useful in Bhattacharyya (1999). It can also incorporate a preference for simpler models carrying fewer variables, or for models exhibiting desired tradeoffs amongst conflicting characteristics.  
   
  Predictive Modeling on Multiple Marketing Objectives Using EC  
   
  167  
   
  3.5 Performance Measures Given the context of the direct marketing dataset, we assess model performance on the cumulative lifts at different file-depths. This is preferred over traditional measures of performance like overall accuracy, error rate, etc. in direct marketing where models are often used to identify a subset of the total customers expected to maximize response to a solicitation, revenue generated, or other performance criterion. A decile analysis is typically used to evaluate model performance across file-depths. Here, customers are ranked in descending order of their respective model scores – higher scores indicating better performance – and separated into 10 equal groups. Table 1 shows a typical decile analysis, where performance is assessed on response. The first row indicates performance for the top 10% of individuals as identified by the model. The Cumulative Lifts at specific depths of file provide a measure of improvement over a random mailing, and are calculated as:  
   
  Cumulative Lift decile =  
   
  cumulative average performancedecile *100. overall average performance  
   
  Thus, in Table 1, a cumulative lift of 3.7 in the top decile indicates that the model in question is expected to provide a mailing response that is 3.7 times the response expected from a random mailing to 10% of the file. Where a dependent variable gives the revenue generated, a similar decile analysis can be used to evaluate the performance on cumulative revenue at different deciles. Performance of a model on the Response and Revenue objectives is indicated by the Response-Lift and Revenue-Lift at a considered decile - a model that captures more responders/revenue at the top deciles thus shows superior performance on the response/revenue objective. Note that individual lift values indicate performance on a single objective only, without regard for the other objective. As mentioned earlier, where the two objectives do not relate well, high performance of a model on one objective will correspond to poor performance on the other. In such situations, different levels of performance tradeoffs exist and are captured by the models along the Pareto frontier. Performance of a model on the Response and Revenue objectives is indicated by the Response-Lift and Revenue-Lift at a considered decile - a model that captures more responders/revenue at the top deciles thus shows superior performance on the response/revenue objective. Note that individual lift values indicate performance on a single objective only, without regard for the other objective. As mentioned earlier, where the two objectives do not relate well, high performance of a model on one objective will correspond to poor performance on the other. In such situations, different levels of performance tradeoffs exist and are captured by the models along the Pareto frontier. The determination of a specific model to implement can be based on various factors considered by a decision-maker - for instance, it may be desirable that performance on both objectives be above some minimal threshold level, and judgments may consider individual, subjective factors too. Given the application  
   
  168  
   
  S. Bhattacharyya Table 1 Sample Decile Analysis  
   
  Decile  
   
  Number of Customers  
   
  top 2 3 4 5 6 7 8 9 bottom Total  
   
  9000 9000 9000 9000 9000 9000 9000 9000 9000 9000 90,000  
   
  Number of Responses 1332 936 648 324 144 72 72 36 20 16 3600  
   
  Cumulative Responses 2179 3932 4328 4439 4549 4634 4701 4770 4819 4874  
   
  Cumulative Response Rate (%) 14.8% 12.6% 10.8% 9.0% 7.52% 6.4% 5.6% 4.95% 4.43% 4.0%  
   
  Cumulative Response Lift 3.70 3.15 2.70 2.25 1.88 1.60 1.40 1.24 1.11 1.00  
   
  considered here, the overall modeling objective is taken as the maximization of the expected revenue that can be realized through identification of high-revenue customers. This can be estimated at a specific decile or file-depth d as follows (Bhattacharyya 2000): Let V denote the total revenue over all individuals in the data, and R the total number of responders. Consider Vd and Rd the cumulative total revenue and cumulative total number of responders respectively at decile d. Then, if N denotes the overall total customers in the data and Nd is the total customers up to the decile level d, the cumulative response and revenue lifts are: Response Lift = (Rd/Nd)/(R/N) and Revenue Lift = (Vd/Nd)/(V/N). The expected revenue up to the file-depth d is given by: (Average-response per customer)d*(Average revenue per customer)d = (Rd/Nd)*(Vd/Nd) = (ResponseLift * RevenueLift) * [(R/N) * (V/N)]. The product of Response Lift and Revenue Lift values then gives the cumulative lift on the expected-revenue as: [(Rd/Nd)*(Vd/Nd)] / [(R/N) * (V/N)]. This Product of Lifts thus provides a useful measure to evaluate the performance of models on expected revenue. This measure depends on both objectives, and models with high performance on only one objective may not perform well on Product of Lifts which indicates expected-revenue from a model at specified filedepths.  
   
  Predictive Modeling on Multiple Marketing Objectives Using EC  
   
  169  
   
  4 Data and Multi-objective Model Performance We examine the effectiveness of the multi-objective genetic search approach in handling multi-objective data-mining problems using a real-life dataset. This section describes the dataset used and presents the performance of different models along the Pareto frontier. For comparison, we also show the performance of least squares regression and logistic regression models on the same data.  
   
  4.1 Data The dataset pertains to direct mail solicitations from past donors for a non-profit organization1. It carries historical data on solicitations and donations from 10/86 through 6/95. All donors in the data received at least one solicitation in early 10/95 and the data carries the number and amount donations in the subsequent Fall, 1995 period. We consider the development of models to p redict response (at least one donation) and dollars in the later time period, given the history of prior solicitations and contributions. The dataset carries 99,200 cases, with each being defined through 77 attributes. The list of data attributes are given in Appendix A. Various transformations were conducted to obtain a modeling dataset. Solicitation codes in the data are specific to program type and date of solicitation. The data specifies these codes as one of four program types - A, B, C, or a miscellaneous group. The codes are resolved to obtain the total number of solicitations of different types for each observation in the data. Similarly, for contribution codes, we obtain the total number of contributions to different types. Contribution dollars for the different codes are also aggregated to get total contributions made for the different contribution types. Binary variables were created for each type to depict whether a solicitation and contribution for that type was ever made. Thus the following variables were derived for each of the four types: Number of solicitations of Type x Number of contributions of Type x Dollars of contribution to Type x Solicitation Type x (yes/no) Contribution Type x (yes/no) Date fields were converted to months-since in relation to a baseline of 10/1/1995.The following date related fields were retained for modeling: dates of first contribution, largest contribution, latest solicitation and latest contribution, change of address date. The State variable was transformed to retain only the 9 states found to have large concentration of customers, and these were converted to binary indicator variables. After preliminary examination, the Reinstatement Code, Rental Exclusion Code, 2nd Address Indicator variables were also retained in the modeling 1  
   
  The dataset is provided for academic use by the Direct Marketing Educational Foundation.  
   
  170  
   
  S. Bhattacharyya  
   
  dataset. Where more than two categories were specified, multiple binary variables were created. Certain additional fields were also created: Longevity: time period between first and latest contributions Ratio of Lifetime Contributions to Solicitations Average Lifetime Contribution Average Contribution per Solicitation The modeling dataset had 58 predictor variables, and two dependent variables for Response and Dollars in the later Fall 1995 period.  
   
  4.2 Models along the Pareto-Frontier Here we examine the performance of a set of GP models obtained using the genetic search procedure with Pareto-selection as described above2. For comparison, we also show the performance of an ordinary least squares regression model and a logistic regression model on the same data. Models were developed on a training dataset of 30,000 cases and performance of models is considered on the separate validation dataset comprising the remaining cases. For the genetic search, multiple initial runs with different random seeds were conducted and the non-dominated solutions from each were saved. A final run with initial population seeded using the saved non-dominated solutions was used to obtain the non-dominated solutions shown below. The fitness function was defined to optimize the ordering of dataset observations on the dependent variables so as to maximize lifts at the upper deciles.  
   
  Fig. 5 Non-dominated models 2  
   
  The models were obtained using the evolveDMTM software for data mining using evolutionary computation techniques. Details are available from the author.  
   
  Predictive Modeling on Multiple Marketing Objectives Using EC  
   
  171  
   
  The non-dominated models obtained are shown in Figure 5. Different models incorporating varying levels of tradeoff among the two objectives are seen. Models toward the upper-left show good performance on the Revenue objective, but perform poorly on Response. Conversely, models at the lower-right have good performance on Response but low Revenue performance. We consider different models along the Pareto frontier, as indicated by A, B… F in the figure. Since performance of models in the upper deciles is typically of interest, we examine the cumulative lifts of different models at the first, second and third deciles, corresponding to 10%, 20% and 30% file-depths. Tables 2a-2c give the performance of the different models at these deciles. Here, OLS represents the ordinary least squares regression on the continuous dependent variable for revenue, and LR is for the logistic regression model on the binary dependent variable for response. The graphs in Figure 6 plot the lifts of the different models on the two individual objectives, at different file-depths. The single objective OLS and LR models perform well on the respective revenue and response objectives that they are built to optimize on. As can be expected, performance of these models on the other objective is lower. The multi-objective models from the upper-left region of the Pareto-frontier are seen to perform better on Revenue Lift than the OLS model, and those from the lower-right perform better on Response Lift than the LR model. This is not surprising and shows that evolutionary search, using the nonlinear representation and seeking to maximize a fitness function that is more related to lift performance, is able to obtain better solutions than the traditional models. The multi-objective models from the middle region of the Pareto-frontier, exhibiting tradeoffs amongst the two objectives, are seen to perform well on the Product of Lifts measure. This arises from the conflicting objectives in the data, as evident in the Pareto-frontier obtained. All these models do not show better expected-revenue lifts than the OLS and LR models. At the top decile, the OLS model has higher performance than the multi-objective models A and B in the upper-left region of the Pareto-frontier, and the LR model does better than the models E and F which are from the lower-right region. It is interesting to observe that for this top decile, the LR model is not dominated on both objectives by any other model, and only model C dominates the OLS model. On product-of- lifts, the LR model does better than OLS, but models C and D exhibit the highest performance. At the second decile, it is the OLS model whose performance is non-dominated on both objectives by any of the other models. The LR model, however, displays a higher product-of-lifts. Performance of both OLS and LR is surpassed by models B, C and D from the middle region of the Pareto frontier. At the third decile, too, these three models outperform the others on product-of-lifts.  
   
  172  
   
  S. Bhattacharyya Table 2a Lifts for top decile  
   
  10% depth  
   
  Response Lift  
   
  Revenue Lift  
   
  Prod Lifts  
   
  A  
   
  1.42  
   
  2.67  
   
  3.79  
   
  B  
   
  1.49  
   
  2.70  
   
  4.02  
   
  C  
   
  1.97  
   
  2.58  
   
  5.09  
   
  D  
   
  2.21  
   
  2.43  
   
  5.38  
   
  E  
   
  2.29  
   
  2.04  
   
  4.68  
   
  F  
   
  2.42  
   
  1.85  
   
  4.47  
   
  OLS  
   
  1.61  
   
  2.46  
   
  3.97  
   
  LR  
   
  2.34  
   
  2.10  
   
  4.91  
   
  Table 2b Lifts for second decile  
   
  20% depth  
   
  Response Lift  
   
  Revenue Lift  
   
  Prod Lifts  
   
  A B C D E  
   
  1.37 1.42 1.82 1.92 1.99  
   
  2.08 2.09 2.01 1.94 1.81  
   
  2.85 2.97 3.67 3.73 3.61  
   
  F OLS  
   
  2.07 1.49  
   
  1.49 2.04  
   
  3.08 3.04  
   
  LR  
   
  1.91  
   
  1.72  
   
  3.29  
   
  Table 2c Lifts for third decile  
   
  30% depth A B C D E F OLS LR  
   
  Response Lift 1.33 1.38 1.61 1.78 1.82 1.91 1.38 1.69  
   
  Revenue Lift 1.82 1.80 1.77 1.71 1.62 1.29 1.79 1.46  
   
  Prod Lifts 2.42 2.50 2.83 3.04 2.95 2.47 2.48 2.48  
   
  Predictive Modeling on Multiple Marketing Objectives Using EC  
   
  Fig. 6 Lifts at different deciles  
   
  173  
   
  174  
   
  S. Bhattacharyya  
   
  5 Conclusions The Pareto-genetic search scheme used is seen to be effective at obtaining models with varying levels of tradeoff on multiple data-mining objectives. Models from the extremes of the tradeoff frontier are found to perform favorably in comparison with OLS and logistic regression models on the respective single objectives. The traditional OLS and logistic regression models - popular in industry use - perform well on the single criteria that they model. In the context of multiple objectives, however, they do not provide a decision-maker with different tradeoffs that the data may admit. With multiple models as obtained from the genetic search based approach here, selection of a specific model to implement, from amongst the nondominated set, can be made in consideration of a variety of factors of possible concern to a decision-maker. For the application and data in this study, considering expected-revenue as a criterion for judging overall model performance, the best of the multiple-objective models were seen to yield superior performance over the logistic regression and OLS models at different file-depths. With multiple objectives to consider, and a set of models with performance ranging along the Pareto frontier, the choice of a model to implement is an important next step. Where decision makers have a clear understanding of desired tradeoffs among objectives, the selection of ‘best’ model can be straightforward, especially where models are developed to optimize business objectives as in the case presented in this paper. For situations where the modeling objectives may not directly correspond with business criteria, observed tradeoffs on the modeling objectives may not present adequate information for a decision-makers choice of a model to implement. For such situations, further analyses on the Pareto optimal set of models may be required to provide decision-makers adequate insight into application performance tradeoffs of alternate models. The need for additional analyses also occurs where three or more objectives are considered, and visualization tools have been investigated to aid in decision-making (Kollat and Reed 2007). In marketing applications like the one presented in this paper, a combination of models can be useful to obtain the ‘best’ overall solution. With response and revenue/profit maximization, for example, as the two modeling objectives, a decision-maker may prefer a model with a certain tradeoff in profit and response likelihood at the upper deciles. From the potential customers identified through this model, one may also want to distinguish those indicated as high response potential by another model which exhibits high performance in the response objective; these individuals may be of interest for a different marketing treatment. In a similar manner, consideration of multiple models from the Pareto set can also be useful for identifying groups of customers that are best targeted with varying marketing approaches. Consideration of multiple models from the Pareto set in this way is under investigation. While traditional data-mining approaches usually obtain models built to objectives like maximum likelihood, minimal classification error, etc., the business problem can consider alternate criteria. In a direct marketing context, for example, managers may be concerned about the targeting depth that yields optimal returns, maximizing the number of responders within a certain budget, or identifying  
   
  Predictive Modeling on Multiple Marketing Objectives Using EC  
   
  175  
   
  responders that are also likely to generate high purchase revenue. As noted earlier, evolutionary computation allows the incorporation of such criteria into the fitness function and can thereby help build models that directly optimize business objectives of interest (Bhattacharyya 1999, 2000). Most EC based data mining work to date, however, have not taken advantage of this, and models are developed to general performance criteria. Incorporation of varied business criteria in fitness functions and their evaluation presents an important research opportunity. Consideration of multiple managerial objectives across different business problems using MOEA is also a promising area for future research. Many real-world problems addressed through marketing analytics and data mining can profitably utilize the multi-objective evolutionary search based approach presented here. In catalogue and retail sales, for example, models identifying potential buyers that also will not return purchased goods are useful; similarly, models that identify potential responders to mailings who are also likely to buy some specific product are often sought. Multiple and often conflicting objectives are also seen in the context of many cross-selling marketing campaigns. Problems in the telecommunications industry often seek to model customers' tenure in combination with usage - identifying people who have long tenure and high usage of services. Further application examples occur in the financial services industry, where models, for example, can seek customers who are likely to be approved for credit and who can also be expected not to make late payments or default on loans.  
   
  References Berry, M.J.A., Linoff, G.S.: Data Mining Techniques for Marketing, Sales and Customer Relationship Management. John Wiley & Sons, Chichester (2004) Becerra, R.L., Santana-Quintero, L.V., Coello, C.C.: Knowledge Incorporation in Multiobjective Evolutionary Algorithms. In: Ghosh, A., Dehuri, S., Ghosh, S. (eds.) MultiObjective Evolutionary Algorithms for Knowledge Discovery from Databases. Studies in Computational Intelligence, vol. 98, pp. 23–46. Springer, Heidelberg (2008) Bhattachryya, S.: Direct Marketing Performance Modeling using Genetic Algorithms. INFORMS Journal of Computing 11(13), 248–257 (1999) Bhattacharyya, S.: Evolutionary algorithms in data mining: Multi-objective performance modeling for direct marketing. In: Proceedings of the Sixth ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, Boston, Massachusetts, pp. 465–473 (2000) Casillas, J., Martínez-López, F.J.: Mining Uncertain Data with Multiobjective Genetic Fuzzy Systems to be Applied in Consumer Behaviour Modeling. Expert Systems with Applications 36(2), 1645–1659 (2009) Coello, C.C.: An Updated Survey of GA-Based Multiobjective Optimization Techniques. ACM Computing Surveys 32(2), 109–143 (2000) Coello, C.C., Lamont, G.B., Van Veldhuizen, D.A.: Evolutionary Algorithms for Solving Multi-Objective Problems (Genetic and Evolutionary Computation). Springer, New York (2006) De La Iglesia, B., Richards, G., Philpott, M.S., Rayward-Smith, V.J.: The Application and Effectiveness of a Multi-objective Metaheuristic Algorithm for Partial Classification. European Journal of Operational Research 169(3), 898–917 (2006)  
   
  176  
   
  S. Bhattacharyya  
   
  Deb, K.: Multi-Objective Optimization Using Evolutionary Algorithms. John Wiley & Sons, Inc., New York (2001) Deb, K., Pratap, A., Agrawal, S., Meyarivan, T.: A Fast and Elitist Multi-objective Genetic Algorithm: NSGA-II. IEEE Transactions on Evolutionary Computation 6, 182–197 (2002) Dehuri, S., Ghosh, S., Ghosh, A.: Genetic Algorithm for Optimization of Multiple Objectives in Knowledge Discovery from Large Databases. In: Ghosh, A., Dehuri, S., Ghosh, S. (eds.) Multi-Objective Evolutionary Algorithms for Knowledge Discovery from Databases. Studies in Computational Intelligence, vol. 98, pp. 1–22. Springer, Heidelberg (2008) Dehuri, S., Jagadev, A.K., Ghosh, A., Mall, R.: Multi-objective Genetic Algorithm for Association Rule Mining using a Homogeneous Dedicated Cluster of Workstations. American Journal of Applied Sciences 88, 2086–2095 (2006) Dehuri, S., Mall, R.: Predictive and Comprehensible Rule Discovery using a Multiobjective Genetic Algorithm. Knowledge-Based Systems 19(6), 413–421 (2006) Evett, M., Fernandez, T.: Numeric Mutation Improves the Discovery of Numeric Constants in Genetic Program. In: Koza, J.R., et al. (eds.) Proceedings of the Third Annual Genetic Programming Conference, Wisconsin, Madison, Morgan Kaufmann, San Francisco (1998) Fonseca, C.M., Fleming, P.J.: An Overview of Evolutionary Algorithms in Multi-Objective Optimization. Evolutionary Computation 3(1), 1–16 (1995) Freitas, A.A.: A Critical Review of Multi-objective Optimization in Data Mining: a Position Paper. SIGKDD Explorations. Newsletter 6(2), 77–86 (2004) Freitas, A.A., Pappa, G.L., Kaestner, C.A.A.: Attribute Selection with a Multi-objective Genetic Algorithm. In: Proceedings of the 16th Brazilian Symposium on Artificial Intelligence, pp. 280–290. Springer, Heidelberg (2002) Ghosh, A., Nath, B.: Multi-objective Rule mining using Genetic Algorithms. Information Sciences 163(1-3), 123–133 (2004) Goldberg, D.E.: Genetic Algorithms in Search, Optimization and Machine Learning. Addison-Wesley, Reading (1989) Goldberg, D.E., Richardson, K.: Genetic algorithms with Sharing for Multi-modal Function Optimization. In: Proceedings of the 2nd International Conference on Genetic Algorithm, pp. 41–49 (1987) Hand, D.J.: Construction and Assessment of Classification Rules. John Wiley and Sons, Chichester (1997) Handl, J., Knowles, J.: Multiobjective Clustering with Automatic Determination of the Number of Clusters, Technical Report No. TR-COMPSYSBIO-2004-02, UMIST, Department of Chemistry (August 2004) Kaya, M.: Multi-objective Genetic Algorithm based Approaches for Mining Optimized Fuzzy Association Rules. Soft Computing: A Fusion of Foundations, Methodologies and Applications 10(7), 578–586 (2006) Kim, D.: Structural Risk Minimization on Decision Trees using an Evolutionary Multiobjective Algorithm. In: Keijzer, M., O’Reilly, U.-M., Lucas, S., Costa, E., Soule, T. (eds.) EuroGP 2004. LNCS, vol. 3003, pp. 338–348. Springer, Heidelberg (2004) Kim, Y., Street, N.W.: An Intelligent System for Customer Targeting: a Data Mining Approach. Decision Support Systems 37(2), 215–228 (2004)  
   
  Predictive Modeling on Multiple Marketing Objectives Using EC  
   
  177  
   
  Kim, Y., Street, W.N., Menczer, F.: Feature Selection in Unsupervised Learning via Evolutionary Search. In: Proc. 6th ACM SIGKDD Int. Conf. on Knowledge Discovery and Data Mining (KDD 2000), pp. 365–369 (2000) Knowles, J.D., Corne, D.W.: Approximating the Non-dominated Front using the Pareto Archived Evolution Strategy. Evolutionary Computation 8(2), 49–172 (2000) Kollat, J.B., Reed, P.M.: The value of online adaptive search: A performance comparison of NSGAII, ε-NSGAII and εMOEA. In: Coello, C.C., Aguirre, A.H., Zitzler, E. (eds.) EMO 2005. LNCS, vol. 3410, pp. 386–398. Springer, Heidelberg (2005) Kollat, J.B., Reed, P.M.: A framework for Visually Interactive Decision-making and Design using Evolutionary Multi-objective Optimization (VIDEO). Environmental Modelling & Software 22(12), 1691–1704 (2007) Koza, J.R.: Genetic Programming: On the Programming of Computers by Means of Natural Selection. MIT Press, Cambridge (1993) Louis, S.J., Rawlins, G.J.E.: Pareto-Optimality, GA-Easiness and Deception. In: Forrest, S. (ed.) Proceedings of the Fifth International Conference on Genetic Algorithms, pp. 118–123 (1993) Massand, B., Piatetsky-Shapiro, G.: A Comparison of Different Approaches for Maximizing the Business Payoffs of Prediction Models. In: Simoudis, E., Han, J.W., Fayyad, U. (eds.) Proceedings of the Second International Conference on Knowledge Discovery and Data Mining, pp. 195–201 (1996) Menczer, F., Degeratu, M., Street, N.W.: Efficient and Scalable Pareto Optimization by Evolutionary Local Selection Algorithms. Evolutionary Computation 8(2), 223–247 (2000) Michalewicz, Z.: Genetic Algorithms + Data Structures = Evolution Programs, 2nd edn. Springer, Heidelberg (1994) Murty, M.N., Babaria, R., Bhattacharyya, C.: Clustering Based on Genetic Algorithms. In: Ghosh, A., Dehuri, S., Ghosh, S. (eds.) Multi-Objective Evolutionary Algorithms for Knowledge Discovery from Databases. Studies in Computational Intelligence, vol. 98, pp. 137–159. Springer, Heidelberg (2008) Pappa, G.L., Freitas, A.A.: Evolving Rule Induction algorithms with Multi-objective Grammar-based Genetic Programming. Knowledge and Information Systems 19(3), 283–309 (2009) Richardson, J.T., Palmer, M.R., Liepins, G., Hilliard, M.: Some Guidelines for Genetic Algorithms with Penalty Functions. In: Schaffer, J.D. (ed.) Proceedings of the Third International Conference on genetic Algorithms, pp. 191–197 (1989) Schaffer, J.D.: Multiple Objective Optimization with Vector Evaluated Genetic Algorithms. In: Genetic Algorithms and their Applications: Proceedings of the First International Conference on Genetic Algorithms, pp. 93–100. Lawrence Erlbaum, Mahwah (1985) Shaw, K.J., Nortcliffe, A.L., Thompson, M., Love, J., Fonseca, C.M., Fleming, P.J.: Assessing the Performance of Multiobjective Genetic Algorithms for Optimization of a Batch Process Scheduling Problem. In: Angeline, P. (ed.) Congress on Evolutionary Computation, pp. 37–45. IEEE Press, Piscataway (1999) Sikora, R., Piramuthu, S.: Efficient Genetic Algorithm Based Data Mining Using Feature Selection with Hausdorff Distance. Information Technology and Management 6(4), 315–331 (2005)  
   
  178  
   
  S. Bhattacharyya  
   
  Thilagam, P.S., Ananthanarayana, V.S.: Extraction and Optimization of Fuzzy Association Rules using Multi-objective Genetic Algorithm. Pattern Analysis and Applications 11(2), 159–168 (2008) Van Veldhuizen, D.A., Lamont, G.B.: Multiobjective Evolutionary Algorithm Test Suites. In: Carroll, J., Haddad, H., Oppenheim, D., Bryant, B., Lamont, G.B. (eds.) Proceedings of the 1999 ACM Symposium on Applied Computing, New York, pp. 351–357 (1999) Van Veldhuizen, D.A., Lamont, G.B.: Multiobjective Evolutionary Algorithms: Analyzing the State-of-Art. Evolutionary Computation 8(2), 125–147 (2000) Zhang, Y., Bhattacharyya, S.: Genetic Programming in Classifying Large-scale Data: an Ensemble Method. Information Sciences 163(1-3), 85–101 (2004) Zeleny, M.: Multiple Criteria Decision Making. McGraw-Hill, New York (1982) Zitzler, E., Thiele, L.: Multi-objective Evolutionary Algorithms: a Comparative Case study and Strength Pareto Approach. IEEE Transactions on Evolutionary Computation 3, 257–271 (1999)  
   
  Predictive Modeling on Multiple Marketing Objectives Using EC  
   
  Appendix Appendix A – Original Data set attributes ACCNTNMB, Donor ID TARGDOL Dollars of Fall 1995 Donations TARGRES Number of Fall 1995 Donations Contributions history: CNCOD1 to CNCOD10 Latest to 10th Latest Contribution Code CNDAT1 to CNDAT10 Latest to 10th Latest Contribution Date CNDOL1 to CNDOL10 Latest to 10th Latest Contribution CNTMLIF Times Contributed Lifetime CNTRLIF Dollars Contribution Lifetime CONLARG Largest Contribution CONTRFST First Contribution DATEFST First Contribution Date DATELRG Largest Contribution Date Solicitation history: SLCOD1 to SLCOD11 Latest to 11th Latest Solicitation Code SLDAT1 to SLDAT11 Latest to 11th Latest Solicitation Date SLTMLIF Times Solicitated Lifetime FIRMCOD Firm/Head HH code MEMBCODE Membership Code NOCLBCOD No Club Contact Code NONPRCOD No Premium Contact Code NORETCOD No Return Postage Code NOSUSCOD No Sustain Fund Code PREFCODE Preferred Contributor Code REINCODE Reinstatement Code REINDATE Reinstatement Date RENTCODE Rental Exclusion Code CHNGDATE Change of Address Date SECADRIN 2nd Address Indicator SEX Gender STATCODE State ZIPCODE ZIP Code  
   
  179  
   
  Automatic Discovery of Potential Causal Structures in Marketing Databases Based on Fuzzy Association Rules Albert Orriols-Puig1, Jorge Casillas2 , and Francisco J. Mart´ınez-L´opez3 1  
   
  2  
   
  3  
   
  Grup de Recerca en Sistemes Intelligents Enginyeria i Arquitectura La Salle (URL), 08022 Barcelona, Spain e-mail: [email protected]  CITIC-UGR (Research Center on Communication and Information Technology) Department of Computer Science and Artificial Intelligence University of Granada, 18071 Granada, Spain e-mail: [email protected]  Department of Marketing University of Granada, 18071 Granada, Spain and Universitat Oberta de Catalunya, 08035 Barcelona, Spain e-mail: [email protected]   
   
  Abstract. Marketing-oriented firms are especially concerned with modeling consumer behavior in order to improve their information and aid their decision processes on markets. For this purpose, marketing experts use complex models and apply statistical methodologies to infer conclusions from data. In the recent years, the application of machine learning has been identified as a promising approach to complement these classical techniques of analysis. In this chapter, we review some of the first approaches that undertake this idea. More specifically, we review the application of Fuzzy-CSar, a machine learning technique that evolves fuzzy association rules online, to a certain consumption problem analyzed. As a differentiating sign of identity from other methods, Fuzzy-CSar does not assume any aprioristic causality (so model) within the variables forming the consumer database. Instead, the system is responsible for extracting the strongest associations among variables, and so, the structure of the problem. Fuzzy-CSar is applied to the real-world marketing problem of modeling web consumers, with the aim of identifying interesting relationships among the variables of the model. In addition, the system is compared with a supervised learning technique, which is able to extract associations between a set of input variables and a pre-fixed output variable, expressly designed for this marketing problem. The results show that Fuzzy-CSar can provide interesting information for marketing experts that was not detected by the classical approach, and that the extraction of fuzzy association rules is an appealing alternative, in general, to refine or complement the modeling results obtained with the use of traditional methods of analysis applied for these purposes; in particular, we focus on, and take as a reference, the structural equation modeling.  
   
  J. Casillas & F.J. Mart´ınez-L´opez (Eds.): Marketing Intelligence Systems, STUDFUZZ 258, pp. 181–206. c Springer-Verlag Berlin Heidelberg 2010 springerlink.com   
   
  182  
   
  A. Orriols-Puig, J. Casillas, and F.J. Mart´ınez-L´opez  
   
  1 Introduction Companies are constantly searching for suitable marketing opportunities to survive in increasingly turbulent and volatile markets. For this purpose, marketing experts are especially concerned with the creation and management of key information about the market [6]. In management and marketing disciplines, the use of models has been usual to drive the database analysis. Model-based analytical processes imply that a structure of relations among the elements (i.e., variables) of this previously known model be used to, by means of analytical methods of study, describe or predict the behavior of those relations. This analytical approach matches the procedure classically set by the scientific method; i.e., a researcher works with a set of hypotheses of expected relationships among variables, those hypotheses are empirically tested and, finally, some conclusions are extracted (e.g., see [20]). Basically, these are the core questions in marketing modeling, which are usually followed to drive the information search process in marketing databases with the aim of supporting marketing decisions. But, would it be plausible to work without models? Doubtless, models are very necessary, especially in the academic field, where the arsenal of statistical and, in general, analytical tools are usually applied with a theory-driven approach. However, mostly from the practitioners’ perspective, their usage may limit the added-value extracted from the data when applied to certain kind of decision problems in marketing. In particular, in non- or ill-structured problems, analysis based on the a priori information offered by a model, which may disregard important relationships due to the weak structure of the problem, may not be as effective as a decision maker would expect. Hence, though the support of models is helpful to address the search of information in marketing databases, there are situations, both in the practitioners’ and scholars’ arena, where the use of other non model-based solutions, either on their own or as a complementary tool to a information search process based on models, might produce profitable results. For instance, from an academic perspective, when analyzing the validity of a theoretical model, an additional approach to the traditional would be to adjust all the possible causal structures (models), reasonable or unreasonable, and then, theoretically analyze those configurations with better fitness. However, as causal (theoretic) structures of reference increase in complexity, the number of possible configurations is considerably higher [3], so the development of the said approach would be more difficult to accomplish. In this case, powerful analytical methods are necessary to undertake this task with efficiency. Time ago, some authors [7] pointed out that a process of search and analysis for all the possible configurations of causal models, in a certain marketing database, could be automatized using some Computation Science-based method. However, these authors also recognized that years of evolution would be necessary to be able to work with suitable procedures. Nowadays, the so-called knowledge-based marketing support systems offer an excellent framework to develop methods with this purpose (see [3]). In this regard, several authors have proposed to apply supervised machine learning methods, which are informed with little prior knowledge about the problem, resulting in the extraction of  
   
  Automatic Discovery of Potential Causal Structures in Marketing Databases  
   
  183  
   
  key knowledge that was not detected by the classical analysis methodology (e.g., see [4, 17]). Continuing with these efforts, the application of unsupervised learning techniques which have no knowledge about the problem structure—letting the machine extract interesting, useful, and unknown knowledge about the market—appears as an appealing approach to these problems. The purpose of this chapter is to review the work done on the extraction of fuzzy association rules to discover new interesting knowledge from marketing databases. Specifically, we focus on a database that contains information about the consumer behavior. To achieve this, we apply Fuzzy-CSar, a learning classifier system (LCS) [11] that assumes no structure about the problem and evolves a diverse set of fuzzy association rules that describe interesting associations among problem variables. Fuzzy-CSar uses a fuzzy representation that enables the system to deal with the imprecision of the marketing data. The system is compared with an evolutionary multi-objective (EMO) approach that extracts fuzzy rules that define a particular prefixed output variable [17]. The results highlight that fuzzy association rules permit extracting key knowledge that was discovered neither by the classical approach nor by the EMO approach. The chapter is organized as follows. Section 2 describes the type of data usually found in marketing databases, with especial attention to the particularities of the kind of variables (i.e. constructs) forming complex causal models in marketing, explains the classical marketing analysis approach in more detail, and motivates the use of machine learning to tackle these problems. Section 3 provides the basic concepts of association rules, and Sect. 4 describes Fuzzy-CSar. Section 5 presents the experimental methodology, and Sect. 6 analyzes the results. Finally, Sect. 7 concludes and presents future work lines.  
   
  2 Previous Considerations on the Adaptation of Marketing Data A common practice in marketing modeling, and consumer behavior modeling in particular (field where the method proposed here is applied to), when working with complex models (i.e., with multiple relations of dependent and independent variables), is specifying such models to be empirically analyzed by structural equation modeling [17]; other types of causal models, so statistical estimation methods, are also used, though we focus our research on the most difficult case to solve of the complex models. These models are compounded by elements (constructs) which are inferred from imprecise data, i.e., the indicators or variables related to every element of the model. As follows, we explicate these types of problems, specifically focusing on the type of data that is made available for analysis. Then, we outline some significant aspects related to this structural modeling methodology when applied to a consumer behavior model and motivate the use of machine learning techniques to obtain new interesting information. Then, we explain how marketing data can be transformed into fuzzy semantics, and finally, we discuss different strategies to let machine learning techniques deal with the particularities of the marketing data.  
   
  184  
   
  A. Orriols-Puig, J. Casillas, and F.J. Mart´ınez-L´opez  
   
  2.1 Data Collection in Marketing Generally, when working with complex models for consumer behavior analysis, so with structural models, the elements of the model are divided into two categories: (1) unobserved/latent variables, also known as constructs, which are conceptually those whose measurement cannot be made directly with a single measure; and (2) observed variables or indicators, those related to every single measure (i.e., an item in a multi-item measurement scale) developed to be related to a construct. The underlying idea is that an observed variable is an imperfect measure of a construct, but a set of indicators related to a construct, considered altogether, may lead to a reliable measurement of said construct. Therefore, every construct in a model is usually related to a set of observed variables. This is currently the predominant measurement approach, known as the partial-interpretation philosophy [22]. Finally, there is an especial category of constructs known as second-order constructs. These are characterized by not having direct association with indicators in the measurement model, as an ordinary/first order construct has, but by being defined by a combination of first-order constructs related to them. Note that the overall structure of these data is unconventional. Thus, machine learning techniques need to be adapted to deal with them.  
   
  2.2 The Classical Approach to Deal with Marketing Data To extract key knowledge from a database (usually generated after a survey that administered questionnaires to a sample of the target population), marketing experts use the following approach, addressed as the classical approach of analysis in the rest of this chapter. First, the expert establishes a theoretical model, which denotes the relationships—and directions of these relationships—among the variables of the problem. Marketing experts base such models on diverse sources, where we highlight the theoretical basis, the a priori information of the market, and their own experience. Then, the models are used to establish a set of hypotheses that explain the relationship among constructs that have been connected in the structural model. Thereafter, a measurement model is set and statistical methods based on structural modeling methodologies are used to contrast these hypotheses. The conclusions extracted from the analysis may cause the marketing expert to refine the structural model and to apply again the same analysis procedure. While it has been shown that the classical approach may provide key knowledge of the consumer behavior analyzed, which may be used to support decision making [20], based on a conceptual/structural model to drive the search of information in the database, it may hamper the discovery of some key knowledge. To extract further interesting information, several authors have successfully applied machine learning techniques to these types of problems. For example, in [4], the authors used supervised learning techniques to model the consumer behavior in the Internet, resulting in new interesting knowledge not detected by the classical approach. This approach permitted extracting fuzzy rules that always predicted the same variable  
   
  Automatic Discovery of Potential Causal Structures in Marketing Databases  
   
  185  
   
  in the consequent. In the present chapter, we take some of the ideas presented in [4] as starting point and extend them to build a system that extracts fuzzy association rules from consumer behavior databases, but with a different approach. In particular, we do not consider any a priori information about the system and expect that the system provides us with any relevant association among variables. Before proceeding with the description of this approach, the next subsections briefly present key questions related with the transformation of the original data (i.e. marketing measurement scales) into fuzzy semantic and finally discuss how a general learning system can be adapted to deal with the particularities of the marketing data.  
   
  2.3 Transformation of Marketing Scales into Fuzzy Semantic The machine learning stage could not work without transforming the original marketing data into fuzzy terms. Some notes are deserved to be commented in this regard. The transformation process differs depending on the type of marketing scale, subjacent to every variable of the marketing database. In order to simplify the problem, let us focus on the following traditional classification of measurement scales [23, 24]: nominal, ordinal, interval, and ratio. The transformation of these basic measurement scales into fuzzy variables is useful for all those cases where a measurement scale entails, as minimum, certain order. This premise would involve all the types of measurement scales, with the exception of the nominal. Next, we offer some general reflections for each of the four scales.  
   
  Nominal scales. The characteristics of this scale (e.g., consumer’s gender, nationality, etc.) just allow identifying and classifying into some of the categories of the scale. But, there is no relation of order or grade between the categories. Consequently, it does not have any sense applying the fuzzy reasoning, as nature of the scale’s categories is purely deterministic. This fact involves that these scales are considered as singleton fuzzy sets, a particular case of fuzzy sets; i.e., if certain consumer belongs to certain category, he/she has a membership degree of one to the fuzzy set related to that category, and zero to the others.  
   
  Ordinal scales. When the transformation of these types of scales is tackled, there is a main inconvenient: as they are non-metric/qualitative scales, there is just information about the consumer’s membership or non-membership to one of the categories in which the marketing variable was structured. This fact limits the possibilities to determine the extreme and central values of the fuzzy sets defining the linguistic variable associated with that marketing variable. Likewise, regardless the previous question, the marketing expert should solve the following dilemma: should or should not the linguistic variable explicitly consider the structure of categories defining the original marketing variable? In general, it is widely accepted the convenience of a linguistic variable synthesizes the information provided by the original scale, in order to improve the interpretation of relations among the elements of the model, as well as to draw on the potentials of fuzzy inference. However, a subsequent aggregation of original categories is difficult to  
   
  186  
   
  A. Orriols-Puig, J. Casillas, and F.J. Mart´ınez-L´opez  
   
  Very high  
   
  High  
   
  Medium-High  
   
  Medium-Low  
   
  Very low Low  
   
  implement due to the lack of information provided by an ordinal scale; i.e., references are needed, for instance the extremes and central points of the fuzzy sets obtained after the aggregation. On the other hand, there are studies which require the original categories of certain ordinal scale to be maintained, with the aim of analyzing, for instance, an eventual research question. Though, it is also true that there are other situations where the aggregation of categories, classes of the variable, can be done without any inconvenient for the research purposes. Therefore, based on the above reflections, there are two possibilities when transforming an ordinal scale into a linguistic variable: (1) maintaining the categories of the original scale or (2) aggregating such categories, so to obtain a linguistic variable with fewer terms than categories had the original ordinal scale. Diverse questions, mainly the problems that would have to be faced with the latter, make the first option to be more convenient. In Fig. 1 we show an example for the variable “Weekly use of the Web” (ordinal scale extracted from the database used in [20]), structured as follows: (1) x ≤ 1 hour; (2) 1 < x ≤ 5 hours; (3) 5 < x ≤ 10 hours; (4) 10 < x ≤ 20 hours; (5) 20 < x ≤ 40 hours; and (6) x > 40 hours.  
   
  Membership Degree  
   
  1  
   
  0.5  
   
  0 0.5  
   
  3  
   
  7.5  
   
  Class 1 Class 2 Class 3  
   
  1 5  
   
  15  
   
  10  
   
  30  
   
  20 Class 4  
   
  50  
   
  40 Class 5  
   
  Hours/week 60  
   
  Class 6  
   
  Fig. 1 Example of transformation of a marketing ordinal scale into a linguistic variable (classes of the original scale are maintained)  
   
  Interval scales. These scales are metric/quantitative, so they allow more possibilities when being transformed into linguistic variables. Notwithstanding, now we are going to focus our reflections on the particular case of the rating scales, as they are the scales habitually used to measure the items related to constructs. Two main questions should be tackled: the number of linguistic terms to use and the type of membership function more convenient to represent the behavior of the fuzzy sets. With respect to the former, though the particularities of each research has to be taken into account, considering the number of points commonly used by these types of scales (i.e. between five and eleven), it is convenient to work with a number  
   
  Automatic Discovery of Potential Causal Structures in Marketing Databases  
   
  187  
   
  of fuzzy set between three and five. Likewise, as these scales generally measure the consumer’s opinion intensity on variables of interest for the certain research, we propose using, in general, the following labels or terms: low, medium/indifferent, and high when working with three fuzzy sets; and very low, low, medium/indifferent, high, and very high when working with five fuzzy sets. With respect to the second question, the membership function type, it is more convenient the transformation of scales using a triangular function. In particular, triangular functions must be necessarily used for the case of the extreme fuzzy sets defining a fuzzy variable related to certain rating scale. The main argument to support this is based on the characteristics of these scales. For instance, let us consider a seven-point semantic differential scale (1: Bad 7: Good), used to measure the consumer’s attitude toward a brand. We know that when consumer has a totally negative attitude, his/her valuation will be 1. However, if his/her valuation were 2, that would mean a low attitude, though not the lowest level linked to a valuation of 1. Therefore, the fuzzy set low should show a membership degree of 1 when the marketing scale value is 1, decreasing with a linear tendency to zero for the rest of numeric values associated with said set. This reasoning would be equally valid for the case of the fuzzy set high, though it would be a fuzzy set with a membership function linearly increasing till the highest value of 7 in the marketing scale. Finally, as it is logic, the superior limit of the fuzzy set low, as well as the inferior limit of the fuzzy set high, would match with that value of the marketing scale in which the fuzzy set medium takes a membership degree of 1. Therefore, it is also necessary to define the domain of such central fuzzy set of the variable. The procedure to define this set differs depending on whether we are dealing with forced or non-forced scales. For the case of non-forced scales, the solution is intuitive and straight. As the central point of the scale represents an intermediate or indifferent position, said point would be the central point of the fuzzy set, with membership degree of 1. However, the solution for the case of forced-scales would imply another solution, as there is no central point. This fact makes necessary the use of a trapezoidal functions to define the behavior of the central fuzzy set of the variable, in such a way that the central points would be always formed by an even number of points in the scale, i.e., the central points. Figure 2 illustrates a graphic representation of two fuzzy variables with three linguistic terms each, associated with two semantic differential (non-forced and forced) scales.  
   
  Ratio scales. These present less restrictions and inconvenient to be transformed into fuzzy variables than any of the other types already described. As these scales are truly continuous, with zero as the lowest value, the numbers of linguistic terms, the determination of the domains for the established set of fuzzy sets, and the membership functions to use are completely flexible. The only inconvenient for the marketing expert is how to fix the maximum value for the scales in order to define the domain of the last fuzzy set of the variable.  
   
  188  
   
  A. Orriols-Puig, J. Casillas, and F.J. Mart´ınez-L´opez  
   
  Fig. 2 Examples of membership functions for non-forced (seven-point) and forced (tenpoints) rating scales  
   
  2.4 Application of Machine Learning to the Marketing Data In general, two strategies could be used to let learners deal with the marketing data: (1) preprocessing the input data to render them tractable with a general learner or (2) adapting the learning technique to the particularities of the data. The former approach implies transforming the data into a simpler format. An intuitive approach would be to reduce the different items of a specific first-order construct to a single value (e.g., by averaging the values); a similar approach should be used to get an average value for second-order constructs. Another approach would be to expand any variable measured by multiple items to multiple variables measured by a single item and do not consider the existence of second-order constructs; then, the data set could be reduced by means of instance selection. Nevertheless, the underlying problem of data preprocessing is that relevant information may be lost in the transformation process. For this purpose, Casillas and Mart´ınez-L´opez [4] proposed a modification of the inference process of fuzzy rule-based systems to deal with this especial type of data, which was addressed as multi-item fuzzification. The idea of this approach is to use fuzzy operators to (1) aggregate by fuzzy unions (T-conorms) the information provided by the multiple items that define a single variable and (2) intersect (with T-norms) the partial information provided by the first-order variables that describe second-order variables. This mechanism, included in Fuzzy-CSar, is detailed in Sect. 4.2.  
   
  3 Mining Association Rules Association rule mining (ARM) [1] consists in extracting interesting patterns, associations, correlations, or causal structures among the variables in sets of usually unlabeled data. There has been and increasing interest in ARM in the recent years due to the existence of real-world applications in industry that generate large volumes of unlabeled data that have to be processed in order to extract novel and useful information for the company, which in turn may help guide the decision process of the business. This section briefly introduces ARM by first reviewing the initial approaches applied to data described by boolean variables and by then going to more recent approaches that can deal with numeric variables.  
   
  Automatic Discovery of Potential Causal Structures in Marketing Databases  
   
  189  
   
  3.1 Association Rules: The Beginning Initial research on ARM was mainly motivated by the analysis of market basket data, which enabled companies to get a better understanding of the purchasing behavior of their customers. Therefore, association rules were first applied to problems featured by binary or boolean variables. The problem of ARM can be described as follows. Let T = {t1 ,t2 , ...,tn } be a set of transactions, where each transaction consists of a set of items I = {i1 , i2 , . . . , ik }. Let an itemset X be a collection of items I = {i1 , i2 , ..., im }. A frequent itemset is an itemset whose support (supp(X)) is greater than a threshold specified by the user (this threshold is typically addressed as minsupp in the literature). The support of the rules is computed as supp(X) =  
   
  |X(T )| . |T |  
   
  (1)  
   
  That is, the support is the number of transactions in the database which have the itemset X divided by the total number of transactions in the database. Then, an association rule R is an implication of the form X → Y , where both X and Y are itemsets and X ∩ Y = 0. / As previously mentioned, ARM aims at extracting interesting association rules. Although many different measures have been developed to measure the interest of association rules so far [15], there are two basic indicators of the quality of the rules: support (supp) and confidence (con f ). The support of a rule is defined as the ratio of the support of the union of antecedent and consequent to the number of transactions in the database, i.e., supp(R) =  
   
  supp(X ∪Y ) . |T |  
   
  (2)  
   
  The confidence is computed as the ratio of the support of the union of antecedent and consequent to the support of the antecedent, i.e., con f (R) =  
   
  supp(X ∪Y ) . supp(X)  
   
  (3)  
   
  Therefore, support indicates the frequency of occurring patterns, and confidence evaluates the strength of the implication denoted in the association rule. Many algorithms have been proposed to extract association rules since the first proposal in [1]. Agrawal et al. [2] presented the Apriori algorithm, one of the most influential algorithms that set the basis for further research in association rule mining. Apriori uses two different phases to extract all the possible association rules with minimum support and confidence: (1) identification of all frequent itemsets and (2) generation of association rules from these large itemsets. The first phase is based on an iterative process that builds k-length itemsets by combining all the (k-1)-length itemsets whose support is greater than or equal to the minimum support fixed by the used. The support of each new itemset is computed by scanning the database. The second phase takes each frequent itemset and generates rules that  
   
  190  
   
  A. Orriols-Puig, J. Casillas, and F.J. Mart´ınez-L´opez  
   
  contain some of the items in the antecedent of the rule and the remaining ones in the consequent of the rule. The confidence of each rule is computed by scanning the database for each rule, and only those with a minimum confidence are returned. As this process is time consuming, especially in large databases, new approaches that try to reduce the number of scans of the database have been proposed (e.g., see [9]).  
   
  3.2 Association Rule Mining with Continuous Variables The first approaches to ARM only focused on analyzing whether an item was present in a transaction or not, describing the problem with boolean variables. Nonetheless, real-world problems are typically featured by continuous attributes, and these attributes can contain many distinct values. While the support of particular values for these attributes tends to be low, the support of interval of values is much higher. This created the need for building algorithms that could deal with intervals of values, yielding two approaches to the problem: quantitative association rules and fuzzy association rules. Several authors proposed algorithms to deal with interval-based rules, which are typically addressed as quantitative association rules. In these algorithms, the aim was shifted to extracting rules in which variables are defined by intervals, such as “if experience ∈ [5-10] years then income ∈ [30 000 - 40 000]$.” One of the first methods that falls under this category can be found in [21], which, previously to extracting frequent itemsets, uses an equi-depth partitioning to define a set of intervals for each continuous attribute. The method creates a new variable for each interval, transforming therefore the problem into a binary problem. Then, an Apriori-like algorithm is applied to extract association rules from the transformed data. Although this approach and similar ones could deal with continuous variables, it was detected that these types of algorithms could either ignore or over-emphasize the items that lay near the boundary of intervals if the attributes were not properly partitioned. This was addressed as the sharp boundary problem. Two main approaches have been followed to tackle this problem. On the one hand, some authors have applied different clustering mechanisms to extract the best possible intervals from the data [16, 19, 25]. On the other hand, there have been some proposals that adjust these intervals during learning [18]. In parallel to these approaches, some authors faced the problem of sharp boundaries by incorporating fuzzy logics into ARM. In this case, variables were defined by fuzzy sets, allowing the system to extract rules such as “if experience is large then income is high,” where large and high are two linguistic terms represented by fuzzy sets. As variables were represented by fuzzy sets, the problem of the sharp boundary was overcome. Among others, one of the most significant approaches under this category was proposed in [12, 13, 14], which redefined support and confidence for fuzzy association rules and designed an algorithm that combined ideas of Apriori with concepts of fuzzy sets to extract association rules described by variables represented by linguistic terms.  
   
  Automatic Discovery of Potential Causal Structures in Marketing Databases  
   
  191  
   
  Since the consumer behavior modeling problem addressed in this chapter is featured by continuous attributes, we employ a system that falls under this last category. Therefore, Fuzzy-CSar is a system that creates fuzzy association rules from the database and utilizes the typical definitions of support and confidence defined for fuzzy systems to evaluate the interestingness of rules. The details of the algorithm are further explained in the following section.  
   
  4 Description of Fuzzy-CSar Fuzzy-CSar is an ARM algorithm that follows a Michigan-style learning classifier system architecture [11] to extract fuzzy association rules from databases. Differently from most of the state-of-the-art algorithms in fuzzy ARM, Fuzzy-CSar (1) uses a fixed-size population to search for the most promising associations among variables, and so, does not necessarily create all the association rules with minimum support and confidence, (2) extracts association rules from streams of examples instead of from static databases, and, as a consequence, (3) does not scan repetitively the data base but incrementally learns from the stream of examples. The system uses an apportionment of credit technique to incrementally adjust the parameters of association rules and a genetic algorithm [8, 10] to discover new promising rules online. In addition, the system is provided with the multi-item fuzzification in order to deal with the particularities of the marketing data. In what follows, the system is described in some detail by first presenting the knowledge representation and the multi-item fuzzification and then explaining the learning organization.  
   
  4.1 Knowledge Representation Fuzzy-CSar evolves a population [P] of classifiers, where each classifier individually denotes an association among problem variables. Therefore, the solution to the problem is the whole population. Note thus that the population size fixes an upper bound on the number of interesting associations that can be found; that is, at maximum, the system will be able to discover as many interesting relationships as number of classifiers in the population. Each classifier consists of a fuzzy association rule and a set of parameters. The fuzzy association rule is represented as if xi is Ai and · · · and x j is Aj then xc is Ac , in which the antecedent contains a set of a input variables xi , . . . , x j (0 < a < , where  is the number of variables of the problem) and the consequent consists of a single variable xc which is not present in the antecedent. Thus, we allow rules to have an arbitrary number of variables in the antecedent, but we require that rules have always one variable in the consequent. Each variable is represented by a disjunction of linguistic terms or labels Ai = { Ai1 ∨ . . . ∨ Aini }. However, the number of linguistic terms per variable is limited in  
   
  192  
   
  A. Orriols-Puig, J. Casillas, and F.J. Mart´ınez-L´opez  
   
  order to avoid the creation of largely general rules that may provide poor information about the problem. That is, if no restriction were required, the system would tend to generate rules whose variables in the antecedent and consequent had all the possible linguistic terms, since they would cause the rule to match any possible input, and so, its support and confidence would be very high. To prevent the system from creating these rules, we allow the configuration of the maximum number of linguistic terms permitted per input variable (maxLabIn) and output variable (maxLabOut). In addition to the rule itself, each classifier has also six main parameters: (1) the support supp, an indicator of the occurring frequency of the rule; (2) the confidence con f , which denotes the strength of the implication; (3) the fitness F, which is computed as a power of the confidence, so reflecting the quality of the rule; (4) the experience exp, which counts the number of times that the antecedent of the rule has matched an input instance; (5) the numerosity num, which reckons the number of copies of the classifier in the population; and (6) the average size of the association sets as in which the classifier has participated. The function of the different parameters, as well as the process followed to create and evolve these rules, is further explained with the process organization of Fuzzy-CSar in Section 4.3. But before that, next section introduces the multi-item fuzzification included in the system to deal with the marketing data.  
   
  4.2 Multi-item Fuzzification In [17], the authors proposed the concept of multi-item fuzzification in order to deal with problems featured by unobserved variables described by multiple items and second-order constructs partially defined by first-order constructs. This procedure, which was incorporated into Fuzzy-CSar to deal with this kind of marketing data, considers both (1) how to compute the matching degree of a set of items with a variable and (2) how to calculate the matching of several first-order variables with a second-order variable. The first idea of the method is that each individual item provides partial information about the corresponding unobserved variable or first-order variable. Therefore, the authors proposed to compute the matching degree as the aggregation (T-conorm) of the information given by each item. Thence, the matching degree of a variable i with the vector of items xi = (xi1 , xi2 , . . . , xipi ) is  
   
  μAi (xi ) = maxhpii=1 μAi (xihi ).  
   
  (4)  
   
  In our experiments, we considered the maximum as the union operator. On the other hand, second-order variables are those defined by the intersection of the information provided by the corresponding first-order variables. For this reason, multi-item fuzzification calculates the matching degree of second-order variables as the T-norm of the matching degrees of each corresponding first-order variable. In our implementation, we used the minimum as T-norm.  
   
  Automatic Discovery of Potential Causal Structures in Marketing Databases  
   
  193  
   
  4.3 Process Organization After explaining the classifier representation and the mechanism to compute the matching degree in the marketing data, now we are in position to review the learning organization of Fuzzy-CSar. Fuzzy-CSar incrementally tunes the parameters of the classifiers as new examples are received and periodically applies the GA to niches of classifiers in order to create new rules that denote promising associations. The process is explained as follows. At each learning iteration, Fuzzy-CSar receives an input example (e1 , e2 , . . ., e ) and takes the following actions. First, the system creates the match set [M] with all the classifiers in the population that match the input example with a degree larger than 0. If [M] contains less that θmna classifiers, the covering operator is triggered to create as many new matching classifiers as required to have θmna classifiers in [M]. Then, classifiers in [M] are organized in association set candidates. Each association set candidate is given a probability to be selected that is proportional to the average confidence of the classifiers that belong to this association set. The selected association set [A] goes through a subsumption process which aims at diminishing the number of rules that express similar associations among variables. Then, the parameters of all the classifiers in [M] are updated. At the end of the iteration, a GA is applied to [A] if the average time since its last application is greater than θGA . This process is repeatedly applied, therefore, updating the parameters of existing classifiers and creating new promising rules online. To fully comprehend the system process, five elements need further explanation: (1) the covering operator, (2) the procedure to create association set candidates, (3) the association set subsumption mechanism, (4) the parameter update procedure, and (5) the rule discovery by means of a GA. The subsequent subsections explicate each one of these elements in more detail. 4.3.1  
   
  Covering Operator  
   
  The covering operator is the responsible for providing the population with the initial classifiers which will be latter evaluated as new examples are received and evolved by the genetic algorithm. In order to create coherent rules, the operator generates rules that denote associations that are actually strong in the sampled example e from which covering has been activated. For this purpose, the covering operator uses the following procedure. Given the sampled input example e, covering creates a new classifier that contains some variables of the problem in the antecedent and the consequent of the rule and that matches e with maximum degree. That is, for each variable, the operator randomly decides (with probability 1 − P#) whether the variable has to be in the antecedent of the rule, with the constraints (1) that, at least, a variable has to be selected and (2) that, at most,  − 1 variables can be included in the antecedent. Then, one of the remaining variables is selected to be in the rule consequent. Each of these variables is initialized with the linguistic label that maximizes the matching degree with the corresponding input value. In addition, we introduce generalization by permitting the addition of any other linguistic term with  
   
  194  
   
  A. Orriols-Puig, J. Casillas, and F.J. Mart´ınez-L´opez  
   
  probability P# , with the restrictions that each variable in the antecedent and consequent respectively contains maxLabIn and maxLabOut linguistic terms at maximum. 4.3.2  
   
  Creation of Association Set Candidates  
   
  The system organizes the population rules in different niches that individually contain rules with similar associations with the aim of establishing a collaboration among niches and a competition of rules inside each niche. That is, the collaboration/competition scheme is produced by the niche-based genetic algorithm and the population-based deletion scheme, which are explained in subsection 4.3.5. The following explains the heuristic process employed to create these niches. The system relies on the idea that rules that have the same variable with the same or similar linguistic terms in the consequent must belong to the same niche, since probably they would denote similar associations among variables. Therefore, in order to create the different association set candidates, Fuzzy-CSar first sorts the rules of [M] ascendantly depending on the variable of the consequent. Given two rules r1 and r2 that have the same variable in the consequent, the system considers that r1 is smaller than r2 if 1 < 2 or (1 = 2 and u1 > u2 ), where 1 , u1 , 2 , and u2 are the position of first and the last linguistic term of the output variable of each rule respectively. Once [M] has been sorted, the association set candidates are built as follows. At the beginning, an association set candidate [A] is created and the first classifier in [M] is added to this association set candidate. Then, the following classifier k is added if it has the same variable in the consequent, and k is smaller than the minimum ui among all the classifiers in the current [A]. This process is repeated until finding the first classifier that does not satisfy this condition. In this case, a new association set candidate is created, and the same process is applied to add new classifiers to this association set. At the end, this process creates a non-fixed number of niches and distributes the rules through these niches. 4.3.3  
   
  Association Set Subsumption  
   
  The system explained thus far may generate similar rules that would coexist in the population. In order to avoid the maintenance of similar rules in the population, which would consume resources that may be useful to discover rules that denote different associations, Fuzzy-CSar incorporates a subsumption mechanism that searches for similar rules and only maintains the most general one. The subsumption procedure works as follows. Each rule in [A] is checked for subsumption with each other rule in [A]. A rule ri is a candidate subsumer of r j if it satisfies the following four conditions: (1) ri has higher confidence and it is experienced enough (that is, con f i > con f0 and expi > θexp , where con f0 and θexp are user-set parameters); (2) all the variables in the antecedent of ri are also present in the antecedent of r j (r j can have more variables in the antecedent than ri ); (3) both rules have the same variable in the consequent; and (4) ri is more general than  
   
  Automatic Discovery of Potential Causal Structures in Marketing Databases  
   
  195  
   
  r j . A rule ri is more general than r j if all the input and the output variables of ri are also defined in r j , and ri has, at least, the same linguistic terms as r j for each one of its variables. 4.3.4  
   
  Parameter Update  
   
  At the end of each learning iteration, the parameters of all the classifiers that belong to the match set are adjusted according to the information provided by the sampled instance. First, the experience of the classifier is incremented. Second, the support of each rule is updated as suppt+1 =  
   
  suppt · (time − 1) + μA(x(e) ) · μB(y(e) ) , time  
   
  (5)  
   
  where time is the life time of the classifier, that is, the number of iterations that the classifier has been in the population, and μA(x(e) ) and μB(y(e) ) are the matching degrees of the antecedent and the consequent with x(e) and y(e) respectively. Note that this formula computes the support considering all the examples sampled to the system since the rule was created. Thereafter, the confidence is computed as con ft+1 = sum impt+1 /sum matt+1 , where sum impt+1 = sum impt + μA(x(e) ) · max{1 − μA(x(e) ), μB(y(e) )}, and  
   
  (6)  
   
  sum matt+1 = sum matt + μA(x ).  
   
  (7)  
   
  (e)  
   
  Initially, sum impt+1 = sum matt+1 = 0. That is, sum imp maintains the addition of the matching degree of each example sampled so far with the implication of the rule, and sum mat keeps the addition of the matching degrees of the antecedent of the rule with each example sampled since the rule creation. Next, the fitness of each rule in [M] is computed as a function of the confidence, i.e., F = con f ν , where ν permits controlling the pressure toward highly fit classifiers. Finally, the association set size estimate of all rules that belong to [A] is updated. Each rule maintains the average size of all the association sets in which it has participated. 4.3.5  
   
  Discovery Component  
   
  Fuzzy-CSar uses a niche-based GA to create new promising classifiers. The GA is triggered on [A] when the average time from its last application upon the classifiers in [A] exceeds the threshold θGA . The time elapsed between GA applications enables the system to adjust the parameters of the new classifiers before the next application of the GA. Once triggered, the GA selects two parents p1 and p2 from [A], where each classifier has a probability of being selected proportional to its fitness. The two parents are crossed with probability Pχ , generating two offspring ch1 and ch2 . Fuzzy-CSar  
   
  196  
   
  A. Orriols-Puig, J. Casillas, and F.J. Mart´ınez-L´opez  
   
  uses a uniform crossover operator that contemplates the restriction that any offspring has to have, at least, a variable in the rule’s antecedent. If crossover is not applied, the children are exact copies of the parents. The resulting offspring may go through three different types of mutation: (1) mutation of antecedent variables (with probability PI/R ), which randomly chooses whether a new antecedent variable has to be added to or one of the antecedent variables has to be removed from the rule; (2) mutation of the linguistic terms of the variable (with probability Pμ ), which selects one of the existing variables of the rule and mutates its value; and (3) mutation of the consequent variable (with probability PC ), which selects one of the variables of the antecedent and exchanges it with the variable of the consequent. Thereafter, the new offspring are introduced into the population. If the population is full, excess classifiers are deleted from [P] with probability directly proportional to their association set size estimate and inversely proportional its fitness. To sum up, Fuzzy-CSar is a population-based ARM that evaluates rules online as new examples are sampled to the system and that periodically applies a GA to create new promising rules. Note that the system does not require the user to determine the minimum support and minimum confidence of the rules. Instead of this, the system evolves a set of rules with maximum support and confidence, and the number of rules is limited by the population size. The rule activation based on matching prioritizes rules that match a larger number of training examples with respect to those that match a lower number of training examples. In addition, the confidence-based selection of [A] and the inside-niche competition established by the GA pressure toward the creation of rules with progressively higher confidence.  
   
  5 Problem Description and Methodology After motivating the use of ARM for modeling the user behavior and presenting a technique that is able to extract fuzzy association rules without specifying the minimum support and the minimum confidence of the rules, we now move on to the experimentation. This section first explains the details of the marketing problem analyzed in this chapter and presents previous structural models extracted from this problem by using classical marketing analysis techniques. Then, we detail the experimental methodology.  
   
  5.1 Problem Description The present work addresses the problem of modeling web consumers to extract key knowledge that enable marketing experts to create a compelling online environment for these users with the final goal of using this information to create a competitive advantage on the Internet. To tackle this problem, several authors have proposed causal models of the consumer experience on the Internet [5]. These models have mainly focused on the description of the state of flow during consumer navigation of the Web, that is, the cognitive state experienced during online navigation. Reaching  
   
  Automatic Discovery of Potential Causal Structures in Marketing Databases  
   
  Skill  
   
  StartWeb  
   
  197  
   
  Control  
   
  SKILL/ CONTROL FLOW  
   
  Interaction Speed CHALL./ AROUSAL  
   
  Chall.  
   
  Exploratory  
   
  Behavior  
   
  Arousal  
   
  WebImportance  
   
  TELEPRES./ TIME DISTORTION  
   
  Focus  
   
  Telepresence  
   
  TimeDistortion  
   
  Fig. 3 Theoretical model of the user experience on the Internet  
   
  the state of flow comprises a “complete involvement of the user with his activity.” Therefore, marketing experts are especially concerned with the identification of the factors that lead the user to the state of maximum flow. In this chapter, we consider one of the most influential structural models as starting point, which was analytically developed by Novak et al. [20]. The structural model, illustrated in Fig. 3, consisted of nine first-order constructs: skill, control, interactive speed, importance, challenge, arousal, telepresence, time distortion, and exploratory behavior. In addition to these first-order variables, the model also contained three second-order constructs: skill/control, chall/arousal, and telepresence/time distortion, which are partially defined by first-order constructs. The model also considered the variable startWeb, which indicated for how long the user had been using the web. The data were obtained from a large sample Web-based consumer survey conducted in [20]. These surveys posed a set of questions or items that partially described each one of the nine first-order constructs. The user was asked to grade these questions with Likert nine-point rating scales that ranged from “strongly disagree” to “strongly agree.” The startWeb variable was measured with a six-ordinal rating scale that comprised different options of usage time. The analysis conducted in [20] identified that the following four constructs were the most important ones to determine the state of flow: (1) skill and control, (2) challenge and arousal, (3) telepresence and time distortion, and (4) interactive speed. The other constructs were found to be meaningless to define flow. However, it is  
   
  198  
   
  A. Orriols-Puig, J. Casillas, and F.J. Mart´ınez-L´opez  
   
  worth noting that the conclusions extracted by the classical approach depended on the initial causal model. Therefore, some key relationships may had not been discovered. In the following, we use the model-free system Fuzzy-CSar in order to identify associations among the variables of the problem with the aim of detecting any further relationship not captured by the causal model of Novak et al. The approach is not proposed as an alternative to the classical marketing analysis tools, but as a complement to these techniques. The next subsection details the experiments conducted.  
   
  5.2 Experimental Methodology The aim of the experiments was to study whether the application of machine learning techniques could result in the identification of not only the same but new important associations between variables with respect to those detected in the causal model of Novak et al. In addition, we also analyzed the benefits of association rule mining over other machine learning techniques for data prediction, i.e., techniques in which the target variable is predetermined. For this purpose, we included an EMO approach expressly designed for creating rules with a fixed variable in the consequent for the marketing problem [4]. The approach used a genetic cooperative competitive scheme to evolve a Pareto set of rules with maximum support and confidence. For more details on the algorithm, the reader is referred to [4]. Herein, we explain the three experiments conducted to analyze the added value provided by ARM.  
   
  Experiment 1. The first experiment aimed at studying whether Fuzzy-CSar could capture the same knowledge represented in the structural model of Novak et al. This model focused on predicting the variable flow. The analytical study detected that there were four relevant variables to determine the state of flow: (1) skill and control, (2) challenge and arousal, (3) telepresence and time distortion, and (4) interactive speed. The remaining variables were considered irrelevant. Thus, we applied Fuzzy-CSar to the data extracted from the questionnaires, but only considering these four variables and fixing the variable flow as the output variable of the association rules. As the output variable was fixed, we could also apply the aforementioned EMO approach in order to analyze whether Fuzzy-CSar could obtain similar rules to those created by a system specialized to optimize the support and confidence of the rules.  
   
  Experiment 2. Since the first experiment did not consider all the input variables, some important knowledge could be overlooked by no considering important interactions between these missing variables. To study this aspect, we ran Fuzzy-CSar on the data described by all the input variables and compared the results with those obtained from the first experiment. Again, the variable flow was fixed as the target variable of the association rules. In addition, we also run the EMO approach on  
   
  Automatic Discovery of Potential Causal Structures in Marketing Databases  
   
  199  
   
  these data, extending the comparison of Fuzzy-CSar and the EMO approach started in the previous experiment.  
   
  Experiment 3. The two first experiments permitted the analysis of whether the machine learning techniques could extract similar knowledge to that provided by the structural model of Novak et al. and whether new important knowledge was discovered. Nevertheless, the two first experiments did not test the added value provided by extracting association rules online. Therefore, in the third experiment, we ran Fuzzy-CSar on the input data without forcing any variable in the consequent. Thus, the system was expected to evolve rules with different variables in the consequent, and so, to evolve the rules with maximum support and confidence. The aim of the experiment was to examine whether new interesting relationships, not captured by the structural model, could be discovered by Fuzzy-CSar. Note that, since the output variable was not fixed in this experiment, the EMO approach could not be ran. In all the experiments, Fuzzy-CSar was configured with a population size of 6 400 rules and the following parameters: P# = 0.5, Pχ = 0.8, {PI/B , Pμ , PC } = 0.1, θGA = 50, θexp = 1 000, con f0 = 0.95, ν = 1, δ = 0.1. All the variables, except for startWeb, used Ruspini’s strong fuzzy partitions with three linguistic terms. startWeb used six membership functions, each centered in one of the values that the variable could take. In all cases, maxLabIn = 2 and maxLabOut = 1. For the EMO approach, we employed the same configuration used by the authors [4]. That is, the system was configured to evolve a population of 100 individuals during 100 iterations, with crossover and mutation probabilities of 0.7 and 0.1 respectively. The variables used the same semantics as Fuzzy-CSar ones. Before proceeding to the analysis of the results, it is worth highlighting the underlying differences between Fuzzy-CSar and the EMO approach. As aforementioned, the first important difference is in the knowledge representation: FuzzyCSar creates fuzzy association rules where the output variable is not fixed and the EMO approach creates rules with a prefixed target variable. Therefore, FuzzyCSar, and ARM algorithms in general, could create rules that denote important associations among variables in a single run; on the other hand, the EMO approach has to fix the output variable at each run. The second important difference is the process organization and the goal of the method. Fuzzy-CSar aims at learning a set of association rules distributed through different niches according to the genotype of the rule; in addition, the learning is done online. The fitness-based insideniche selection and population-based deletion pressure toward obtaining rules with maximum confidence and support. Conversely, the EMO approach explicitly optimizes the rules with respect to their support and confidence, that is, it optimizes the Pareto front. Therefore, the EMO approach is more likely to evolve rules that maximize support and confidence, since it is specifically designed with this objective, while Fuzzy-CSar is more focused on evolving a diverse set of rules that have maximum confidence. Notwithstanding, we are interested in analyzing how our approach performs in comparison with a system which is specialized in optimizing the Pareto front.  
   
  200  
   
  A. Orriols-Puig, J. Casillas, and F.J. Mart´ınez-L´opez  
   
  6 Analysis of the Results This section examines the results of the three experiments from two perspectives. First, we study the results on the objective space by analyzing the rules of the Pareto set, that is, those rules for which there do not exist any other rule in the population that has both a higher support and a higher confidence than the given rule. With this analysis we consider the ability of Fuzzy-CSar to create different rules with high support and confidence that are distributed through the solution space and compare it with the EMO approach, but we do not study the utility of the rules from the point of view of the marketing expert. This analysis is conducted afterwards, where several rules that provide new interesting knowledge about the problem, not captured by the structural model, are illustrated.  
   
  6.1 Analysis of the Rules in the Objective Space Figure 4 shows the shape of the Pareto fronts evolved by Fuzzy-CSar and by the EMO approach in the first experiment, which considers only the four most relevant variables in the antecedent and forces flow to be in the consequent. The first row of Table 1 complements this information by reporting the average number of rules in the population of Fuzzy-CSar and the average number of rules in the Pareto set of Fuzzy-CSar and the EMO approach. In addition, to indicate the distribution of solutions in the Pareto set, the sum of the distance crowding between consecutive solutions in the Pareto front are also provided in parentheses.  
   
  EMO (Flow as consequent) Fuzzy-CSar (Flow as consequent)  
   
  1  
   
  Confidence  
   
  0.9  
   
  0.8  
   
  0.7  
   
  0.6 0  
   
  0.1  
   
  0.2  
   
  0.3  
   
  0.4  
   
  0.5  
   
  0.6  
   
  0.7  
   
  Support  
   
  Fig. 4 Average Pareto front obtained by Fuzzy-CSar and the EMO approach considering the 4 variables of the marketing data identified as the most important variables by the structural model and fixing the variable flow as target of the rules  
   
  Automatic Discovery of Potential Causal Structures in Marketing Databases  
   
  201  
   
  EMO (Flow as consequent) Fuzzy-CSar (Flow as consequent) Fuzzy-CSar without fixed consequent Subset 'Flow' in Fuzzy-CSar without fixed consequent  
   
  Confidence  
   
  1  
   
  0.9  
   
  0.8  
   
  0.7  
   
  0.6 0  
   
  0.1  
   
  0.2  
   
  0.3  
   
  0.4  
   
  0.5  
   
  0.6  
   
  0.7  
   
  Support  
   
  Fig. 5 Average Pareto front obtained by Fuzzy-CSar and the EMO approach considering the 9 variables of the marketing data  
   
  Table 1 Average number of rules evolved by Fuzzy-CSar, average number of these rules that are in the Pareto set, and average number of rules in the Pareto sets obtained by the EMO approach. For the Pareto sets, the average crowding distance of the population is provided in parentheses.  
   
  Experiment 1 Experiment 2 Experiment 3  
   
  FCSar All FCSar Pareto EMO Pareto 479.2 76.3 (1.53 · 10−2 ) 82.6 (1.49 · 10−2 ) 1259.7 105.9 (1.07 · 10−2 ) 84.4 (1.49 · 10−2 ) 1752.5 468.3 (2.58 · 10−3 ) —  
   
  These results show the similarity of the results obtained with both methods. That is, both techniques discovered a similar number of solutions in the Pareto set, and these solutions were distributed uniformly through the objective space. The similarity of the results highlight the robustness of Fuzzy-CSar, which was able to generate Pareto fronts that were very close to those created by a competent technique which specifically optimized the Pareto front. In addition, the strongest rules obtained denote the same relationships provided by the structural model. Nonetheless, we put aside further discussion about the utility of the rules until the next section. Figure 5 together with the second row of Table 1 show the same information but for the second experiment, which considers any of the nine variables in the antecedent and forces flow to be in the consequent. These Pareto fronts are very similar to those obtained in the first experiment. Actually, the EMO approach can discover practically the same rules than those obtained with the first experiment. On the other hand, Fuzzy-CSar obtains a significantly larger number of rules in the Pareto set; as a consequence, the average crowding distance decreases, since  
   
  202  
   
  A. Orriols-Puig, J. Casillas, and F.J. Mart´ınez-L´opez  
   
  solutions in the Pareto set are closer to each other. Nonetheless, the shape of the Pareto sets is almost the same in both cases, which supports the hypothesis that the four variables identified as the most important ones by the models in [20] are indeed the most relevant ones to describe the flow construct. Finally, Fig. 5 together with the third row of Table 1 supply the results of FuzzyCSar for the third experiment, where any variable can be in the antecedent or in the consequent of the association rules. These results show the potential of our approach. In a single run, Fuzzy-CSar was able to evolve a set of rules with large confidence and support, resulting in a Pareto front that was clearly better than those of Fuzzy-CSar and the EMO approach when the flow construct was fixed in the rule consequent. To complement the results of the third experiment, the same figure plots the objective values of the rules of the Pareto front evolved by Fuzzy-CSar that predict the flow construct. Notice that, for large confidence, this Pareto front is close to the one evolved by the EMO approach and Fuzzy-CSar in previous experiments where flow was fixed in the consequent. On the other hand, the solutions in the Pareto front degrade as the confidence of the rules decreases. This behavior can be easily explained as follows. As the number of possible variables in the consequent increases, Fuzzy-CSar needs to maintain a larger number of rules that belong to different niches. In this case, the implicit niching system together with the niche-based GA and population-wise deletion operator of Fuzzy-CSar make pressure toward maintaining a diverse set of solutions. On the other hand, the GA also pressures toward evolving rules with maximum confidence. Therefore, the system maintains a diverse set of solutions with maximum confidence, which goes in detriment of solutions with smaller confidence, but larger support. Similar results could be obtained by the EMO approach by running nine different experiments, each one fixing a different variable in the consequent. This would yield nine Pareto sets, each one with rules that predict one of the nine variables. Then, these Pareto sets could be joined and processed to get the final Pareto set. Nevertheless, it is worth noting that Fuzzy-CSar provides a natural support for the extraction of interesting association rules with different variables in the consequent, evolving a set of distributed solutions in parallel, and maintaining only those with maximum confidence.  
   
  6.2 Analysis of the Utility of the Rules from the Marketing Expert Perspective After showing the competitiveness of Fuzzy-CSar with respect to the EMO approach, this section analyzes the importance of the knowledge provided by some of the rules discovered by Fuzzy-CSar. For this purpose, we show two particular examples of rules that provide key knowledge considered neither by the structural model [20] nor by the EMO approach [4].  
   
  Automatic Discovery of Potential Causal Structures in Marketing Databases  
   
  203  
   
  Firstly, we selected a rule that predicted exploratory behavior, that is, R1 : IF importance is Medium and skill/control is {Small or Medium} and focusedAttention is {Small or Medium} and flow is {Small or Medium} THEN exploratoryBehavior is Medium [Supp.: 0.22; Conf.: 0.87].  
   
  The model proposed by Novak et al. considered that exploratory behavior was related to only telepresence/time distortion, that is, the degree of telepresence and the effect of losing the notion of time while browsing the web. However, rule R1 does not consider this relationship. Instead, it denotes that exploratory behavior is determined by importance, perceived skill/control, focused attention in the browsing process, and the state of flow. Thence, this rule indicates that intermediate values of the variables of the antecedent explicate, with confidence 0.87, states of moderate exploratory behaviors in the Web. The knowledge denoted by the rule may cause the marketing expert to consider other associations among variables that were not considered in the initial model. In particular, this relationship was initially considered in the causal model built in [20], but it was further discarded after a process of model refinement. Nonetheless, R1 is alerting of the importance and strength of this association. Secondly, we chose the following rule, which described focused attention: R2 : IF importance is {Small or Medium} and chall/arousal is {Small or Medium} and telepres/time distortion is Medium and exploratoryBehavior is {Medium or Large} THEN focused attention is Medium [Supp.: 0.21; Conf.: 0.84]  
   
  In Novak’s et al. model, focused attention was related to neither importance nor chall/arousal. However, rule R2 indicates that these two variables together with telepres/time distortion and exploratory behavior may determine moderate degrees of attention in the Web browsing. This information is especially interesting since it contradicts the causal model. This contradiction is reasonable if we consider the following. Differently from [20], Fuzzy-CSar does not assume any type of problem structure. Thence, Fuzzy-CSar can discover new relations among variables that may appear to be very useful and interesting. This may be the case of R2 , which implies that increasing the experience in the navigation process may influence, together with the other variables, the capacity of users to focus their attention on the Web. In summary, R2 proposes a new scenario that was not considered before, and marketing experts may analyze whether this new knowledge needs to be included in further revisions of the causal model. In addition to these particular examples, it is worth emphasizing that, in general, unsupervised learning techniques such as Fuzzy-CSar may be relevant tools in problems for which a priori information is unknown. In these cases, association rules may discover interesting, useful, and hidden associations among the variables forming a database that help marketing experts better understand a certain problem they are approaching to.  
   
  204  
   
  A. Orriols-Puig, J. Casillas, and F.J. Mart´ınez-L´opez  
   
  7 Conclusions and Further Work This chapter started by discussing the importance of the use of machine learning techniques to give support to classical methodologies for marketing analysis. Among the different techniques in machine learning, we identified ARM as one of the most appealing approaches since it enables the automatic identification of associations or relationships among variables from a data set. That is, differently from the classical approach, which requires that marketing experts work with a theoretical model, ARM does not require any type of a priori information about the problem. In order to show the added value that ARM could provide to marketing experts, we reviewed the application of Fuzzy-CSar, a general-purpose ARM technique that evolves a set of association rules online and that uses adapted inference mechanisms to deal with the particularities of the marketing data. Then, we applied it to the problem of modeling the user navigational process in online (the Web) environments; in particular, we were based on the Novak et al. [20] data and flow model to develop the experimental stage. Additionally, the system was compared to a predictive EMO approach that needed to fix the target variable of the evolved rules. The empirical results highlighted the added value of applying machine learning techniques to the marketing problem and, more specifically, of extracting association rules. That is, Fuzzy-CSar was able not only to generate rules that expressed the same knowledge as that contained in the theoretical (structural) marketing model of reference, but also to capture additional relationships among variables not previously considered in the theoretical background. We have shown how some of such uncovered relationships are very interesting from the analyzed marketing problem perspective. To sum up, these results suggest the suitability of ARM for marketing databases analysis. In particular, it has demonstrated to be helpful in consumer behavior modeling, especially as a complementary analytical tool to the traditional methods applied there. Anyhow, marketing researchers and practitioners, especially the formers, must not forget that the outcomes of these new, less orthodox, analytical methods are desirable to be interpreted and assimilated without forgetting to connect with the subjacent theoretical frameworks of the marketing issues they face. Acknowledgments. The authors would like to thank Ministerio de Educaci´on y Ciencia for its support under projects TIN2008-06681-CO6-01 and TIN2008-06681-CO6-05, Generalitat de Catalunya for its support under grant 2005SGR-00302, and Junta de Andaluc´ıa for its support under project P07-TIC-3185.  
   
  References 1. Agrawal, R., Imielinski, T., Swami, A.: Mining association rules between sets of items in large databases. In: Proceedings of the ACM SIGMOD International Conference on Management of Data, Washington D.C., May 1993, pp. 207–216 (1993)  
   
  Automatic Discovery of Potential Causal Structures in Marketing Databases  
   
  205  
   
  2. Agrawal, R., Srikant, R.: Fast algorithms for mining association rules in large databases. In: Bocca, J.B., Jarke, M., Zaniolo, C. (eds.) Proceedings of the 20th International Conference on Very Large Data Bases, VLDB, Santiago, Chile, September 1994, pp. 487–499 (1994) 3. Bollen, K.A.: Structural equations with latent variables. Wiley-Interscience, Hoboken (1989) (A division of John Wiley & Sons, Inc.) 4. Casillas, J., Mart´ınez-L´opez, F.J.: Mining uncertain data with multiobjective genetic fuzzy systems to be applied in consumer behaviour modelling. Expert Systems With Applications 36(2), 1645–1659 (2009) 5. Csikszentmihalyi, M.: Finding flow: The psychology of engagement with everyday life (1997) 6. Drejer, A.: Back to basics an beyond: Strategic management – an area where practice and theory are poorly related. Management Decision, 42(3/4), 508–520 7. Glymour, C., Scheines, R., Spirtes, P., Kelly, K.: Discovering causal structure. Academic Press, Orlando (1987) 8. Goldberg, D.E.: Genetic algorithms in search, optimization & machine learning, 1st edn. Addison Wesley, Reading (1989) 9. Han, J., Pei, J., Yin, Y., Mao, R.: Mining frequent patterns without candidate generation: A frequent-pattern tree approach. Data Mining and Knowledge Discovery 8(1), 53–87 (2004) 10. Holland, J.H.: Adaptation in natural and artificial systems. The University of Michigan Press, Ann Arbor (1975) 11. Holland, J.H., Reitman, J.S.: Cognitive systems based on adaptive algorithms. In: Waterman, D.A., Hayes-Roth, F. (eds.) Pattern-directed inference systems, pp. 313–329. Academic Press, San Diego (1978) 12. Hong, T.P., Kuo, C.S., Chi, S.C.: A fuzzy data mining algorithm for quantitative values. In: Proceedings International Conference on Knowledge-Based Intelligent Information Engineering Systems, pp. 480–483 (1999) 13. Hong, T.P., Kuo, C.S., Chi, S.C.: Mining association rules from quantitative data. Intelligent Data Analysis 3, 363–376 (1999) 14. Hong, T.P., Kuo, C.S., Chi, S.C.: Trade-off between computation time and number of rules for fuzzy mining from quantitative data. International Journal of Uncertainty, Fuzziness, and Knowledge-Based Systems 9(5), 587–604 (2001) 15. Lenca, P., Meyer, P., Vaillant, B., Lallich, S.: On selecting interestingness measures for association rules: User oriented description and multiple criteria decision aid. European Journal of Operational Research 184, 610–626 (2008) 16. Lent, B., Swami, A.N., Widom, J.: Clustering association rules. In: Procedings of the IEEE International Conference on Data Engineering, pp. 220–231 (1997) 17. Mart´ınez-L´opez, F.J., Casillas, J.: Marketing intelligent systems for consumer behaviour modelling by a descriptive induction approach based on genetic fuzzy systems. Industrial Marketing Management (2009), doi:10.1016/j.indmarman.2008.02.003 18. Mata, J., Alvarez, J.L., Riquelme, J.C.: An evolutionary algorithm to discover numeric association rules. In: SAC 2002, pp. 590–594. ACM, New York (2002) 19. Miller, R.J., Yang, Y.: Association rules over interval data. In: SIGMOD 1997: Proceedings of the 1997 ACM SIGMOD international conference on Management of data, pp. 452–461. ACM, New York (1997) 20. Novak, T., Hoffman, D., Yung, Y.: Measuring the customer experience in online environments: A structural modelling approach. Marketing Science 19(1), 22–42 (2000)  
   
  206  
   
  A. Orriols-Puig, J. Casillas, and F.J. Mart´ınez-L´opez  
   
  21. Srikant, R., Agrawal, R.: Mining quantitative association rules in large relational tables. In: Jagadish, H.V., Mumick, I.S. (eds.) Proceedings of the 1996 ACM SIGMOD International Conference on Management of Data, Montreal, Quebec, Canada, pp. 1–12 (1996) 22. Steenkamp, J., Baumgartner, H.: On the use of structural equation models for marketing modelling. International Journal of Research in Marketing 17, 195–202 (2000) 23. Stevens, S.S.: On the theory of scales of measurement. Science, 677–680 (1946) 24. Stevens, S.S.: Measurement, psychophysics and utility. John Wiley, New York (1959) 25. Wang, K., Tay, S.H.W., Liu, B.: Interestingness-based interval merger for numeric association rules. In: Proceedings of the 4th International Conference on Knowledge Discovery and Data Mining, KDD, pp. 121–128. AAAI Press, Menlo Park (1998)  
   
  Fuzzy–Evolutionary Modeling of Customer Behavior for Business Intelligence C´elia da Costa Pereira and Andrea G.B. Tettamanzi Universit` a degli Studi di Milano Dipartimento di Tecnologie dell’Informazione via Bramante 65, I-26013 Crema, Italy e-mail: {celia.pereira,andrea.tettamanzi}@unimi.it  
   
  Abstract. This chapter describes the application of evolutionary algorithms to induce predictive models of customer behavior in a business environment. Predictive models are expressed as fuzzy rule bases, which have the interesting property of being easy to interpret for a human expert, while providing satisfactory accuracy. The details of an island-based distributed evolutionary algorithm for fuzzy model induction are presented and a case study is used to illustrate the eﬀectiveness of the approach. Keywords: Business Intelligence, Data Mining, Modeling, Strategic Marketing, Forecast, Evolutionary Algorithms.  
   
  1 Introduction Companies face everyday problems related to uncertainty in organizational planning activities: accurate and timely knowledge means improved business performance. In this framework, business intelligence applications represent instruments for improving the decision making process within the company, by achieving a deeper understanding of market dynamics and customers’ behaviour. Particularly, in the ﬁelds of business and ﬁnance, the executives can improve their insight of market scenarios by foreseeing customers’ behaviour. This information allows to maximize revenues and manage costs through an increase in the eﬀectiveness and eﬃciency of all the strategies and processes which involve the customers. Predictions about customers’ intentions to purchase a product, about their loyalty rating, the gross operating margins or revenue they will generate, are fundamental for two reasons. Firstly, they are instrumental to an eﬀective planning of production volumes and speciﬁc promotional activities. Secondly, the comparison of projections to actual results allows to spot meaningful indicators, useful for improving performance. J. Casillas & F.J. Mart´ınez-L´ opez (Eds.): Marketing Intelligence Systems, STUDFUZZ 258, pp. 207–225. c Springer-Verlag Berlin Heidelberg 2010 springerlink.com   
   
  208  
   
  C. da Costa Pereira and A.G.B. Tettamanzi  
   
  This chapter describes a general approach to business intelligence, which exploits an evolutionary algorithm to design and optimize fuzzy-rule-based predictive models of various types of customer behavior. The chapter is organized as follows: Section 2 discusses the scenarios where evolutionary predictive modeling may be employed, and Section 3 gives an outline of the approach. The next sections introduce the main ingredients of the approach: Section 4 provides an introduction to fuzzy rule-based systems and Section 5 to evolutionary algorithms. Section 6 gives a detailed description of the approach, and Section 7 illustrates its eﬀectiveness by means of a real-world case study. Section 8 concludes.  
   
  2 The Context Traditional methods of customer analysis, like segmentation and market research, provide static knowledge about customers, which may become unreliable in time. A competitive advantage can be gained by adopting a data-mining approach whereby predictive models of customer behaviour are learned from historical data. Such knowledge is more ﬁne-grained, in that it allows to reason about an individual customer, not a segment; furthermore, by re-running the learning algorithm as newer data become available, such an approach may be made to take a continuous picture of the current situation, thus providing dynamic knowledge about customers. The described approach uses evolutionary algorithms (EAs) for model learning, and expresses models as fuzzy rule bases. EAs are known to be well-suited to tracking optima in dynamic optimization problems [5]. Fuzzy rule bases have the desirable characteristic of being intelligible, as they are expressed in a language typically used by human experts to express their knowledge.  
   
  2.1 Application Scenarios The system has been applied to a wide range of situations to achieve diﬀerent goals, including: • credit scoring in the banking sector [20]; • estimating the lifetime value of customers in the insurance sector [23]; • debt collection, i.e., predicting the probability of success of each of several alternative collection strategies in order to minimize cost and maximize eﬀectiveness of collection; • predicting customer response to new products, as a help to target advertisement campaigns or promotional activities in general; • predicting customer response to pricing and other marketing actions; • modeling of ﬁnancial time series for automated single-position day trading [7, 8].  
   
  Fuzzy–Evolutionary Modeling of Customer Behavior  
   
  209  
   
  • predicting the revenue and/or gross operating margins for each individual customer and each product, as an aid to optimizing production and sales force planning [24]. A case study on the last scenario is presented in Section 7. Once the range of revenue (or gross operating margin) in which a customer will be located in the next quarter has been foreseen, the manager can evaluate the capability of the selling force: for example, if all the customers followed by a group of sellers will generate the minimum hypothetical revenue, the considered sellers are not so eﬀective. In this case, the manager can compare diﬀerent groups on the basis of their respective expected results, even if their speciﬁc targets and environments are heterogeneous. Moreover, the obtained projections enable the company to target strategic marketing actions aimed at proposing new products to the customers that really have a predisposition for a speciﬁc kind of products and at increasing customers loyalty. Comparing the expected and actual results, a manager can have a detailed picture of the business process in order to promptly manage critical variables.  
   
  2.2 Related Work The idea of using fuzzy logic for expressing customer models or classiﬁcations and exploiting such information for personalizing marketing actions targeted to individual (potential) customers has been explored for at least a decade, with the ﬁrst proposals of fuzzy market segmentation [25] dating back to almost twenty years ago. For instance, the fuzzy modeling of client preferences has been applied to selecting the targets of direct marketing actions. This has been shown to provide advantages over the traditional practice of using statistical tools for target selection [21]. Other researchers have applied fuzzy logic to marketing by inducing a fuzzy classiﬁcation of individual customers that can be exploited to plan marketing campaigns [13]. This idea ﬁnds its natural application in e-commerce [26, 27]. A similar approach has been proposed for personalized advertisement [29], to determine which ad to display on a Web site, on the basis of the viewer’s characteristics. Some researchers have taken the further step of combining fuzzy logic with other soft computing methods, like neural networks, to build decision support systems that assist the user in developing marketing strategies [14]. A natural combination with other soft computing methods consists of using evolutionary algorithms to induce fuzzy classiﬁcation rules. This is the approach we describe in this chapter and other researchers have pursued with slightly diﬀerent techniques, notably Herrera and colleagues [10].  
   
  210  
   
  C. da Costa Pereira and A.G.B. Tettamanzi  
   
  3 Data Mining In the area of business intelligence, data mining is a process aimed at discovering meaningful correlations, patterns, and trends between large amounts of data collected in a dataset. Once an objective of strategic marketing has been established, the system needs a wide dataset including as many data as possible not only to describe customers, but also to characterize their behaviour and tracing their actions. The model is determined by observing past behaviour of customers and extracting the relevant variables and correlations between data and rating (dependent variable) and it provides the company with projections based on the characteristics of each customer: a good knowledge of customers is the key for a successful marketing strategy. The described approach is based on the use of an EA which recognizes patterns within the dataset, by learning classiﬁers represented by sets of fuzzy rules. Using fuzzy rules makes it possible to get homogeneous predictions for diﬀerent clusters without imposing a traditional partition based on crisp thresholds, that often do not ﬁt the data, particularly in business applications. Fuzzy decision rules are useful in approximating non-linear functions because they have a good interpolative power and are intuitive and easily intelligible at the same time. Their characteristics allow the model to give an eﬀective representation of the reality and simultaneously avoid the “black-box” eﬀect of, e.g., neural networks. The output of the application is a set of rules written in plain consequential sentences. The intelligibility of the model and the high explanatory power of the obtained rules are useful for the ﬁrm, in fact the rules are easy to be interpreted and explained, so that an expert of the ﬁrm can clearly read and understand them. An easy understanding of a forecasting method is a fundamental characteristic, since otherwise the managers are reluctant to use forecasts [1]. Moreover, the proposed approach provides the managers with an information that is more transparent for the stakeholders and can easily be shared with them.  
   
  4 Fuzzy Rule-Based Systems This section provides a gentle introduction to fuzzy rule-based systems, with particular emphasis on the ﬂavor employed by the described approach. Fuzzy logic was initiated by Lotﬁ Zadeh with his seminal work on fuzzy sets [31]. Fuzzy set theory provides a mathematical framework for representing and treating vagueness, imprecision, lack of information, and partial truth. Very often, we lack complete information in solving real world problems. This can be due to several causes. First of all, human expertise is of a qualitative type, hard to translate into exact numbers and formulas. Our understanding of any process is largely based on imprecise, “approximate” reasoning.  
   
  Fuzzy–Evolutionary Modeling of Customer Behavior  
   
  211  
   
  However, imprecision does not prevent us from performing successfully very hard tasks, such as driving cars, improvising on a chord progression, or trading ﬁnancial instruments. Furthermore, the main vehicle of human expertise is natural language, which is in its own right ambiguous and vague, while at the same time being the most powerful communication tool ever invented.  
   
  4.1 Fuzzy Sets Fuzzy sets are a generalization of classical sets obtained by replacing the characteristic function of a set A, χA which takes up values in {0, 1} (χA (x) = 1 iﬀ x ∈ A, χA (x) = 0 otherwise) with a membership function μA , which can take up any value in [0, 1]. The value μA (x) is the membership degree of element x in A, i.e., the degree to which x belongs in A. A fuzzy set is completely deﬁned by its membership function. Therefore, it is useful to deﬁne a few terms describing various features of this function, summarized in Figure 1. Given a fuzzy set A, its core is the (conventional) set of all elements x such that μA (x) = 1; its support is the set of all x such that μA (x) > 0. A fuzzy set is normal if its core is nonempty. The set of all elements x of A such that μA (x) ≥ α, for a given α ∈ (0, 1], is called the α-cut of A, denoted Aα .  
   
  1 μA  
   
  α  
   
  0 core α-cut support  
   
  Fig. 1 Core, support, and α-cuts of a set A of the real line, having membership function μA  
   
  If a fuzzy set is completely deﬁned by its membership function, the question arises of how the shape of this function is determined. From an engineering point of view, the deﬁnition of the ranges, quantities, and entities relevant to a system is a crucial design step. In fuzzy systems all entities that come into play are deﬁned in terms of fuzzy sets, that is, of their membership functions. The determination of membership functions is then correctly viewed as a problem of design. As such, it can be left to the sensibility of a human expert or more objective techniques can be employed. Alternatively, optimal membership function assignment, of course relative to a number of design goals  
   
  212  
   
  C. da Costa Pereira and A.G.B. Tettamanzi  
   
  that have to be clearly stated, such as robustness, system performance, etc., can be estimated by means of a machine learning or optimization method. In particular, evolutionary algorithms have been employed with success to this aim. This is the approach we follow in this chapter.  
   
  4.2 Operations on Fuzzy Sets The usual set-theoretic operations of union, intersection, and complement can be deﬁned as a generalization of their counterparts on classical sets by introducing two families of operators, called triangular norms and triangular co-norms. In practice, it is usual to employ the min norm for intersection and the max co-norm for union. Given two fuzzy sets A and B, and an element x, μA∪B (x) = max{μA (x), μB (x)};  
   
  (1)  
   
  μA∩B (x) = min{μA (x), μB (x)}; μA¯ (x) = 1 − μA (x).  
   
  (2) (3)  
   
  4.3 Fuzzy Propositions and Predicates In classical logic, a given proposition can fall in either of two sets: the set of all true propositions and the set of all false propositions, which is the complement of the former. In fuzzy logic, the set of true proposition and its complement, the set of false propositions, are fuzzy. The degree to which a given proposition P belongs to the set of true propositions is its degree of truth, T (P ). The logical connectives of negation, disjunction, and conjunction can be deﬁned for fuzzy logic based on its set-theoretic foundation, as follows: Negation T (¬P ) = 1 − T (P ); Disjunction T (P ∨ Q) = max{T (P ), T (Q)}; Conjunction T (P ∧ Q) = min{T (P ), T (Q)}.  
   
  (4) (5) (6)  
   
  Much in the same way, a one-to-one mapping can be established as well between fuzzy sets and fuzzy predicates. In classical logic, a predicate of an element of the universe of discourse deﬁnes the set of elements for which that predicate is true and its complement, the set of elements for which that predicate is not true. Once again, in fuzzy logic, these sets are fuzzy and the degree of truth of a predicate of an element is given by the degree to which that element is in the set associated with that predicate.  
   
  Fuzzy–Evolutionary Modeling of Customer Behavior  
   
  213  
   
  4.4 Fuzzy Rulebases A prominent role in the application of fuzzy logic to real-world problems is played by fuzzy rule-based systems. Fuzzy rule-based systems are systems of fuzzy rules that embody expert knowledge about a problem, and can be used to solve it by performing fuzzy inferences. The ingredients of a fuzzy rule-based systems are linguistic variables, fuzzy rules, and defuzziﬁcation methods. 4.4.1  
   
  Linguistic Variables  
   
  A linguistic variable [32] is deﬁned on a numerical interval and has linguistic values, whose semantics is deﬁned by their membership function. For example, a linguistic variable temperature might be deﬁned over the interval [−20◦ C, 50◦ C]; it could have linguistic values like cold, warm, and hot, whose meanings would be deﬁned by appropriate membership functions. 4.4.2  
   
  Fuzzy Rules  
   
  A fuzzy rule is a syntactic structure of the form IF antecedent THEN consequent,  
   
  (7)  
   
  where each antecedent and consequent are formulas in fuzzy logic. Fuzzy rules provide an alternative, compact, and powerful way of expressing functional dependencies between various elements of a system in a modular and, most importantly, intuitive fashion. As such, they have found broad application in practice, for example in the ﬁeld of control and diagnostic systems [19]. 4.4.3  
   
  Inference  
   
  The semantics of a fuzzy rule-based system is governed by the calculus of fuzzy rules [33]. In summary, all rules in a fuzzy rule base take part simultaneously in the inference process, each to an extent proportionate to the truth value associated with its antecedent. The result of an inference is represented by a fuzzy set for each of the dependent variables. The degree of membership for a value of a dependent variable in the associated fuzzy set gives a measure of its compatibility with the observed values of the independent variables. Given a system with n independent variables x1 , . . . , xn and m dependent variables y1 , . . . , ym , let R be a base of r fuzzy rules IF P1 (x1 , . . . , xn ) THEN Q1 (y1 , . . . , ym ), .. .. . . IF Pr (x1 , . . . , xn ) THEN Qr (y1 , . . . , ym ),  
   
  (8)  
   
  214  
   
  C. da Costa Pereira and A.G.B. Tettamanzi  
   
  where P1 , . . . , Pr and Q1 , . . . Qr represent fuzzy predicates respectively on independent and dependent variables, and let τP denote the truth value of predicate P . Then the membership function describing the fuzzy set of values taken up by dependent variables y1 , . . . , ym of system R is given by τR (y1 , . . . , ym ; x1 , . . . , xn ) = sup1≤i≤r min{τQi (y1 , . . . , ym ), τPi (x1 , . . . , xn )}. 4.4.4  
   
  (9)  
   
  The Mamdani Model  
   
  The type of fuzzy rule-based system just described, making use of the min and max as the triangular norm and co-norm, is called the Mamdani model. A Mamdani system [15] has rules of the form IF x1 is A1 AND . . . AND xn is An THEN y is B,  
   
  (10)  
   
  where the Ai s and B are linguistic values (i.e., fuzzy sets) and each clause of the form “x is A” has the meaning that the value of variable x is in fuzzy set A. 4.4.5  
   
  Defuzziﬁcation Methods  
   
  There may be situations in which the output of a fuzzy inference needs to be a crisp number y ∗ instead of a fuzzy set R. Defuzziﬁcation is the conversion of a fuzzy quantity into a precise quantity. At least seven methods in the literature are popular for defuzzifying fuzzy outputs [12], which are appropriate for diﬀerent application contexts. The centroid method is the most prominent and physically appealing of all the defuzziﬁcation methods. It results in a crisp value  yμR (y)dy ∗ y =  , (11) μR (y)dy where the integration can be replaced by summation in discrete cases. The next section introduces evolutionary algorithms, a biologically inspired technique which we use to learn and optimize fuzzy rule bases.  
   
  5 Evolutionary Algorithms EAs are a broad class of stochastic optimization algorithms, inspired by biology and in particular by those biological processes that allow populations of organisms to adapt to their surrounding environment: genetic inheritance and survival of the ﬁttest. An EA maintains a population of candidate solutions for the problem at hand, and makes it evolve by iteratively applying a (usually quite small) set of stochastic operators, known as mutation, recombination, and selection.  
   
  Fuzzy–Evolutionary Modeling of Customer Behavior  
   
  215  
   
  Mutation randomly perturbs a candidate solution; recombination decomposes two distinct solutions and then randomly mixes their parts to form novel solutions; and selection replicates the most successful solutions found in a population at a rate proportional to their relative quality. The initial population may be either a random sample of the solution space or may be seeded with solutions found by simple local search procedures, if these are available. The resulting process tends to ﬁnd, given enough time, globally optimal solutions to the problem much in the same way as in nature populations of organisms tend to adapt to their surrounding environment. Books of reference and synthesis in the ﬁeld of EAs are [9, 3, 2]; recent advances are surveyed in [30]. Evolutionary algorithms have enjoyed an increasing popularity as reliable stochastic optimization, search and rule-discovering methods in the last few years. The original formulation by Holland and others in the seventies was a sequential one. That approach made it easier to reason about mathematical properties of the algorithms and was justiﬁed at the time by the lack of adequate software and hardware. However, it is clear that EAs oﬀer many natural opportunities for parallel implementation [17]. There are several possible parallel EA models, the most popular being the ﬁne-grained or grid [16], the coarse-grain or island [28], and the master-slave or ﬁtness parallelization [6] models. In the grid model, large populations of individuals are spatially distributed on a low-dimensional grid and individuals interact locally within a small neighborhood. In the master-slave model, a sequential EA is executed on what is called the master computer. The master is connected to several slave computers to which it sends individuals when they require evaluation. The slaves evaluate the individuals (ﬁtness evaluation makes up most of the computing time of an EA) and send the result back to the master. In the island model, the population is divided into smaller subpopulations which evolve independently and simultaneously according to a sequential EA. Periodic migrations of some selected individuals between islands allow to inject new diversity into converging subpopulations. Microprocessor-based multicomputers and workstation clusters are well suited for the implementation of this kind of parallel EA. Being coarse-grained, the island model is less demanding in terms of communication speed and bandwidth, which makes it a good candidate for a cluster implementation.  
   
  6 An Island-Based Evolutionary Algorithm for Fuzzy Rule-Base Optimization This section describes an island-based distributed evolutionary algorithm for the optimization of fuzzy rule bases. In particular, the discussion will focus on the specialized mutation and crossover operation, as well as on the ﬁtness function and ways to prevent overﬁtting.  
   
  216  
   
  C. da Costa Pereira and A.G.B. Tettamanzi  
   
  The described approach incorporates an EA for the design and optimization of fuzzy rule-based systems that was originally developed to automatically learn fuzzy controllers [22, 18], then was adapted for data mining, [4] and is at the basis of MOLE, a general-purpose distributed engine for modeling and data mining based on EAs and fuzzy logic [24]. Each classiﬁer is described through a set of fuzzy rules. A rule is made by one or more antecedent clauses (“IF . . . ”) and a consequent clause (“THEN . . . ”). Clauses are represented by a pair of indices referring respectively to a variable and to one of its fuzzy sub-domains, i.e., a membership function. A MOLE classiﬁer is a rule base, whose rules comprise up to four antecedent and one consequent clause each. Input and output variables are partitioned into up to 16 distinct linguistic values each, described by as many membership functions. Membership functions for input variables are trapezoidal, while membership functions for the output variable are triangular. Classiﬁers are encoded in three main blocks: 1. a set of trapezoidal membership functions for each input variable; a trapezoid is represented by four ﬁxed-point numbers, each ﬁtting into a byte; 2. a set of symmetric triangular membership functions, represented as an area-center pair, for the output variable; 3. a set of rules, where a rule is represented as a list of up to four antecedent clauses (the IF part) and one consequent clause (the THEN part); a clause is represented by a pair of indices, referring respectively to a variable and to one of its membership functions. An island-based distributed EA is used to evolve classiﬁers. The sequential algorithm executed on every island is a standard generational replacement, elitist EA. Crossover and mutation are never applied to the best individual in the population.  
   
  6.1 Genetic Operators The recombination operator is designed to preserve the syntactic legality of classiﬁers. A new classiﬁer is obtained by combining the pieces of two parent classiﬁers. Each rule of the oﬀspring classiﬁer can be inherited from one of the parent programs with probability 1/2. When inherited, a rule takes with it to the oﬀspring classiﬁer all the referred domains with their membership functions. Other domains can be inherited from the parents, even if they are not used in the rule set of the child classiﬁer, to increase the size of the oﬀspring so that their size is roughly the average of its parents’ sizes. Like recombination, mutation produces only legal models, by applying small changes to the various syntactic parts of a fuzzy rulebase. Migration is responsible for the diﬀusion of genetic material between populations residing on diﬀerent islands. At each generation, with a small probability (the migration rate), a copy of the best individual of an island is  
   
  Fuzzy–Evolutionary Modeling of Customer Behavior  
   
  217  
   
  sent to all connected islands and as many of the worst individuals as the number of connected islands are replaced with an equal number of immigrants. A detailed description of the evolutionary algorithm and of its genetic operators can be found in [18].  
   
  6.2 Fitness Modeling can be thought of as an optimization problem, where we wish to ﬁnd the model M ∗ which maximizes some criterion which measure its accuracy in predicting yi = xim for all records i = 1, . . . , N in the training dataset. The most natural criteria for measuring model accuracy are: • the mean absolute error, err(M ) =  
   
  N 1  |yi − M (xi1 , . . . , xi,m−1 )|; N i=1  
   
  (12)  
   
  • the mean square error, N 1  (yi − M (xi1 , . . . , xi,m−1 ))2 . mse(M ) = N i=1  
   
  (13)  
   
  One big problem with using such criteria is that the dataset must be balanced, i.e., an equal number of representative for each possible value of the predictive attribute yi must be present, otherwise the underrepresented classes will end up being modeled with lesser accuracy. In other words, the optimal model would be very good at predicting representatives of highly represented classes, and quite poor at predicting individuals from other classes. To solve this problem, MOLE divides the range [ymin , ymax ] of the predictive variable into 256 bins. The bth bin, Xb , contains all the indices i such that yi − ymin = b. (14) 1 + 255 ymax − ymin For each bin b = 1, . . . , 256, it computes the mean absolute error for that bin errb (M ) =  
   
  1  |yi − M (xi1 , . . . , xi,m−1 )|,  
   
  Xb  
   
  (15)  
   
  i∈Xb  
   
  then the total absolute error as an  integral of the histogram of the absolute errors for all the bins, tae(M ) = b:Xb  =0 errb (M ). Now, the mean absolute error for every bin in the above summation counts just the same no matter how many records in the dataset belong to that bin. In other words, the level of representation of each bin (which, roughly speaking, corresponds to a class) has been factored out by the calculation of errb (M ). What we want  
   
  218  
   
  C. da Costa Pereira and A.G.B. Tettamanzi  
   
  from a model is that it is accurate in predicting all classes, independently of their cardinality. 1 , in such a way The ﬁtness used by the EA is given by f (M ) = tae(M)+1 that a greater ﬁtness corresponds to a more accurate model.  
   
  6.3 Selection and Overﬁtting Control In order to avoid overﬁtting, the following mechanism is applied: the dataset is split into two subsets, namely the training set and the test set. The training set is used to compute the ﬁtness considered by selection, whereas the test set is used to compute a test ﬁtness. Now, for each island, the best model so far, M ∗ , is stored aside; at every generation, the best individual with respect to ﬁtness is obtained, Mbest = argmaxi f (Mi ). The test ﬁtness of Mbest , ftest (Mbest ), is computed and, together with f (Mbest ), it is used to determine an optimistic and a pessimistic estimate of the real quality of a model: for all model M , fopt (M ) = max{f (M ), ftest (M )}, and fpess (M ) = min{f (M ), ftest(M )}. Now, Mbest replaces M ∗ if and only if fpess (Mbest ) > fpess (M ∗ ), or, in case fpess (Mbest ) = fpess (M ∗ ), if fopt (Mbest ) > fopt (M ∗ ). Elitist linear ranking selection, with an adjustable selection pressure, is responsible for improvements from one generation to the next. Overall, the algorithm is elitist, in the sense that the best individual in the population is always passed on unchanged to the next generation, without undergoing crossover or mutation.  
   
  7 A Case Study on Customer Revenue Modeling The system has been applied to the predictive modeling of the revenue generated by customers of an Italian medium-sized manufacturing corporation operating in the ﬁeld of timber and its end products.  
   
  7.1 The Company Ever since 1927, the corporation we have targeted has been working proﬁciently and professionally in the industry of timber and its by-products both on the domestic and on the international market, becoming renowned for innovation, guarantee of quality, and careful customer care. Understanding the market has been their winning strategy to be dynamic and always proactive towards their clients, by oﬀering customized solutions in every sector and often anticipating their needs. Indeed, every market sector has  
   
  Fuzzy–Evolutionary Modeling of Customer Behavior  
   
  219  
   
  distinctive features and speciﬁc trends: the corporation’s products serve multiple purposes and are suited to diﬀerent uses. Their studies and continuous research on high technology and specialist materials, together with the expertise and the energy of their sales network have aﬀorded the ideal answer to many major ﬁrms which have chosen the corporation as their strategic partner. The company is a leader in manufacturing special plywood, assembled with pioneering and technological materials—all certiﬁed and guaranteed by the ISO 9001:2000 Company Quality System—and specializes in selling timber and semi-ﬁnished products coming from all over the world. The company manufactures two broad types of products, namely technical plywood and dimensional lumber. The company mainly sells its products to construction companies, shipyards (especially those building yachts, where high-quality timbers are demanded and appreciated), and retailers. For the purposes of this case study, the products marketed by the company may be divided into four homogeneous classes, by combining two orthogonal classiﬁcation criteria: • type of product: plywood vs. dimensional lumber; • distribution channel: direct sale to construction and shipbuilding companies vs. sale to distributors. The four homogeneous product classes are thus the following: 1. production lumber—dimensional lumber sold directly to manufacturing companies; 2. production plywood—plywood sold directly to manufacturing companies; 3. commercial lumber—dimensional lumber sold to distributors for the retail market; 4. commercial plywood—plywood sold to distributors for the retail market. The rationale for this four-way classiﬁcation is that each of the four resulting classes has its own speciﬁc customer requirements and channel of distribution, which is reﬂected by the internal organization of the marketing department and of the sales network of the corporation.  
   
  7.2 Aim of the Study In the Fall of 2005, a pilot test was performed to demonstrate the feasibility of an innovative approach to customers modeling in revenue segments. In order to reduce time and costs, the traditional statistical analysis of data was skipped. Classifying customers into revenue segments can be useful not only to plan the activities and forecast the overall returns for the next period, but also to identify characteristics which describe diﬀerent patterns of customers, to recognize strategic and occasional customers, to target commercial/marketing activities and so on.  
   
  220  
   
  C. da Costa Pereira and A.G.B. Tettamanzi  
   
  7.3 The Data The described approach was used to develop a predictive model to foresee the customers’ revenue segments for a quarter using historical data of the year before the analysis. Customers were classiﬁed into three quarterly revenue segments: 1st segment: revenue >50,000 euro/quarter; 2nd segment: revenue between 10,000 and 50,000 euro/quarter; 3rd segment: revenue 50,000 EUR/Q) 0.71 0.5 2 (10,000–50,000 EUR/Q) 0.54 0.5 3 ( 1, is called a weighted exponent, which is judiciously chosen. Observe matrix U being defined by an c × n membership matrix, where the element μi j ∈ [0, 1] is defined by a membership function for the jth data point x j belonging to group i, as:  
   
  μi j = {  
   
  1 i f ||x j − ci ||2 ≤ ||x j − ck ||2 , for each k = i, 0 , otherwise  
   
  (9)  
   
  The necessary conditions for Eq. (8) to reach a minimum can be found by forming a new objective function barJ as follows: ¯ c1 , c2 , . . . , cc , J(U,  
   
  λ1 , . . . , λn ) = = J(U, c1 , c2 , . . . , cc ) + ∑nj=1 λ j (∑ci=1 μi j − 1) = ∑ci=1 ∑nj=1 μimj di2j + ∑nj=1 λ j (∑ci=1 μi j − 1),  
   
  (10)  
   
  where λ j , j = 1 to n, are the Lagrange multipliers for the n constraints in Eq. (7). By ¯ c1 , c2 , . . . , cc , λ1 , . . . , λn ) with respect to all its input arguments, differentiating J(U, the necessary conditions for Eq. (8) to reach its minimum are ci = and  
   
  μi j =  
   
  ∑nj=1 μimj xi j , ∑nj=1 μimj 1  
   
  2 di j ∑ck=1 ( dk j ) m−1  
   
  (11)  
   
  ,  
   
  (12)  
   
  In the following, the clustering algorithm is stated. Algorithm 1 (Fuzzy C Means). Given the data set Z, choose the number of cluster 1 < c < N, the weighting exponent m > 1, a constant for a cost function minimum ε > 0, and a constant T h which is a termination tolerance threshold. Initialize the partition matrix U randomly, such that μi j (0) ∈ [0, 1]  
   
  Direct Marketing Based on a Distributed Intelligent System  
   
  261  
   
  Step 1. Compute clusters prototypes: Calculate c fuzzy cluster centers ci , i = 1 . . . , c using Eq. (11). Step 2. Compute the cost function According to Eq. (8). Stop if either it below the tolerance ε or its improvement over previous iteration is below the threshold T h. Step 3. Compute a new U using Eq. 12. Go to Step 2. End of the FC-Means algorithm  
   
  3.3 The Hybrid Approach to Process Customers Evaluations We describe the usage of Fuzzy C-Means and the AHP to process customers’ judgements. The combined usage of Fuzzy C-Means and the AHP to Direct Marketing is explained next. Let ξ = {e1 , e2 . · · · , en } be the set of clients’ evaluations, each of whom must compare the relative importance of a finite set of criteria C = {c1 , c2 , · · · , c p } on which products are judged. This results in:    1 ak12 . . . ak1p       k   a21 1 . . . ak2p  k PCM =  ,  . . . .  .. .. .. ..     ak ak . . . 1  p1 p2  
   
  (13)  
   
  where k = 1, 2, · · · , n is the kth client’s evaluation; akij is the relative importance of criterion i over criterion j as determined by client’s evaluation ek . When all the n Pairwise Comparison Matrices are formed, it remains to construct matrix PCMG that reflects the pattern associated with the totality of the clients’ evaluations. The algorithm to construct the Global Pairwise Comparison Matrix is as follows. 1. 2. 3. 4. 5. 6.  
   
  The cardinality p of set C is computed. A matrix PCMG of dimensions p × p is formed. The diagonal of matrix PCMG is filled with 1. Vector αi j is formed with entries akij , k = 1, 2, · · · , n. aG i j = FuzzyCMeans(αi j ) Method countIncidences is called for determining the quantity of evaluators inside each cluster. Cluster with the highest number of incidences is selected. Cluster centroid is obtained. 7. Repeat steps 4, 5, 6 ∀(i, j) = 1, 2, · · · , p; ∀(PCM k ), k = 1, 2, · · · , n  
   
  262  
   
  Thus,  
   
  V. López Morales and O. López Ortega  
   
   G   1 aG 12 . . . a1p      G   a21 1 . . . aG  G 2p  . PCM =   . . . .  .. .. .. ..     aG aG . . . 1  p1 p2  
   
  (14)  
   
  Equation (14) is the resultant Global Pairwise Comparison Matrix that serves as basis to execute the AHP once all the customers’s evaluations are processed. Next, we illustrate how a Multi-Agent System fully automates the processing of data. Specifically, the entire set of activities, from data gathering, processing and final calculation is performed by the distributed and intelligent multi-agent system.  
   
  4 The Multi-Agent System This section depicts the Multi-Agent System structure and dynamics. The MAS is fixed by the following agents, whose structure is shown in Fig. (1) by means of a deployment diagram: • • • •  
   
  A coordinator agent, A set of evaluator agents, A clustering agent, An AHP agent.  
   
  These agents altogether posses the following dynamics: 1. The coordinator agent acquires problem variables i.e. the set of criteria associated to the survey, the set of products to be evaluated, as well as the number of clients that will perform the evaluation. It leaves a message on the Evaluation Blackboard to inform each of the evaluator agents about the newly input survey. 2. Each of the evaluator agents assists in the evaluation of criteria and products, as each client provides his/her judgement. 3. The coordinator agent corroborates that every evaluator agent has completed its task, by querying the Evaluation Blackboard. 4. The coordinator agent informs clustering agent upon verification of data completeness. Then, clustering agent processes clients’s evaluation with Fuzzy CMeans to build clusters. 5. The clustering agent informs the coordinator agent upon completion of its assignment. 6. The coordinator agent request the AHP agent to compute the final prioritization of products by running the AHP. Then, it informs when the task is achieved. The previous list of activities is formally represented in the communication diagram of Figure (2). Those two types of diagrams are part of UML 2.0 [19].  
   
  Direct Marketing Based on a Distributed Intelligent System  
   
  263  
   
  :Decision Server 1  
   
  Decision Server  
   
  1 Data Base MySQL  
   
  *  
   
  Evaluator Node  
   
  Clustering Agent  
   
  Coordinator Agent  
   
  AHP Agent  
   
  Fig. 1 Structure of the Multi-Agent System  
   
  evaluator agent 3: consult problem parameters 4: insert PCMk  
   
  1  
   
  1  
   
  Evaluation Blackboard  
   
  DataBase Server 1: insert problem parameters 2: post message 5: validate evaluations  
   
  9: insert PCMg  
   
  11: request eigenvector 13: informs vector alpha  
   
  6: request clustering 8: informs vector alpha  
   
  clustering agent  
   
  AHP agent  
   
  coordinator agent 7: accept 10: informs task completion  
   
  12: accept 14: informs task completion  
   
  13: insert eigenvector  
   
  Fig. 2 Communication diagram of the Multi-Agent System  
   
  264  
   
  V. López Morales and O. López Ortega  
   
  The implementation of the MAS is done on the JADE platform [20]. JADE is a useful tool because it allows to promote intelligent behavior to a given agent, while providing a rich set of communication capabilities based on FIPA-ACL. Both, the Fuzzy C-Means clustering technique and the AHP were developed on Java so clustering agent and AHP agent, respectively, call the coding transparently. The MAS is a distributed architecture because each agent resides in its own processing unit, and communication is done over the TCP/IP protocol, for which JADE possesses powerful libraries. As it can be seen in Fig. (1), the coordinator agent communicates directly with both, the clustering agent and the AHP agent. It is not so regarding the evaluator agents. In this latter case, communication is done by posting messages on the Evaluation Blackboard. This Evaluation Blackboard is represented in Fig. (2) as an artifact. Such blackboard is actually a database implemented on MySQL, whose structure is shown in Fig. (3).  
   
  PCM-K problemID evaluatorID a.criteriaID b.criteriaID row column value PCM-G problemID a.criteriaID b.criteriaID row column value  
   
  Ev-Prob problemID evaluatorID sent status  
   
  Evaluator evaluatorID password  
   
  MatrixAlternativesK problemID evaluatorID criteriaID a.alternativeID b.alternativeID row column value  
   
  Alternative problemID alternativeID a_description Problem problemID numCriteria numAlternatives numEvaluators objective status  
   
  MatrixAlternativesG problemID criteriaID a.alternativeID b.alternativeID row column value  
   
  Criteria problemID criteriaID c_description  
   
  VectorW-G problemID alternativeID final_value  
   
  Fig. 3 IDEF1x model of the Evaluation Blackboard  
   
  Being the MAS a distributed architecture, it results a very useful tool for modern organizations because management and point sales are geographically separate entities. However, they must share the same information in order to achieve direct marketing. At this regard, management defines the set of criteria to evaluate products, what products must be evaluated, and the size of the population that will provide judgements. This is done at one physical location. The coordinator agent assists management directly.  
   
  Direct Marketing Based on a Distributed Intelligent System  
   
  265  
   
  On the other hand, actual salesmen or women are in touch with clients, yet they must adhere to the criteria fixed by management. The evaluator agent is running inside the computer used by the sales force, and gathers the criteria that was decided by management. There is one evaluator agent assisting every salesman or woman regardless their actual location. This is helpful to interview the clients they talk to. In this way, the clients opinions are fed to the central repository in real time. When the totality of opinions are input, the coordinator agent orders the clutering agent and the AHP agent to process clients’ data so management can visualize the manner in which a given market segment judges the company’s products. Such tasks are exemplified in section 5.  
   
  5 Experimental Results In this section we present a case-study to validate the combined Fuzzy C-Means AHP -MAS approach to direct marketing. The case study refers at determining what car model out of a list is best judged by a number of potential clients belonging to a specific market segment. To show the validity of the approach, we only provide data given by ten different clients, whom were asked to judge five different cars models on five different criteria. Management and salesmen or women were asked to employ the MAS. We present, step by step, the usage of the MAS and the final results.  
   
  Fig. 4 Coordinator Agent. Entering survey parameters  
   
  Let ξ = {e1 , e2 . · · · , e10 } be the set of clients, and C = {c1 , c2 , c3 , c4 , c5 } the set of criteria where: c1 = Design, c2 = Fuel Economy, c3 = Price, c4 = Engine Power, and c5 = Reliability. Five different alternatives are evaluated, which are labeled A1 = Jetta, A2 = Passat, A3 = Bora, A4 = Golf, and A5 = Lupo. Management, comfortably sitting in their headquarters, introduce the survey parameters in a Graphical User Interface associated to the coordinator agent. Firstly, they establish the ID associated with the problem, along with the number of criteria,  
   
  266  
   
  V. López Morales and O. López Ortega  
   
  alternatives and population size (total number of evaluators). Afterwards, they introduce the objective of the problem, description of criteria, and the products to be evaluated (Fig. 4). These parameters are stored in Table Problem of the Evaluation Blackboard previously described. Accordingly, Fig. (5) displays the final definition of the survey parameters.  
   
  Fig. 5 Coordinator Agent. Summary of survey parameters.  
   
  Once the problem parameters are introduced, the coordinator agent posts a message on the Evaluation Blackboard, which will be read by each of the evaluator agents on their own network location. Thus, each evaluator agent constantly verifies whether a new problem has been introduced. When a new survey is encountered (Fig. 6), its parameters are displayed so that the evaluator proceeds to determine the absolute importance of every criterion (Fig. 7). Here we would like to elaborate on this way of evaluation. According to empirical usage of the system, human evaluators complaint about the time consuming process and the inability to keep track of their own judgements when they were requested to pair-wise compare both, criteria and alternatives. They also expressed that the numbers they were facing lacked meaning at some point. Instead, all of them agreed that it is more intuitive to make an absolute judgement on a 1-10 scale, and automate the pairwise comparisons as part of the system. The construction of the pair-wise comparison matrix for criteria is transparent to the evaluator. It also guarantees consistency of the PCM. Consequently, this process yields a PCM matrix for each evaluator, which is stored in the table PCM-K of the Evaluation Blackboard. Upon completion of the entire set of evaluations, the coordinator agent informs the clustering agent that it must initiate the calculation of the clusters (Fig. 8).  
   
  Direct Marketing Based on a Distributed Intelligent System  
   
  267  
   
  Fig. 6 Evaluator Agent. Finding a new survey at Sales Point.  
   
  Then, clustering agent acknowledges receipt and proceeds to build clusters, and then stores the Global PCM in table PCM-G of the Evaluation Blackboard. A summary of the final results for this particular case are displayed in Fig. (9), while the details can be analyzed as presented in Fig. (10).  
   
  5.1 Clients’ Evaluation The actual judgements given by the clients are depicted in the following table. First, they were asked to evaluate on a scale from 0 to 10, how important is Design (c1 ), Fuel economy (c2 ), Price (c3 ), Engine power (c4 ), and Reliability (c5 ) at the moment of selecting a car. ci c1 c2 c3 c4 c5  
   
  e1 8 9 10 10 8  
   
  e2 9 8 10 9 8  
   
  e3 9 9 8 8 9  
   
  e4 9 7 9 7 8  
   
  ek e5 e6 10 7 6 8 7 10 8 6 7 6  
   
  e7 7 9 6 10 8  
   
  e8 6 9 10 6 10  
   
  e9 10 7 6 10 8  
   
  e10 7 8 8 6 7  
   
  268  
   
  V. López Morales and O. López Ortega  
   
  Fig. 7 Evaluator Agent. Criterion evaluation.  
   
  Fig. 8 Coordinator Agent informs Clustering Agent  
   
  Direct Marketing Based on a Distributed Intelligent System  
   
  269  
   
  Fig. 9 Summary of final results  
   
  Fig. 10 Details of final results  
   
  Once every client has established how important every criteria he/she considers to be in for purchasing a car, clients are asked to evaluate to what extend they think alternative cars comply to the evaluation criteria. In the following table we present only one example of how one client ranked the five different car models on each criteria.  
   
  270  
   
  e1 c1 c2 c3 c4 c5  
   
  V. López Morales and O. López Ortega  
   
  ai Jetta Passat Bora 8 10 10 9 4 5 7 4 6 8 10 9 9 10 10  
   
  Golf Lupo 8 6 8 10 7 10 8 5 8 8  
   
  According to the previous table, client number one considers that Jetta evaluates with an 8 for its design, a 9 for its fuel economy, 7 for the price, 8 for the engine power, and a 9 for the reliability. There is one instance of the previous table for every one of the clients that participate in the survey. The totality of the evaluations are stored in the the Evaluation Blackboard (Fig. 3). Once the target population evaluated (subjectively) the range of products, then the coordinator agent, running on the management node, validates that all the evaluations are complete. Shortly after, it requests that clustering agent and AHP agent achieve their own tasks by processing the raw data. Knowledge obtained by management is a final ranking, which determines what product appeals the most to the target market segment. In this case, A4 = Golf best balances the five features evaluated, as evidenced by ranking R = {A1 : 0.1674, A2 : 0.1428, A3 : 0.1582, A4 : 0.1684, A5 : 0.1681}.  
   
  6 Concluding Remarks We have presented an intelligent and distributed Multi-Agent System that incorporates the Analytical Hierarchy Process and the Fuzzy C-Means algorithm to enhance direct marketing. Particularly, the system is aimed at facilitating surveys and processing the large amounts of raw data that is generated. The results provided with the case-study are very promising, because it has been shown that management can establish direct contact with a large group of customers. Every individual, in turn, is left free to evaluate the company products according to his or her personal criteria. This is very valuable per se. Yet, the system also proved capable of processing the totality of the evaluations. With this, the perceptions of a market segment are deeply scrutinized by forming clusters. In this sense, the market segment is treated as a single unit because the perceptions of the majority are discovered. It is intended to improve the MAS we have presented here by including different soft-computing techniques, such as neural networks and Case-Based reasoning. These techniques will provide more facilities so that management can compare and analyze the market behavior. Acknowledgments. The authors would like to thank the anonymous reviewers because of their useful comments that improved this paper.  
   
  Direct Marketing Based on a Distributed Intelligent System  
   
  271  
   
  The work of Virgilio López Morales is partially supported by the PAI2006 - UAEH - 55A, SEP - SESIC - PROMEP - UAEH - PTC - 1004 and ANUIES - SEP - CONACyT/ECOS NORD, M02:M03, research grants.  
   
  References 1. Hanson, C.: What are the best methods for increasing diversity at a digital marketing company? DMNews 1(1) (January 26, 2009) 2. Tsai, J.: Marketing trends for 2009. Costumer Relationship Management Magazine 1(1) (January 2009) 3. Pijls, W., Potharst, R.: Number 2000-40-LIS in ERS. In: Classification and target group selection based upon frequent patterns. ERIM Report Series Research in Management, The Netherlands, 1–16 (2000) 4. Bult, J., Wansbeek, T.: Optimal selection for direct mail. Journal Marketing Science 14, 378–394 (1995) 5. Haughton, D., Oulabi, S.: Direct marketing modeling with Cart and CHAID. Journal of Direct Marketing 7, 16–26 (1993) 6. Zahavi, J., Levin, N.: Issues and problems in applying neuronal computing to target marketing. Journal of Direct Marketing 9(3), 33–45 (1995) 7. Zahavi, J., Levin, N.: Aplying neuronal computing to target marketing. Journal of Direct Marketing 11(1), 5–22 (1997) 8. Kaymak, U.: Fuzzy Target Selection Using RFM Variables. In: Proc. Of Joint 9th IFSA World Congress and 20th NAFIS Int. Conference, Vancouver, Canada, pp. 1038–1043 (2001) 9. Setnes, M., Kaymak, U.: Fuzzy Modeling of Client Preference from Large Data Sets: An Application to Target Selection in Direct Marketing. IEEE Transactions on Fuzzy Systems 9(1) (2001) 10. Sousa-João, M., Kaymak, U., Madeira, S.: A Comparative Study of Fuzzy Target Selection Methods in Direct Marketing. In: Proceedings, IEEE World Congress on Computational Intelligence, pp. 1251–1256 (2002) 11. Site, C.: Cyber Atlas On line,    12. Rayport, J., Sviokla, J.: Managing in the Marketspace. Harvard Business Review 1(1) (1994) 13. Bessen, J.: Riding the Marketing Information Wave. Harvard Business Review 1(1) (1993) 14. Bakos, Y.: Reducing Buyer Search Costs: Implications for Electronic Marketplaces. Management Science 43(12) (1997) 15. Balas, S.: Direct Marketer vs. Retailer: A Strategic Analysis of Competition and Market StructureMail vs. Mall. Marketing Science 17(3) (1998) 16. Saaty, T.L.: A scaling method for priorities in hierarchical structures. Journal of Mathematical Psychology 15(3), 234–281 (1977) 17. Roger Jang, C.T.S., Mizutani, E.: Neuro-fuzzy and Soft Computing. Prentice Hall, New York (1997) 18. Bezdek, J.C.: Pattern Recognition with Fuzzy Objective Function Algoritms. Plenum Press, New York (1981) 19. Bauer, B., Odell, J.: UML 2.0 and agents: how to build agent-based systems with the new UML standard. Engineering Applications of Artificial Intelligence 18, 141–157 (2005) 20. Fabio Bellifemine, G.C., Greenwood, D.: Developing Multi-Agent Systems with JADE. Addison Wesley, London (2007)  
   
  Direct Marketing Modeling Using Evolutionary Bayesian Network Learning Algorithm Man Leung Wong Department of Computing and Decision Sciences, Lingnan University, Tuen Mun, Hong Kong e-mail: [email protected]   
   
  Abstract. Direct marketing modeling identiﬁes eﬀective models for improving managerial decision making in marketing. This paper proposes a novel system for discovering models represented as Bayesian networks from incomplete databases in the presence of missing values. It combines an evolutionary algorithm with the traditional Expectation-Maximization(EM) algorithm to ﬁnd better network structures in each iteration round. A data completing method is also presented for the convenience of learning and evaluating the candidate networks. The new system can overcome the problem of getting stuck in sub-optimal solutions which occurs in most existing learning algorithms and the eﬃciency problem in some existing evolutionary algorithms. We apply it to a real-world direct marketing modeling problem, and compare the performance of the discovered Bayesian networks with other models obtained by other methods. In the comparison, the Bayesian networks learned by our system outperform other models. Keywords: Direct Marketing Modeling, Data Mining, Bayesian Networks, Evolutionary Algorithms.  
   
  1 Introduction The objective of the direct marketing modeling problem is to predict and rank potential buyers from the buying records of previous customers. The customer list will be ranked according to each customer’s likelihood of purchase. The decision makers can then select the portion of customer list to roll out. An advertising campaign including mailing of catalogs or brochure is targeted on the most promising prospects. Hence, if the prediction is accurate, it can help to enhance the response rate of the advertising campaign and increase the return of investment. In real-life applications, the databases containing the buying records of customers may contain missing values. Irrelevant records or trivial items with J. Casillas & F.J. Mart´ınez-L´ opez (Eds.): Marketing Intelligence Systems, STUDFUZZ 258, pp. 273–294. c Springer-Verlag Berlin Heidelberg 2010 springerlink.com   
   
  274  
   
  M. Leung Wong  
   
  missing values can be simply discarded from the raw databases in the data preprocessing procedure. However, in most cases, the variables are related to each other and the deletion of incomplete records may lose important information. This will aﬀect performance dramatically especially if we want to discover some knowledge ”nuggets” from the databases and they happen to be contained in the incomplete records. Usually, people may alternatively replace the missing values with certain values, such as the mean or mode of the observed values of the same variable. Nevertheless, it may change the distribution of the original database. Bayesian networks are popular within the community of artiﬁcial intelligence and data mining due to their ability to support probabilistic reasoning from data with uncertainty. They can represent the co-related relationships among random variables and the conditional probabilities of each variable from a given data set. With a network structure at hand, people can conduct probabilistic inference to predict the outcome of some variables based on the values of other observed ones. Hence, Bayesian networks are widely used in many areas, such as diagnostic and classiﬁcation systems [1, 2, 3], information retrieval [4], troubleshooting, and so on. They are also suitable for reasoning with incomplete information. Many methods have been suggested to learn Bayesian network structures from complete databases without missing values, which can be classiﬁed into two main categories [5]: the dependency analysis method [6] and the scoreand-search approach [7, 8, 9]. For the former approach, the results of dependency tests are employed to construct a Bayesian network conforming to the ﬁndings. For the latter one, a scoring metric is adopted to evaluate candidate network structures while a search strategy is used to ﬁnd a network structure with the best score. Decomposable scoring metrics, such as MDL and BIC, are usually used to deal with the problem of time consuming score evaluation. When the network structure changes, we only need to re-evaluate the score of the corresponding nodes related to the changed edges, rather than the scores of the whole nodes. And stochastic search methods which employ evolutionary algorithms have been used in the latter approach for complete data, such as Genetic Algorithms [10, 11], Evolutionary Programming [12], and hybrid evolutionary algorithms [13]. Nevertheless, learning Bayesian networks from incomplete data is a diﬃcult problem in real-world applications. The parameter values and the scores of networks cannot be computed directly on the records having missing values. Moreover, the scoring metric cannot be decomposed directly. Thus, a local change in the network structure will lead to the re-evaluation of the score of the whole network, which is time-consuming considering the number of all possible networks and the complexity of the network structures. Furthermore, the patterns of the missing values also aﬀect the dealing methods. Missing values can appear in diﬀerent situations: Missing Completely At Random, or Not Ignorable [14]. In the ﬁrst situation, whether an observation is missing or not is independent of the actual states of the variables. So the incomplete  
   
  Direct Marketing Modeling  
   
  275  
   
  databases may be representative samples of the complete databases. However, in the second situation, the observations are missing to some speciﬁc states for some variables. Diﬀerent approaches should be adopted for diﬀerent situations, which again complicates the problem. Many researchers have been working on parameter learning and structure learning from incomplete data. For the former, several algorithms can be used to estimate or optimize the parameter values of the known Bayesian network structures, such as Gibbs sampling, EM [8], and Bound-and-Collapse (BC) method [15, 16]. For structure learning from incomplete data, the main issues are how to deﬁne a suitable scoring metric and how to search for Bayesian network structures eﬃciently and eﬀectively. Concerning the score evaluation for structure learning, some researchers proposed to calculate the expected values of the statistics to approximate the score of candidate networks. Friedman proposed a Bayesian Structural Expectation-Maximization (SEM) algorithm which alternates between the parameter optimization process and the model search process [17, 18]. The score of a Bayesian network is maximized by means of the maximization of the expected score. Pe˜ na et al. used the BC+EM method instead of the EM method in their BS-BC+EM algorithm for clustering [19, 20]. However, the search strategies adopted in most existing SEM algorithms may not be eﬀective and may make the algorithms ﬁnd sub-optimal solutions. Myers et al. employed a genetic algorithm to learn Bayesian networks from incomplete databases [21]. Both network structures and the missing values are encoded and evolved. The incomplete databases are completed by speciﬁc genetic operators during evolution. Nevertheless, it has the eﬃciency and convergence problems because of the enlarged search space and the strong randomness of the genetic operators for completing the missing values. In this study, we propose a new learning system that uses EM to handle incomplete databases with missing values and uses a hybrid evolutionary algorithm to search for good candidate Bayesian networks. The two procedures are iterated so that we can continue ﬁnding a better model while optimizing the parameters for a good model to complete the database with more accurate information. In order to reduce the time for statistics computation, the database is preprocessed into two parts : records with and without missing values. Instead of using the expected values of statistics as in most existing SEM algorithms, our system applies a data completing procedure to complete the database and thus decomposable scoring metrics can be used to evaluate the networks. The MDL scoring metric is employed in the search process to evaluate the ﬁtness of the candidate networks. We apply our system to a direct marketing modeling problem, which requires to rank the previous customers according to their probability of potential purchasing. The results show that the performance of the evolved Bayesian networks obtained by our system is better than the models learned by several other learning algorithms.  
   
  276  
   
  M. Leung Wong  
   
  The rest of this paper is organized as follows. In Section 2, we will present the backgrounds of direct marketing modeling, Bayesian networks, the missing value problem, and some Bayesian network learning algorithms. In Section 3, our new learning system for incomplete databases, EBN, will be described in details. In Section 4, we use our system to discover Bayesian networks from a real-life direct marketing database. We will conclude the paper in the last section.  
   
  2 Background 2.1 Direct Marketing Modeling Direct marketing concerns communication with prospects, so as to elicit response from them. In contrast to the mass marketing approach, direct marketing is targeted at a group of individuals that are potential buyers and are likely to respond. In retrospect, direct marketing emerged because of the prevalence of mail ordering in the nineteenth century [22]. As technology advances, marketing is no longer restricted to mailing but includes a variety of media. Nevertheless, the most important issue in the business remains to be the maximization of the proﬁtability, or ROI, of a marketing campaign. In a typical scenario, we often have a huge list of customers. The list could be records of existing customers or data bought from list brokers. But among the huge list, there are usually few real buyers which amount to only a few percents [23]. Since the budget of a campaign is limited, it is important to focus the eﬀort on the most promising prospects so that the response rate could be improved. Before computers became widely used, direct marketers often used simple heuristics to enhance the response rate. One straightforward approach is to use common sense to make the decision. In particular, we could match prospects by examining the demographics of the customers in the list. For example, in the life insurance industry, it is natural to target the advertising at those who are rich and aging. Another common approach to enhance the response rate is to conduct list testing by evaluating the response of samplings from the list. If a certain group of customers gives a high response rate, the actual campaign may be targeted at the customers similar to this group. A more systematic approach, which was developed in 1920s but is still being used today, is to diﬀerentiate potential buyers from non-buyers using the recency-frequency-monetary model (RFM) [22]. In essence, the proﬁtability of a customer is estimated by three factors including the recency of buying, the frequency of buying, and the amount of money spent. Hence, only individuals that are proﬁtable will be the targets of the campaign. With the advancement of computing and database technology, people seek for computational approaches to assist in decision making. From the data set that contains demographic details of customers, the objective is to develop a  
   
  Direct Marketing Modeling  
   
  277  
   
  response model and use the model to predict promising prospects. In certain sense, response models are similar to classiﬁers in the classiﬁcation problem. However, unlike the classiﬁer which makes a dichotomous decision (i.e. active or inactive respondents), the response model needs to score each customer in the data set with the likelihood of purchase. The customers are then ranked according to the score. A ranked list is desirable because it allows decision makers to select the portion of customer list to roll out [24]. For instance, out of the 200,000 customers on the list, we might wish to send out catalogs or brochures to the most promising 30% of customers so that the advertising campaign is cost-eﬀective (the 30% of the best customers to be mailed is referred to as the depth-of-ﬁle) [25]. Hence, one way to evaluate the response model is to look at its performance at diﬀerent depth-of-ﬁle. In the literature, there are various approaches proposed for building the response model. Here, we give a brief review in the following paragraphs. Earlier attempts often adopted a statistical analysis approach. Back in 1967, a company already used multiple regression analysis to build the response model. In 1968, the Automatic Interaction Detection (AID) system was developed which essentially uses tree analysis to divide consumers into diﬀerent segments [22]. Later, the system was modiﬁed and became the ChiSquared Automatic Interaction Detector (CHAID). One statistical analysis technique, which is still widely used today, is logistic regression. Essentially, the logistic regression model assumes that the logit (i.e. the logarithm of the odd ratios) of the dependent variable (active or inactive respondents) is a linear function of the independent variables (i.e. the attributes). Because the approach is popular, newly proposed models are often compared with the logistic regression model as the baseline comparison [25, 26, 27]. Zahavi and Levin [27] examined the possibility of learning a backpropagation neural network as the response model. However, due to a number of practical issues and that the empirical result did not improve over a logistic regression model, it seems that the neural network approach does not bring much beneﬁt. Because there are striking similarities between classiﬁcation and the direct marketing problem, it is straightforward to apply classiﬁcation algorithms to tackle the problem. As an example, Ling and Li [28] used a combination of two well-known classiﬁers, the na¨ıve Bayesian classiﬁer and C4.5, to construct the response model. Because scoring is necessary, they modiﬁed the C4.5 classiﬁer so that a prediction (i.e. active and inactive respondents) comes with a certainty factor. To combine the two classiﬁers, they applied ada-boosting [29] to both classiﬁers in learning. When they evaluated their response model across three diﬀerent real-life data sets, the result showed that their approach are eﬀective for solving the problem. Bhattacharyya formulated the direct marketing problem as a multiobjective optimization problem [25, 26]. He noted that the use of a single evaluation criterion, which is to measure the model’s accuracy, is often inadequate [26]. For practical concern, he suggested that the evaluation criterion  
   
  278  
   
  M. Leung Wong  
   
  needs to include the performance of the model at a given depth-of-ﬁle. In an early attempt, he proposed to use GAs to learn the weights of a linear response model while the evaluation function is a weighted average of the two evaluation criteria. When comparing the learnt model with the logit model on a real-life data set, the new approach indicates a superior performance [25]. Recently, he attempted to use genetic programming to learn a tree-structured symbolic rule form as the response model [26]. Instead of using a weighted average criterion function, his new approach searches for Pareto-optimal solutions. From the analysis, he found that the GP approach outperforms the GA approach and is eﬀective at obtaining solutions with diﬀerent levels of trade-oﬀs [26].  
   
  2.2 Bayesian Networks A Bayesian network, G, has a directed acyclic graph (DAG) structure. Each node in the graph corresponds to a discrete random variable in the domain. An edge, Y → X, on the graph, describes a parent and child relation in which Y is the parent and X is the child. All parents of X constitute the parent set of X which is denoted by ΠX . In addition to the graph, each node has a conditional probability table (CPT) specifying the probability of each possible state of the node given each possible combination of states of its parents. If a node contains no parent, the table gives the marginal probabilities of the node. Let U be the set of variables in the domain, U = {X1 ,. . . ,Xn }. Following Pearl’s notation [30], a conditional independence (CI) relation is denoted by I(X, Z, Y ) where X, Y , and Z are disjoint subsets of variables in U . Such notation says that X and Y are conditionally independent given the conditioning set, Z. Formally, a CI relation is deﬁned with: P (x | y, z) = P (x | z) whenever P (y, z) > 0  
   
  (1)  
   
  where x, y, and z are any value assignments to the set of variables X, Y , and Z respectively. A CI relation is characterized by its order, which is the number of variables in the conditioning set Z. By deﬁnition, the joint probability distribution of U can be expressed as:  P (X1 , . . . , Xn ) = P (Xi |ΠXi ) (2) i  
   
  For simplicity, we use Xi = k to specify that the i-th node takes the k-th possible state in its value domain, ΠXi = j to represent ΠXi being instantiated to the j-th combinational state, and Nijk to represent the counts of Xi = k and ΠXi = j appearing simultaneously in the data. The conditional probability p(Xi = k|ΠXi = j), also denoted as parameter θijk , can be calculated from complete data by:  
   
  Direct Marketing Modeling  
   
  279  
   
  Nijk θijk =  k Nijk  
   
  (3)  
   
  As mentioned before, there are two main categories of Bayesian network learning algorithms. The dependency analysis approach constructs a network by testing the validity of any independence assertion I(X, Z, Y ). If the assertion is supported by the data, edges cannot exist between X and Y on the graph [5, 6]. The validity of I(X, Z, Y ) is tested by performing a CI-test, in which statistical hypothesis testing procedure could be used. Suppose that the likelihood-ratio χ2 test is used and the χ2 statistics is calculated by: G2 = −2  
   
    
   
  P (x, y, z) ∗ log  
   
  x,y,z  
   
  P (x, y, z) P (y, z)P (x|z)  
   
  (4)  
   
  Checking the computed G2 against the χ2 distribution, we can obtain the pvalue [13]. If the p-value is less than a predeﬁned cutoﬀ value α, the assertion I(X, Z, Y ) is not valid; otherwise, it is valid and edges cannot exist between X and Y . The score-and-search approach uses a scoring metric to evaluate candidate networks [7]. Take the decomposable MDL scoring metric for example [9], the MDL score of network G with every node Ni in the domain U can be described as:  M DL(Ni , ΠNi ) (5) M DL(G) = Ni ∈U  
   
  The MDL score of a network is smaller than that of another network if the former network is better. With the scoring metric, the learning problem becomes a search problem. It should be noted that since the metric is nodedecomposable, it is only necessary to re-calculate the MDL scores of the modiﬁed nodes when the network structure is changed. However, the metric cannot be used directly if the databases have missing values.  
   
  2.3 The Missing Value Problem In real-world applications, the databases may contain incomplete records which have missing values. People may simply discard incomplete records, but relevant information may be deleted. Alternatively, they can complete the missing values with the information of the databases such as the mean values of other observed values of the variables. However, the distribution of the data may be changed. Advanced approaches including maximum likelihood estimation [14], Bayesian multiple imputation [31], machine learning [32], Bayesian networks [33, 34], k-nearest neighbour, regression [35, 36], and singular value decomposition [37] have been applied to complete the missing values in databases and microarray gene expression data sets. One advantage of Bayesian networks is that they support probabilistic reasoning from data with uncertainty. However, for learning Bayesian networks  
   
  280  
   
  M. Leung Wong  
   
  from incomplete databases, the parameter values and the scores of networks cannot be computed directly on the records having missing values. Moreover, the scoring metric cannot be decomposed directly. Thus, a local change in the network structure will lead to the re-evaluation of the score of the whole network. For parameter learning, existing methods either use diﬀerent inference algorithms to get the expected values of statistics or complete the missing values. Two commonly adopted methods are Gibbs sampling and EM [8]. Gibbs sampling tries to complete the database by inferring from the available information and then learns from the completed database [38]. On the other hand, EM calculates the expected values of the statistics via inference and then updates the parameter values using the previously calculated expected values [39, 40]. It will converge to a local maximum of the parameter values under certain conditions. Furthermore, EM usually converges faster than Gibbs sampling. Both Gibbs sampling and EM assume that the missing values appear randomly or follow a certain distribution. In order to encode prior knowledge of the pattern of missing data, Ramoni and Sebastinani proposed a new deterministic Bound-and-Collapse (BC) method that does not need to guess the pattern of missing data [15, 16, 41]. It ﬁrstly bounds the possible estimates consistent with the probability interval by computing the maximum and minimum estimates that would have been inferred from all possible completions of the database. Then the interval is collapsed to a unique value via a convex combination of the extreme estimates using information on the assumed pattern of missing data. For structure learning from incomplete databases, the score-and-search approach can still be employed. The main issues are how to deﬁne a suitable scoring metric and how to search for Bayesian networks eﬃciently and effectively. Many variants of Structural Expectation Maximization (SEM) were proposed for this kind of learning in the past few years [17, 18].  
   
  2.4 Basic SEM Algorithm The basic SEM algorithm cam learn Bayesian networks in the presence of missing values and hidden variables [17]. It alternates between two steps: an optimization for the Bayesian network parameters conducted by the EM algorithm, and a search for a better Bayesian network structure using a hill climbing strategy. The two steps iterate until the whole algorithm is stopped. The score of a Bayesian network is approximated by the expected value of statistics. Friedman extended his SEM to directly optimize the true Bayesian score of a network in [18]. The framework of the basic SEM algorithm can be described as follows: 1. let M1 be the initial Bayesian network structure. 2. for t=1,2,...  
   
  Direct Marketing Modeling  
   
  281  
   
  • Execute EM to approximate the maximum-likelihood parameters Θt for Mt . • Perform a greedy hill-climbing search over Bayesian network structures, evaluating each structure using approximated score Score(M ). • let Mt+1 be the Bayesian network structure with the best score. • If Score(Mt ) =Score(Mt+1 ) then return Mt and Θt .  
   
  2.5 HEA HEA is proposed by Wong and Leung for learning Bayesian networks from complete databases [13]. It employs the results of lower order CI-tests to reﬁne the search space and adopts a hybrid evolutionary algorithm to search for good network structures. Each individual in the population represents a candidate network which is encoded by a connection matrix. Besides, each individual has a cutoﬀ value α which is also subject to be evolved. At the beginning, for every pair of nodes (X,Y), the highest p-value returned by the lower order CI-tests is stored in a matrix Pv . If the p-value is greater than or equal to α, the conditional independence assertion I(X,Z,Y) is assumed to be valid, which implies that the nodes X and Y cannot have a direct edge between them. By changing the α values dynamically, the search space of each individual can be modiﬁed and each individual conducts its search in a diﬀerent search space. Four mutation operators are used in HEA. They add, delete, move, or reverse edges in the network structures either through a stochastic method or based on some knowledge. A novel merge operator is suggested to reuse previous search results. The MDL scoring metric is used for evaluating candidate networks. The cycle prevention method is adopted to prevent cycle formation in the network structures. The experimental results demonstrate that HEA has better performance on some benchmark data sets and real-world data sets than other state-ofthe-art algorithms [13].  
   
  3 Learning Bayesian Networks from Incomplete Databases 3.1 The EBN Algorithm Although HEA outperforms some existing approaches, it cannot deal with incomplete databases. Thus, we propose a novel evolutionary algorithm, called EBN (Evolutionary Bayesian Network learning method), that utilizes the efﬁcient and eﬀective global search ability of HEA and applies EM to handle missing values. Some strategies are also introduced to speed up EBN and to improve its performance. EBN is described in Fig. 1.  
   
  282  
   
  M. Leung Wong  
   
  In EBN, there are two special kinds of generations. SEM generation refers to one generation in the SEM framework (step 9 of Fig. 1) while HEA generation refers to the iteration in HEA search process (step 9(g) of Fig. 1). Firstly, the database is separated and stored into two parts in the data preprocess phase. The set of records having missing values is marked as H and the set of records without missing values is marked as O. Order-0 and order-1 CI tests are then conducted on O and the results are stored in the matrix Pv for reﬁning the search space of each individual in the following procedures. At the beginning of the SEM phase, for each individual, we check a randomly generated α value with the stored values in the matrix Pv to reﬁne its search space. It should be noted that the search space will not be reﬁned if O is not available. A DAG structure is then randomly constructed from the reﬁned search space for this individual. Thus, the initial population is generated (step 7 of Fig. 1). Through some speciﬁc strategies, an initial network structure is generated for the current best network which is denoted as Gbest . EBN will then be executed for a number of SEM generations until the stopping criteria are satisﬁed, that is, the maximum number of SEM generations is reached or the log-likelihood of Gbest does not change for a speciﬁed number of SEM generations (step 9 of Fig. 1). The log-likelihood of Gbest in the t-th SEM generation can be computed by:  [E(Nijk )log(θijk )] (6) ll(Gbest (t)) = i,j,k  
   
  Within each SEM generation, EM will be conducted ﬁrst to ﬁnd the best values for the parameters of Gbest (step 9(a) of Fig. 1). The missing values in H will be ﬁlled according to Gbest and its parameters (step 9(c) of Fig. 1). Combining the newly completed result of H with O, we get a new complete data set O . Then, the HEA search process will be executed on O for a certain number of HEA generations to ﬁnd a better network to replace Gbest . The MDL scoring metric is again employed in the search process to evaluate the ﬁtness of the candidate networks. The whole process will iterate until it stops. Some techniques are depicted in following subsections.  
   
  3.2 The EM Procedure in EBN EM is employed here for parameter estimation of the input Bayesian network. The procedure is described in Fig. 2. In order to facilitate the converge of the EM procedure, we choose Gbest as the input network. In step 1 of Fig. 2, the initial parameter values of Gbest are computed on data O∗. For the ﬁrst execution of EM in the ﬁrst SEM generation, O is used as O∗ (step 9(a) of Fig. 1). In the other SEM generations, O∗ is the completed data O from the previous SEM generation (step 9(a) of Fig. 1).  
   
  Direct Marketing Modeling  
   
  283  
   
  Data Preprocess 1. Store incomplete records together, mark the whole set as H. 2. Store other records together, mark the whole set as O. CI test Phase 3. If O is available a. Perform order-0 and order-1 CI tests on O. b. Store the highest p-value in the matrix Pv . else store negative values in the matrix Pv . SEM phase 4. Set t, the generation count, to 0. 5. Set tSEM , the SEM generation count, to 0. 6. Set tuc , the count of generations with unchanged log-likelihood, to 0. 7. For each individual Gi in the population P op(t) • Initialize the α value randomly, where 0 ≤ α ≤ 1. • Reﬁne the search space by checking the α value against the stored Pv value. • Inside the reduced search space, create a DAG randomly. 8. Generate the initial network structure for Gbest . 9. While tSEM is less than the maximum number of SEM generations or tuc is less than M AXuc , a. If tSEM = 0, execute EM(Gbest , O, H); else execute EM(Gbest , O , H). b. If the log-likelihood of Gbest does not change, increment tuc by 1; else set tuc to 0. c. Complete missing data in H using Gbest and its parameters, and get updated complete data O . d. Execute order-0 and order-1 CI-tests on O , and store the highest p-value in Pv . e. For each individual Gi in the population P op(t) • Reﬁne the search space by checking the α value against the Pv value. • Evaluate Gi using the MDL metric on O . f. Set tHEA, the HEA generation count in each SEM generation, to 0. g. While tHEA is less than the maximum number of HEA generations in each SEM generation , • execute HEA search phase. • increment tHEA and t by 1, respectively. h. Pick up the individual that has the lowest MDL score on O to replace Gbest . i. increment tSEM and t by 1, respectively. 10. Return the individual that has the lowest MDL score in any HEA generation of the last SEM generation as the output of the algorithm.  
   
  Fig. 1 EBN Algorithm  
   
  284  
   
  M. Leung Wong  
   
  EM contains two steps: the E-step and the M-step. In the E-step, the expected values of statistics of unobserved data (often called suﬃcient statistics) are estimated using probabilistic inference based on the input Gbest and its parameter assignments. For each node Xi and record l∗ , we can calculate the expected value of Nijk using the following equation:  E(Nijk ) = E(Nijk |l∗ ) (7) l∗  
   
  where  
   
  E(Nijk |l∗ ) = p(Xi = k, ΠXi = j|l∗ )  
   
  (8)  
   
  ∗  
   
  Let l represents the set of all other observed nodes in l . When both Xi and ΠXi are observed in l∗ , the expected value can be counted directly which is either 0 or 1. Otherwise, p(Xi = k, ΠXi = j|l∗ ) = p(Xi = k, ΠXi = j|l), and it can be calculated using any Bayesian inference algorithm [42]. In our experiments, the junction tree inference algorithm is adopted [43]. Since the database is preprocessed, we just need to run the E-step on H. Then, in the M-step, the parameters θijk are updated by E (Nijk ) θijk =   
   
  k E (Nijk )  
   
  (9)  
   
  where E (Nijk ) is the sum of the suﬃcient statistics calculated on H in the E-step and the statistics calculated on O which are evaluated and stored at the beginning. The two steps will iterate until the EM procedure stops. EM will terminate when either the value of the log-likelihood does not change in two successive iterations, or the maximum number of iterations is reached.  
   
  Procedure EM(Gbest , O∗, H) 1. If data O∗ is not empty, calculate the parameter values of Gbest on O∗; else the parameter values of Gbest are generated randomly. 2. Set t, the EM iteration count, to 0. 3. While not converged, • For every node Ni , – calculate the expected statistics on H; – update θijk using E  (Nijk ). • Calculate the log-likelihood of Gbest . • Increment t by 1. 4. Output Gbest and its parameters.  
   
  Fig. 2 Pseudo-code for the EM procedure  
   
  Direct Marketing Modeling  
   
  285  
   
  3.3 The Initial Network Structure for Gbest After executing the HEA search procedure, Gbest is updated by the best candidate network having the lowest MDL score in the population (step 9(h) of Fig. 1) and then the newly found Gbest is used in the EM procedure for the next SEM generation (step 9(a) of Fig. 1). However, we have to generate an initial network structure Gbest for the ﬁrst execution of the EM procedure for the ﬁrst SEM generation. The quality of this network structure is crucial, because EBN is conducted on the database whose missing values are ﬁlled by performing inference using Gbest and its parameters. In other words, the inference procedure may take a long time if Gbest is not good enough. In EBN, the initial network structure is obtained from a modiﬁed database. Considering the missing values in the original database as an additional state for each variable, we can get a new complete database. Then a network structure can be learned from the new complete database by HEA. The initial network structure Gbest induced by HEA will not be put into the initial population after the execution of the EM procedure for the ﬁrst SEM generation, so that the diversity of the population will not be destroyed at an early stage. The advantage of this method is that we can still ﬁnd a good network structure even when data O is not available.  
   
  3.4 Data Completing Procedure One of the main problems in learning Bayesian networks from incomplete databases is that the node-decomposable scoring metric cannot be used directly. In order to utilize HEA in EBN, we complete the missing data after each execution of the EM procedure so that the candidate networks can be evaluated eﬃciently on a complete database. When more than one node are unobserved in a record, we ﬁll the missing data according to the topological order of the current best network Gbest . For example, if node Xi and Xj are both unobserved in record l∗ and Xi → Xj exists in Gbest , we ﬁrst ﬁll the value of Xi and put it back into the junction tree, and then ﬁnd a value for Xj . A Bayesian inference algorithm is again employed to obtain the probabilities of all possible states of an unobserved node under the current observed data. We can simply pick up the state having the highest probability. Alternatively, we can select a state via a roulette wheel selection method. Suppose the value of node Xi is unobserved in current record l∗ , and Xi has k possible states in its value domain. We use {p1 , p2 ,...,pk } to represent the set of the probability of each of its state appearing under current observed data in l∗ respectively. In this approach, a random decimal r between 0 and 1 is generated, and then the m-th state will be chosen if m = 1, r ≤ p1 .  
   
  (10)  
   
  286  
   
  M. Leung Wong  
   
  or 1 < m ≤ k,  
   
  m−1   
   
  pi < r ≤  
   
  i=1  
   
  m   
   
  pi .  
   
  (11)  
   
  i=1  
   
  In EBN, we adopt the second completing approach so that the states with lower probabilities may also be selected.  
   
  3.5 HEA Search Procedure With a complete data O , HEA can be utilized to learn good Bayesian networks. The lower order CI-test will be conducted again on O and the highest p-values are stored in the matrix Pv , just as mentioned in subsection 2.5. Hence, each individual will reﬁne its search space according to the new results on the new data O . All the candidate networks are evaluated on O using the MDL scoring metric. In each HEA generation, the mutation operators and the merge operator will be applied on each individual to generate a new oﬀspring. The cycle prevention method is adopted to prevent cycle formation in the network structures. Individuals are then selected through a number of pairwise competitions over all the DAGs in the old population and the oﬀspring to form a new population for the next HEA generation. This process continues until the maximum number of HEA generations is reached. Finally, the best network with the lowest MDL score on O will be returned by the HEA search procedure.  
   
  4 Application in Direct Marketing Modeling In this section, we apply EBN in a real-world direct marketing modeling problem. We compare the performance of the Bayesian networks evolved by EBN (EBN models) with those obtained by LibB1 and Bayesware Discoverer2 from incomplete real-world data sets, as well as the performance of Bayesian neural network (BNN) [44], logistic regression (LR), na¨ıve Bayesian classiﬁer (NB) [45], and tree-augmented na¨ıve Bayesian network classiﬁer (TAN) [45]. We also present the performance of the Bayesian networks evolved by HEA using two missing values handling methods. They transform an incomplete data set into a completed one and employ HEA as search method for learning Bayesian networks from the new data set. In the ﬁrst method, denoted as HEA1, we simply replace missing values for each variable with the mode of the observed data of the variable (the state that has the largest number of observations). In the second method, denoted as HEA2, we consider the missing values as a new additional state for each variable, thus a new completed data set is generated. 1 2  
   
  LibB is available at http://compbio.cs.huji.ac.il/LibB/. A trial version of Bayesware Discoverer is available at http://www.bayesware.com/.  
   
  Direct Marketing Modeling  
   
  287  
   
  4.1 Methodology The response models are evaluated on a real-life direct marketing data set. It contains records of customers of a specialty catalog company, which mails catalogs to good customers on a regular basis. In this data set, there are 5,740 active respondents and 14,260 non-respondents. The response rate is 28.7%. Each customer is described by 361 attributes. We applied the forward selection criteria of logistic regression [46] to select nine relevant attributes out of the 361 attributes. Missing values are then introduced randomly into the data set. The percentages of the missing values in our experiments are 1%, 5%, and 10%, respectively. In our experiments, EBN, LibB and Bayesware Discoverer are executed directly on the data sets with missing values. For BNN, LR, NB, TAN and HEA1, we replace the missing values with the mean value or the mode for each variable. For HEA2, the missing values are treated as an additional new state for each variable. For EBN, the maximum number of iterations in EM is 10, the maximum number of HEA generations in each SEM generation is 100, the maximum number of SEM generations is 50, the population size is 50, tournament size is 7, and M AXuc is set to 10. For both HEA1 and HEA2, the maximum number of generations is set to 5000, the population size is 50, and the tournament size is 7. To compare the performance of diﬀerent response models, we use decile analysis which estimates the enhancement of the response rate for ranking at diﬀerent depth-of-ﬁle. Essentially, the descending sorted ranking list is equally divided into 10 deciles. Customers in the ﬁrst decile are the top ranked customers that are most likely to give response. Correspondingly, customers in the last decile are least likely to buy the speciﬁed products. A gains table will be constructed to describe the performance of the response model. In a gains table, we tabulate various statistics at each decile, including [47]: • Predicted Probability of Active: It is the average of the predicted probabilities of active respondents in the decile by the response model. • Percentage of Active: It is the percentage of active respondents in the decile. • Cumulative Percentage of Active: It is the cumulative percentage of active respondents from decile 0 to this decile. • Actives: It is the number of active respondents in this decile. • Percentage of Total Actives: It is the ratio of the number of active respondents in this decile to the number of all active respondents in the data set. • Cumulative Actives: It is the number of active respondents from decile 0 to this decile. • Cumulative Percentage of Total Actives: It is the ratio of the number of cumulative active respondents (from decile 0 to this decile) to the total number of active respondents in the data set.  
   
  288  
   
  M. Leung Wong  
   
  • Lift: It is calculated by dividing the percentage of active respondents by the response rate of the ﬁle. Intuitively, it estimates the enhancement by the response model in discriminating active respondents over a random approach for the current decile. • Cumulative Lift: It is calculated by dividing the cumulative percentage of active respondents by the response rate. This measure evaluates how good the response model is for a given depth-of-ﬁle over a random approach. It provides an important estimate of the performance of the model.  
   
  4.2 Cross-Validation Results In order to compare the robustness of the response models, we adopt a 10-fold cross-validation approach for performance estimation. A data set is randomly partitioned into 10 mutually exclusive and exhaustive folds. Each time, a diﬀerent fold is chosen as the test set and other nine folds are combined together as the training set. Response models are learned from the training set and evaluated on the corresponding test set. In Table 1, the average of the statistics of the EBN models for the 10 test sets of the data set with 1% missing values at each decile are tabulated. Numbers in the parentheses are the standard deviations. The EBN models have the cumulative lifts of 320.62 and 232.24 in the ﬁrst two deciles respectively, suggesting that by mailing to the top two deciles alone, the Bayesian networks generate over twice as many respondents as a random mailing without a model. For this data set, the average learning time of EBN is 49.1 seconds on a notebook computer with an Intel(R) Core(T M) 2 Duo 1.8GHz processor and 3 GB of main memory running Windows XP operating system. For the sake of comparison, the average of the cumulative lifts of the models learned by diﬀerent methods from data sets with diﬀerent percentages of missing values are summarized in Tables 2, 3, and 4, respectively. Numbers in the parentheses are the standard deviations. For each data set, the highest cumulative lift in each decile is highlighted in bold. The superscript + represents that the cumulative lift of the EBN models from the corresponding data set is signiﬁcant higher at 0.05 level than that of the models obtained by the corresponding methods. The superscript − represents that the cumulative lift of the EBN models is signiﬁcant lower at 0.05 level than that of the corresponding models. In Table 2, the average and the standard deviations of the cumulative lifts of the models learned by diﬀerent methods for the data set with 1% missing values are shown. In the ﬁrst two deciles, the networks learned by LibB have cumulative lifts of 211.19 and 185.59, respectively; and 213.04 and 189.43 respectively for Bayeseware Discoverer models. It can be observed that EBN models get the highest cumulative lifts in the ﬁrst three deciles, and the cumulative lifts of the EBN models in the ﬁrst two deciles are signiﬁcantly higher at 0.05 level than those of the other eight models.  
   
  Direct Marketing Modeling  
   
  289  
   
  In Table 3, the average and the standard deviations of the cumulative lifts for diﬀerent models learned from the data set with 5% missing values are shown. In the ﬁrst two deciles, the EBN models have the highest cumulative lifts of 320.27 and 224.07 respectively, and they are signiﬁcantly higher than those of the other eight methods at 0.05 level. The average learning time of EBN is 200.5 seconds for this data set. In Table 4, the average and the standard deviations of the cumulative lifts for diﬀerent models discovered from the data set with 10% missing values are shown. Again, it demonstrates that the discovered EBN models have the highest cumulative lifts in the ﬁrst two deciles, which are 320.18 and 212.88 respectively. The cumulative lifts of EBN models in the ﬁrst two deciles are signiﬁcantly higher at 0.05 level than those of the other eight methods. For this data set, the average learning time of EBN is 559.2 seconds. To summarize, the networks generated by EBN always have the highest cumulative lifts in the ﬁrst two deciles. Moreover, the cumulative lifts of the EBN models are signiﬁcantly higher at 0.05 level than those of the other models in the ﬁrst two deciles. Thus, we can conclude that EBN is very eﬀective in learning Bayesian networks from data sets with diﬀerent missing value percentages. Since an advertising campaign often involves huge investment, a Bayesian network which can categorize more prospects into the target list is valuable as it will enhance the response rate. From the experimental results, it seems that EBN are more eﬀective than the other methods.  
   
  Table 1 Gains Table of the EBN models for the 10 test sets of the data set with 1% missing values Decile Prob. of Active 0 44.61% (1.66%) 1 43.23% (0.82%) 2 42.92% (1.95%) 3 31.20% (1.72%) 4 24.61% (0.33%) 5 23.17% (0.37%) 6 22.69% (0.24%) 7 22.45% (0.55%) 8 17.12% (0.61%) 9 14.96% (0.87%)  
   
  % of Active 91.96% (6.41%) 41.37% (8.45%) 2.09% (7.63%) 30.30% (3.20%) 27.92% (3.55%) 58.26% (12.40%) 1.99% (6.05%) 4.30% (8.76%) 24.29% (4.65%) 5.66% (1.71%)  
   
  Cum. % of Active 91.96% (6.41%) 66.67% (5.55%) 45.14% (2.65%) 41.43% (1.91%) 38.73% (1.44%) 41.98% (1.99%) 36.27% (1.25%) 32.28% (1.19%) 31.39% (0.83%) 28.70% (0.71%)  
   
  Actives % of Total Actives 183.00 31.90% (12.75) (2.35%) 82.33 14.31% (16.81) (2.76%) 4.17 0.72% (15.19) (2.62%) 60.30 10.51% (6.37) (1.10%) 55.57 9.69% (7.07) (1.30%) 115.93 20.20% (24.67) (4.22%) 3.97 0.69% (12.05) (2.08%) 8.57 1.48% (17.43) (3.00%) 48.33 8.43% (9.25) (1.66%) 11.83 2.06% (3.58) (0.63%)  
   
  Cum. Cum. % of Actives Total Actives 183.00 31.90% (12.75) (2.35%) 265.33 46.22% (22.10) (3.54%) 269.50 46.94% (15.83) (2.24%) 329.80 57.45% (15.22) (1.94%) 385.37 67.14% (14.33) (1.85%) 501.30 87.33% (23.70) (3.47%) 505.27 88.02% (17.47) (1.92%) 513.83 89.50% (18.98) (1.89%) 562.17 97.94% (14.90) (0.63%) 574.00 100.00% (14.17) (0.00%)  
   
  Lift 320.62 (23.64) 143.86 (27.78) 7.26 (26.30) 105.60 (11.03) 97.40 (13.03) 202.99 (42.43) 6.90 (20.90) 14.91 (30.14) 84.74 (16.65) 19.75 (6.01)  
   
  Cum. Lift 320.62 (23.64) 232.24 (17.78) 157.25 (7.50) 144.33 (4.88) 134.95 (3.71) 146.29 (5.81) 126.38 (2.76) 112.44 (2.37) 109.36 (0.70) 100.00 (0.00)  
   
  290  
   
  M. Leung Wong  
   
  Table 2 Cumulative lifts of the networks learned by diﬀerent methods for the realworld data sets with 1% missing values. The statistics are obtained from the 10 test sets. Decile  
   
  EBN  
   
  LibB  
   
  Bayesware Discoverer  
   
  BNN  
   
  LR  
   
  NB  
   
  TAN  
   
  HEA1  
   
  HEA2  
   
  0  
   
  320.62 (23.64) 232.24 (17.78) 157.25 (7.50) 144.33 (4.88) 134.95 (3.71) 146.29 (5.81) 126.38 (2.76) 112.44 (2.37) 109.36 (0.70) 100.00 (0.00)  
   
  211.19+ (28.00) 185.59 + (17.44) 156.79 (7.08) 146.54 (5.56) 136.43 (6.92) 134.65+ (10.05) 119.16+ (4.11) 113.69 (3.87) 108.58 (2.03) 100.00 (0.00)  
   
  213.04+ (41.61) 189.43+ (14.53) 155.99 (7.46) 146.07 (7.90) 140.78 (12.08) 136.09+ (4.35) 119.63+ (1.82) 112.53 (1.84) 107.64+ (1.86) 100.00 (0.00)  
   
  200.11+ (11.00) 171.01+ (9.76) 156.56 (5.74) 144.26 (4.67) 135.60 (1.98) 127.33+ (2.15) 120.20+ (2.02) 113.80− (1.61) 107.71+ (0.98) 100.00 (0.00)  
   
  188.30+ (12.23) 168.80+ (9.73) 152.30+ (6.72) 141.40+ (3.13) 132.80+ (1.23) 125.80+ (2.86) 118.30+ (2.26) 112.50 (1.35) 106.60+ (1.07) 100.00 (0.00)  
   
  198.50+ (9.99) 169.70+ (7.15) 154.30 (4.45) 139.40+ (2.55) 131.20+ (1.75) 124.70+ (2.79) 116.70+ (1.64) 111.90 (1.45) 106.20+ (0.92) 100.00 (0.00)  
   
  195.80+ (6.41) 168.30+ (7.35) 150.90+ (4.89) 139.70+ (2.75) 132.50 (4.17) 124.10+ (2.69) 118.70+ (1.70) 113.40− (1.17) 106.20+ (1.03) 100.00 (0.00)  
   
  195.60+ (9.03) 169.80+ (8.65) 154.00 (5.54) 142.60 (5.23) 132.70+ (3.09) 126.40+ (2.88) 120.80+ (3.01) 113.10 (1.52) 106.20+ (1.14) 100.00 (0.00)  
   
  195.10+ (11.17) 170.10+ (6.79) 155.00 (5.83) 144.30 (3.80) 134.30 (3.02) 128.30+ (2.45) 118.80+ (1.48) 112.90− (0.57) 106.10+ (0.88) 100.00 (0.00)  
   
  1 2 3 4 5 6 7 8 9  
   
  Table 3 Cumulative lifts of the networks learned by diﬀerent methods for the realworld data sets with 5% missing values. The statistics are obtained from the 10 test sets. Decile  
   
  EBN  
   
  0  
   
  320.27 (22.43) 224.07 (16.29) 153.53 (6.98) 143.41 (5.83) 135.63 (3.67) 145.72 (5.51) 126.11 (2.86) 111.74 (2.05) 109.20 (1.11) 100.00 (0.00)  
   
  1 2 3 4 5 6 7 8 9  
   
  LibB  
   
  Bayesware Discoverer  
   
  BNN  
   
  217.63+ 246.59+ 199.37+ (47.64) (31.34) (10.33) 186.30+ 165.69+ 171.09+ (21.35) (19.94) (9.50) 155.28 152.60 155.97 (6.96) (7.80) (5.60) 145.15 143.24 143.21 (8.33) (6.71) (3.67) 136.75 144.16− 134.18 (6.21) (5.18) (2.61) 133.47+ 124.27+ 126.88+ (10.49) (3.38) (2.49) 118.90+ 118.10+ 120.07+ (4.94) (1.85) (2.29) 113.57− 113.09− 113.73− (3.69) (2.18) (1.48) 108.08+ 106.80+ 107.64+ (1.89) (1.56) (0.87) 100.00 100.00 100.00 (0.00) (0.00) (0.00)  
   
  LR  
   
  NB  
   
  TAN  
   
  HEA1  
   
  HEA2  
   
  188.50+ (11.45) 167.80+ (9.20) 151.40 (4.77) 140.40+ (2.67) 132.40+ (1.58) 125.60+ (2.67) 118.40+ (2.41) 112.40 (1.17) 106.60+ (0.97) 100.00 (0.00)  
   
  195.40+ (10.27) 170.30+ (6.33) 152.60 (4.14) 139.50+ (2.72) 130.50+ (1.27) 125.00+ (2.62) 117.00+ (1.70) 111.50 (1.35) 106.00+ (1.15) 100.00 (0.00)  
   
  197.80+ (9.84) 169.60+ (7.38) 151.50 (5.23) 139.90+ (2.85) 131.30+ (3.27) 123.60+ (1.65) 118.10+ (1.66) 112.50 (1.27) 106.10+ (1.10) 100.00 (0.00)  
   
  193.30+ (5.79) 167.90+ (6.82) 153.30 (4.47) 143.60 (3.89) 133.00+ (2.54) 126.30+ (2.95) 119.30+ (2.06) 112.70 (1.42) 106.20+ (1.23) 100.00 (0.00)  
   
  192.40+ (12.97) 169.90+ (7.58) 153.80 (5.85) 142.90 (4.51) 133.10+ (3.38) 128.10+ (3.21) 118.90+ (1.79) 113.20− (0.79) 105.90+ (0.88) 100.00 (0.00)  
   
  Direct Marketing Modeling  
   
  291  
   
  Table 4 Cumulative lifts of the networks learned by diﬀerent methods for the realworld data sets with 10% missing values. The statistics are obtained from the 10 test sets. Decile EBN 0 1 2 3 4 5 6 7 8 9  
   
  320.18 (24.36) 212.88 (15.96) 152.76 (5.65) 141.78 (4.40) 136.15 (5.39) 143.02 (6.50) 125.51 (3.20) 111.58 (2.08) 109.35 (0.91) 100.00 (0.00)  
   
  LibB  
   
  Bayesware Discoverer  
   
  BNN  
   
  LR  
   
  NB  
   
  TAN  
   
  HEA1  
   
  HEA2  
   
  239.06+ (64.44) 188.42+ (21.09) 153.36 (6.38) 142.46 (9.31) 134.86 (5.83) 134.62+ (10.86) 119.65+ (5.40) 112.61 (4.21) 108.97 (1.81) 100.00 (0.00)  
   
  196.86+ (18.50) 171.22+ (9.13) 152.20 (6.40) 139.63 (4.50) 131.55+ (4.84) 124.17+ (5.17) 117.23+ (2.73) 112.36 (1.85) 105.51+ (1.22) 100.00 (0.00)  
   
  195.71+ (13.60) 169.89+ (9.75) 154.32 (6.76) 142.28 (4.66) 133.14+ (3.55) 125.38+ (1.82) 119.27+ (2.25) 113.25− (1.28) 107.09+ (0.67) 100.00 (0.00)  
   
  185.10+ (12.56) 164.90+ (10.46) 149.30 (8.11) 138.90+ (3.57) 130.70+ (2.31) 123.60+ (2.01) 117.70+ (2.67) 111.90 (1.85) 106.40+ (0.84) 100.00 (0.00)  
   
  190.40+ (13.55) 167.70+ (6.29) 151.30 (3.95) 138.40+ (2.91) 128.60+ (1.78) 123.50+ (1.72) 116.10+ (2.33) 111.20 (1.81) 105.60+ (0.97) 100.00 (0.00)  
   
  194.90+ (11.43) 167.20+ (8.83) 151.30 (5.38) 139.40 (3.63) 129.80+ (4.16) 123.20+ (1.99) 117.30+ (1.42) 112.50− (1.27) 106.30+ (0.82) 100.00 (0.00)  
   
  194.10+ (9.87) 167.00+ (6.36) 152.40 (6.06) 139.90 (3.96) 132.30+ (2.67) 124.50+ (2.37) 118.30+ (2.26) 112.30 (1.25) 106.20+ (0.92) 100.00 (0.00)  
   
  195.80+ (9.27) 168.50+ (7.63) 153.00 (5.50) 141.00 (4.29) 132.40+ (3.86) 125.50+ (2.46) 118.40+ (1.84) 113.10− (0.88) 106.30+ (0.82) 100.00 (0.00)  
   
  5 Conclusion In this paper, we have described a new evolutionary algorithm called EBN that applies EM, a strategy for generating an initial network structure, and a data completing procedure to learn Bayesian networks from incomplete databases. To explore its interesting applications for real-life data mining problems, we have applied EBN to a real-world data set of direct marketing and compared the performance of the networks obtained by EBN with the models generated by other methods. The experimental results demonstrate that EBN outperforms other methods in the presence of missing values. The main advantage of EBN lies in the integration of EM and a hybrid evolutionary algorithm. While using EM and Bayesian inference to complete the missing values of a variable, the relationships of this variables with other variables are also considered instead of examining only the observed values of the variable. Thus better missing value imputations can be obtained. At the same time, the hybrid evolutionary algorithm facilitates the discovery of much better Bayesian network structures eﬀectively and eﬃciently. In this work, the missing values in the data sets are introduced randomly. In the future, studies will be conducted to facilitate EBN for incomplete data sets with other patterns of missing values.  
   
  292  
   
  M. Leung Wong  
   
  Acknowledgments. This work is supported by the Lingnan University Direct Grant DR04B8.  
   
  References 1. Jensen, F.V.: An Introduction to Bayesian Network. University of College London Press, London (1996) 2. Andreassen, S., Woldbye, M., Falck, B., Andersen, S.: MUNIN: A causal probabilistic network for interpretation of electromyographic ﬁndings. In: Proceedings of the Tenth International Joint Conference on Artiﬁcial Intelligence, pp. 366–372 (1987) 3. Cheeseman, P., Kelly, J., Self, M., Stutz, J., Taylor, W., Freeman, D.: Autoclass: A Bayesian classiﬁcation system. In: Proceedings of the Fifth International Workshop on Machine Learning, pp. 54–64 (1988) 4. Heckerman, D., Horvitz, E.: Inferring informational goals from free-text queries: A Bayesian approach. In: Cooper, G.F., Moral, S. (eds.) Proceedings of the Fourteenth Conference of Uncertainty in Artiﬁcial Intelligence, pp. 230–237. Morgan Kaufmann, Wisconsin (July 1998) 5. Cheng, J., Greiner, R., Kelly, J., Bell, D., Liu, W.: Learning Bayesian networks from data: An information-theory based approach. Artiﬁcial Intelligence 137, 43–90 (2002) 6. Spirtes, P., Glymour, C., Scheines, R.: Causation, Prediction, and Search, 2nd edn. MIT Press, MA (2000) 7. Cooper, G., Herskovits, E.: A Bayesian method for the induction of probabilistic networks from data. Machine Learning 9(4), 309–347 (1992) 8. Heckerman, D.: A tutorial on learning Bayesian networks. Microsoft Research Adv. Technol. Div., Redmond, WA, Tech. Rep. MSR-TR-95-06 (1995) 9. Lam, W., Bacchus, F.: Learning Bayesian belief networks-an approach based on the MDL principle. Computer Intelligence 10(4), 269–293 (1994) 10. Larra¨ naga, P., Poza, M., Yurramendi, Y., Murga, R., Kuijpers, C.: Structural learning of Bayesian network by genetic algorithms: A performance analysis of control parameters. IEEE Trans. Pattern Anal. Machine Intell. 18, 912–926 (1996) 11. Larra˜ naga, P., Kuijpers, C., Mura, R., Yurramendi, Y.: Learning Bayesian network structures by searching for the best ordering with genetic algorithms. IEEE Transactions on System, Man and Cybernetics 26(4), 487–493 (1996) 12. Wong, M.L., Lam, W., Leung, K.S.: Using evolutionary programming and minimum description length principle for data mining of Bayesian networks. IEEE Trans. Pattern Anal. Machine Intell. 21, 174–178 (1999) 13. Wong, M.L., Leung, K.S.: An eﬃcient data mining method for learning Bayesian networks using an evolutionary algorithm-based hybrid approach. IEEE Trans. Evolutionary Computation 8(4), 378–404 (2004) 14. Schafer, J.L., Graham, J.W.: Missing data: Our view of the state of art. Psychological Methods 7(2), 147–177 (2002) 15. Ramoni, M., Sebastinani, P.: Eﬃcient parameter learning in Bayesian networks from incomplete databases, Tech. Rep. KMI-TR-41 (1997) 16. Ramoni, M., Sebastinani, P.: The use of exogenous knowledge to learn Bayesian networks from incomplete databases, Tech. Rep. KMI-TR-44 (1997)  
   
  Direct Marketing Modeling  
   
  293  
   
  17. Friedman, N.: Learning belief networks in the presence of missing values and hidden variables. Machine Learning (1997) 18. Friedman, N.: The Bayesian Structural EM algorithm. In: Proceedings of the Fourteenth Conference on Uncertainty in Artiﬁcial Intelligence (1998) 19. Pe¨ na, J.M., Lozano, J.A., Larra¨ naga, P.: An improved Bayesian Structural EM algorithm for learning Bayesian networks for clustering. Pattern Recognition Letters, 779–786 (2000) 20. Pe¨ na, J.M., Lozano, J.A., Larra¨ naga, P.: Learning recursive Bayesian multinets for data clustering by means of constructive induction. Machine Learning, 63– 89 (2002) 21. Myers, J.W., Laskey, K.B., DeJong, K.A.: Learning Bayesian networks from incomplete data using evolutionary algorithms. In: Proceedings of the First Annual Conference on Genetic and Evolutionary Computation Conference 1999, pp. 458–465. Morgan Kauﬀman, Orlando (July 1999) 22. Petrison, L.A., Blattberg, R.C., Wang, P.: Database marketing: Past present, and future. Journal of Direct Marketing 11(4), 109–125 (1997) 23. Cabena, P., Hadjinian, P., Stadler, R., Verhees, J., Zansi, A.: Discovering Data Mining: From Concept to Implementation. Prentice-Hall Inc., Englewood Cliﬀs (1997) 24. Zahavi, J., Levin, N.: Issues and problems in applying neural computing to target marketing. Journal of Direct Marketing 11(4), 63–75 (1997) 25. Bhattacharyya, S.: Direct marketing response models using genetic algorithms. In: Proceedings of the Fourth International Conference on Knowledge Discovery and Data Mining, pp. 144–148 (1998) 26. Bhattacharyya, S.: Evolutionary algorithms in data mining: Multi-objective performance modeling for direct marketing. In: Proceedings of the Sixth International Conference on Knowledge Discovery and Data Mining, pp. 465–473 (August 2000) 27. Zahavi, J., Levin, N.: Applying neural computing to target marketing. Journal of Direct Marketing 11(4), 76–93 (1997) 28. Ling, C.X., Li, C.: Data mining for direct marketing: Problems and solutions. In: Proceedings of the Fourth International Conference on Knowledge Discovery and Data Mining, pp. 73–79 (1998) 29. Freund, Y., Schapire, R.E.: Experiments with a new boosting algorithm. In: Proceedings of the Thirteenth International Conference on Machine Learning, pp. 148–156 (1996) 30. Pearl, J.: Probabilistic Reasoning in Intelligent Systems: Networks of Plausible Inference. Morgan Kaufmann, San Mateo (1988) 31. Rubin, D.B.: Multiple Imputation for nonresponse in Surveys. Wiley, Chichester (1987) 32. Lakshminarayan, K., Harp, S.A., Samad, T.: Imputation of missing data using machine learning techniques. In: Proceeding of the second International Conference on Knowledge Discovery and data Mining, pp. 140–146 (1996) 33. Zio, M.D., Scanu, M., Coppola, L., Luzi, O., Ponti, A.: Bayesian networks for imputation. Journal of the Royal Statistical Society (A) 167(2), 309–322 (2004) 34. Hruschka, E.R.J., Ebecken, N.F.F.: Missing values prediction with K2. Intelligent Data Analysis 6(6), 557–566 (2002) 35. Kim, H., Golub, G.H., Park, H.: Imputation of missing values in DNA microarray gene expression data. In: Proceedings of IEEE Computational Systems Bioinformatics Conference, pp. 572–573. IEEE Press, Los Alamitos (2004)  
   
  294  
   
  M. Leung Wong  
   
  36. Cai, Z., Heydari, M., Lin, G.: Microarray missing value imputation by iterated local least squares. In: Proceedings of the Fourth Asia-Paciﬁc Bioinformatics Conference, pp. 159–168 (2006) 37. Liu, L., Hawkins, D.M., Ghosh, S., Young, S.: Robust singular value decomposition analysis of microarray data. Proceedings of the National Academy of Sciences of the United States of America 100(23), 13167–13172 (2003) 38. Geman, S., Geman, D.: Stochastic relaxation, gibbs distributions and the bayesian restoration of images. IEEE Trans. Pattern Anal. Machine Intell. 6, 721–742 (1984) 39. Dempster, A.P., Laird, N.M., Rubin, D.B.: Maximum likelihood from incomplete data via the EM algorithm. Journal of the Royal Statistical Society(B) 39(1), 1–38 (1977) 40. Lauritzen, S.L.: The EM algorithm for graphical association models with missing data. Computational Statistics and Data Analysis, 191–201 (1995) 41. Ramoni, M., Sebastiani, P.: Robust learning with missing data. Machine Learning 45, 147–170 (2001) 42. Lauritzen, S.L., Spiegelhalter, D.J.: Local computations with probabilities on graphical structures and their application to expert systems. Journal of the Royal Statistical Society 50(2), 157–224 (1988) 43. Huang, C., Darwinche, A.: Inference in belief networks: a procedural guide. International Journal of Approximate Reasoning 15(3), 225–263 (1996) 44. Neal, R.M.: Bayesian Learning for Neural Networks. Springer, Heidelberg (1996) 45. Friedman, N., Geiger, D., Goldszmidt, M.: Bayesian network classiﬁers. Machine Learning 29, 131–163 (1997) 46. Agresti, A.: Categorical Data Analysis. Wiley, New York (2002) 47. Rud, O.P.: Data Mining Cookbook: Modeling Data for Marketing, Risk and Customer Relationship Management. Wiley, New York (2001)  
   
  Designing Optimal Products: Algorithms and Systems Stelios Tsafarakis and Nikolaos Matsatsinis Technical University of Crete, Department of Production and Management Engineering,Decision Support Systems Laboratory, Chania, Greece e-mail: [email protected]  [email protected]   
   
  Abstract. The high cost of a product failure makes it imperative for a company to assess the market penetration of a new product at its early design. In this context, the Optimal Product Line Design problem was formulated thirty five years ago, and remains a significant research topic in the area of quantitative marketing until today. In this chapter we provide a brief description of the problem, which belongs to the class of NP-hard problems, and review the optimization algorithms that have been applied to it. The performance of the algorithms is evaluated, and the best two approaches are applied to simulated data, as well as a real world scenario. Emphasis is placed on Genetic Algorithms, since the results of the study indicate them as the approach that better fits to the specific marketing problem. Finally, the relevant marketing systems that deal with the problem are presented, and their pros and cons are discussed.  
   
  1 Introduction Nowadays the economic environment where companies operate has become more competitive than ever. The globalization of the markets, the shorter product life cycles, and the rapid technology development, put high pressure on firms’ profitability. In order to survive under such circumstances a company must continuously launch new products or redesign its current ones. However, such procedures entail risk. A new product is costly and difficult to change, hence if it ends up as a commercial failure, the firm’s viability may be put in danger. Bad design constitutes one of the most frequent reasons for the failure of a new product (Kotler and Armstrong, 2008). In order to avoid such situations, managers try to design optimal products and assess their market penetration before their entrance to the production stage. This constitutes a wide area of research in quantitative marketing for over thirty years, known as the Optimal Product (Line) Design Problem. Here, each product consists of a number of attributes that take specific levels, and the consumer preferences regarding the various attribute levels are considered known. Taking as input these consumer preferences, optimization algorithms are used in order for optimal product profiles to be designed. Different objectives can be employed, such as the maximization of the products’ market share or J. Casillas & F.J. Martínez-López (Eds.): Marketing Intelligence Systems, STUDFUZZ 258, pp. 295–336. springerlink.com © Springer-Verlag Berlin Heidelberg 2010  
   
  296  
   
  S. Tsafarakis and N. Matsatsinis  
   
  the maximization of the company’s profit. In real world applications, as the number of attributes and levels increases, the number of candidate product profiles can grow uncontrollable large, making the managerial task for selecting the appropriate combination of attribute levels practically infeasible. Actually the optimal product line design problem has been proved to be NP-hard, which means that the complete solution space cannot be enumerated in polynomial time. In this context, a number of different heuristic approaches have been applied to solve the problem from 1974 until today. Some of the algorithms have been incorporated to intelligent marketing systems, which assist a manager in such problems of high complexity. Several papers have been published that present a specific algorithm and compare its performance with one or more other approaches. However, the comparison concerns only the approximation of the optimal solution, whereas marketing practitioners who work on real problems are interested in a number of other more qualitative issues. No study has been published that reviews the advantages and disadvantages of the algorithms that have been applied to the problem, while little work has been done regarding the evaluation of the relevant marketing systems. In this chapter, we aim at filling this gap by presenting an integrated work, which provides a detailed description of the product line design problem, reviews all the algorithms that have been applied to the problem along with the related marketing systems that incorporate them, and tries to draw valuable insights for the manager as well as the researcher. Emphasis is placed on the application of Genetic Algorithms to the problem, since it is the mostly used method in the literature, and constitutes the most advanced algorithm that has been incorporated into a marketing system. This work will help the marketing manager understand the problem, select the method that mostly fits to his requirements, and decide on whether he will use one of the existing marketing systems or he will need to develop a new system from the scratch, which will better satisfy his company’s requirements. A real world application is presented extensively, in order to support the manager in such a decision. Furthermore, this chapter provides a guide to the interested researchers, describing the optimization algorithms applied to the problem, comparing their performance, and pointing out the potential areas for future work. The rest of the chapter is organized into five sections as follows. Section 2 provides a brief description of the problem and its main properties. In Section 3, the different formulations of the problem are described. The optimization algorithms that have been applied to the problem are presented extensively in Section 4, and their pros and cons are evaluated. In Section 5 we compare the performance of Genetic Algorithms and Simulated Annealing, using a real data set as well as a Monte Carlo simulation. The relevant marketing systems and programs that have been developed are presented in Section 6, and some conclusions are drawn. Finally, Section 7 provides an overview of the main conclusions of the study, and suggests areas of future research.  
   
  2 The Optimal Product (Line) Design Problem The goal of the optimal product (line) design problem is the design of one (or more products), the introduction of which to the market will maximize a firm’s objective  
   
  Designing Optimal Products: Algorithms and Systems  
   
  297  
   
  (usually market share). This requires the proper modeling of customer preferences concerning the various product features. In particular, each product is represented as a bundle of attributes (features) which can take specific levels. A personal computer for example, consists of the attributes monitor, processor, hard disk, memory etc., the levels of which are illustrated in Table 1. Every individual has its own preferences; for example a civil engineer will probably choose a large monitor, whereas a mathematician may select a fast processor. Customer preferences are represented as values (called part-worths) for each attribute level. An example is given in Table 1. Table 1 Part-worths for each attribute level of a personal computer  
   
  Attributes  
   
  Monitor  
   
  Processor  
   
  Hard disk  
   
  Memory Mouse Camera  
   
  Levels 17’’ 19’’ 20’’ 24’’ Single-core 3,8 GHz Core-2 2,6 GHz Core-4 2Ghz 200 GB 500 GB 750 GB 1T 2 GB 4 GB 6 GB Cable Wireless Embedded No camera  
   
  Partworths Customer1 Customer2 0.8 0.1 0.2 0.3 0.3 0.4 0.5 0.9 0.1 0.2 0.3 0.3 0.9 0.5 0.4 0.2 0.6 0.3 0.7 0.5 0.4 0.8 0.2 0.1 0.4 0.3 0.9 0.4 0.3 0.1 0.4 0.9 0.3 0.8 0.2 0.2  
   
  Before making a choice among competing products, a consumer is assumed to implicitly assign a utility value to each, by evaluating all its attributes in a simultaneous compensative manner. On the basis of the above representation scheme, the utility value of a product is the sum of the part-worths of the corresponding attribute levels. The higher the product’s utility, the higher the probability to be chosen. Suppose that the two customers whose part-worths are presented in Table 1, have to select between PC1 (17’’, core-4 2GHz, HD 750 GB, 6 GB RAM, cable mouse, no camera) and PC2 (24’’, Single-core 3,8 GHz, HD 200 GB, 6 GB RAM, wireless mouse, embedded camera). Customer 1 will probably choose PC1 (utility=3.8) over PC2 (utility=2.5), whereas Customer 2 will probably choose PC2 (utility=3.4) over PC1 (utility=1.8). The utilities are converted to choice probabilities for each product through choice models, and are then aggregated across the whole customer base to provide hypothetical market shares. If we know the partworths for a population of consumers, we can simulate the introduction of  
   
  298  
   
  S. Tsafarakis and N. Matsatsinis  
   
  different product configurations (combinations of attribute levels) to the market and estimate conditional market shares. With the use of optimization algorithms we can find the product(s) that maximizes a firm’s market share, given the customer preferences and the configuration of the competitive products in the market. An example could be a new car manufacturer who is interested in introducing 3 new car models in different categories (Sport, SUV, Station Wagon) that will provide him with the highest possible volume sales. The customer preferences are usually revealed through market surveys, the results of which are entered into preference disaggregation methods like Conjoint Analysis, which estimate partworths for each individual. In the Optimal Product (line) Design problem the part-worths for each customer, as well as the competitive product profiles are considered known, and the aim is to find the product(s) configuration that maximizes a specific firm’s criterion. Next, we describe the different properties of the optimal product (line) design problem.  
   
  2.1 Choice Rule The choice rule (or choice model) is the underlying process by which a customer integrates information to choose a product from a set of competing products. Different choice rules have been developed with varying assumptions and purposes and they differ in the underlying logic structure that drives them (Manrai, 1995). The choice rule models the consumer’s purchasing pattern by relating preference to choice. It is a mathematical model which converts the product utilities that an individual assigns to the set of alternatives under consideration, to choice probabilities for each alternative. Choice rules can be either deterministic or probabilistic. The first choice or maximum utility is a deterministic rule, which assumes that the individual will always purchase the product with the highest utility. In this case the highest utility alternative receives probability of choice equal to 1, while the rest of the alternatives get a zero probability. Probabilistic rules on the other hand, assume that all alternatives receive a probability of choice in proportion to their utility value. Popular probabilistic choice models are: n  
   
  • •  
   
  the Bradley-Terry-Luce (1952; Luce, 1959), Pij=  
   
  ∑U  
   
  U ij  
   
  j =1  
   
  e  
   
  and the MultiNomial Logit (McFadden, 1974), Pij=  
   
  U ij  
   
  ij  
   
  ,  
   
  n  
   
  ∑e j =1  
   
  U ij  
   
  ,  
   
  where Pij is the probability that consumer i selects product j, Uij is the utility he assigns to product j, and n is the number of competing products. The first approaches applied to the problem employed the maximum utility rule, which is still widely used in product design applications due to its simple form. Its main limitation is that it tends to exaggerate the market share of popular alternatives while underestimating the unpopular ones. Probabilistic models have not received much attention in the specific problem, as they increase the algorithm’s complexity (the problem becomes non-linear). The kind of choice model used affects the problem formulation, as we will see in a later section.  
   
  Designing Optimal Products: Algorithms and Systems  
   
  299  
   
  2.2 Optimization Criteria The first criterion introduced was the maximization of a company’s market share, also known as share of choices (Shocker and Srinivasan, 1974), which remains the most frequently used objective until today. Later, two more criteria were presented, the buyer’s welfare (Green and Krieger, 1988) and the seller’s welfare (Green et al., 1981). In the former, no competition is assumed, and the aim is the maximization of the sum of the utilities that products under design offer to all customers. This is the least frequently used criterion, which mainly concerns product and services offered by public organizations. In the seller’s welfare, the goal is the maximization of a firm’s profit. This is the most complicated criterion since it requires the incorporation of the marginal return that the firm obtains from each attribute level into the objective function.  
   
  2.3 Number of Products to be Designed The optimal product design problem (one product to be designed) was first formulated by Zufryden (1977). Eight years later Green & Krieger (1985) introduced the optimal product line design problem (two or more products to be designed), which is the main focus of the specific research area today.  
   
  2.4 Procedure Steps The optimal product line design problem can be formulated either as a one-step or a two-step approach. In the latter, a reference set of candidate alternatives is first defined, and the items that optimize a certain criterion are selected next with the use of a specific algorithm (Green & Krieger, 1985). The problem here is to decide on the size of the reference set of products, and the way that it will be constructed in order to include all potential good solutions. Nowadays, the increase in computers’ speed, as well as the development of advanced optimization algorithms, has enabled the design of the items that comprise the line directly from part-worth data in a one-step approach (Green & Krieger, 1988).  
   
  2.5 Optimization Algorithm In real world applications, as the number of attributes and levels increases, the number of different product profiles raises exponentially, making the selection of the appropriate combination of attribute levels a very complex managerial task. For example in a product category with 7 attributes each taking 6 different levels, the number of possible product profiles is 279,936, while for designing a line of 3 products the number of candidate solutions is over a trillion. The exponential increase in the number of candidate solutions with the increase in the number of attributes and levels is illustrated in Table 2 (Alexouda, 2004), where K is the number of attributes, and J is the number of levels.  
   
  300  
   
  S. Tsafarakis and N. Matsatsinis  
   
  Kohli and Krishnamurti (1989) proved that the share of choices for the single product design problem is NP-hard, which means that the complete enumeration of the solution space is practically infeasible in tractable time. Kohli and Sukumar (1990) proved the same for the buyer’s welfare and the seller’s welfare, also for the single product design. In this context many different heuristic approaches have been applied to the problem from 1974 until today, the most significant of which are illustrated in Table 3. Table 2 The number of possible solutions (products and product lines) of different problem sizes (source: Alexouda, 2004)  
   
  Products in line 2 2 2 2 3 3 3 3 2 2 2 2 2 2 2 2 2 2 2 2 3 3 3 3 3 3 3 3 3 3 3 3  
   
  K  
   
  J  
   
  3 4 4 5 3 4 4 5 5 5 5 6 6 6 7 7 7 8 8 8 5 5 5 6 6 6 7 7 7 8 8 8  
   
  4 3 4 3 4 3 4 3 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6  
   
  Number of possible products 64 81 256 243 64 81 256 243 1024 3125 7776 4096 15,625 46,656 16,384 78,125 279,936 65,536 390,625 1,679,616 1024 3125 7776 4096 15,625 46,656 16,384 78,125 279,936 65,536 390,625 1,679,616  
   
  Number of product lines  
   
  possible  
   
  2016 3240 32,640 29,403 41,664 85,320 2,763,520 2,362,041 523,776 4,881,250 30,229,200 8,386,560 122,062,500 1,088,367,840 134,209,536 3,051,718,750 39,181,942,080 2,147,450,880 76,293,750,000 1,410,554,113,920 178,433,024 5,081,381,250 78,333,933,600 11,444,858,880 635,660,812,500 16,925,571,069,120 732,873,539,584 79,469,807,968,750 3,656,119,258,074,240 46,910,348,656,640 9,934,031,168,750,000 789,728,812,499,209,000  
   
  Deterministic Deterministic  
   
  Nair, Thakur & Wen 1995  
   
  Deterministic, Probabilistic Probabilistic  
   
  Sudharshan, May & Gruca 1988 Green, Krieger & Zelnio 1989  
   
  Dobson & Kalish 1993  
   
  Deterministic  
   
  McBride & Zufryden 1988  
   
  Deterministic  
   
  Probabilistic  
   
  Green & Krieger 1988  
   
  Kohli & Sukumar 1990  
   
  Deterministic  
   
  Kohli & Krishnamusti 1987  
   
  Deterministic  
   
  Zufryden 1977 Deterministic, Probabilistic Deterministic  
   
  Deterministic  
   
  Shocker & Srinivasan 1974  
   
  Green, Carroll & Goldberg 1981 Green & Krieger 1985  
   
  Choice r ule  
   
  . Paper  
   
  One  
   
  Two  
   
  One  
   
  Two  
   
  Share Share, Profit, Buyers welfare Share, Profit, Buyers welfare Share, Profit  
   
  One  
   
  Two  
   
  One  
   
  Share  
   
  Share, Profit, Buyers welfare Share  
   
  One  
   
  Two  
   
  Share  
   
  Share  
   
  One  
   
  One  
   
  One  
   
  Steps  
   
  Share, Profit  
   
  Share  
   
  Share, Profit  
   
  Objective Gradient search, Grid search Mathematical programming Response Surface methods Greedy Heuristic, Interchange Heurist Dynamic Programming Divide & Conquer Mathematical programming Non linear programming Coordinate Ascent Dynamic Programming Greedy Heuristic Beam Search  
   
  Algor ithm  
   
  Table 3 Approaches applied to the optimal product (line) design problem  
   
  Line  
   
  Line  
   
  Line  
   
  Line  
   
  Line  
   
  Line  
   
  Line  
   
  Single  
   
  Line  
   
  Single  
   
  Single  
   
  Pr od ducts Single  
   
  PROSIT  
   
  DIFFSTRAT  
   
  SIMOPT  
   
  DESOP, LINEOP  
   
  QUALIN  
   
  ZIPMAP  
   
  Sysstem  
   
  Designing Optimal Products: Algorithms and Systems 301  
   
  Probabilistic  
   
  Deterministic  
   
  Steiner & Hruschka 2003  
   
  Alexouda 2004  
   
  Belloni, Freund, Selove & Simester 2008  
   
  Share  
   
  Profit  
   
  Share  
   
  Deterministic  
   
  Profit  
   
  Share  
   
  Probabilistic  
   
  Krieger & Green 2002  
   
  Share  
   
  Deterministic  
   
  Deterministic  
   
  Shi, Olafsson & Chen 2001  
   
  Profit  
   
  Share  
   
  Deterministic  
   
  Alexouda & Paparrizos 2001  
   
  Share, Buyers welfare Profit  
   
  Deterministic  
   
  Probabilistic  
   
  Chen & Hausman 2000  
   
  Balakrishnan, Gupta & Jacob 2004 Camm, Cochran, Curry & Kannan 2006  
   
  Deterministic  
   
  Balakrishnan & Jacob 1996  
   
  Table 3 (Cont.)  
   
  One  
   
  One  
   
  One  
   
  One  
   
  One  
   
  One  
   
  One  
   
  One  
   
  Two  
   
  One  
   
  Genetic algorithm Non linear programming Genetic algorithm Nested Partitions Greedy Heuristic Genetic algorithm Genetic algorithm Genetic algorithm Branch and Bound with Lagrangian relaxation Branch and Bound with Lagrangian relaxation Single  
   
  Line  
   
  Line  
   
  Line  
   
  Single  
   
  Line  
   
  Line  
   
  Line  
   
  Single  
   
  MDSS  
   
  MDSS  
   
  302 S. Tsafarakis and N. Matsatsinis  
   
  Designing Optimal Products: Algorithms and Systems  
   
  303  
   
  3 Problem Formulation The formulation of the problem depends on the employed choice rule and the selected optimization criterion.  
   
  3.1 Deterministic Choice Rules The most common approach found in the literature is the share of choices problem for the optimal product line design using the first choice rule. 3.1.1 Share of Choices Here, each individual is assumed to have an existing favorite product called status quo. The problem can be formulated as a 0-1 integer program, with the use of the following parameters (Kohli & Sukumar, 1990): Ω = {1,2,…, K} is the set of K attributes that comprise the product. Φκ = {1,2,…, Jκ} is the set of Jκ levels of attribute k. Ψ = {1,2,…M} is the set of products to be designed. θ = {1,2,…Ι} is the set of Ι customers. wijk= is the part-worth that customer i ∈ θ assigns to level j ∈ Φκ of attribute k ∈ Ω.  
   
  jki* = is the level of attribute k ∈ Ω of customer’s i ∈ θ status quo product. cijk = wijk - wij*k is the relative difference in the part-worth that customer i ∈ θ assigns between level j and level j* of attribute k ∈ Ω. Since the firm may already offer a number of products, we index as θ’ ⊂ θ the set of customers whose current status quo product is offered by a competitor. In this way the company aims at gaining the maximum possible number of clients from its competitors, without cannibalizing its existing product line. Three decision variables are also used: 1, if the level of product's m attribute k is j,  
   
  { x ={ x ={ xjkm =  
   
  0, otherwise  
   
  1, if product's m utility for customer i is less than his status quo,  
   
  im  
   
  0, otherwise  
   
  1, if customer i does not choose to switch from his status quo,  
   
  i  
   
  0, otherwise  
   
  In this context the share of choices problem in the product line design using a deterministic rule is formulated as follows:  
   
  304  
   
  S. Tsafarakis and N. Matsatsinis  
   
  ∑θ x  
   
  i  
   
  i∈ '  
   
  min  
   
  (1)  
   
  subject to  
   
  ∑x  
   
  j ∈Φ κ  
   
  =1  
   
  jkm  
   
  ∑ ∑c  
   
  ijk  
   
  k ∈Ω j ∈Φ κ  
   
  x jkm + yim > 0 ,  
   
  ∑x  
   
  im  
   
  xi -  
   
  k ∈ Ω, m ∈ Ψ,  
   
  ,  
   
  m∈Ψ  
   
  (2) i ∈ θ’, m ∈ Ψ,  
   
  ∀ i ∈ θ’  
   
  ≥ 1 – M,  
   
  xjkm, xim, xi = 0, 1 integer, i ∈ θ’, j ∈ Φκ, k ∈ Ω, m ∈ Ψ.  
   
  (3)  
   
  (4) (5)  
   
  Constraint (2) requires each product in the line to be assigned exactly one level of each attribute. Constraint (3) restricts xim to be 1 only if customer i prefers his status quo to product m. Constraint (4) forces xi to be 1 only if xim = 1 for all m ∈ Ψ, that is if customer i prefers his status quo to all products in the line. Constraint (5) represents the binary restrictions regarding the problem’s decision variables. The objective function (1) minimizes the number of instances for which xi = 1, and hence minimizes the number of customers who decide to be loyal to their status quo products (which is equivalent to maximizing the number of customers who switch from their status quo to a product from the company’s line). 3.1.2 Buyer’s Welfare In this case no status quo product is assumed for the customer (buyer), who will select the item from the offered line that maximizes his utility. The following decision variable is used: 1, if level j of attribute k appears in product m, and buyer i,  
   
  xijkm=  
   
  {  
   
  0, otherwise  
   
  The problem can be formulated as a 0-1 integer program as follows (Kohli & Sukumar, 1990):  
   
  ∑θ ∑ ∑ ∑ w i∈ m∈Ψk ∈Ω j∈Φ κ  
   
  max  
   
  x  
   
  ijk ijkm  
   
  (6)  
   
  subject to  
   
  ∑ ∑x  
   
  j∈Φ κ m∈Ψ  
   
  ∑x  
   
  j∈Φ κ  
   
  ijkm  
   
  ijkm  
   
  −  
   
  =1  
   
  i ∈ θ, k ∈ Ω,  
   
  ,  
   
  ∑x  
   
  j∈Φ κ '  
   
  ijk ' m  
   
  =0 ,  
   
  k’>k, k,k’ ∈ Ω, i ∈ θ, m ∈ Ψ,  
   
  (7) (8)  
   
  Designing Optimal Products: Algorithms and Systems  
   
  xijkm + xi’j’km ≤ 1,  
   
  i’>i, j’>j, i,i’ ∈ θ, j,j’ ∈ Φκ,k ∈ Ω, m ∈ Ψ,  
   
  xijkm = 0, 1 integer, i ∈ θ, j ∈ Φκ, k ∈ Ω, m ∈ Ψ  
   
  305  
   
  (9) (10)  
   
  Constraint (7) requires that, across products, only one level of an attribute be associated with a specific buyer. Constraint (8) requires that, across attributes, the level assigned to buyer i ∈ θ must correspond to the same product. Constraint (9) requires that for all buyers assigned to a specific product, the same level of an attribute must be specified. Together, these three constraints require that each buyer be assigned one of the products in the line. The objective function (6) selects the products (attribute levels combination) to maximize the total utility across buyers. 3.1.3 Seller’s Welfare Kohli & Sukumar (1990) provide a detailed description of the seller’s welfare problem, where the firm wants to maximize the marginal utility obtained by the introduction of a line of M new products. The seller may already offer some products in the market, and competition is represented through the existence of a current status quo product for each customer. If customer i ∈ θ selects a product in which level j ∈ Φκ of attribute k ∈ Ω appears, the seller is assumed to obtain a part-worth value uijk. The seller’s marginal return obtained from level j ∈ Φκ of attribute k ∈ Ω is: • •  
   
  dijk = uijk - uij*k, if customer i ∈ θ switches from a product offered by the seller dijk = uijk if customer i ∈ θ switches from a product offered by a competitor  
   
  The problem can be formulated as a 0-1 integer program as follows: max  
   
  ∑θ ∑∑ ∑ d  
   
  ijk  
   
  xijkm yi  
   
  i∈ m∈Ψ k∈Ω j∈Φκ  
   
  (11)  
   
  subject to  
   
  ∑∑ ∑w  
   
  m∈Ψ k ∈Ω j∈Φ κ  
   
  ijk  
   
  ( xijkm − xi ' jkm ) ≥ 0  
   
  , i  
   
  yi ∑∑ ∑ wijk xijkm ≥ y u m∈Ψ k∈Ω j∈Φκ  
   
  * i i  
   
  ≠ i’, i ∈ θ,  
   
  , i∈ θ  
   
  (12) (13)  
   
  yi = 0, 1 integer, and (7), (8), (9), (10). Constraints (7)-(10) require, as in the buyer’s welfare problem, that a specific product is assigned to each customer, and that each product in the line be assigned exactly one level of each attribute. Constraint (12) requires that each customer is assigned to the product that maximizes his utility. Constraint (13) requires that the seller obtains a return from customer i only if the utility of the new item assigned * to the customer is higher than the utility of the ui of his status quo product. The objective function (11) selects the products to maximize the seller’s total return from the products in the line.  
   
  306  
   
  S. Tsafarakis and N. Matsatsinis  
   
  3.2 Probabilistic Choice Rules When probabilistic choice rules are used, the market is assumed to consist of Ν competitive products with known configurations, including the M candidate items for the firm’s line: Ξ = {1,2,…Ν} is the set of products that comprise the market. 3.2.1 Share of Choices As before Ψ ⊂ Ξ is the set of products to be designed. Customers do not have a status quo product, and do not deterministically choose the highest utility product. Instead, we assume that each of the Ν alternatives has a certain probability to be selected, which is calculated with the use of a probabilistic choice model. Using BTL for example, the probability that customer i will choose product m is estimated as follows: Pim =  
   
  ∑U  
   
  U im  
   
  n∈Ξ  
   
  in  
   
  i ∈ θ, m ∈ Ψ, n ∈ Ξ,  
   
  ,  
   
  (14)  
   
  where Uim the utility that customer i assigns to product m (sum of its part-worths):  
   
  uim = ∑  
   
  ∑w  
   
  ijk  
   
  k ∈Ω j∈Φ κ  
   
  x jkm  
   
  , i ∈ θ, j ∈ Φκ, k ∈ Ω, m ∈ Ψ.  
   
  In this context the problem is formulated as the following non-linear program: max  
   
  ∑∑ P  
   
  m∈Ψ i∈θ  
   
  im  
   
  (15)  
   
  subject to  
   
  xjkm = 0, 1 integer, and (2). The objective function (15) maximizes the market share of the m products (probability to be purchased) of the company’s line. 3.2.2 Seller’s Welfare Green and Krieger (1992) presented the seller’s welfare problem, in an application of the SIMOPT program to pharmaceutical products. In order for the company’s profit to be maximized, variable (depending on attribute levels) and fixed costs for each product must be included in the objective function. The variable cost per unit for a product m is given by the following linear additive function:  
   
  cm(var) = ∑  
   
  ∑c  
   
  k ∈Ω j∈Φ κ  
   
  (var) jk  
   
  x jkm  
   
  , j ∈ Φκ, k ∈ Ω, m ∈ Ψ,  
   
  where  
   
  c (var) jk  
   
  the variable cost of attribute’s k level j for the seller.  
   
  Designing Optimal Products: Algorithms and Systems  
   
  307  
   
  A similar function is used for the fixed cost of product m:  
   
  cm( fix ) = ∑  
   
  ∑c  
   
  k ∈Ω j∈Φ κ  
   
  ( fix ) jk  
   
  x jkm  
   
  , j ∈ Φκ, k ∈ Ω, m ∈ Ψ.  
   
  If pm denotes item’s m price, the problem is formulated as the following non-linear program: ⎡  
   
  ∑ ⎢⎣( p  
   
  max m∈Ψ subject to  
   
  m  
   
  ( fix ) ⎤ − c (var) jk )∑ Pim I − cm ⎥ i∈θ ⎦  
   
  (16)  
   
  xjkm = 0, 1 integer, and (2). The objective function (16) maximizes the total seller’s profit obtained from the introduction of a line of M products.  
   
  4 Optimization Algorithms Applied to the Problem In this section we review and evaluate the most important algorithms that have been applied to the optimal product line design problem.  
   
  4.1 Greedy Heuristic Introduced by Green & Krieger (1985), this heuristic proceeds in two steps. At the first step a “good” set of reference products is created. The second step begins by choosing the best alternative among the candidate products. Then, the second alternative is selected from the reference set, which optimizes the objective function provided that the first product is already included in the market. The procedure iterates by adding one product at a time until the desired number of products in the line has been reached. In another paper, Green and Krieger (1987) describe the “best in heuristic” for developing the set of reference products. Initially the product profile that maximizes the utility u1max of customer 1 is found through complete enumeration of the attribute levels. If customer’s 2 utility for customer’s 1 best product is within a user specified fraction ε of u2max, then customer’s 2 best product is not added to the set; otherwise it is. As the method proceeds through the group of customers, all of the products currently on the set are tested to see if any are within ε of ukmax for customer k, and the previous rule is applied. The process is usually repeated through randomized ordering of the customers, and different values of ε, depending on the desired size of the set. Local optimality is not guaranteed, as it depends on the first product added to the line.  
   
  4.2 Interchange Heuristic In the same paper, Green and Krieger (1985) introduced another method where initially, a product line is randomly selected and its value is estimated. Next, each  
   
  308  
   
  S. Tsafarakis and N. Matsatsinis  
   
  alternative from the reference set is checked to see whether there exists a product in the line, the replacement of which by the specific alternative will improve the line’s value. If this condition holds, the alternative is added, and the product that is removed is the one that results in the maximum improvement of the line’s value. The process is repeated until no further improvement is possible. The authors recommend the use of the solution provided by the Greedy Heuristic, as the initial product line. The Interchange Heuristic guarantees local optimality, where the local neighborhood includes all solutions that differ from the existing by one product.  
   
  4.3 Divide and Conquer In this approach, developed by Green and Krieger (1988), the set of attributes K that comprise the product line is divided into two equal subsets K1 and K2. First, the levels of attributes belonging to K1 that are good approximations of the optimal solution are estimated. The authors suggest averaging the part-worths within each level of each attribute, and selecting for each attribute the level with the highest average. In each iteration, the values of the attributes belonging to the one subset are held fixed, while the values of the other subset are optimized through an exhaustive search. If the search space is too large for completely enumerating half of the attributes, the set of attributes can be divided into more subgroups, at the risk of finding a worst solution. Local optimality is guaranteed, where the local neighborhood depends on the number of subsets.  
   
  4.4 Coordinate Ascent Green et al. (1989), propose a heuristic that can be considered as a Coordinate Ascent implementation. A product line is initially formed at random and evaluated. The algorithm then iterates through each product attribute in a random order, and assesses each possible level. The altering of an attribute’s level is acceptable if it improves the solution’s quality. Only a single attribute change is assessed at a time (one opt version), and the algorithm terminates when no further improvement is possible. Local optimality is guaranteed, with the local neighborhood including all solutions that differ from the existing one by a single attribute.  
   
  4.5 Dynamic Programming Kohli and Krishnamusti (1987), and Kohli and Sukumar (1990) use a dynamic programming heuristic for solving the optimal product and product line design problems respectively. Here, the product (line) is built one attribute at a time. Initially, for each level of attribute B, the best level of attribute A is identified, forming in this way a number of partial product profiles, equal to attribute’s B number of levels. Next, for each level of attribute C, the best partial profile (consisting of attributes A and B) that was built in the previous step is identified. The method proceeds until all product(s) attributes have been considered. Finally, the product  
   
  Designing Optimal Products: Algorithms and Systems  
   
  309  
   
  (line) that optimizes the desired criterion is selected among the full profiles constructed. The quality of the final solution is highly dependant to the order in which the attributes are considered, thus multiple runs of the heuristic using different attribute orderings are recommended. No local optimality is guaranteed.  
   
  4.6 Beam Search Nair et al. (1995) solved the product line design problem using Beam Search. BS is a breadth-first process with no backtracking, where at any level of the search only the b (Bean Width) most promising nodes are further explored in the search tree. The method begins with K relative part-worth matrices C(k) (with elements cij = wij - wij* ), and initializes work matrices A1(•) based on C. At each stage l (layer), matrices E1(•) of combined levels are formed, by combining two matrices Al(•) at a time in the given order. Then, the b most promising combinations of levels are selected to form columns in new matrices Al+1(•) in the next layer, where it remains approximately half of the number of matrices in the previous layer. In this way, unpromising attribute levels are iteratively pruned, until a single work matrix remains. This final matrix consists of b columns, each containing a full product profile. These are the candidate alternatives for the first product in the line. For the first of the b alternatives, the data set is reduced by removing the customers who prefer this product over their status quo. The previous process is repeated for finding one second-product in the line, and iterated until M products are build that form a complete product line. The same procedure is repeated, until b complete product lines are designed, from which the one that gives the best value in the objective function is selected. The final solution depends on the way of pairing the different attribute combinations at each layer. The authors suggest a bestworst pairing, which gives better results than the random one. No local optimality is guaranteed.  
   
  4.7 Nested Partitions In the Nested Partitions implementation (Shi et al., 2001), a region is defined by a partial product line profile, for example all products that contain a specific attribute level. In each iteration a subset of the feasible region is considered the most promising, which is further partitioned into a fixed number of subregions, by determining the level of one more attribute, and aggregating what remains of the feasible region into one surrounding region. In each iteration therefore, the feasible region is covered by disjoint subregions. The surrounding region and each of the subregions are sampled using a random sampling scheme, through which random levels are assigned to the remaining attributes. The randomly selected product profiles are evaluated, in order for an index to be estimated that determines which region becomes the most promising in the next iteration. This region is then nested within the last one. If the surrounding region is found to be more promising than any of the regions under consideration, the method backtracks to a larger region using a fixed backtracking rule. NP combines global search through partitioning and sampling, and local search through calculation of the promising index. The  
   
  310  
   
  S. Tsafarakis and N. Matsatsinis  
   
  method can incorporate other heuristics to improve its performance. The authors tried a Greedy Heuristic, as well as a Dynamic Programming into the sampling step, and a Genetic Algorithm into the selection of the promising region. The results of their study indicate that the incorporation of each of the three heuristics is beneficial, with GA giving the best performance.  
   
  4.8 Genetic Algorithms Genetic Algorithms are optimization techniques that were first introduced by Holland (1975). They are based on the principle of “natural selection” proposed by Darwin a long time ago, and constitute a special case of Evolutionary Programming algorithms. In accordance with Biology science, GAs represent each solution as a chromosome that consists of genes (variables), which can take a number of values called alleles. A typical GA works as illustrated in Figure 1. Initially a set of chromosomes (population) is generated. If prior knowledge about the problem exists, we use it to create possible “good” chromosomes; else the initial population is generated at random. Next, the problem’s objective function is applied to every chromosome of the population, in order for its fitness (performance) to be evaluated. The chromosomes that will be reproduced to the next generation are then selected according to their fitness score, that is, the higher the chromosome’s fitness the higher the probability that it will be copied to the subsequent generation. Reproduction ensures that the chromosomes with the best performance will survive to the future generations, a process called “survival of the fittest”, so that high quality solutions will not be lost or altered. A mating procedure follows, where two parents are chosen to produce two offspring with a probability pc, through the application of a crossover operator. The logic behind crossover is that a chromosome may contain some “good” features (genes) that are highly valued. If two chromosomes (parents) exchange their good features then there is a great possibility that they will produce chromosomes (offspring) that will combine their good features, thus creating higher performance solutions. The expectation is that from generation to generation, crossover will produce new higher quality chromosomes. Subsequently, each of the newly formed chromosomes is selected with a probability pm to be mutated. Here one of its genes is chosen randomly and its value is altered to a new one randomly generated. Mutation produces new chromosomes that would never be created through crossover. In this way, entirely new solutions are produced in each generation, enabling the algorithm to search new paths and escape from possible local minima. Whereas reproduction reduces the diversity of the population, mutation maintains a certain degree of heterogeneity of solutions, which is necessary to avoid premature convergence of the evolutionary process. However, mutation rates must be kept low, in order to prevent the disturbance of the search process that would lead to some kind of random search (Steiner and Hruschka, 2003). Finally, if the convergence criterion has been met, the algorithm stops and the best solution so far is returned; else it continues from the population’s evaluation step.  
   
  Designing Optimal Products: Algorithms and Systems  
   
  311  
   
  Initial population Mutation Evaluation Crossover  
   
  Reproduction  
   
  no  
   
  Convergence criterion met?  
   
  yes Return best solution Fig. 1 Genetic Algorithm flowchart  
   
  4.8.1 Type of Problems Solved GAs were first applied to the optimal product design problem by Balakrishnan and Jacob (1996), who dealt with the share of choices and the buyer’s welfare problem, by employing the first choice rule. The authors provide a number of advantages that leaded them to use this approach. The search is implemented from a set of points (equal to the size of the population) rather than a single point, increasing in this way the method’s exploratory capability. GAs do not require additional knowledge, such as the differentiability of the function; instead they use the objective function directly. GAs do not work with the parameters themselves but with a direct encoding of them, which make them especially suited for discontinuous, high-dimensional, and multimodal problem domains, like the optimal product design. Later, Alexouda and Paparrizos (2001) applied GAs to the seller’s welfare problem for the optimal product line design, while Alexouda (2004), as well as Balakrishnan et al. (2004) dealt with the share of choices problem. All three approaches employed the first choice rule. The only approach that uses probabilistic choice rules is that of Steiner and Hruschka (2003), who dealt with the seller’s welfare problem. 4.8.2 Problem Representation Except for Balakrishnan et al. (2004), all other approaches adopted a binary representation scheme. In Balakrishnan and Jacob (1996), each product is represented by a  
   
  312  
   
  S. Tsafarakis and N. Matsatsinis  
   
  chromosome, which is divided into K substrings that correspond to the product’s attributes. Each substring consists of Jκ (the number of attribute’s k levels) genes that  
   
  ∑j  
   
  k  
   
  take values (alleles) 0 or 1. Hence the length of a chromosome is P= k∈Ω . A value of 1 denotes the presence of the specific level in the corresponding attribute, and a value of 0 its absence. This representation has the restriction that exactly one gene must take the value of 1 in each substring. Lets for instance assume that a personal computer consists of the attributes processor (Single-core 3,8 GHz, Core-2 2,6 GHz, Core-4 2Ghz), monitor (17’’, 19’’, 20’’, 24’’), and hard disk (200 GB, 500 GB, 750 GB). Then a Core-2 2,6 GHz with 20’’ monitor and 750 GB hard disk will be represented by the chromosome C={010 0010 001}. In Alexouda and Paparrizos (2001), Steiner and Hruschka (2003), and Alexouda (2004), a chromosome corresponds to a line of products. Each chromosome is composed of M*K substrings that represent the product’s attributes, each consisting of Jκ genes that take values 0 or 1. As before, a value of 1 denotes the presence of the specific level in the corresponding attribute, and a value of 0 its absence. The restriction that exactly one gene must take the value of 1 in  
   
  ∑j  
   
  k  
   
  each substring also holds here. The length of each chromosome is P=M k∈Ω . Referring to the personal computer example, the chromosome D={010 0010 001|100 0001 010} represents a line of two products; a Core-2 2,6 GHz with 20’’ monitor and 750 GB hard disk, and a single-core 3,8 GHz with 24’’ monitor and 500 GB hard disk. Balakrishnan et al. (2004) use an integer representation, where a chromosome corresponds to a line of products, a gene to an attribute, and the gene’s values to attribute levels. Hence, each chromosome is of length M*K, and is divided into M substrings, each representing a product in the line. Within each substring, gene k can take Jκ different values. The line of the two products described by chromosome D above, is represented in this case by chromosome E={233|142}. Here, the authors raise an issue concerning the principal of minimal redundancy, according to which each member of the space being searched should be represented by one chromosome only (Radcliffe, 1991). The integer representation scheme does not adhere to this principle, since the same line of products can be represented by M! different chromosomes. The previous PC product line, for instance, can also be represented by the chromosome E’={142|233} (the two products exchange their positions). This could cause inefficiencies in the search process, as the crossover between two identical products (E and E’) may result in two completely different sets of offspring. On the other hand, it may prove to be an advantage, as more members of the search space will probably be explored. In order to alleviate this concern, they adopt an alternative representation scheme where the substrings (products) in a chromosome are arranged in lexicographic order. That is, product 111 is before 112 which is before 121 etc. In this encoding, called sorted representation, the chromosome E would not exist. They tested both the sorted and the unsorted representations. 4.8.3 Genetic Algorithm’s Parameters Balakrishnan and Jacob (1996) represented the problem with the use of matrices. The GA population (number of chromosomes) has a size of N, and is stored in the matrix POPN*P. Customers’ preferences (part-worths for each attribute level) are  
   
  Designing Optimal Products: Algorithms and Systems  
   
  313  
   
  maintained in the matrix BETAI*P. The utilities that each of the I customers assigns to each of the N products (represented by chromosomes) are estimated in each generation, and stored in the matrix PRODUTIL= BETA*POPT. For the share of choices problem the utility of each customer’s status quo product is maintained in the matrix STATQUO. The chromosome n is evaluated through the comparison of the n-th column in PRODUTIL with the corresponding in STATQUO. The fitness of the chromosome is the number of times that PRODUTIL(i,n)>STATQUO(i,n), i=1…I, that is the number of customers that prefer the new product to their status quo. For the buyer’s welfare problem the fitness of the chromosome n is the sum of elements of the n-th column in PRODUTIL, that is the aggregate utility value for the whole set of customers. 4.8.3.1 Initialization of the population All five approaches initialize the GA population in a totally random manner. Furthermore, Alexouda and Paparrizos (2001), Alexouda (2004), and Balakrishnan et al. (2004), also assess the performance of a hybrid strategy in respect to the initialization of the population. Before running the GA, a Beam Search heuristic is applied and the best solution found is seeded into the genetic algorithm’s initial population, while the remaining N-1 chromosomes are randomly generated. The population size is set to 100 (Balakrishnan and Jacob, 1996), 150 (Alexouda and Paparrizos, 2001; Steiner and Hruschka, 2003), 180 (Alexouda, 2004), or 400 (Balakrishnan et al., 2004). 4.8.3.2 Reproduction Except for Steiner and Hruschka (2003), all other approaches adopt an elitist strategy for the process of reproduction, where the F fittest chromosomes are copied intact into the next generation. Such an approach ensures that the best chromosomes will survive to the subsequent generations. The value of F ranges from 4N/10 (Alexouda and Paparrizos, 2001; Alexouda, 2004), to N/2 (Balakrishnan and Jacob, 1996; Balakrishnan et al., 2004). Steiner and Hruschka (2003) employ a binary tournament selection procedure, where N/2 pairs of chromosomes are randomly selected with replacement, and from each pair only the chromosome with the higher fitness value survives to the succeeding generation. This is a semirandom process, which ensures that the chromosomes with higher fitness values have more probabilities to survive. 4.8.3.3 Crossover In the approaches that adopt a binary representation scheme, the unit of interest in the crossover procedure is the substring, in order for feasible solutions to be produced. In Steiner and Hruschka (2003) for example, who use one-point crossover with probability pc=0.9 and random selection of the cross site, the crossover of the two parents A = {010 0010 001|100 0001 010} and B = {100 0100 010|010 0010 100}, after the second substring will generate the two offspring  
   
  314  
   
  S. Tsafarakis and N. Matsatsinis  
   
  A’ = {010 0010 010|010 0010 100} B’ = {100 0100 001|100 0001 010}.  
   
  and  
   
  Except for the above approach, the other ones employ a uniform crossover with the probability pc taking the values 0.4 (Alexouda and Paparrizos, 2001), 0.45 (Alexouda, 2004) and 0.5 (Balakrishnan and Jacob, 1996). In the approach that employs an integer representation scheme, the unit of interest in crossover is the gene. If for instance, the two parents S={122|323} T={141|421},  
   
  and  
   
  exchange their second and sixth genes, this will generate the offspring S’={142|321} T’={121|423}.  
   
  and  
   
  When the sorted representation is used, the offspring are sorted in lexicographic order after the crossover operation. According to Radcliffe (1991), a forma specifies at certain chromosome’s positions (called defining positions) particular values that all its instances must contain. That is, if a chromosome η is an instance of a forma β, then η and β both contain the same values at the specified positions. Chromosomes S and T, for example, both belong to the forma: β = 1** *2*, where the * denotes a “don’t care” value. The principle of respect defines that the crossover of two chromosomes that belong to same forma must produce offspring also belonging to the same forma. Whereas in the unsorted representation the crossover is “respectful”, the property does not hold in the sorted representation, due to the ordering of the attributes after the crossover. 4.8.3.4 Mutation Except for the one with the integer representation scheme, in all other approaches the mutation operator is applied at the substring level. Chromosomes are randomly selected (without replacement) with a probability pm (mutation rate). An attribute (substring) of the selected chromosome is randomly picked and its level is altered. If, for instance, chromosome A is chosen to be mutated at the second substring, a potential mutated chromosome will be A’’={010 1000 001|100 0001 010}. In Balakrishnan et al. (2004), the mutation takes place at the gene level, while two different mutation operators are used. Except for the standard mutation operator, a hybridized one is employed, which uses as a mutator chromosome the best solution found by the Beam Search heuristic. Whenever a chromosome is selected for mutation, a gene is randomly selected and its value is either randomly changed using the standard mutation operator, or altered to the value contained in the specific attribute of the mutator chromosome. In this way the good attribute values of the BS best solution will be copied to the GA population. On the other hand, this may result in premature convergence to the alleles of the mutator string. In order to  
   
  Designing Optimal Products: Algorithms and Systems  
   
  315  
   
  avoid this, the two mutator operators have equal probability to be applied. The mutation rate takes a wide range of values: 0.05 (Steiner and Hruschka, 2003), 0.1 (Alexouda, 2004), 0.2 (Alexouda and Paparrizos, 2001), 0.3 (Balakrishnan and Jacob, 1996), or 0.4 (Balakrishnan et al., 2004). 4.8.3.5 Stopping criterion From the reproduced chromosomes, plus the offspring plus the mutated chromosomes, only the N fittest are maintained to the next generation, and the algorithm iterates until a stopping criterion is met. Balakrishnan and Jacob (1996), Steiner and Hruschka, (2003), and Balakrishnan et al. (2004) employ a moving average rule, where the algorithm terminates when the percentage change in the average fitness of the best three chromosomes over the five previous generations is less than 0.2% (convergence rate). In the other two approaches the procedure terminates when the best solution does not improve in the last 10 (Alexouda and Paparrizos, 2001), or 20 (Alexouda, 2004) generations. 4.8.4 Performance Evaluation 4.8.4.1 Genetic Algorithm vs. Dynamic Programming Balakrishnan and Jacob (1996) compared the results of their approach and the Dynamic Programming approach (Kohli and Krishnamusti, 1987) with the complete enumeration solutions in 192 data sets, in both the share of choices and buyer’s welfare problems. A full factorial experimental design was generated using the factors and levels presented in Table 4. Table 4 Factors and levels used in the experiment  
   
  Factor Number of attributes Number of attribute levels Number of customers  
   
  Levels 4 2 100  
   
  6 3 200  
   
  8 4 300  
   
  5 400  
   
  The part-worths were randomly generated following a normal distribution, and normalized within each customer to sum to 1. Random was also the generation of each customer’s status quo product. Four replications were performed in each case resulting in a total of 192 data sets. In the share of choices problem, the average best solution provided by GA was 99.13% of the optimal product profile found by complete enumeration, while the same value for the DP was 96.67%. GA also achieved a tighter standard deviation (0.016) than that of DP (0.031). In the buyer’s welfare problem the respective values were 99.92% for the GA with 0.0028 std, and 98.76% for the DP with 0.0165 std. The number of times that the optimal solution was found (hit rate) was 123 for the GA and 51 for the DP in the share of choices, and 175 for the GA and 82 for the DP in the buyer’s welfare. The performance of GA was also compared with that of DP in two larger problems of  
   
  316  
   
  S. Tsafarakis and N. Matsatsinis  
   
  sizes 326,592 and 870,912, where an exhaustive search was infeasible in tractable time. The data sets consisted of 200 customers, and 9 attributes that take (9,8,7,6,2,2,3,3,3) or (9,8,8,7,6,2,2,3,3) levels, while ten replications for each data set were performed. GA showed a better, worse, and equal performance compared to DP in 11, 3, and 6 data sets for the share of choices, and in 8, 3, and 9 data sets respectively for the buyer’s welfare. 4.8.4.2 Genetic Algorithm vs. Greedy Heuristic Steiner and Hruschka (2003) compared the results of their approach and the Greedy Heuristic approach (Green and Krieger 1985) with the complete enumeration solutions, in the seller’s welfare problem. A factorial experimental design was generated using the factors and levels presented in Table 5. Table 5 Factors and levels used in the experiment  
   
  Factor Number of attributes Number of attribute levels Number of products in the line Number of competing firms  
   
  Levels 3 2 2 1  
   
  4 3 3 2  
   
  5 4 4 3  
   
  From the 81 different cases a subset of 69 was considered. Four replications were performed under each case, resulting in a total of 276 problems solved, where customer part-worths, attribute level costs, and competitive products configuration were randomly generated. The value of the solution found by GA was never less than 96.66% of the optimal (minimum performance ratio), while the corresponding value for the GH was 87.22%. The optimal solution was found in 234 cases by the GA, and in 202 cases by the GH, which corresponds to a hit ratio of 84.78% and 73.19% respectively. The solution found by GA was strictly better than that found by GH in 66 cases, and strictly worse in only 25. 4.8.4.3 Genetic Algorithm vs. Beam Search Alexouda and Paparrizos (2001), Alexouda (2004), and Balakrishnan et al. (2004) compared the performance of GA with that of BS, which was considered the state of the art approach of the time. The first two approaches make a comparison of the two methods with a full search method in the seller’s welfare and share of choices problems respectively. Eight small problems were solved using different values for the number of products in the line (2, 3), number of attributes (3, 4, 5, 6, 7, 8), and number of levels (3, 4, 5, 6). Ten replications were performed in each case, while the number of customers was kept constant to 100. The results are shown in Table 6.  
   
  Designing Optimal Products: Algorithms and Systems  
   
  317  
   
  Table 6 Results of the comparison of the two methods  
   
  Seller’s welfare 73.75% 41.25% 53.75% 12.50% 0.9958 0.9806  
   
  GA found optimal BS found optimal GA outperforms BS BS outperforms GA GA/optimal BS/optimal  
   
  Share of choices 77.50% 45% 33.75% 12.50% 0.9951 0.9882  
   
  Furthermore, they compared the performance of a GA with completely random initialization (GA1), a GA where the initial population is seeded with the best BS solution (GA2), and a BS heuristic, in problems with larger sizes where complete enumeration is unfeasible. The number of customers was set to either 100 or 150 (Table 7). Table 7 Results of the comparison of the three methods  
   
  GA1 outperforms BS BS outperforms GA1 GA2 outperforms BS GA1 outperforms GA2 GA2 outperforms GA1 GA1/ BS GA2/ BS  
   
  Seller’s welfare I=100 I=150 93.88% 93.33% 6.11% 5.83% 86.66% 80.83% 1.0962 1.0794 1.0853 1.0702  
   
  Share of choices I=100 I=150 47.92% 53.33% 33.33% 31.25% 40% 43.33% 31.67% 35% 45.83 43.33% -  
   
  Balakrishnan et al. (2004) defined eight different types of GA and hybrid GA procedures (Table 8). Table 8 Genetic Algorithm techniques defined  
   
  Type GASM GASSM GAHM GASHM GASMBS GASSMBS GAHMBS GASHMBS  
   
  Representation Unsorted Sorted Unsorted Sorted Unsorted Sorted Unsorted Sorted  
   
  Integration with BS Hybrid Mutation Seed with BS No No No No Yes No Yes No No Yes No Yes Yes Yes Yes Yes  
   
  318  
   
  S. Tsafarakis and N. Matsatsinis  
   
  A 2x2 full factorial experimental design was employed using the factors number of products in the line (4 or 7), and number of attributes (7 or 9), with respective attribute levels (6 3 7 4 5 3 3) and (7 3 5 5 6 3 3 7 5), while the number of customers was 200. Two replications were performed in each case. The values of GA parameters are illustrated in Table 9. Table 9 Values of the Genetic Algorithm parameters  
   
  Parameter Mutation rate Population size Number of attributes to crossover (N=4, K=7) Number of attributes to crossover (N=4, K=9) Number of attributes to crossover (N=7, K=7) Number of attributes to crossover (N=7, K=9) Number of generations  
   
  Value 0.04 400 10 17 12 21 500  
   
  After experimentation it was found that a mutation rate less than 0.04 resulted in a premature convergence to suboptimal solutions, while higher values did not offered a substantial improvement. In addition, higher number of attributes to crossover was more beneficial in problems with smaller number of products in the line, as compared to problems with larger product lines. The results are presented in Table 10. Table 10 Results of the comparison of the 10 methods  
   
  Method GASM GASSM GAHM GASHM GASMBS GASSMBS GAHMBS GASHMBS BS CPLEX  
   
  Best solution found (percentage of cases) 12.5% 12.5% 12.5% 12.5% 25% 0 0 0 0 50%  
   
  Average approximation of best solution 94.44% 94.21% 94.16% 94.15% 94% 93.35% 92.82% 92.32% 89.53% 82.68%  
   
  Another full factorial design (2x2x2) was employed, in order to asses the impact of the number of products in line (4 or 7), the number of attributes (7 or 9), and the presence or absence of attribute importance, to the following variables of interest:  
   
  Designing Optimal Products: Algorithms and Systems  
   
  • • •  
   
  • • • •  
   
  319  
   
  The best GA solution. The ratio of the best GA solution to the best BS solution. The number of unique chromosomes in the final population: o With the best fitness. o With fitness within the 5% of the best solution. o With fitness between the 5% and 10% of the best solution. The worst chromosome in the final population. The average fitness in the final population. The standard deviation of chromosomes’ fitness in the final population. The number of generation at which the best solution was found.  
   
  Two product lines are considered different when at least one product exists in the one but not in the other, while two products are considered to be different if they differ in the level of at least one attribute. Ten replications were performed in each case resulting in a total of 80 data sets. The eight GA instances, as well as the BS heuristic, were run 10 times for each data set, hence 6400 different GA runs were performed. The results showed that GA techniques performed better or equally well as compared to BS in the 6140 cases (95.93%), performed strictly better in 5300 (82.81%), and underperformed in 260 (4.07%). The best GA solution reached a maximum difference of 12.75% with that of the BS, and was on average 2.6% better. The maximum difference reached when the BS solution was better was 6.1%. The hybridized GA methods always produced solutions at least as good as the BS solution, and in the 80.2 % of cases produced strictly better solutions. An interesting finding is that GA techniques which employ the unsorted representation, the standard mutation, and do not seed initial population with the best BS solution, showed the best average performance. A possible reason is the fact that the sorted representation scheme does not adhere to the principle of respect regarding the crossover operation. In addition, the incorporation of the best BS solution into the initial GA population, as well as the hybrid mutation operator probably make the algorithm converge to an area of solutions around the seeded BS solution, which in some cases may be suboptimal. Some loss in diversity of the final population may also be exhibited, as the integrated techniques displayed the worst results in respect to the number of unique chromosomes in the final population. Furthermore, integrated techniques suffer from premature convergence, as they tend to produce the best solution earlier, and result in the lowest standard deviation of chromosomes’ fitness in the final population. Particularly, GA techniques without any hybridization (GASM, GASSM) provided final solutions at least as good as that of the hybridization techniques in 52.37% of cases on average, and strictly better on 35.12%. This indicates that the integration with the BS heuristic does not improve the quality of the solution. The number of products and number of attributes significantly affect (p 0.3161 = m31({L}), suggests the respondent R31 is more associated with a high level of web experience, which is the incorrect segmentation in its case.  
   
  460  
   
  M.J. Beynon and K. Page  
   
  The results concerning another respondent R167 (known to have low level of web experience) are given in Table 5, with regard to the respective response BOEs m167,i(⋅). Table 5 Response values and response BOEs for the respondent R167, from CaRBS analysis of incomplete web experience data set Survey question R167 (actual) R167 (standardised) m167,i({H}) m167,i({L}) m167,i({H, L})  
   
  P1 3 −0.4761 0.0000 0.3360 0.6640  
   
  P2 0.0000 0.0000 1.0000  
   
  P3 0.0000 0.0000 1.0000  
   
  P4 6 1.7983 0.2962 0.0000 0.7038  
   
  P5 0.0000 0.0000 1.0000  
   
  Survey question R167 (actual) R167 (standardised) m167,i({H}) m167,i({L}) m167,i({H, L})  
   
  P6 2 −2.1006 0.0000 0.3924 0.6076  
   
  P7 5 0.6307 0.0000 0.0000 1.0000  
   
  P8 0.0000 0.0000 1.0000  
   
  P9 6 0.7596 0.3088 0.0000 0.6912  
   
  P10 6 0.9686 0.0000 0.0000 1.0000  
   
  In Table 5, a number of the response values, from the respondent R167, are shown to be missing (denoted with ‘-’), namely the survey questions, P2, P3, P5 and P8. For each of these questions, their respective response BOEs offer only total ignorance (as stated earlier). Also assigned total ignorance are the response BOEs associated with the survey questions, P7 and P10, not because the value were missing, but that the concomitant control variable values have meant only total ignorance is assigned to them. The remaining response BOEs offer more than only ignorance to either m167,i({H}) or m167,i({L}), which from their combination, produce the respondent BOE m167(⋅), found to be, m167({H}) = 0.2986, m167({L}) = 0.4184 and m167({H, L}) = 0.2830. This respondent BOE, with m167({H}) = 0.2986 < 0.4184 = m167({L}), suggests the respondent R167 is more associated with low level of web experience, which is the correct segmentation in this case. The results concerning individual respondents, and their low or high level of web experience segmentation, are next graphically considered, see Figure 3, with response and respondent BOEs shown for four respondents, as simplex coordinates in simplex plots (simplex plot is the standard domain with CaRBS (see Figure 1c) - with each vertex identifying where there would be certainty in their segmentation to having low (L) or high (H) web experience, or ignorance (H, L), a vertical dashed line discerns between where there is majority belief of segmentation to L or H. Figure 3 shows the evidence from survey question responses and final predicted segmentation of the respondents, R31 (3a), R167 (3b), R216 (3c) and R280 (3d). In each simplex plot shown, the grey shaded sub-domain of a simplex plot, at the top, defines where the respective response BOEs are able to exist (individually considered low level measurements whereby a level of ignorance is present in each response BOE - through the bounds on the Bi control variables, see Figure 1).  
   
  Analysing Incomplete Consumer Web Data Using the CaRBS  
   
  461  
   
  Fig. 3 Simplex plot based segmentation evidence of individual respondents, R31 (3a), R167 (3b), R216 (3c) and R280 (3d), from CaRBS analysis of incomplete web experience data set  
   
  With respondent R31 (Figure 3a - known to have low web experience), the ten circles in the shaded domain are the response BOEs representing the evidence from their responses to the survey questions P1, P2, …, P10 (labels for m31,Pi(⋅) see Table 4), with the lower circle shown the final respondent BOE m31(⋅), found from the combination of the m31,i(⋅) (compare with example in Figure 1). The discussion of this series of results on the respondent R31 follows the discussion surrounding Table 4, given previously. For example, the combination of the evidence in the response BOEs produces the respondent BOE m31(⋅), shown to be to the right of the vertical dashed line in Figure 3a, indicating their predicted segmentation to being high experienced, incorrect in this case. The results for the respondent R167 (Figure 3b) similarly follow that surrounding the details reported in Table 5. Two further respondents are considered in Figure 3, using the simplex plot representation, namely R216 and R280, which are known to both have high levels of web experience. The results for the respondent r280 (Figure 3c), show evidence from their responses to the survey questions supporting its low (P1, P4 and P8) and high (P5 and P9) web experience segmentation, resulting in a respondent BOE  
   
  462  
   
  M.J. Beynon and K. Page  
   
  offering weak evidence towards high level of web experience (correct segmentation). The results for the respondent r280 (Figure 3d), show strong supporting evidence from the majority of responses to the ten survey questions, with the implication being a very strong segmentation to them having high web experience, noticeably more certain in its predicted segmentation than for the other three respondents described. The process of positioning the segmentation of a respondent, in a simplex plot, on their predicted level of web experience, can be undertaken for each of the 300 respondents considered, see Figure 4.  
   
  Fig. 4 Simplex plot based representation of segmentation of respondents with low (4a) and high (4b) levels of web experience, from CaRBS analysis of incomplete web experience data set  
   
  The simplex plots in Figure 4, contain the simplex coordinates, denoted by circles and crosses, representing the presented respondent BOEs of known low (4a) and high (4b) web experienced respondents, respectively. The different heights of the simplex coordinates (circles and crosses) in the simplex plots indicate variation in the levels of ignorance associated with the respondents’ segmentations. One reason for the variation in the level of ignorance in a respondent’s segmentation is the level of incompleteness in their responses to the questions considered, as well as conflicting responses. At the limit, in Figure 4a, there is a simplex coordinate at the {H, L} vertex, showing a respondent BOE for a respondent has only total ignorance in its predicted segmentation, due to a large number of missing values present amongst their responses, and total ignorance assigned to the responses they actually made. The overall accuracy of this segmentation is based on whether the simplex coordinates representing respondent BOEs are on the correct side of the vertical dashed lines (low and high web experience to the left and right respectively). In summary, a total of 214 out of 300 (71.133%) respondents’ have correct predicted segmentation (118 of 171 (69.006%) low and 96 of 129 (74.419%) high). Throughout the descriptions of the predicted segmentation of the four respondents described in Figure 3, the evidence from their responses to the ten survey  
   
  Analysing Incomplete Consumer Web Data Using the CaRBS  
   
  463  
   
  questions varied amongst the respondents. This variation potentially exists in the evidential relevance (quality) of the responses to the survey questions from all the respondents. The next results presented concern the relevance, discerning power, of each survey question used in segmenting the respondents’ web experience. They have implications for how a website, or online retail presence is designed and communicated to differing segments of the target market categorized by high and low web usage. For example, if the item “purchasing and booking goods on the web is rather complicated” is reported as more important for users with low usage experience, targeting this segment of web users with specific communications to help educate and inform them about the booking process, could increase their overall satisfaction and positive attitudes with purchasing online. This information could also be used to inform web designers and marketing personnel on recommendations for improvement for effective transactional web design. As such the quality and accuracy of the data being analysed about not only a consumers perceptions, but also their web experience (i.e., unbiased), is of paramount importance to ensure correct and accurate results upon which electronic marketing decisions are made. The elucidation of this relevance uses the average response BOEs defined previously, which accrue the level of evidence from survey questions to certain equivalence classes of respondents (known to have low and high web experience in this case), and as BOEs, they can be graphically reported using simplex plots, see Figure 5 (with only the grey shaded sub-domain shown - where response BOEs exist).  
   
  Fig. 5 Relevance of each survey question to the segmentation of respondents, from CaRBS analysis of incomplete web experience data set  
   
  In Figure 5, each simplex coordinate labelled ‘?L’ and ‘?H’ represents the average response BOEs associated with survey question P?, from known low and high web experienced respondents, respectively. For example, the average response BOE represented by 9H is found from the average of the response BOEs for survey question P9 of respondents with known high web experience (not  
   
  464  
   
  M.J. Beynon and K. Page  
   
  including missing values). The further down the simplex plot sub-domain the ?L and ?H points appear the more relevance of the survey question (less ignorance) to the segmentation of low and high web experienced respondents, and the increased horizontal distance between respective points denotes the lesser ambiguity the survey question offers in the segmentation. In the results in Figure 5, it follows, the survey questions, P1, P6 and P9 (also P8 to a lesser extent), are indicated to have the more relevance (than the others), based on the responses of the respondents, since they are lowest down the simplex plot sub-domain. In terms of ambiguity, the horizontal distance between the 9L and 9H simplex coordinates ,associated with the survey question P9, identify its limited associated ambiguity in what the survey question suggests with respect to low and high web experienced respondents, when compared with the other survey questions. Further interpretation can be given on the other survey questions considered, even for question P10, a rating an individuals of overall interest in the web for shopping, which from Figure 5, has little relevance to this study due to its position (10L and 10H) near the {H, L} vertex (large level of ignorance associated with it). This relevance could be attributed to the contextual nature of web purchase, in that interest could be moderated by product category, age or even gender, allowing for further segmentation.  
   
  5.2 CaRBS Analysis of ‘Completed’ Web Experience Data Set This sub-section undertakes a further CaRBS analysis on the web experience data set, but here the missing values in the incomplete web experience data set, are now externally managed using mean imputation (Huisman 2000). It follows, all the respondents are retained in the data set (unlike when case deletion is employed), now termed a completed web experience data set, with the missing values replaced by the mean of the present values of the respective survey question. To again configure a CaRBS system, to optimally segment the respondents to having low or high web experience, through the respondents’ survey question response values, they were again standardized prior to the employment of TDE, allowing consistent domains over the control variables incumbent in CaRBS, set as; –2 ≤ ki ≤ 2, –1 ≤ θi ≤ 1, 0 ≤ Ai < 1 and Bi = 0.4 (see Beynon 2005b). With standardized response values considered, and employing mean imputation, the missing values were now assigned the value 0.0000, since standardized data has mean zero (and unit standard deviation). The TDE method was again employed to configure a CaRBS system, based on the previously defined TDE-based parameters, and run five times, each time converging to an optimum value, the best out of the five runs being OB = 0.3689. Like in the CaRBS analysis of the incomplete web experience data set, this value is noticeably above the lower bound, and is actually slightly lower than the previously found OB value (0.702). This OB value would suggest an improved level of segmentation has been achieved by the completing of the incomplete web experience dates set (using mean imputation). The resultant control variables, ki, θi and Ai (Bi = 0.4), found from the best TDE run are reported in Table 6.  
   
  Analysing Incomplete Consumer Web Data Using the CaRBS  
   
  465  
   
  Table 6 Control variables values associated with the configuration of CaRBS system, in the analysis of completed web experience data set Parameter ki  
   
  θi Ai Parameter ki  
   
  θi Ai  
   
  P1 2.0000 −0.1204 0.6714  
   
  P2 −2.0000 0.1453 0.6873  
   
  P3 2.0000 −1.0000 0.8902  
   
  P4 2.0000 0.4895 0.7288  
   
  P5 2.0000 −0.1262 0.5628  
   
  P6 2.0000 0.2410 0.3818  
   
  P7 2.0000 0.2939 0.6623  
   
  P8 2.0000 −0.4040 0.7801  
   
  P9 2.0000 0.1092 0.2265  
   
  P10 −2.0000 0.6070 0.9820  
   
  The results in Table 6, concerning ki, again show the same values and directions of association of the evidential contribution of the survey questions. The interesting feature here, is that the values found for the other control variables, θi and Ai, are mostly dissimilar to those found in the previous analysis (see Table 3). This is the first evidence on the impact of the external management of missing values, namely that the control variables found are different, so the configured CaRBS system here is different to that found in the previous analysis. Further evidence on this impact is shown by considering, in detail, the two respondents, R31 and R167, first considered in the previous analysis. Considering the respondent R31, the construction of the response BOE associated with the question P1 is again described. For the respondent R31, P1 = 2.000, when standardised, it is v = −1.1891 (see Table 7 presented later), then; cfP1(−1.1891) =  
   
  1 1 = = 0.1055, 1 + 8.4765 1 + e − 2.0000( −1.1891+ 0.1204)  
   
  using the control variables in Table 6. This confidence value is used in the expressions making up the triplet of mass values in the response BOE m31,P1(⋅), namely; m31,P1({H}), m31,P1({L}) and m31,P1({H, L}), found to be; 0.4 0.6714 × 0.4 0.1055 − = 0.1285 − 0.8173 1 − 0.6714 1 − 0.6714 = −0.6888 < 0.0000 so = 0.0000, −0.4 m31,P1({L}) = 0.1055 + 0.4 = −0.1285 + 0.4 = 0.2715, 1 − 0.6714 m31,P1({H, L}) = 1 − 0.0000 − 0.2715 = 0.7285.  
   
  m31,P1({H}) =  
   
  For the respondent R31, this response BOE is representative of all the associated response BOEs m31,i(⋅), presented in Table 7 (using their standardised response values).  
   
  466  
   
  M.J. Beynon and K. Page  
   
  Table 7 Response values and response BOEs for the respondent R31, from CaRBS analysis of completed web experience data set Parameter R31 (actual) R31 (standardised) m31,i({H}) m31,i({L}) m31,i({H, L})  
   
  P1 2 −1.1891 0.0000 0.2715 0.7285  
   
  P2 7 2.1122 0.0000 0.3754 0.6246  
   
  P3 4 −0.3316 0.0000 0.0000 1.0000  
   
  P4 4 0.1691 0.0000 0.0000 1.0000  
   
  P5 7 2.0537 0.3885 0.0000 0.6115  
   
  Parameter R31 (actual) R31 (standardised) m31,i({H}) m31,i({L}) m31,i({H, L})  
   
  P6 6 1.3385 0.3352 0.0000 0.6648  
   
  P7 5 0.6307 0.0000 0.0000 1.0000  
   
  P8 2 −1.2187 0.0000 0.1018 0.8982  
   
  P9 6 0.7596 0.2893 0.0000 0.7107  
   
  P10 7 1.5592 0.0000 0.0000 1.0000  
   
  A consequence of the response BOEs shown in Table 7, through their combination, is the resultant respondent BOE, termed m31(⋅), and found to be: m31({H}) = 0.5014, m31({L}) = 0.2949 and m31({H, L}) = 0.2037. This respondent BOE shows predominant association to high level of web experience, which is the incorrect segmentation in its case. Most interesting in these results concerning the respondent R31, is what changes there is in its segmentation to that found in the previous analysis (when the missing values in the data set were not managed in any way - retained as missing). In terms of the respondent BOE, there is little difference in these BOEs between when the incomplete and completed web experience data sets were considered (there are limited differences in the individual response BOEs - compare the details presented in Table 4 and Table 7). A further set of results are given with respect to the respondent R167, see Table 8. Table 8 Response values and response BOEs for the respondent R167, from CaRBS analysis of completed web experience data set Parameter R167 (actual) R167 (standardised) m167,i({H}) m167,i({L}) m167,i({H, L})  
   
  P1 3 −0.4761 0.0000 0.0000 1.0000  
   
  P2 0.0000 0.0000 0.0000 1.0000  
   
  P3 0.0000 0.0000 0.0000 1.0000  
   
  P4 6 1.7983 0.2997 0.0000 0.7003  
   
  P5 0.0000 0.0000 0.0000 1.0000  
   
  Parameter R167 (actual) R167 (standardised) m167,i({H}) m167,i({L}) m167,i({H, L})  
   
  P6 2 −2.1006 0.0000 0.3941 0.6059  
   
  P7 5 0.6307 0.0000 0.0000 1.0000  
   
  P8 0.0000 0.0000 0.0000 1.0000  
   
  P9 6 0.7597 0.2893 0.0000 0.7107  
   
  P10 6 0.9686 0.0000 0.0000 1.0000  
   
  Analysing Incomplete Consumer Web Data Using the CaRBS  
   
  467  
   
  Using the response BOEs reported in Table 8, the resultant respondent BOE, termed m167(⋅), and found to be; m167({H}) = 0.3795, m167({L}) = 0.2445 and m167({H, L}) = 0.3760. This respondent BOE suggests association to high level of web experience, an incorrect segmentation in this case. The results here are in contrast to the findings from the analysis of the incomplete web experience data set, where a correct segmentation was found. These findings on the respondent R167 demonstrate clearly the potential negative impact of externally managing the presence of missing values in a data set (in any way). Comparing the results in Tables 5 and 8, on the response BOEs used in constructing the respective respondent BOEs (from their combination), there is an impacting difference in the response BOEs m167,P1(⋅) found. That is, in the analysis of the completed data set, the response BOE m167,P1(⋅) offers only total ignorance, instead of the evidence towards their low level of web experience as offered by m167,P1(⋅) in the analysis of the incomplete data set. A visual representation of the evidential support of the response BOEs and subsequent respondent BOEs are given in Figure 6, for the four respondents, R31 (6a), R167 (6b), R216 (6c) and R280 (6d).  
   
  Fig. 6 Simplex plot based segmentation evidence of individual respondents, R 31 (6a), R 167 (6b), R 216 (6c) and R280 (6d), from CaRBS analysis of completed web experience data set  
   
  468  
   
  M.J. Beynon and K. Page  
   
  The primary benefit of these simplex plots here, is in the ability to compare the segmentation results of these respondents with their segmentation in the previous analysis (see Figure 3). For the respondent R31, as mentioned previously, there is limited change in the resultant respondent BOE, but some minor positional changes of the simplex coordinates representing the response BOEs. For the respondent R167, the difference in the two analyses is more impacting than for R31, where the positional change of the respondent BOE m167(⋅) now to the right of the vertical dashed line is shown in Figure 6b, instead of being the left in Figure 3b. Inspection of the response BOEs, associated with the respondent R167, shows the lack of evidential contribution now by their response to survey question P1 compared to in the previous analysis. The other two respondents R 216 (6c) and R280 (6c), have similar results from both analyses, in terms of the positions of the respective respondent BOEs, but further inspection does show changes in the evidential contributions of the response BOEs. The process of positioning the segmentation of a respondent, in a simplex plot, on their predicted level of web experience, can be again undertaken for each of the 300 respondents considered, see Figure 7.  
   
  Fig. 7 Simplex plot based representation of segmentation of respondents with low (7a) and high (7b) levels of web experience, from CaRBS analysis of completed web experience data set  
   
  In Figure 7, the respondent BOEs are shown as circles and crosses (simplex coordinates), depending on whether the respondents’ are known to have low or high levels of web experience. While the spread of the simplex coordinates shown appears similar to those reported in Figure 4 (from the CaRBS analysis of the incomplete web experience data set), there are changes. One noticeable change, is the non-presence of a simplex coordinate at the {H, L} vertex in Figure 7a, as there was in Figure 4a. This is due to the replacement of the missing response values of this respondent, which has meant some evidence has been assigned to its response BOEs, and so its movement away from the top vertex. The overall accuracy of this segmentation is again based on whether the simplex coordinates representing respondent BOEs are on the correct side of the  
   
  Analysing Incomplete Consumer Web Data Using the CaRBS  
   
  469  
   
  vertical dashed lines (low and high web experience to the left and right, respectively). In summary, a total of 214 out of 300 (71.133%) respondents’ have correct predicted segmentation (119 of 171 (69.591%) low and 95 of 129 (73.643%) high). The overall segmentation accuracy is the same as in the CaRBS analysis of the incomplete web experience data set, but the separate accuracies of the low and high web experienced respondents do differ slightly. To consider the relevance of the individual questions, the average response BOEs defined previously are again used, graphically reported in simplex plots in Figure 8 (grey shaded sub-domain shown only again).  
   
  Fig. 8 Relevance of each survey question to the segmentation of respondents, from CaRBS analysis of completed web experience data set  
   
  The relevance results reported in Figure 8 indicate the survey questions, P6 and P9, are noticeably more relevant than the other survey questions (their positions lower down the simplex plot sub-domain shown). When comparing with the same results in Figure 5, from the CaRBS analysis of the incomplete web experience data set, the relevancies of the two survey questions, P1 and P8, have changed noticeably. The changes in the relevancies of the survey questions, P1 and P8, between the two CaRBS analyses demonstrates most clearly the impact of managing the missing values present in a data set. Within the marketing context, here we can see that items P6 and P9 suffer less relevance inference from the presence of missing data than the other, previously found P1 and P8 more relevant items.  
   
  6 Future Trends The potential future trends that can be considered, from this chapter, is the recognition that there is the possibility that the external management of missing values in incomplete data set can impact negatively on the inference that subsequent analysis allows. The use of the CaRBS technique on the original incomplete and a completed version of the web experience data set, through the comparison of the results,  
   
  470  
   
  M.J. Beynon and K. Page  
   
  clearly shows the variation in inference that could be the consequence of the management of missing values. It of course requires the existence of techniques, like CaRBS, that enable the analysis of incomplete data sets that a change of mind set towards the presence of missing values can take place in the future.  
   
  7 Conclusions One of the most critical issues in model formulation and marketing analytics is the treatment of missing data, and subsequently, their management in marketing intelligent systems, causing problems through the loss of statistical power and quality in parameter estimates. As such, the standard/traditional solutions, in the marketing literature, have been their external management. The CaRBS technique employed throughout this chapter offers a novel analysis approach, with its inclusion of the notion of ignorance in the evidence and final segmentation of the respondents to their association with having low or high web experience. A feature of the utilisation of the CaRBS technique is its ability to analyse incomplete data, in the case of the web experience data set, missing responses by respondents to certain survey questions. This is an important development, through the use of the soft computing associated methodology Dempster-Shafer theory in the CaRBS technique, since there has been limited ability to analyse such incomplete data sets, without having to externally manage the missing values present in some way. Indeed, this is a clear example of how soft computing approaches, in general, can offer new incites in how to undertake the pertinent analysis of marketing data, and creation of intelligent marketing intelligent systems. The whole point of conducting segmentation analyses in marketing is to be able to provide marketers with useful information about why some segments are similar whilst others differ (Hansen 2005). However, with the presence of incomplete data (with missing values), the ability to develop reliable segment profiles with confidence decreases. By using a technique that enables researchers to analyse the relevance (quality) of the data, or level of bias in the dataset at either individual (respondent) level or variable item (question) level, it enables them to strategically discern the quality of the dataset for more informed and correct interpretation. This allows for more accurate marketing insight generation upon which strategic marketing decisions are made. This chapter has discussed and applied the use of a technique for the realistic analysis of incomplete data collected through an Internet survey about on consumer attitudes towards online shopping and past usage experience to aid reliable and valid segmentation analysis.  
   
  References Babin, B.J., Darden, W.R., Griffin, M.: Work and/or fun: Measuring hedonic and utilitarian shopping value. Journal of Consumer Research 20, 644–656 (1994) Ballantine, P.W.: Effects of Interactivity and Product Information on Consumer Satisfaction in an Online Retailing Setting. International Journal of Retailing and Distribution Management 33(6), 461–471 (2005)  
   
  Analysing Incomplete Consumer Web Data Using the CaRBS  
   
  471  
   
  Bellenger, D.N., Korgaonkar, P.K.: Profiling the Recreational Shopper. Journal of Retailing 56, 77–91 (1980) Beynon, M.J.: A Novel Technique of Object Ranking and Classification under Ignorance: An Application to the Corporate Failure Risk Problem. European Journal of Operational Research 167, 493–517 (2005a) Beynon, M.J.: A Novel Approach to the Credit Rating Problem: Object Classification Under Ignorance. International Journal of Intelligent Systems in Accounting, Finance and Management 13, 113–130 (2005b) Beynon, M.J.: Optimising Object Classification: Uncertain Reasoning based Analysis using CaRBS Systematic Search Algorithms. In: Vrakas, D., Vlahavas, I. (eds.) Artificial Intelligence for Advanced Problem Solving, pp. 234–253. IDEA Group Inc., PA (2008) Brengman, M., Geuens, M., Weijters, B., et al.: Segmenting Internet Shoppers Based On Their Web-Usage-Related Lifestyle: A Cross-Cultural Validation. Journal of Business Research 58(1), 79–88 (2005) Chang, S.: Internet segmentation: state-of-the-art marketing applications. Journal of Segmentation Marketing 2(1), 19–34 (1998) Chen, Z.: Data Mining and Uncertain Reasoning: An Integrated Approach. John Wiley, New York (2001) Christian, L.M., Dillman, D.A., Smyth, J.D.: Helping Respondents Get it Right the First Time: The Influence of Words, Symbols, and Graphics in Web Surveys. Public Opinion Quarterly 71(1), 113–125 (2007) Davis, F.D., Bagozzi, R.P., Warshaw, P.R.: User acceptance of computer technology: A comparison of two theoretical models. Management Science 35(8), 982–1003 (1989) Dempster, A.P.: Upper and lower probabilities induced by a multiple valued mapping. Ann. Math. Statistics 38, 325–339 (1967) Diaz, A.N., Hammond, K., McWilliam, G.: A Study of Web Use and Attitudes Amongst Novices, Moderate Users and Heavy Users. In: Paper presented at the 25th EMAC Conference Proceedings (1997) Dillman, D.A., Christian, L.M.: Survey Mode as a Source of Instability in Responses Across Surveys. Field Methods 17, 30–52 (2005) Donthu, N., Garcia, A.: The Internet Shopper. Journal of Advertising Research, 52–58 (May/June 1999) ESOMAR, Global MR Trends ESOMAR Report (2006), (September 5, 2009), http://www.esomar.org/web/publication/paper.php?page=1&id=1 416&keyword=industry%20trends Experian, Online to Rescue Britain’s Retail Sector from Recession, Experian Report Accessed (June 24, 2009), https://www.paypal-press.co.uk/Content/ Detail.asp?ReleaseID=169&NewsAreaID=2 Fan, H.-Y., Lampinen, J.A.: Trigonometric Mutation Operation to Differential Evolution. Journal of Global Optimization 27, 105–129 (2003) Forrester, European Online Retail Consumer (December 20, 2004), http://www.forrester.com/ER/Press/Release/0,1769,973,00.html (retrieved September 20, 2005) Forsythe, S., Liu, C., Shannon, D., et al.: Development of a Scale to Measure the Perceived Benefits and Risks of Online Shopping. Journal of Interactive Marketing 20(2), 55–75 (2006) Francis, J.E.: Internet Retailing Quality: One Size Does Not Fit All. Managing Service Quality 17(3), 341–355 (2007)  
   
  472  
   
  M.J. Beynon and K. Page  
   
  Handzic, M., Low, G.C.: The role of experience in user perceptions of information technology: An empirical examination. South African Computer Journal 24, 194–200 (1999) Hansen, T.: Consumer Adoption of Online Grocery Buying: A Discriminant Analysis. International Journal of Retail and Distribution Management 33, 101–121 (2005) Huang, X., Zhu, Q.: A pseudo-nearest-neighbour approach for missing data on Gaussian random data sets. Pattern Recognition Letters 23, 613–1622 (2002) Huisman, M.: Imputation of Missing Item Responses: Some Simple Techniques. Quality & Quantity 34, 331–351 (2000) Jain, K., Srinivasan, N.: An Empirical Assessment of Multiple Operationalisation of Involvement. In: Paper presented at the Advances in Consumer Research, Provo, UT (1990) Korgaonkar, P.K., Wolin, L.D.: A Multivariate Analysis of Web Usage. Journal of Advertising Research, 53–68 (March/April 1999) Koslowsky, S.: The case of missing data. Journal of Database Marketing 9(4), 312–318 (2002) Lee, G.-G., Lin, H.-F.: Customer Perceptions of e-Service Quality in Online Shopping. International Journal of Retailing and Distribution Management 33(2), 161–176 (2005) Liao, Z., Tow-Cheung, M.: Internet-based E-shopping and consumer attitudes: An empirical study. Information and Management 38, 299–306 (2001) Lucas, C., Araabi, B.N.: Generalisation of the Dempster-Shafer Theory: A Fuzzy-Valued Measure. IEEE Transactions on Fuzzy Systems 7(3), 255–270 (1999) McQuarrie, E.F., Munson, J.M.: The Zaichkowsky Personal Involvement Inventory: Modification and Extension. In: Paper presented at the Advances in Consumer Research, Provo, UT (1986) Manfreda, K.L., Bosnjak, M., Berzelak, J., et al.: Web Surveys versus Other Survey Modes: A Meta-analysis Comparing Response Rates. International Journal of Marketing Research 50(1), 79–104 (2008) Mantores, R.L.: De Approximate Reasoning Models. Ellis Horwood, West Sussex (1990) Mittal, B.: Measuring Purchase-Decision Involvement. Psychology & Marketing 6, 147–162 (Summer 1989) Moore, G.C., Benbasat, I.: Development of an instrument to measure the perceptions of adopting an information technology innovation. Information Systems Research 2(3), 192–222 (1991) Page-Thomas, K.L., Moss, G., Chelly, D., et al.: The provision of service delivery information prior to purchase: A missed opportunity. International Journal of Retailing & Distribution Management 34(4/5), 258–277 (2006) Page, K.L.: World Wide Web Perceptions and Use: Investigating the Role of Web Knowledge. Unpublished Doctoral Dissertation, UNSW, Sydney (2003) Pyle, D.: Data Preparation for Data Mining. Morgan Kaufmann, Los altos (1999) Roesmer, C.: Nonstandard Analysis and Dempster-Shafer Theory. International Journal of Intelligent Systems 15, 117–127 (2000) Rohm, A.J., Swaminathan, V.: A typology of online shoppers based on shopping motivations. Journal of Business Research 57(7), 748–757 (2004) Roth, P.: Missing Data: A Conceptual Review for Applied Psychologists. Personnel Psychology 47, 537–560 (1994) Safranek, R.J., Gottschlich, S., Kak, A.C.: Evidence Accumulation Using Binary Frames of Discernment for Verification Vision. IEEE Transactions on Robotics and Automation 6, 405–417 (1990)  
   
  Analysing Incomplete Consumer Web Data Using the CaRBS  
   
  473  
   
  Schafer, J.L., Graham, J.W.: Missing Data: Our View of the State of the Art. Psychological Methods 7(2), 147–177 (2002) Shafer, G.A.: Mathematical theory of Evidence. Princeton University Press, Princeton (1976) Slama, M.E., Tashchian, A.: Selected Socioeconomic and Demographic Characteristics Associated with Purchasing Involvement. Journal of Marketing 49, 72–82 (Winter 1985) Smith, C.: Casting the Net: Surveying an Internet population. Journal of Computer Mediated Communication 3(1) (1997) Smith, M.F., Carsky, M.L.: Grocery Shopping Behaviour. Journal of Retailing and Consumer Services 3(3), 73–80 (1996) Storn, R., Price, K.: Differential Evolution - A Simple and Efficient Heuristic for Global Optimization over Continuous Spaces. Journal of Global Optimisation 11, 341–359 (1997) Swoboda, B.S.: Conditions of Consumer Information Seeking: Theoretical Foundations and Empirical Results of Using Interactive Multimedia Systems. The International Review of Retail, Distribution, and Consumer Research 8(4), 361–381 (1998) Taylor, S., Todd, P.: Assessing IT usage: The role of prior experience. MIS Quarterly 19, 561–570 (1995) Yang, J.-B., Liu, J., Wang, J., et al.: Belief Rule-Base Inference Methodology Using the Evidential Reasoning Approach—RIMER. IEEE Transactions on Systems, Man, and Cybernetics-Part A: Systems and Humans 36(2), 266–285 (2006) Zadeh, L.A.: Fuzzy Logic and Approximate Reasoning (In Memory of Grigore Moisel). Synthese 30, 407–428 (1975)  
   
  Author Index  
   
  Babin, Barry J. 35 Balakrishnan, P.V. (Sundar) 337 Beynon, Malcolm J. 365, 447 Bhattacharyya, Siddhartha 155 Borges, Adilson 35 Bradlow, Eric T. 27 Bruckhaus, Tilmann 131 Casillas, Jorge 181 Chiu, Yen-Ting Helena  
   
  Hayhurst, Tom Hsu, Tsuen-Ho Iacobucci, Dawn  
   
  227  
   
  Roberts, John  
   
  Lee, Nick  
   
  9 49 227  
   
  21  
   
  Tang, Jia-Wei 227 Tettamanzi, Andrea G.B. Tomic, Drazena 79 Tsafarakis, Stelios 295  
   
  31  
   
  Veloutsou, Cleopatra  
   
  365  
   
  Wang, Minhong 389 Wierenga, Berend 1 Wong, Man Leung 273  
   
  113  
   
  9  
   
  Markic, Brano 79 Marshall, Greg W. 43 Mart´ınez-L´ opez, Francisco J.  
   
  181 255  
   
  Shmueli, Galit 417 Stewart, David W. 17 Sun, Zhaohao 389  
   
  Jacob, Varghese S. 337 Jank, Wolfgang 417 Kok, Joost N.  
   
  Orriols-Puig, Albert Ortega, Omar L´ opez  
   
  Page, Kelly 447 Pereira, C´elia da Costa 207 Putten, Peter van der 113  
   
  Dass, Mayukh 417 Dong, Dong 389 Duran, Randall E. 49 Greenley, Gordon  
   
  Matsatsinis, Nikolaos 295 Morales, Virgilio L´ opez 255 Moutinho, Luiz 365  
   
  181  
   
  Xia, Hao  
   
  337  
   
  Zhang, Li  
   
  49  
   
  207  

 Report "Marketing Intelligent Systems Using Soft Computing: Managerial and Research Applications (Studies in Fuzziness and Soft Computing, 258) 3642156053, 9783642156052"  
 ×    

 --- Select Reason ---  Pornographic  Defamatory  Illegal/Unlawful  Spam  Other Terms Of Service Violation  File a copyright complaint     

 Close  Submit    

    Contact information  
 Michael Browner   
   [email protected]    
   
   Address:   
 1918 St.Regis, Dorval, Quebec, H9P 1H6, Canada.   
   
 Support & Legal  
  O nas 
  Skontaktuj się z nami 
  Prawo autorskie 
  Polityka prywatności 
  Warunki 
  FAQs 
  Cookie Policy 
    
 Subscribe to our newsletter  
  Be the first to receive exclusive offers and the latest news on our products and services directly in your inbox.  
   Subscribe     

 Copyright © 2024 DOKUMEN.PUB. All rights reserved.        

 Unsere Partner sammeln Daten und verwenden Cookies zur Personalisierung und Messung von Anzeigen. Erfahren Sie, wie wir und unser Anzeigenpartner Google Daten sammeln und verwenden  .   Cookies zulassen    
    