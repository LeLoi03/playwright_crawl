Đang tải...   
 Hệ thống không thể thực hiện thao tác ngay bây giờ. Hãy thử lại sau.   
   
     Trích dẫn  

     Tìm kiếm nâng cao  

 Tìm bài viết    
   
 có tất cả  các từ    

 có cụm từ chính xác     

 có ít nhất một  trong các từ    

 không có  các từ    

 nơi xuất hiện các từ của tôi    
  bất cứ nơi nào trong bài viết       
  trong tiêu đề bài viết       

 Trả về các bài viết được viết  bởi    

 ví dụ: "PJ Hayes"  hoặc McCarthy    

 Trả về các bài viết được xuất bản  trong    

 ví dụ: J Biol Chem  hoặc Nature    

 Trả về các bài viết đề ngày  trong khoảng    

 —    

 ví dụ: 1996    

     Đã lưu vào Thư viện của tôi  

 Xong     Xóa bài viết       

   Bài viết     Hồ sơ     
   Hồ sơ của tôi     Thư viện của tôi     Thông báo     Số liệu     
   Tìm kiếm nâng cao     
   Cài đặt     
   
   Đăng nhập     

 Đăng nhập    

 Bài viết  Scholar   

   Hồ sơ của tôi     Thư viện của tôi   Năm     Mọi lúc  Từ 2024  Từ 2023  Từ 2020    
 Sắp xếp theo mức độ liên quan  Sắp xếp theo ngày    

     Mọi loại  Bài viết đánh giá    
 bao gồm bằng sáng chế     bao gồm trích dẫn       

 Mọi lúc 
  Từ 2024 
  Từ 2023 
  Từ 2020 
  Phạm vi tùy chọn... 

 —    

 Tìm kiếm      
    
 Sắp xếp theo mức độ liên quan 
  Sắp xếp theo ngày 
  Mọi loại 
  Bài viết đánh giá 
  bao gồm bằng sáng chế 
  bao gồm trích dẫn 

 [PDF]  acm.org    

 Underminer: A framework for automatically identifying nonconverging behaviors in black-box system models   
 A Balkan  , P Tabuada  , JV Deshmukh  , X Jin  … - ACM Transactions on …, 2017 - dl.acm.org   
 A Balkan  , P Tabuada  , JV Deshmukh  , X Jin  , J Kapinski    
 ACM Transactions on Embedded Computing Systems (TECS), 2017 •  dl.acm.org   
 Evaluation of industrial embedded control system designs is a time-consuming and  
  imperfect process. While an ideal process would apply a formal verification technique such  
  as model checking or theorem proving, these techniques do not scale to industrial design  
  problems, and it is often difficult to use these techniques to verify performance aspects of  
  control system designs, such as stability or convergence. For industrial designs, engineers  
  rely on testing processes to identify critical or unexpected behaviors. We propose a novel …   

 Evaluation of industrial embedded control system designs is a time-consuming and imperfect process. While an ideal process would apply a formal verification technique such as model checking or theorem proving, these techniques do not scale to industrial design problems, and it is often difficult to use these techniques to verify performance aspects of control system designs, such as stability or convergence. For industrial designs, engineers rely on testing processes to identify critical or unexpected behaviors. We propose a novel framework called Underminer  to improve the testing process; this is an automated technique to identify nonconverging behaviors in embedded control system designs. Underminer treats the system as a black box and lets the designer indicate the model parameters, inputs, and outputs that are of interest. It differentiates convergent from nonconvergent behaviors using Convergence Classifier Functions (CCFs).   
 The tool can be applied in the context of testing models created late in the controller development stage, where it assumes that the given model displays mostly convergent behavior and learns a CCF in an unsupervised fashion from such convergent model behaviors. This CCF is then used to guide a thorough exploration of the model with the help of optimization-guided techniques or adaptive sampling techniques, with the goal of identifying rare nonconvergent model behaviors. Underminer can also be used early in the development stage, where models may have some significant nonconvergent behaviors. Here, the framework permits designers to indicate their mental model for convergence by labeling behaviors as convergent/nonconvergent and then constructs a CCF using a supervised learning technique. In this use case, the goal is to use the CCF to test an improved design for the model. Underminer supports a number of convergence-like notions, such as those based on Lyapunov analysis and temporal logic, and also CCFs learned directly from labeled output behaviors using machine-learning techniques such as support vector machines and neural networks. We demonstrate the efficacy of Underminer by evaluating its performance on several academic as well as industrial examples.   
   
  ACM Digital Library   

 Hiện thêm  Ẩn bớt      

   Lưu     Trích dẫn   Trích dẫn 22 bài viết  Bài viết có liên quan  Tất cả 5 phiên bản          

 Đang hiển thị kết quả tốt nhất cho tìm kiếm này. Xem tất cả kết quả    

 Quyền riêng tư  Điều khoản  Trợ giúp    
 Giới thiệu về Scholar  Trợ giúp về Tìm kiếm    

  