1. Conference SAT_0:
The International Conferences on  
  Theory and Applications of Satisfiability Testing (SAT)   
  [ Next Conference  ] · [ Past Meetings  ] · [ Related Sites  ]    The International Conferences on Theory and Applications of Satisfiability Testing are the primary annual meetings for researchers studying the propositional satisfiability problem (SAT), a prominent problem in both theoretical and applied computer science. SAT lies at the heart of the most important open problem in complexity theory (P vs  NP) and underlies many applications in, among other examples, artificial intelligence, operations research, and electronic design engineering. The primary objective of the conferences is to bring together researchers from various areas and communities, including theoretical and experimental computer science as well as the many relevant application areas to promote collaboration and the communication of new theoretical and practical results in SAT-related research and its industrial applications.  
   
 Next Meeting:    
   SAT 2025 | - 28th International Conference on Theory and Applications of Satisfiability Testing Glasgow, UK (2025) 
    
 Past Meetings:    
   SAT 2024 | - 27th International Conference on Theory and Applications of Satisfiability Testing Pune, India (2024) 
  SAT 2023 | - 26th International Conference on Theory and Applications of Satisfiability Testing Alghero, Italy (2023) 
  SAT 2022 | - 25th International Conference on Theory and Applications of Satisfiability Testing Haifa, Israel (2022) 
  SAT 2021 | - 24th International Conference on Theory and Applications of Satisfiability Testing Barcelona, Spain (2021) 
  SAT 2020 | - 23rd International Conference on Theory and Applications of Satisfiability Testing Alghero, Italy (2020) 
  SAT 2019 | - 22nd International Conference on Theory and Applications of Satisfiability Testing Lisbon, Portugal (2019) 
  SAT 2018 | - 21th International Conference on Theory and Applications of Satisfiability Testing Oxford, UK (2018) 
  SAT 2017 | - 20th International Conference on Theory and Applications of Satisfiability Testing 28. August - 1. September Melbourne, Australia (2017) 
  SAT 2016 | - 19th International Conference on Theory and Applications of Satisfiability Testing Bordeaux, France (2016) 
  SAT 2015 | - 18th International Conference on Theory and Applications of Satisfiability Testing, | Austin, Texas, USA (2015) 
  SAT 2014 | - 17th International Conference on Theory and Applications of Satisfiability Testing, 14-17 July 2014, Vienna, Austria 
  SAT 2013 | - 16th International Conference on Theory and Applications of Satisfiability Testing, 8-12 July 2013, Helsinki, Finland 
  SAT 2012 | - 15th International Conference on Theory and Applications of Satisfiability Testing, Trento, Italy (2012) 
  SAT 2011 | - 14th International Conference on Theory and Applications of Satisfiability Testing, Ann Arbor, USA (2011) 
  SAT 2010 | - 13th International Conference on Theory and Applications of Satisfiability Testing, Edinburgh, Scotland, United Kingdom (2010) 
  SAT 2009 | - 12th International Conference on Theory and Applications of Satisfiability Testing, Swansea, Wales, United Kingdom (2009) 
  SAT 2008 | - 11th International Conference on Theory and Applications of Satisfiability Testing, Guangzhou, P. R. China (2008) 
  SAT 2007 | - 10th International Conference on Theory and Applications of Satisfiability Testing, Lisbon, Portugal (2007) 
  SAT 2006 | - 9th International Conference on Theory and Applications of Satisfiability Testing, Seattle WA, USA (2006) 
  SAT 2005 | - 8th International Conference on Theory and Applications of Satisfiability Testing, St. Andrews, Scottland (2005) 
  SAT 2004 | - 7th International Conference on Theory and Applications of Satisfiability Testing, Vancouver (BC), Canada (2004) 
  SAT 2003 | - 6th International Conference on Theory and Applications of Satisfiability Testing, Santa Margherita Ligure, Italy (2003) 
  SAT 2002 | - 5th Symposium on Theory and Applications of Satisfiability Testing Cincinnati, USA (2002) 
  SAT 2001 | - 4th Workshop on Theory and Applications of Satisfiability Testing, Boston, USA (2001) 
  SAT 2000 | - 3rd Workshop on Satisfiability, Renesse, The Netherlands (2000) 
  SAT 1998 | - 2nd Workshop on Satisfiability, Schloß Eringerfeld, Germany (1998) 
  SAT 1996 | - 1st Workshop on Satisfiability, Siena, Italy (1996) 
    
 Some SAT-related sites:    
   SAT Association 
  JSAT | - Journal on Satisfiability, Boolean Modeling and Computation 
  SAT Live! | - Up-to-date links for the Satisfiability Problem 
  QBFLIB | - The Quantified Boolean Formulas Satisfiability Library 
   For comments and corrections, please contact Stefan Mengel  .  
  
 Imprint  Privacy   
   
Call for papers data: 
undefinedImportant dates data: 
undefined

2. Conference SAS_0:
SPLASH 2025   Sun 12 - Sat 18 October 2025 Singapore    
 co-located with ICFP/SPLASH 2025    

 Toggle navigation        
 Attending | Venue (Sunday Workshops): NUS School of Computing 
  Venue (Main Conference): Marina Bay Sands Convention Centre 
  ICFP/SPLASH 2025 
  Code of Conduct 
  Call for Sponsorship 
  Tracks | SPLASH 2025 
  OOPSLA 
  OOPSLA Artifacts 
  Posters 
  SPLASH-E 
  ICFP/SPLASH 2025 
  Workshops 
   Co-hosted Conferences 
  ICFP | ICFP 
  ICFP  Papers 
  Co-hosted Symposia 
  SAS 
  Organization | SPLASH 2025 Committees 
  Organizing Committee 
  Steering Committee 
  Track Committees 
  OOPSLA | OOPSLA Review Committee 
  External Review / Artifact Evaluation Committee 
  OOPSLA Artifacts 
  Posters 
  SPLASH-E | Program Commitee 
  Steering Committee 
  ICFP/SPLASH 
  Workshops 
  Contributors 
  People Index 
   Co-hosted Conferences 
  ICFP | Organizing Committee 
  Steering Committee 
  ICFP Programme Committee 
  Co-hosted Symposia 
  SAS | Organizing Committee 
  Program Committee 
  Search 
  Series | Series 
   SPLASH 2025 
  SPLASH 2024 
  SPLASH 2023 
  SPLASH 2022 
  SPLASH 2021 
  SPLASH 2020 
  SPLASH 2019 
  SPLASH 2018 
  SPLASH 2017 
  SPLASH 2016 
  SPLASH 2015 
  SPLASH 2014 
  SPLASH 2013 
  SPLASH 2012 
  SPLASH 2011 
   SPLASH 2010 
   OOPSLA 2009 
  OOPSLA 2008 
  OOPSLA 2007 
  OOPSLA 2006 
  OOPSLA 2005 
  OOPSLA 2004 
  OOPSLA 2003 
  OOPSLA 2002 
  OOPSLA 2001 
  OOPSLA 2000 
  Sign in 
  Sign up 

  ICFP/SPLASH 2025  ( series  ) /   SPLASH 2025  ( series  ) /  SAS 2025 ( series  ) /  SAS 2025  
   
 About 
  Call for Papers 
  Welcome to the website of the 32nd Static Analysis Symposium (SAS 2025). Static analysis is widely recognized as a fundamental tool for program verification, bug detection, compiler optimization, program understanding, and software maintenance. The series of Static Analysis Symposia  has served for more than 30 years as the primary venue for the presentation of theoretical, practical, and application advances in the area.  

  Call for PC members  (peer- or self-nominations)  
   
 Call for Papers  
  
 Static Analysis is widely recognized as a fundamental tool for program verification, bug detection, compiler optimization, program understanding, and software maintenance. The series of Static Analysis Symposia has served for over 30 years as the primary venue for the presentation of theoretical, practical, and application advances in the area.  
 Topics   
 The technical program for SAS 2025 will consist of invited lectures and presentations of refereed papers. Contributions are welcomed on all aspects of program analysis analysis, including, but not limited to:  
 Abstract interpretation 
  Automated deduction 
  Data flow analysis 
  Debugging techniques 
  Deductive methods 
  Emerging applications 
  Model-checking 
  Data science 
  Program optimizations and transformations 
  Program synthesis 
  Program verification 
  Machine learning and verification 
  Security analysis 
  Tool environments and architectures 
  Theoretical frameworks 
  Type checking 
  Distributed or networked systems 
  LLM for static analysis and static analysis for LLM 
  All paper submissions will be evaluated on the basis of significance, relevance, correctness, originality, and clarity.  
 We welcome regular papers as well as papers focusing on any of the following in the NEAT (New questions/areas, Experience, Announcement, Tool) category:  
 Well-motivated discussion of new questions or new areas. 
  Experience with static analysis tools, Industrial Reports, and Case Studies 
  Brief announcements of work in progress 
  Tool papers 
  Submissions can address any programming paradigm, including concurrent, constraint, functional, imperative, logic, object-oriented, aspect, multi-core, distributed, and GPU programming. We do not impose a page limit for submitted papers but we encourage brevity as reviewers have a limited time that they can spend on each paper. With the exception of NEAT papers, all papers will follow a lightweight double-blind reviewing process. The identity of the authors for the NEAT papers will be therefore known to the reviewers.  
 Papers must be written and presented in English. A submitted paper must describe original work and must not substantially overlap with papers that have been published or that are simultaneously submitted to a journal or a conference with refereed proceedings.  
 All submitted papers will be judged on the basis of significance, relevance, correctness, originality, and clarity. The review process will include a rebuttal period where authors have the opportunity to respond to preliminary reviews on the paper.  
 Radhia Cousot Award   
 The program committee will select an accepted regular paper for the Radhia Cousot Young Researcher Best Paper Award in memory of Radhia Cousot and her fundamental contributions to static analysis, as well as being one of the main promoters and organizers of the SAS series of conferences.  
 Artifacts   
 As in previous years, we encourage authors to submit a virtual machine image containing any artifacts and evaluations presented in the paper. Artifact submission is optional. Artifact evaluation will be concurrent with paper review. For more details, please visit the SAS 2025 Artifacts page.  
 Submission Details   
 Double-Blind Requirement   
 All regular papers will follow a double-blind process, where author names and affiliations are hidden for the review. To facilitate this process, submitted regular papers must adhere to the following: (1) Author names and affiliations must be omitted and (2) References to the authors’ own related work should be in the third person (e.g., not “We build on our previous work …” but rather “We build on the work of …”). The purpose of this process is to help the reviewers come to an initial judgment about the paper without bias, not to make it impossible for them to discover the authors if they were to try. Nothing should be done in the name of anonymity that weakens the submission, makes the job of reviewing the paper more difficult, or interferes with the process of disseminating new ideas. For example, important background references should not be omitted or anonymized, even if they are written by the same authors and share common ideas, techniques, or infrastructure.  
 NEAT Papers Content   
 New problems papers are an opportunity to discuss visions, challenges, experiences, problems, and impactful solutions in the field of static analysis from both a research and applications perspective. Such papers are encouraged to take assertive positions and be forward-looking and aim for lively and insightful discussions that are influential to future research directions in static analysis. NEAT papers will be handled in singe-blind way. User experience & Industrial reports & Case studies papers describe the use of static analysis in industrial settings or in any chosen application domains. Papers in this category do not necessarily need to present original research results but are expected to contain applications of static analysis as well as a comprehensive evaluation in the chosen application domain. Such papers are encouraged to discuss the unique challenges of transferring research ideas to a real-world setting, reflect on any lessons learned from this technology transfer experience, and compare experiences with different analyzers highlighting their strengths and weaknesses. Brief announcements of work in progress papers may describe work in progress. A submission that is not selected for regular presentation may be invited for a brief announcement.  
 Submission Guidelines   
 The SAS 2025 proceedings will be published by Springer in their LNCS series. Authors should consult Springer’s authors’ guidelines and use their proceedings templates, for LaTeX, Overleaf, or Word, for the preparation of their papers. The corresponding author of each accepted paper, acting on behalf of all of the authors of that paper, must complete and sign a Consent-to-Publish form. The corresponding author signing the copyright form should match the corresponding author marked on the paper. Once the files have been sent to Springer, changes relating to the authorship of the papers cannot be made.  

 Important Dates   AoE (UTC-12h)     

 Sun 4 May 2025  
  Paper Submission 
 Sun 11 May 2025  
  Artifact Submission 
 Wed 18 Jun 2025  
  Author Response 
 Wed 16 Jul 2025  
  Notification 

 Submission Link   
   
   https://sas25.hotcrp.com     
   
 Organizing Committee    
   
 Hakjoo Oh Program Co-Chair    
 Korea University   
 South Korea 
  Yulei Sui Program Co-Chair    
 UNSW   
 Australia 
    
 Program Committee    
   
 No members yet 

 x  Thu 5 Dec 12:36    

  SPLASH 2025   
  contact form    
  using conf.researchr.org  ( v1.67.1  )  
   Support page    
     
 Tracks  
 OOPSLA   
  OOPSLA Artifacts   
  Posters   
  SPLASH-E   
   
  ICFP/SPLASH 2025  
 Workshops    
 Co-hosted Conferences  
 ICFP 2025   
  Co-hosted Symposia  
 SAS 2025    

 Attending  
 Venue (Sunday Workshops): NUS School of Computing   
  Venue (Main Conference): Marina Bay Sands Convention Centre   
  Code of Conduct   
  Call for Sponsorship    
 Sign Up    

  
Call for papers data: 
ICFP/SPLASH 2025   Sun 12 - Sat 18 October 2025 Singapore    

 Toggle navigation        
 Attending | Venue (Sunday Workshops): NUS School of Computing 
  Venue (Main Conference): Marina Bay Sands Convention Centre 
  Code of Conduct 
  Call for Sponsorship 
  Tracks | ICFP/SPLASH 2025 
  Workshops 
   Co-hosted Conferences 
  ICFP | ICFP 
  ICFP  Papers 
  SPLASH | SPLASH 
  SPLASH  OOPSLA 
  SPLASH  OOPSLA Artifacts 
  SPLASH  Posters 
  SPLASH  -E 
  Co-hosted Symposia 
  SAS 
  Organization | ICFP/SPLASH 2025 Committees 
  Organizing Committee 
  Track Committees 
  Workshop Selection Committee 
  Contributors 
  People Index 
   Co-hosted Conferences 
  ICFP | Organizing Committee 
  Steering Committee 
  ICFP Programme Committee 
  SPLASH | Organizing Committee 
  Steering Committee 
  OOPSLA  OOPSLA Review Committee 
  OOPSLA  External Review / Artifact Evaluation Committee 
  OOPSLA Artifacts 
  Posters 
  SPLASH-E  Program Commitee 
  SPLASH-E  Steering Committee 
  Co-hosted Symposia 
  SAS | Organizing Committee 
  Program Committee 
  Search 
   Series 
  Sign in 
  Sign up 

 ICFP/SPLASH 2025  
 Singapore  

 The Rain Vortex at Jewel Changi Airport  
 Right next to Terminal 1 arrivals  

 Marina Bay and Merlion  

 Gardens by the Bay  

 Flower Dome  

 ArtScience Museum  

 Esplanade - Theatres on the Bay  
 aka The Durian  

 Lau Pa Sat  
 Iconic Hawker Centre  

 Singapore Botanic Gardens  

 Little India  

 Chinatown  

 Haji Lane  

 Resorts World Sentosa  

 Palawan Beach  
 Southernmost Point of Continental Asia  

 MacRitchie Treetop Walk  

 National University of Singapore  

 ICFP/SPLASH 2025  
   
 Welcome to the website of the joint ICFP/SPLASH 2025 conference!  
 For the first time, the two leading SIGPLAN venues—ICFP and SPLASH—will be co-located in Singapore in 2025:  
 ICFP 2025  : The ACM SIGPLAN International Conference on Functional Programming (ICFP) is an annual programming language conference that provides a forum for researchers and developers to hear about the latest work on the design, implementations, principles, and uses of functional programming. The conference covers the entire spectrum of work, from practice to theory, including its peripheries. 
  SPLASH 2025  : The ACM SIGPLAN International Conference on Systems, Programming, Languages and Applications: Software for Humanity (SPLASH) embraces all aspects of software construction and delivery, to make it the premier conference on the applications of programming languages - at the intersection of programming languages and software engineering. 
  We couldn’t be more excited to host academics and practitioners from all around the globe in one of the most vibrant and safe cities in the world!  

  ICFP/SPLASH 2025 Tracks   
   
 Workshops and Co-located Events   
  Show all tracks    

 Important Dates  up till Tue 25 Mar 2025     

 Tue 3 - Fri 6 Dec 2024     
  SPLASH OOPSLA  Author Response R1 
 Wed 18 Dec 2024     
  SPLASH OOPSLA  Author Notification R1 
 Fri 3 Jan 2025      
  SPLASH OOPSLA Artifacts  Artifact Submission Round 1 
 Thu 16 Jan 2025      
  Workshops  Workshop Proposal Submission 
 Mon 6 - Fri 17 Jan 2025     
  SPLASH OOPSLA Artifacts  Kick-the-Tires Round 1 
 Fri 21 Feb 2025     
  SPLASH OOPSLA Artifacts  Artifact Notification Round 1 
 Thu 27 Feb 2025      
  ICFP Papers  Submission Deadline 
 Tue 25 Mar 2025     
  SPLASH OOPSLA  Submission R2 
 All important dates 

 Supporters   

 In-kind Supporter 
 In-kind Supporter 

 x  Thu 5 Dec 12:36    

  ICFP/SPLASH 2025   
  contact form    
  using conf.researchr.org  ( v1.67.1  )  
   Support page    
     
 Tracks  
 Workshops    
 Co-hosted Conferences  
 ICFP 2025   
  SPLASH 2025   
  Co-hosted Symposia  
 SAS 2025    

 Attending  
 Venue (Sunday Workshops): NUS School of Computing   
  Venue (Main Conference): Marina Bay Sands Convention Centre   
  Code of Conduct   
  Call for Sponsorship    
 Sign Up    

  Important dates data: 
ICFP/SPLASH 2025   Sun 12 - Sat 18 October 2025 Singapore    

 Toggle navigation        
 Attending | Venue (Sunday Workshops): NUS School of Computing 
  Venue (Main Conference): Marina Bay Sands Convention Centre 
  Code of Conduct 
  Call for Sponsorship 
  Tracks | ICFP/SPLASH 2025 
  Workshops 
   Co-hosted Conferences 
  ICFP | ICFP 
  ICFP  Papers 
  SPLASH | SPLASH 
  SPLASH  OOPSLA 
  SPLASH  OOPSLA Artifacts 
  SPLASH  Posters 
  SPLASH  -E 
  Co-hosted Symposia 
  SAS 
  Organization | ICFP/SPLASH 2025 Committees 
  Organizing Committee 
  Track Committees 
  Workshop Selection Committee 
  Contributors 
  People Index 
   Co-hosted Conferences 
  ICFP | Organizing Committee 
  Steering Committee 
  ICFP Programme Committee 
  SPLASH | Organizing Committee 
  Steering Committee 
  OOPSLA  OOPSLA Review Committee 
  OOPSLA  External Review / Artifact Evaluation Committee 
  OOPSLA Artifacts 
  Posters 
  SPLASH-E  Program Commitee 
  SPLASH-E  Steering Committee 
  Co-hosted Symposia 
  SAS | Organizing Committee 
  Program Committee 
  Search 
   Series 
  Sign in 
  Sign up 

  ICFP/SPLASH 2025  ( series  ) /  Important Dates  

 When | Track | What 
 Tue 3 - Fri 6 Dec 2024 | SPLASH OOPSLA | Author Response R1 
 Wed 18 Dec 2024 | SPLASH OOPSLA | Author Notification R1 
 Fri 3 Jan 2025 | SPLASH OOPSLA Artifacts | Artifact Submission Round 1 
 Thu 16 Jan 2025 | Workshops | Workshop Proposal Submission 
 Mon 6 - Fri 17 Jan 2025 | SPLASH OOPSLA Artifacts | Kick-the-Tires Round 1 
 Tue 4 Feb 2025 | SPLASH OOPSLA | Submission of Revisions R1 
 Tue 18 Feb 2025 | SPLASH OOPSLA | Author Notification of Revisions R1 
 Fri 21 Feb 2025 | SPLASH OOPSLA Artifacts | Artifact Notification Round 1 
 Thu 27 Feb 2025 | ICFP Papers | Submission Deadline 
 Fri 28 Feb 2025 | SPLASH OOPSLA | Camera Ready R1 
 Tue 25 Mar 2025 | SPLASH OOPSLA | Submission R2 
 Mon 28 Apr - Thu 1 May 2025 | ICFP Papers | Author Response 
 Sun 4 May 2025 | SAS | Paper Submission 
 Thu 8 May 2025 | Workshops | Tutorials Proposal Submission 
 Sun 11 May 2025 | SAS | Artifact Submission 
 Fri 23 May 2025 | ICFP Papers | Notification of Conditional Acceptance 
 Thu 12 Jun 2025 | ICFP Papers | Deadline for Submitting Revisions 
 Wed 18 Jun 2025 | SAS | Author Response 
 Fri 27 Jun 2025 | SPLASH OOPSLA Artifacts | Artifact Submission Round 2 
 Fri 27 Jun 2025 | ICFP Papers | Final Decision Notification 
 Mon 30 Jun 12:00 - Fri 11 Jul 12:00 2025 | SPLASH OOPSLA Artifacts | Kick-the-Tires Round 2 
 Fri 11 Jul 2025 | ICFP Papers | Camera-Ready Deadline 
 Wed 16 Jul 2025 | SAS | Notification 
 Fri 15 Aug 2025 | SPLASH OOPSLA Artifacts | Artifact Notification Round 2 
 Tue 15 Oct 2024 | SPLASH OOPSLA | Submission R1 

 x  Thu 5 Dec 12:36    

  ICFP/SPLASH 2025   
  contact form    
  using conf.researchr.org  ( v1.67.1  )  
   Support page    
     
 Tracks  
 Workshops    
 Co-hosted Conferences  
 ICFP 2025   
  SPLASH 2025   
  Co-hosted Symposia  
 SAS 2025    

 Attending  
 Venue (Sunday Workshops): NUS School of Computing   
  Venue (Main Conference): Marina Bay Sands Convention Centre   
  Code of Conduct   
  Call for Sponsorship    
 Sign Up

3. Conference SAT_1:
SAT 2024  Dates and Calls   
  Dates  CFP  CFW    
   
 For Attendees   
  Keynote Speakers  Competitions  Venue  Accommodation & Transport  Visa Information  Student Grants  Registration    
   
 Resources   
  Organizers  Sponsorship  PhD Award    
   
 Organizers  Sponsorship  PhD Award  Awards  Workshops & School  Program Schedule  Highlights    

 Credit  SAT 2024   
 The 27th International Conference on Theory and Applications of Satisfiability Testing   
 August 21-24, Pune, India   

 SAT 2024 Proceedings  SAT 2024 Program Schedule    
   
 The International Conference on Theory and Applications of Satisfiability Testing (SAT) is the premier annual meeting for researchers focusing on the theory and applications of the propositional satisfiability problem, broadly construed. In addition to plain propositional satisfiability, it also includes Boolean optimization (such as MaxSAT and Pseudo-Boolean (PB) constraints), Quantified Boolean Formulas (QBF), Satisfiability Modulo Theories (SMT), Model Counting, and Constraint Programming (CP) for problems with clear connections to Boolean-level reasoning.  
   
  Many hard combinatorial problems can be tackled using SAT-based techniques including problems that arise in Formal Verification, Artificial Intelligence, Operations Research, Computational Biology, Cryptography, Data Mining, Machine Learning, Mathematics, etc. Indeed, the theoretical and practical advances in SAT research over the past twenty years have contributed to making SAT technology an indispensable tool in a variety of domains.  
   
  SAT 2024 aims to further advance the field by soliciting original theoretical and practical contributions in these areas with a clear connection to satisfiability. Specifically, SAT 2024 invites scientific contributions addressing different aspects of SAT interpreted in a broad sense, including (but not restricted to) theoretical advances (such as exact algorithms, proof complexity, and other complexity issues), practical search algorithms, knowledge compilation, implementation-level details of SAT solvers and SAT-based systems, problem encodings and reformulations, applications (including both novel application domains and improvements to existing approaches), as well as case studies and reports on findings based on rigorous experimentation.   
 Sponsors  
  
 Diamond 
 Platinum 
 Platinum 
 Gold 
 Gold 
 Silver 
 Bronze 
 Bronze 

 SAT 2024 - August 21 - 24, 2024, Pune, India   
   
  
Call for papers data: 
SAT 2024  Dates and Calls   
  Dates  CFP  CFW    
   
 For Attendees   
  Keynote Speakers  Competitions  Venue  Accommodation & Transport  Visa Information  Student Grants  Registration    
   
 Resources   
  Organizers  Sponsorship  PhD Award    
   
 Organizers  Sponsorship  PhD Award  Awards  Workshops & School  Program Schedule  Highlights    

 Credit  Call for Papers   
   
 Scope  
 SAT 2024 is the 27th edition of the International Conference on Theory and Applications of Satisfiability Testing (SAT). The scope of SAT 2024 includes all aspects of the theory and applications of propositional satisfiability, broadly construed. This also includes Boolean optimization, such as MaxSAT and Pseudo-Boolean (PB) constraints, Quantified Boolean Formulas (QBF), Satisfiability Modulo Theories (SMT), Model Counting, and Constraint Programming (CP) for problems with clear connections to Boolean-level reasoning.  
   
  Topics of interest include (but are not limited to):  
   
  Theoretical advances (including algorithms, proof complexity, parameterized complexity, and other complexity issues) 
  Practical search algorithms 
  Knowledge compilation 
  Implementation-level details of SAT- and SMT-solving tools and SAT/SMT-based systems 
  Problem encodings and reformulations 
  Applications (including both novel applications domains and improvements to existing approaches) 
  Case studies and reports on insightful findings based on rigorous experimentation 
    
 Out of Scope  
 Papers claiming to resolve a major long-standing open theoretical question in Mathematics or Computer Science (such as those for which a Millennium Prize is offered), are outside the scope of the conference because there is insufficient time in the schedule to referee such papers; instead, such papers should be submitted to an appropriate technical journal.   
 Paper Categories  
 Submissions to SAT 2024 are invited in the following three categories: Long papers (9 to 15 pages, excluding references and appendices) 
  Short papers (up to 8 pages, excluding references and appendices) 
  Tool papers (up to 8 pages, excluding references and appendices) 
  Long and short papers should contain original research, with sufficient detail to assess the merits and relevance of the contribution. For papers reporting experimental results, authors are strongly encouraged to make their data and implementation available with the submission. Submissions on applications and case studies are encouraged. Such papers should describe details, weaknesses and strengths of the proposed approaches in sufficient depth, but they are not expected to introduce novel solving methods.  
   
  Long and short papers will be evaluated with the same quality standards, and are expected to contain a similar contribution per page ratio.The authors should choose between a long or a short paper depending on the space they need to fully describe their contribution. The classification between long and short papers impacts the duration of the presentation of the work during the conference. It is the responsibility of the authors to make sure that their paper is self-contained in the chosen limit of pages. There will be no re-classification of the submissions by the PC.  
   
  Tool papers are expected to report on the design and implementation of a tool and its novel features. Here “tool” is interpreted in a broad sense, including descriptions of solvers, preprocessors, etc., as well as systems that exploit SAT solvers or their extensions for use in a relevant problem domain. A demonstration is expected to accompany a tool presentation. Papers describing tools that have already been presented previously are expected to contain significant and clear enhancements to the tool.   
 Submission  
 Submissions should not be under review elsewhere nor be submitted elsewhere while under review for SAT 2024, and should not consist of previously published material. Submissions not consistent with these guidelines may be returned without review.  
   
  Papers must be formatted in the LIPIcs LaTeX style available here  . Submissions must be made electronically in PDF format. The reviewing process for SAT 2024 is single-blind. Submit Now!    
 Authors may submit a supplement containing detailed proofs, examples, software, detailed experimental data, or other material related to the submission, to be consulted at the discretion of the reviewers. Supplements will be treated with the same degree of confidentiality as the paper itself. The supplement must consist of a single file in one of the following formats: zipped tarball (.tar.gz or .tgz), gzipped file (.gz), or zip archive (.zip).  
   
  One author of each accepted paper is expected to present it at the conference.   
 Important dates  
 Abstract submission: March 8, 2024 AoE | CLOSED 
  Full paper submission: | March 15, 2024 AoE | March 17, 2024 AoE | CLOSED 
  Author response: May 9-13, 2024 AoE 
  Notification of decisions: May 22, 2024 AoE 
  Camera-ready version submission: June 22, 2024 AoE 
  Workshops & Indian SAT+SMT School: August 18-20, 2024 
  SAT conference: August 21-24, 2024 
    
 Best Paper Awards  
 Long and short papers may be considered for a Best Paper Award. If the main author is a student, both in terms of work and writing, the paper may be considered for a Best Student Paper Award.   
 Proceedings  
 Accepted papers will be published as proceedings of the conference in the Leibniz International Proceedings in Informatics (LIPIcs)  as a free, open, electronic archive with access to all. Authors will retain full rights over their work. The accepted papers will be published under a CC-BY license  .   
 Invitation of top papers to AIJ and JAIR  
 Top papers from SAT 2024 will be invited to the award-winning paper tracks in Artificial Intelligence Journal (AIJ) or Journal of Artifical Intelligence Research (JAIR). Here, "top papers" means papers that were publicly acknowledged as such, e.g., announced as best papers or runner-ups etc. The authors of these invited papers will have the option to choose between AIJ and JAIR and will get a chance to expand their conference submission by including additional details. Papers submitted to these tracks will receive expedited review, and accepted papers will receive special recognition on the web page of the selected journal. Apart from appearing in a regular volume of AIJ/JAIR with this special designation, all papers in the track will be indexed in a separate virtual volume.   
   
 SAT 2024 - August 21 - 24, 2024, Pune, India   
   
  Important dates data: 
SAT 2024  Dates and Calls   
  Dates  CFP  CFW    
   
 For Attendees   
  Keynote Speakers  Competitions  Venue  Accommodation & Transport  Visa Information  Student Grants  Registration    
   
 Resources   
  Organizers  Sponsorship  PhD Award    
   
 Organizers  Sponsorship  PhD Award  Awards  Workshops & School  Program Schedule  Highlights    

 Credit  Important Dates   
   
 ----- AoE: Anywhere on Earth time, UTC -12 hours -----   
   
 For Authors:  
 Abstract Submission: March 08, 2024 AoE | CLOSED 
  Paper Submission: | March 15, 2024 AoE | March 17, 2024 AoE | CLOSED 
  Author response: May 09-13, 2024 AoE 
  Notification of decisions: May 22, 2024 AoE 
  Camera-ready submission: June 22, 2024 AoE 
  Conference:  
 Indian SAT+SMT School & Workshops: August 18-20, 2024 
  SAT Conference: August 21-24, 2024 
  Excursion / cultural event (to be announced) 

 SAT 2024 - August 21 - 24, 2024, Pune, India

4. Conference SAS_1:
Description 
  Topics 
  Artifacts 
  Radhia Cousot Award 
  Next edition 
  Previous editions 
  Steering Committee 
  Policies 

 The SAS pages are managed by the SAS Steering Committee  and hosted by the IMDEA Software Institute    
 SAS  
 The Static Analysis Symposia  
  
   Description  
 Static Analysis is increasingly recognized as a fundamental tool for program verification, bug detection, compiler optimization, program understanding, and software maintenance. The series of International Static Analysis Symposia (SAS) serves as the primary venue for presentation of theoretical, practical, and application advances in the area.  
  Topics  
 Contributions to the technical program for Static Analysis Symposia typically consist of invited lectures and presentations of refereed papers. While each edition is independent, traditionally contributions are welcome on all aspects of static analysis, including, but not limited to:  
  
 abstract domains | abstract interpretation 
 abstract testing | bug detection 
 data flow analysis | model checking 
 new applications | program transformation 
 program verification | security analysis 
 theoretical frameworks | type checking 
  
 Submissions can address any programming paradigm, including concurrent, constraint, functional, imperative, logic object-oriented, aspect, multi-core, distributed, GPU programming, etc. Survey papers, that present some aspect of the above topics with a new coherence, and application papers that describe experience with industrial applications, are also welcome.  
 Papers must describe original work, be written and presented in English, and must not substantially overlap with papers that have been published or that are simultaneously submitted to a journal or a conference with refereed proceedings. Submitted papers will be judged on the basis of significance, relevance correctness, originality, and clarity. They should clearly identify what has been accomplished and why it is significant.  
  Artifacts  
 Since 2013 SAS is encouraging authors to submit a virtual machine image containing any artifacts and evaluations presented in papers. The goal of the artifact submissions is to strengthen adherence to the scientific approach in the evaluations and reproducibility of results in our field.  
 Artifact submission is optional  at the SAS conferences. The submitted artifacts are used by the program committee as a secondary evaluation criteria that will provide additional positive arguments for the paper's acceptance. Submissions without artifacts are still welcome and are not penalized. Some SAS editions publish artifacts of accepted papers.  
  Radhia Cousot Award  
 Starting in 2014, the program committee of each SAS conference selects a paper for the Radhia Cousot Young Researcher Best Paper Award  , in memory of Radhia Cousot  , and her fundamental contributions to static analysis, as well as being one of the main promoters and organizers of the SAS series of conferences.  
 Recipients of the award:  
 Denis Mazzucato (École Normale Supérieure, France), | Quantitative Static Timing Analysis | (with Marco Campion and Caterina Urban). 
   
  Josselin Giet (École Normale Supérieure, France) and Felix Ridoux (IMDEA Software Institute, Spain and University of Rennes, France), | A Product of Shape and Sequence Abstractions | (with Xavier Rival). 
   
  Daneshvar Amrollahi, Marcel Moosbrugger and Miroslav Stankovic (TU Wien, Austria), | Solving Invariant Generation for Unsolvable Loops | (with Ezio Bartocci, George Kenison, and Laura Kovács). 
   
  Tianhan Lu (University of Colorado, USA), | Selectively-Amortized Resource Bounding | (with Bor-Yuh Evan Chang and Ashutosh Trivedi) 
   
  Sung Kook Kim (University of California, USA), | Memory-Efficient Fixpoint Computation | (with Arnaud Venet and Aditya Thakur) 
   
  Anna Becchi (University of Udine, Italy), | Revisiting Polyhedral Analysis for Hybrid Systems | (with Enea Zaffanella) | Yuxiang Lei (University of Technology Sydney, Australia), | Fast and Precise Handling of Positive Weight Cycles for Field-sensitive Pointer Analysis | (with Yulei Sui) 
   
  Zvonimir Pavlinovic (New York University, USA) | The Impact of Program Transformations on Static Program Analysis | (with Kedar S. Namjoshi) | Nimit Singhania (University of Pennsylvania, USA) | Block-Size Independence for GPU Programs | (with Rajeev Alur and Joseph Devietti) 
   
  Suvam Mukherjee (Indian Institute of Science, India) and Oded Padon (Tel Aviv University, Israel), | Thread-Local Semantics and its Efficient Sequential Abstractions for Race-Free Programs | (with Sharon Shoham, Deepak D'Souza, and Noam Rinetzky) 
   
  Stefan Schulze Frielinghaus (TU Müuchen, Germany), | Enforcing Termination of Interprocedural Analysis | (with Helmut Seidl and Ralf Vogler) 
   
  Marianna Rapoport (University of Waterloo, Canada), | Precise Data Flow Analysis in the Presence of Correlated Method Calls | (with Ondrej Lhoták and Frank Tip) 
   
  Aleksandar Chakarov (University of Colorado, USA), | Expectation Invariants for Probabilistic Program Loops as Fixed Points | (with Sriram Sankaranarayanan) 
   
  Next Edition  
 The 32nd Static Analysis Symposium, SAS 2025  , will be held in Singapore, co-located with SPLASH 2025  .  
  Previous Editions  
 The series of Static Analysis Symposia  has been held in Pasadena, USA (2024)  Cascais, Portugal (2023)  , Auckland, New Zealand (2022)  , Chicago (2021)  , the whole Internet (initially planned in Chicago, Illinois, United States) (2020)  , Porto, Portugal (2019)  , Freiburg, Germany (2018)  , New York (2017)  , Edinburgh (2016)  , Saint-Malo (2015)  , Munich (2014)  , Seattle (2013)  , Deauville (2012)  , Venice (2011)  , Perpignan (2010)  , Los Angeles (2009)  , Valencia (2008)  , Kongens Lyngby (2007)  , Seoul (2006)  , London (2005)  , Verona (2004)  , San Diego (2003)  , Madrid (2002)  , Paris (2001)  , Santa Barbara (2000)  , Venice (1999)  , Pisa (1998)  , Paris (1997)  , Aachen (1996)  , Glasgow (1995)  , and Namur (1994)  . SAS predecessors were the series of Workshops on Static Analysis held in Padova (1993)  and Bordeaux ( 1992  and 1991  ).  
  Steering Committee  
 The SAS Steering Committee (2024) is:  
  
 Roberto Giacobazzi | University of Arizona, USA | SAS 2024 PC co-chair 
 Alessandra Gorla | IMDEA Software Institute, Spain | SAS 2024 PC co-chair 
 Manuel Hermenegildo | UPM and IMDEA Software Institute, Spain | SAS 2023 PC co-chair 
 José F. Morales | UPM and IMDEA Software Institute, Spain | SAS 2023 PC co-chair 
 Caterina Urban | Inria and Ecole Normale Supérieure, France | SAS 2022 PC co-chair 
 Gagandeep Singh | University of Illinois at Urbana-Champaign and VMware Research, USA | SAS 2022 PC co-chair 
 Cezara Dragoi | Amazon Web Services, France | SAS 2021 PC co-chair 
 Kedar Namjoshi | Nokia Bell Labs, USA | SAS 2021 PC co-chair 
 Mihaela Sighireanu (SC Co-Chair) | LSV, ENS Paris-Saclay, France | SAS 2020 PC co-chair 
 David Pichardie (SC Co-Chair) | Meta and University of Rennes, ENS Rennes, IRISA, France | SAS 2020 PC co-chair 
 Patrick Cousot | New York University, USA | Honorary senior member 

 Composition and duties:  Since 2017 the SAS SC is formed on a dynamic, rotating basis by including the Program Committee (PC) chairs of the last 5 editions of SAS, i.e., the SC for year X consists of the PC chairs of SAS X, X-1, X-2, X-3, X-4, and the SC chair(s) are the PC chair(s) of SAS X-4. Moreover, to preserve the historical memory of the SC, the founding chair of the SC, Patrick Cousot, is included as an honorary senior member. The SAS SC for year X is in charge of:  
 Selecting the location and the Program Committee Chair and Organizing Chair of the next SAS (i.e., for year X+1). 
  Giving feedback to the PC chairs on the composition of the PC for year X+1. 
  Managing the financial resources of the SAS conferences. 
  Managing the connections with publishers and related conferences and events. 
  Managing the communication via social media and the web. 
  Proposing to the community any actions that may improve the scientific strength and status of SAS. 
  The founding members of the SAS SC (serving up to 2017) were Patrick Cousot  (École Normale Supérieure, France & New York University, USA), Radhia Cousot  (CNR & École Normale Supérieure, France), Roberto Giacobazzi  (University of Verona, Italy), Gilberto Filé  (University of Padova, Italy), Manuel Hermenegildo  (UPM and IMDEA Software Institute, Spain), and David Schmidt  (Kansas State University, USA).  
  Policies  
 SAS abides by the ACM SIGPLAN conference code of conduct policy  .   

   
Call for papers data: 
404  
 File not found   
 The site configured at this address does not contain the requested file.  
 If this is your site, make sure that the filename case matches the URL as well as any file permissions.  
  For root URLs (like http://example.com/  ) you must provide an index.html  file.  
 Read the full documentation  for more information about using GitHub Pages  .  
 GitHub Status  — @githubstatus    
       
  Important dates data: 
undefined

5. Conference SASHIMI_0:
Skip to main content     
 An official website of the United States government  
 Here's how you know    
 Here's how you know     
  
  Official websites use .gov   
  A .gov  website belongs to an official government organization in the United States.  

  Secure .gov websites use HTTPS   
  A lock  ( Lock  Locked padlock icon     ) or https://  means you've safely connected to the .gov website. Share sensitive information only on official, secure websites.  

        Search    Log in       Dashboard 
  Publications 
  Account settings 
  Log out 

 Search…   Search NCBI      
   
 Primary site navigation  
   Search      Logged in as:   
 Dashboard 
  Publications 
  Account settings 
    
 Log in   

 Search PMC Full-Text Archive    Search in PMC     Advanced Search 
  Journal List 
  User Guide 

      PERMALINK  
    Copy 

 As a library, NLM provides access to scientific literature. Inclusion in an NLM database does not imply endorsement of, or agreement with the contents by NLM or the National Institutes of Health.  
  Learn more: PMC Disclaimer  | PMC Copyright Notice    

 IEEE Trans Med Imaging    
 . Author manuscript; available in PMC: 2018 Sep 27.   
 Published in final edited form as:  IEEE Trans Med Imaging. 2018 Mar;37(3):673–679. doi: 10.1109/TMI.2018.2800298    
 Search in PMC 
  Search in PubMed 
  View in NLM Catalog 
  Add to search 

 Simulation and Synthesis in Medical Imaging  
  Alejandro F Frangi   Alejandro F Frangi   
 1  CISTIB Centre for Computational Imaging and Simulation Technologies in Biomedicine, Electronic & Electrical Engineering Department, The University of Sheffield, Sheffield S1 3JD, U.K. (a.frangi@sheffield.ac.uk).   
 Fellow, IEEE   
 Find articles by Alejandro F Frangi     
   
 1  , Sotirios A Tsaftaris   Sotirios A Tsaftaris   
 2  Institute of Digital Communications School of Engineering, The University of Edinburgh, Edinburgh EH9 3FB, U.K. (s.tsaftaris@ed.ac.uk).   
 Member, IEEE   
 Find articles by Sotirios A Tsaftaris     
   
 2  , Jerry L Prince   Jerry L Prince   
 3  Image Analysis and Communications Laboratory, Electrical and Computer Engineering, Johns Hopkins University, Baltimore, MD 21218-2608, USA.   
 Fellow, IEEE   
 Find articles by Jerry L Prince     
   
 3    
 Author information 
  Copyright and License information 
  1  CISTIB Centre for Computational Imaging and Simulation Technologies in Biomedicine, Electronic & Electrical Engineering Department, The University of Sheffield, Sheffield S1 3JD, U.K. (a.frangi@sheffield.ac.uk).   
 2  Institute of Digital Communications School of Engineering, The University of Edinburgh, Edinburgh EH9 3FB, U.K. (s.tsaftaris@ed.ac.uk).   
 3  Image Analysis and Communications Laboratory, Electrical and Computer Engineering, Johns Hopkins University, Baltimore, MD 21218-2608, USA.   
 Roles  
 Alejandro F Frangi   : Fellow, IEEE    
 Sotirios A Tsaftaris   : Member, IEEE    
 Jerry L Prince   : Fellow, IEEE    
   
 PMC Copyright notice    

 PMCID: PMC6159212 NIHMSID: NIHMS988080 PMID: 30253380    
 The publisher's version of this article is available at IEEE Trans Med Imaging    

 Abstract  
 This editorial introduces the Special Issue on Simulation and Synthesis in Medical Imaging. In this editorial, we define so-far ambiguous terms of simulation and synthesis in medical imaging. We also briefly discuss the synergistic importance of mechanistic (hypothesis-driven) and phenomenological (data-driven) models of medical image generation. Finally, we introduce the twelve papers published in this issue covering both mechanistic (5) and phenomenological (7) medical image generation. This rich selection of papers covers applications in cardiology, retinopathy, histopathology, neurosciences, and oncology. It also covers all mainstream diagnostic medical imaging modalities. We conclude the editorial with a personal view on the field and highlight some existing challenges and future research opportunities.  
 Keywords:  Data-driven, hypothesis-driven, machine learning, modeling  

 I. INTRODUCTION  
 THE  medical image community has always been fascinated by the possibility of creating simulated or synthetic data upon which to understand, develop, assess, and validate image analysis and reconstruction algorithms. From very basic digital phantoms all the way to very realistic in silico  models of medical imaging and physiology, our community has progressed enormously in the available techniques and their applications. For instance, mechanistic models (imaging simulations) emulating the geometrical and physical aspects of the acquisition process have been used now for a long time. Advances on computational anatomy and physiology have further enhanced the potential of such simulation platforms by incorporating structural and functional realism to the simulations that can now account for complex spatio-temporal dynamics due to changes in anatomy, physiology, disease progression, patient and organ motion, etc.  
 More recently, developments in machine learning together with the growing availability of ever larger-scale databases have provided the theoretical underpinning and the practical data access to develop phenomenologic models (image synthesis) that learn models directly from data associations across subjects, time, modalities, resolutions, etc. These techniques may provide ways to address challenging tasks in medical image analysis such as cross-cohort normalization, image imputation in the presence of missing or corrupted data, transfer of knowledge across imaging modalities, views or domains.  
 To this date, however, these two main research avenues (simulation and synthesis) remain independent efforts despite sharing common challenges. For instance, both modeling approaches involve dealing with large scale optimization problems (e.g. in learning processes or physical equations), involve the use of regularization and priors (e.g. either based on mathematical or physical properties), need to generalize well, adapt to new scenarios, and degrade gracefully beyond the original learning set or modeling assumptions, require the definition of meaningful figures of merit to assess the quality, accuracy, or realism of simulated/synthesized data, in both approaches there is a growing emphasis on open source implementations, open data benchmarks, and evaluation challenges, just to name a few. These and other challenges have been discussed at the successful SASHIMI Satellite Workshop 1   held in conjunction with the Medical Image Computing and Computer Assisted Interventions (MICCAI) Conference in 2016 (Athens, Greece) and 2017 (Quebec, Canada). We look forward to the future editions of this Workshop as a forum for identifying new research challenges and avenues, and tackling them as a community.  
 This special issue provides an overview of the state-of-theart in methods and algorithms at the bleeding edge of synthesis and simulation in/for medical imaging research. We hope this collection will stimulate new ideas leading to theoretical links, practical synergies, and best practices in evaluation and assessment common to these two research directions. We solicited contributions from cross-disciplinary teams with expertise, among others, on machine learning, statistical modeling, information theory, computational mechanics, computational physics, computer graphics, applied mathematics, etc.  
 In the sequel, we first aim to formally define simulation and synthesis in medical imaging and then discuss similarities and differences between simulation (mechanistic) vs. synthesis (phenomenologic) approaches. We then give the main highlights of the published papers within this issue and conclude by offering our perspective on some trends and challenges, and point our to some open problems awaiting future research.  
  
 II. CONTEXT AND DEFINITIONS  
 It is helpful at this point to be specific about the concepts of simulation  and synthesis  in this special issue, that is, in medical imaging and medical image computing. We found out that the concept of simulation is, in general, very ample and unspecific to medical imaging, and that there was virtually no formal definition of medical image synthesis. We could find none of these terms defined in the Dictionary of Computer Vision and Image Processing  [item 1   ) in the Appendix].  
 The concepts of image simulation and synthesis can be ambiguous (or even interchangeable) if one attends to dictionary definitions of these terms by authoritative references such as Oxford (OED) 2   and Merriam-Webster (MWD) 3   :  
 Simulation  [OED] n  • 3. The technique of imitating the behaviour of some situation or process (whether economic, military, mechanical, etc.) by means of a suitably analogous situation or apparatus, esp. for the purpose of study or personnel training. 
  Simulation  [MWD] n •  3a: the imitative representation of the functioning of one system or process by means of the functioning of another – a computer simulation of an industrial process; b: examination of a problem often not subject to direct experimentation by means of a simulating device. 
  Synthesis  [OED] n  • 1. Logic, Philos., etc.: a. The action of proceeding in thought from causes to effects, or from laws or principles to their consequences. (Opposed to analysis n. 3). 
  Synthesis  [MWD] n  • 1 a : the composition or combination of parts or elements so as to form a whole. 
  The concept of synthesis currently in use in computer vision and medical image analysis contrasts strikingly as almost opposite to that traditionally used in philosophy or science. 4   In computer graphics, the “goal in realistic image synthesis  is to generate an image that evokes from the visual perception system a response indistinguishable from that evoked by the actual environment” [item 2   ) in the Appendix] [item 3   ) in the Appendix]. However, computer graphics is focused on perceptual accuracy. Glassner, in his classical book states: “our job as image synthesists is to create an illusion of reality – to make a picture that carries our message, not necessarily one that matches some objective standard. It’s a creative job” [item 4   ) in the Appendix]. While medical imaging does not neglect visual realism (e.g. for conventional radiographic assessment this remains important), the key concern is one of quantitative accuracy of the synthesised images or, at least, in accuracy in terms of figures of merit that are meaningful for the intended task (e.g. diagnostics, planning, prognosis, etc.). In the sequel, we attempt to provide some distinction between and propose a definition to the concepts of image synthesis  and image simulation  based on the literature and praxis of our medical imaging community.  
 At one level, in using the concepts of simulation and synthesis, our community usually makes a fundamental ontological distinction best described by referring to mechanistic and phenomenologic models, respectively. In simulation, we usually adopt first principles for image generation while in synthesis we start off with abundant data (with the notion of abundance changing through the years). We also usually assume behind these concepts a natural information processing direction: from data to models with synthesis; and from models to data with simulation ( Fig. 1  ). Simulation implies the existence of an abstraction of the knowledge we possess, usually in the form of first principles, that is used to derive instances of that knowledge in a scenario that is fully controlled by the selection of simulation parameters. Synthesis, on the contrary, implies the ability to abstract or summarise (synthesise) knowledge from a collection of exemplars that are representative of a wider population, phenotype or phenomenon. This is usually accomplished through statistical or phenomenologic models. If a mechanistic model is available, one can perform data assimilation or parameter identification resulting in a customised or individualised mechanistic model. Conversely, one can simulate new image (or shape) examples from an image (or shape) synthesis method but we talk then of data-driven models and these are usually phenomenologic in nature. At this point, we make explicit that the notion of “medical image” we use here refers to any spatially (or spatio-temporally) resolved mapping or function [item 5   ) in the Appendix] to any physical or physiological parameter space, even if that space is non-measurable and hence derived from a computer-based synthesis or simulation. In this case, we can refer to “virtual” or “in silico” medical imaging [item 6   ) in the Appendix]. This has as a side-effect that while phenomenologic model can issue forecasts (i.e. are regressive or extrapolative), only mechanistic models are truly predictive ( Latin  : præ-  , “before,” and dicere  , “to say”).  
 Fig. 1.  
   
 Open in a new tab    
 Data-Information-Knowledge-Wisdom (DIKW) pyramid and how phenomenologic and mechanistic approaches relate to it. Adapted from [item 6   ) in the Appendix]  
   Here, we offer these two definitions:  
 (Image) Synthesis [ours] n • The generation of visually realistic and quantitatively accurate images through learning phenomenologic models with application to problems like interpolation, super resolution, image normalisation, modality propagation, data augmentation, etc.  
 (Image-based) Simulation [ours] n • The application of mechanistic first principles from imaging physics, organ physiology, and/or their interaction, to produce virtual images that are informed by individualised data; these result on both visually realistic and physically/clinically plausible images, and are generated under controlled hypothetical imaging conditions.  
 Synthetic images are generally useful in structuring information and capturing knowledge from vast image data sets when little is known about the underlying mechanisms. They are particularly useful as a modeling approach when data is abundant and we have few hypothesis to make about the underlying mechanisms. They are hypothesis-free but data-driven: this means the extracted knowledge must be cautiously interpreted in light of the way the data has been collected (e.g. what population is represented by this sample?, which inclusion and exclusion criteria underlie the data?, etc.). Virtual images derived from image-based simulations, in turn, produce images with strong mechanistic priors and are a great approach when acquiring (large amounts of) images is impractical, ethically unjustifiable, or simply impossible. Here, the data generated from simulations must also be cautiously interpreted checking the epistemological validity of the underlying modeling assumptions and mechanisms. In brief, both approaches have strengths and limitations. Synthetic images play a key role in data-driven information processing and knowledge discovery while image-based simulations are valuable in hypothesis-driven research in image-based diagnosis and treatment.  
  
 III. MECHANISTIC OR PHENOMENOLOGIC?  
 It is beyond the scope of this editorial to review the considerable progress made over the past decades in both physical models of image formation and in machine learning techniques for image synthesis. This special issue is a modern and exciting excerpt of the most recent developments. We would like, however, to put these two approaches underpinning these special issue in the wider context of current trends in science and data science.  
 There are opportunities and limitations in approaching image generation from a mechanistic or a phenomenologic standpoint, some of epistemological reach. Some would argue with increasing availability of big data, computational resources, and breakthroughs in artificial intelligence, data-driven phenomenologic models will eventually supersede the need of mechanistic theories [item 7   ) in the Appendix], while others seriously contest this viewpoint [item 8   ) in the Appendix]. The complexity of image generation process, the need to model detailed and accurately the geometry and physics of imaging, and the variability and uncertainty associated with anatomical and physiological factors, all seem to favour those challenging the need or feasibility of generating truly accurate medical images from first principles. In Chapter 12 of his book, Helbing [item 9   ) in the Appendix] presents an interesting cautionary argument that contrasts with Anderson’s vision of Big Data (assuming that we no longer will need theory and science). Fig. 2  shows Helbing’s model for digital growth in computational resources doubling about every 18 months (Moore’s law), and data resources doubling about every 12 months (soon every 12 hours!). While these two resources follow an exponential growth, the complexity of the processes that these resources help to elucidate or decide on (e.g. parametric complexity of the computational methods, ontological complexity of health data) follow a factorial growth as they are based on combinatorial combinations and system networks, respectively. The above implies the problem of “dark data”, i.e. the share of data we cannot process is increasing with time. As a consequence, we must know what data to process and how, which requires hypothesis-driven science and understanding of the underlying mechanisms relating data and phenomena so that algorithmic complexity is dealt with tractably.  
 Fig. 2.  
   
 Open in a new tab    
 Helbing’s model for digital growth where systemic complexity (e.g. algorithmic parametric complexity and complexity of health data) grows at a factorial rate compared to the exponential rate of data and computing resources. Courtesy of D Helbing. Reprinted with permission.  
    
 IV. SPECIAL ISSUE STATISTICS  
 Twenty-four manuscripts were received for this special issue. Two were immediately rejected while another ten were rejected after a revision round. Twelve papers were finally accepted after peer-review covering both mechanistic (5) and phenomenologic (7) modeling and data generation. This rich selection of papers covers applications in cardiology, retinopathy, histopathology, neurosciences, and oncology. It also covers all mainstream diagnostic medical imaging modalities. Two manuscripts were handled by Associate Editors Mehrdad Gangeh and Hayit Greenspan to avoid potential conflicts of interest. Each paper was reviewed, at least, by three expert reviewers.  
  
 V. SPECIAL ISSUE OVERVIEW  
 This special issue comprises 12 papers covering both image-based simulation and synthesis.  
 A. Image-Based Simulation  
 Simulation papers focus on either devising computational phantoms of anatomy or physiology in health and disease, or aim at developing computational phantoms in image formation.  
 In the first category of simulation papers, Segars et al  . start off by reviewing what is arguably one of the most widespread digital phantoms in computational human anatomy and physiology of the human thorax. The authors overview the four dimensional (4D) eXtended CArdiac-Torso (XCAT) series of phantoms, which cover a vast population of phantoms of varying ages from newborn to adult, each including parametrised models for the cardiac and respiratory motions. This paper illustrates how these phantoms found great use in radiation dosimetry, radiation therapy, medical device design, and even the security and defence industry. Abadi et al  . extend upon the capabilities of the XCAT series of computational phantoms, and propose a detailed lung architecture including airways and pulmonary vasculature. Eleven XCAT phantoms of varying anatomy were used to characterize the lung architecture. The XCAT phantoms were utilized to simulate CT images for validation against true clinical data. As the number of organs described as numerical phantoms as XCAT models increases, the potential use of such models as a tool to virtually evaluate the current and emerging medical imaging technologies increases. Polycarpou et al  . propose a digital phantom to synthesise 3D+t PET data using a fast analytic method. The proposed method derives models of cardiac respiration and motion based on real respiratory signals derived from PET-CT images are combined with MRI-derived motion modeling and high resolution MRI images. In addition, this study incorporates changes in lung attenuation at different respiratory cycle positions. The proposed methodology and derived simulated datasets can be useful in the development and benchmarking of motion-compensated PET reconstruction algorithms by providing associated ground-truth of various controlled imaging scenarios.  
 Others consider the role of models in disease processes. For example, in the paper by García et al  ., the authors consider the challenging task of evaluating the correlation of parenchymal patterns (i.e. local breast density) as provided by mammography with MRI volume information. Differences in distributions (MRI versus x-ray) and radical deformation present (due to how the breast is imaged during mammography and MR) render this problem also relevant from a registration perspective. The authors in tackling this challenge, employ a subject-specific biomechanical model of the breast to assist the MRI volumes to X-ray mammograms. When converged, a direct projection of the MR-derived glandular tissue permits the comparison to the corresponding mammogram. Along the same theme, Roque et al  . propose a reaction-diffusion model of tumour growth. Predicting tumour growth (based on models) and particularly its response to therapy is a critical aspect of cancer care and a challenge in cancer research. In this work, the authors derive an image-driven reaction-diffusion model of avascular tumour growth, which permits proliferation, death and spread of tumour cells, and accounts for nutrient distribution and hypoxia. The model parameters are learned (and evaluated) based on longitudinal time series of DCE-MRI images. Rodrigo et al  . study the influence of anatomical inaccuracy in the reconstruction of Electrocardiographic Images (ECGI) in non-invasive diagnosis of cardiac arrhythmias. The precise position of the heart inside the body is important for accurate reconstructions but often not accurately known. They explored the curvature of L-curve from the Tikhonov regularization approach, which is one methodology used to solved the inverse problem, and discovered that optimization of the maximum curvature minimizes inaccuracies in the atrial position an orientation. Such automatic method to remove inaccuracies in atrial position improves the results of ECGI. Moreover, it allows to apply ECGI technology also where the electric recording, usually done via Body Surface Potential Mapping (BSPM) and the anatomical CT/MRI images are not recorded one after another, which could potentialy expand ECGI use to a larger group of patients.  
  
 B. Image Synthesis  
 This issue also comprises several papers using phenomenologic or data-driven methods for image synthesis or generating annotated reference datasets.  
 It is interesting to see that some methods are hybrid, i.e. they combine both data-driven with mechanistic approaches. Zhou et al  ., for instance, undertake to generate realistic synthetic cardiac images, of both ultrasound (US), and cine and tagged Magnetic Resonance Imaging (MRI), corresponding to the same virtual patient. This method develops a synthesis-by-registration approach where an initial dataset is segmented, transformed and warped (as needed) to generate a motion and deformation-informed set of cMRI, tMRI, and US images. Only the motion model in this method is derived from an actual physical model while the image intensity is created through mapping reference values from literature. In a related paper, Duchateau et al  . also focus on the automatic generation of a large database of annotated cardiac MRI image sequences. Their approach, like the one of Zhou et al  ., combines both mechanistic motion models of cardiac electro-mechanics with anatomical augmentation via data-driven non-rigid deformations. The proposed method requires the existence of a small database of cine CMR sequences that serve as seed to augment the anatomical variability by creating simulations of cardiac electro-mechanics under diverse conditions. Augmented data is created by warping image intensities in the original sequence through the electromechanical simulation. This method ensures the material point correspondence between frames complies with a mechanistic electromechanical model yet image appearance is not altered compared to that of the original dataset used. The authors apply this approach to generate a database of subjects myocardial infarction under controlled conditions in infarct location and size. Finally, Mattausch and Goksel’s paper focuses on how to reconstruct the distribution of ultrasound image scatterers of tissue samples non-invasively. The recovered scatterer map will inform a realistic ultrasound image simulation under different viewing angles or transducer profiles. The robustness of this technique relies on obtaining images from multiple view points to accurately assess scatterer distribution, without which the forward problem is not accurately solved. Besides an inversion strategy, the authors contribute a novel beam-steering technique to insonify the tissue rapidly and conveniently acquiring multiple images of the same tissue. The authors also demonstrate that the scatterer map offers a new tissue representation that can be edited to create controlled variations.  
 Several papers focus on machine learning for image synthesis to tackle problems as diverse as generating benchmark data, image normalisation, super resolution, or cross-modality synthesis, to name just a few. One technique prominent among several submissions is adversarial learning. For instance, Costa et al  . propose a combination of adversarial networks and adversarial auto-encoders to develop synthetic retinal colour images. Adversarial auto-encoders are used to learn a latent representation of retinal vascular trees and generate corresponding retinal vascular tree masks. Adversarial learning, in turn, is used to map these vascular masks into colour retinographies. The authors present a learning approach that jointly learns the parameters of the adversarial network and auto-encoder. The authors extensively validated of the quality of their synthetic images. The data produced can help in the generation of valuable labelled ground-truth data for testing or training retinal image analysis methods. Ben Taieb and Hamarneh also use adversarial learning to address the problem of histopathology normalisation. Recognizing the large variability between staining processes in different histopathology laboratories, the authors propose a method that aims to emulate stain characteristics from one laboratory to the other. Treated as a style transfer problem (to adopt the term from computer vision literature) the authors proposed a deep neural network that learns to map input images to output images that best match the distribution characteristics of a reference set of data, thus achieving stain normalization. A combination of generative, discriminative and task specific networks jointly optimized achieve the desired objective of finding stain normalizations suitable for segmentation or classification tasks.  
 Chartsias et al  . propose an approach to MRI synthesis that is both multi-input and multi-output and uses fully convolutional neural networks. The model has two interesting properties: it is robust to handle missing data, and, while it benefits from, does not require, additional input modalities. The model was evaluated on the ISLES and BRATS datasets and demonstrated statistically significant improvements over state-of-theart methods for single input tasks. Using dictionary learning, Huang et al  . present a method that can synthesize data across modalities using paired and unpaired data. Relying on the power of cross modal dictionaries they establish matching functions that can discover cross-modal sparse embeddings even when unpaired and unregistered data are available. Considering that across modalities different distributions may be present, a manifold geometry formulation term is considered. They extensively evaluate their method on two publicly available brain MRI datasets.  
  
 C. Outlook and Conclusions  
 We hope with this special issue we have successfully consolidated current efforts in image-based simulation and synthesis, and stimulate future research. Image-based simulation and image synthesis will only gain relevance in the years to come: consider the tsunami of healthcare data, [item 10   ) in the Appendix] emerging large-scale population imaging and its analytics [item 10   ) in the Appendix], [item 10   ) in the Appendix] and the growing role of machine learning [item 13   ) in the Appendix]–[item 15   ) in the Appendix] and computational medicine [item 16   ) in the Appendix], [item 17   ) in the Appendix], just to name a few trends. As perhaps never before, intensive industrial innovation in this area fuels translation of these technologies into clinical applications and commercial products. Tractica [item 16   ) in the Appendix], for instance, forecasts global software revenue from 21 key healthcare AI use cases will grow from $165 million in 2017 to $5.6 billion annually by 2025. Including the hardware and services sales driven by these software implementations, the firm anticipates the total revenue opportunity for the healthcare AI market will reach $19.3 billion by 2025.  
 By unambiguously defining these terms and putting them in context, we will be in a better position to see the research gaps and synergies, address common challenges, and better track the evolution of these methods. With data becoming pervasive and machine learning a commodity, we expect image synthesis research to grow. As our discussion above shows, mechanistic understanding and interpretation of the available data will have to develop on par to data-driven approaches. Mechanism-driven priors will remain a foundation of Bayesian inference or physics-based approaches to data interpretation and reconstruction. Some methods presented do in fact combine both mechanistic and data-driven models, but the gap still exists and more research is needed here.  
 Evaluation of machine learning and computational modeling remain crucial if these models are to percolate to the clinical community with credibility. As machine learning, artificial intelligence, computational medicine, etc. turn into buzzwords even among clinicians and market analysts [item 19   ) in the Appendix], [item 20   ) in the Appendix], and the threshold to access and (mis)use these technologies lowers, they become commodities [item 21   ) in the Appendix] [item 22   ) in the Appendix] with the potential risk of confusing reality with fiction. Well-designed community challenges 5   for performance assessment and cross-algorithmic benchmarking should keep us grounded in reality and grow their importance. For these challenges to be successful in this aim, larger and more diverse datasets must be developed and made openly available, alongside with standards ensuring transparent analysis and reporting protocols.  
 More benchmark data only part addresses the problem. Preprocessing, training, and testing largely remain ad hoc  processes with non-negligible impact on performance comparisons. Standardised evaluation protocols are as key as standardised datasets. There are insufficient reference implementations of key algorithms that everyone uses in open benchmarks. This leads to considerable algorithmic re-implementation further obfuscating genuine contributions and the origin of improved performance. Reference open-source implementations of benchmark protocols are helpful but still remain the exception rather than the norm (e.g. only a fraction of the papers in the special issue offer that). Of course, this challenge holds both for simulation and synthesis approaches.  
 Computational sciences are increasingly pervasive in our lives. It is reassuring to see growing awareness on the importance of model verification and validation across engineering, [item 23   ) in the Appendix], [item 24   ) in the Appendix] medicine, [item 25   ) in the Appendix] [item 26   ) in the Appendix] and biology [item 27   ) in the Appendix]. While recent years have seen very positive initiatives in this arena, [item 28   ) in the Appendix]–[item 30   ) in the Appendix] our community of medical imaging and medical image computing will have to give even more consideration to these topics and develop and promote best practices in the assessment and benchmarking of simulation and synthesis methods.  
 One other area we believe is worth investigating is the definition of appropriate evaluation criteria. Numerical fidelity in reconstruction is rather common (e.g. mean square error and its variants) yet does not necessarily translate to best visual results. In computer vision research, human observers are recruited via crowd sourcing and visually score the results of image synthesis. In our domain (medical imaging), this would ideally require the involvement of clinical experts, which is costly and time consuming. Perhaps more suitable evaluations can be those that are application-driven, i.e. those that assess whether simulated/synthesised data can be used in lieu  of real data in an analysis task (or several tasks). Some papers in this special issue did in fact use such application-driven evaluations, but these approaches are not standardised across methods or applications, which adds another layer of obfuscation to the assessment of performance.  
 In summary, simulation and synthesis are evolving areas in our field. Thankfully, specialised workshops such as the MICCAI SASHIMI series can facilitate cross-disciplinary exchange, visualise the progress made, and advance upon the challenges described earlier.  

 Fig. 3.  
   
 Open in a new tab    
 Top five healthcare artificial intelligence use cases revenue. World Markets: 2016–2025. Medical image analysis has the lion’s share of revenues; other use cases are likely to also involve image analytics of some sort. Courtesy of Tractica [item 18   ) in the Appendix]. Reprinted with permission.  
    
 ACKNOWLEDGEMENTS  
 The authors thank the Associate Editors Gangeh and Greenspan and the numerous reviewers for their contribution to the selection process of the manuscripts in this special issue. They also thank Prof D. Helbing from ETH Zürich for pointing us out to interesting literature and sharing his views with them.  
  
 Footnotes  
 1  http://www.cistib.org/sashimi   
   
 2  http://www.oed.com   
   
 3  http://www.merriam-webster.com   
   
 4  The Oxford English Dictionary provides contextual quotes that illustrate this contrast. For instance, from T. Hobbes in Elements Philos  . iii. xx. 230, 1656: “Synthesis is Ratiocination from the first causes of the Construction, continued through all the middle causes till we come to the thing itself which is constructed or generated.”, and from I. Newton in Opticks  (ed. 2) iii. i. 380, 1718: “The Synthesis consists in assuming the Causes discover’d, and establish’d as Principles, and by them explaining the Phnomena proceeding from them.” Source: http://www.oed.com/view/Entry/196574  .  
   
 5  https://grand-challenge.org   

 APPENDIX RELATED WORK  
 1. | ) Fisher RB et al. , Dictionary of Computer Vision and Image Processing, 2nd ed. Hoboken, NJ, USA: Wiley, 2013. | [ | Google Scholar | ] 
  2. | ) Hall RA and Greenberg DP, “A testbed for realistic image synthesis,” IEEE Comput. Graph. Appl, vol. 3, no. 8, pp. 10–20, Nov. 1983. | [ | Google Scholar | ] 
  3. | ) Magnenat-Thalmann N and Thalmann D, “An indexed bibliography on image synthesis,” IEEE Comput. Graph. Appl, vol. 7, no. 8, pp. 27–38, Aug. 1987. | [ | Google Scholar | ] 
  4. | ) Glassner A, Principles of Digital Image Synthesis. San Mateo, CA, USA: Morgan Kaufmann, 1995. | [ | Google Scholar | ] 
  5. | ) Clapham C and Nicholson J, The Concise Oxford Dictionary of Mathematics, 5th ed. Oxford, U.K.: Oxford Univ. Press, 2014. | [ | Google Scholar | ] 
  6. | ) Frangi AF, Taylor ZA, and Gooya A, “Precision imaging: More descriptive, predictive and integrative imaging,” Med. Image Anal, vol. 33, pp. 27–32, Oct. 2016. | [ | DOI | ] [ | PubMed | ] [ | Google Scholar | ] 
  7. | ) Anderson C. (Jul. 23, 2008) The end of theory: The data deluge makes the scientific method obsolete. Wired. [Online]. Available: http://archive.wired.com/science/discoveries/magazine/16-07/pb_theory 
  8. | ) Mazzocchi F, “Could big data be the end of theory in science? A few remarks on the epistemology of data-driven science,” EMBO Rep, vol. 16, no. 10, pp. 1250–1255, Oct. 2015. | [ | DOI | ] [ | PMC free article | ] [ | PubMed | ] [ | Google Scholar | ] 
  9. | ) Helbing D, Thinking Ahead—Essays on Big Data, Digital Revolution, and Participatory Market Society. Cham, Switzerland: Springer, 2015. | [ | Google Scholar | ] 
  10. | ) Andreu-Perez J, Poon CCY, Merrifield RD, Wong STC, and Yang G-Z , “Big data for health,” IEEE J. Biomed. Health Inform, vol. 19, no. 4, pp. 1193–1208, Jul. 2015. | [ | DOI | ] [ | PubMed | ] [ | Google Scholar | ] 
  11. | ) Petersen SE et al. , “Imaging in population science: Cardiovascular magnetic resonance in 100,000 participants of UK Biobank—Rationale, challenges and approaches,” J. Cardiovascular Magn. Reson, vol. 15,p. 46, May 2013. | [ | DOI | ] [ | PMC free article | ] [ | PubMed | ] [ | Google Scholar | ] 
  12. | ) Alfaro-Almagro F et al. , “Image processing and quality control for the first 10,000 brain imaging datasets from UK Biobank,” NeuroImage, vol. 166, pp. 400–424, Feb. 2018. | [ | DOI | ] [ | PMC free article | ] [ | PubMed | ] [ | Google Scholar | ] 
  13. | ) Suzuki K, “Overview of deep learning in medical imaging,” Radiol. Phys. Technol, vol. 10, no. 3, pp. 257–273, Sep. 2017. | [ | DOI | ] [ | PubMed | ] [ | Google Scholar | ] 
  14. | ) Litjens G et al. , “A survey on deep learning in medical image analysis,” Med. Image Anal, vol. 42, pp. 60–88, Dec. 2017. | [ | DOI | ] [ | PubMed | ] [ | Google Scholar | ] 
  15. | ) Ravi D et al. , “Deep learning for health informatics,” IEEE J. Biomed. Health Inform, vol. 21, no. 1, pp. 4–21, Jan. 2017. | [ | DOI | ] [ | PubMed | ] [ | Google Scholar | ] 
  16. | ) Winslow RL, Trayanova N, Geman D, and Miller MI, “Computational medicine: Translating models to clinical care,” Sci. Transl. Med, vol. 4, no. 158, p. 158rv11, Oct. 2012. | [ | DOI | ] [ | PMC free article | ] [ | PubMed | ] [ | Google Scholar | ] 
  17. | ) Viceconti M and Hunter P, “The virtual physiological human: Ten years after,” Annu. Rev. Biomed. Eng, vol. 18, pp. 103–123, Jul. 2016. | [ | DOI | ] [ | PubMed | ] [ | Google Scholar | ] 
  18. | ) Kirkpatrick K and Kaul A, Artificial Intelligence for Healthcare Applications, Market Analysis and Forecast, Tractica, Boulder, CO, USA, Sep. 2017. | [ | Google Scholar | ] 
  19. | ) Mayo RC and Leung J, “Artificial intelligence and deep learning—Radiology’s next frontier?” Clin. Imag, vol. 49, pp. 87–88, May-Jun 2017. | [ | DOI | ] [ | PubMed | ] [ | Google Scholar | ] 
  20. | ) Dreyer KJ and Geis JR, “When machines think: Radiology’s next frontier,” Radiology, vol. 285, no. 3, pp. 713–718, Dec. 2017. | [ | DOI | ] [ | PubMed | ] [ | Google Scholar | ] 
  21. | ) Kohli M, Prevedello LM, Filice RW, and Geis JR, “Implementing machine learning in radiology practice and research,” Amer. J. Roentgenol, vol. 208, no. 4, pp. 754–760, Apr. 2017. | [ | DOI | ] [ | PubMed | ] [ | Google Scholar | ] 
  22. | ) Deo RC, “Machine learning in medicine,” Circulation, vol. 132, no. 20, pp. 1920–1930, Nov. 2015. | [ | DOI | ] [ | PMC free article | ] [ | PubMed | ] [ | Google Scholar | ] 
  23. | ) Roy CJ and Oberkampf WL, “A comprehensive framework for verification, validation, and uncertainty quantification in scientific computing,” Comput. Methods Appl. Mech. Eng, vol. 200, no. 25, pp. 2131–2144, 2011. | [ | Google Scholar | ] 
  24. | ) Japkowicz N and Shah M, Evaluating Learning Algorithms: A Classification Perspective. New York, NY, USA: Cambridge Univ. Press, 2011. | [ | Google Scholar | ] 
  25. | ) Pathmanathan P and Gray RA, “Verification of computational models of cardiac electro-physiology,” Int. J. Numer. Method Biomed. Eng, vol. 30, no. 5, pp. 525–544, May 2014. | [ | DOI | ] [ | PubMed | ] [ | Google Scholar | ] 
  26. | ) Anderson AE, Ellis BJ, and Weiss JA, “Verification, validation and sensitivity studies in computational biomechanics,” Comput. Methods Biomech. Biomed. Eng, vol. 10, no. 3, pp. 171–184, Jun. 2007. | [ | DOI | ] [ | PMC free article | ] [ | PubMed | ] [ | Google Scholar | ] 
  27. | ) Patterson EA and Whelan MP, “A framework to establish credibility of computational models in biology,” Prog. Biophys. Mol. Biol, vol. 129, pp. 13–19, Oct. 2017. | [ | DOI | ] [ | PubMed | ] [ | Google Scholar | ] 
  28. | ) Kauppi T et al. , “Constructing benchmark databases and protocols for medical image analysis: Diabetic retinopathy,” Comput. Math. Methods Med, vol. 2013, May 2013, Art. no. 368514, doi: 10.1155/2013/368514. | [ | DOI | ] [ | PMC free article | ] [ | PubMed | ] [ | Google Scholar | ] 
  29. | ) Jannin P, Krupinski E, and Warfield SK, “Validation in medical image processing,” IEEE Trans. Med. Imag, vol. 25, no. 11, pp. 1405–1409, Nov. 2006. | [ | DOI | ] [ | PubMed | ] [ | Google Scholar | ] 
  30. | ) Jannin P, Fitzpatrick JM, Hawkes DJ, Pennec X, Shahidi R, and Vannier MW, “Validation of medical image processing in image-guided therapy,” IEEE Trans. Med. Imag, vol. 21, no. 12, pp. 1445–1449, Dec. 2002. | [ | DOI | ] [ | PubMed | ] [ | Google Scholar | ] 

   ACTIONS  
 View on publisher site 
  PDF (348.7 KB) 
  Cite 
  Collections 
  Permalink | PERMALINK  
    Copy 

 RESOURCES  
 Similar articles   
   
 Cited by other articles   
   
 Links to NCBI Databases   

 Cite  

 Copy 
  Download .nbib  .nbib 
  Format:  AMA  APA  MLA  NLM 

 Add to Collections  
   
   Create a new collection    
  Add to an existing collection    
  Name your collection *      
 Choose a collection   Unable to load your collection due to an error  
  Please try again    
   
  Add  Cancel    

 Follow NCBI   
   NCBI on X (formerly known as Twitter)     NCBI on Facebook       NCBI on LinkedIn     NCBI on GitHub       NCBI RSS feed     
   
 Connect with NLM  
   NLM on X (formerly known as Twitter)     NLM on Facebook     NLM on YouTube     
   
 National Library of Medicine  
  8600 Rockville Pike  
  Bethesda, MD 20894   
  Web Policies 
  FOIA 
  HHS Vulnerability Disclosure 
  Help 
  Accessibility 
  Careers 
    
 NLM 
  NIH 
  HHS 
  USA.gov 

 Back to Top      
Call for papers data: 
Đang tải...   
 Hệ thống không thể thực hiện thao tác ngay bây giờ. Hãy thử lại sau.   
   
     Trích dẫn  

     Tìm kiếm nâng cao  

 Tìm bài viết    
   
 có tất cả  các từ    

 có cụm từ chính xác     

 có ít nhất một  trong các từ    

 không có  các từ    

 nơi xuất hiện các từ của tôi    
  bất cứ nơi nào trong bài viết       
  trong tiêu đề bài viết       

 Trả về các bài viết được viết  bởi    

 ví dụ: "PJ Hayes"  hoặc McCarthy    

 Trả về các bài viết được xuất bản  trong    

 ví dụ: J Biol Chem  hoặc Nature    

 Trả về các bài viết đề ngày  trong khoảng    

 —    

 ví dụ: 1996    

     Đã lưu vào Thư viện của tôi  

 Xong     Xóa bài viết       

   Bài viết     Hồ sơ     
   Hồ sơ của tôi     Thư viện của tôi     Thông báo     Số liệu     
   Tìm kiếm nâng cao     
   Cài đặt     
   
   Đăng nhập     

 Đăng nhập    

 Bài viết  Scholar   

 1 kết quả ( 0,02  giây)   
   
   Hồ sơ của tôi     Thư viện của tôi     
   
 Tra cứu 

 [PDF]  ajronline.org  Full View    

 Implementing machine learning in radiology practice and research   
 M Kohli, LM Prevedello  , RW Filice… - American journal of …, 2017 - Am Roentgen Ray Soc   
 M Kohli, LM Prevedello  , RW Filice, JR Geis   
 American journal of roentgenology, 2017 •  Am Roentgen Ray Soc   
 OBJECTIVE. The purposes of this article are to describe concepts that radiologists should  
  understand to evaluate machine learning projects, including common algorithms,  
  supervised as opposed to unsupervised techniques, statistical pitfalls, and data  
  considerations for training and evaluation, and to briefly describe ethical dilemmas and legal  
  risk. CONCLUSION. Machine learning includes a broad class of computer programs that  
  improve with experience. The complexity of creating, training, and monitoring machine …   

 OBJECTIVE.  The purposes of this article are to describe concepts that radiologists should understand to evaluate machine learning projects, including common algorithms, supervised as opposed to unsupervised techniques, statistical pitfalls, and data considerations for training and evaluation, and to briefly describe ethical dilemmas and legal risk.   
 CONCLUSION.  Machine learning includes a broad class of computer programs that improve with experience. The complexity of creating, training, and monitoring machine learning indicates that the success of the algorithms will require radiologist involvement for years to come, leading to engagement rather than replacement.   
   
 Am Roentgen Ray Soc   

 Hiện thêm  Ẩn bớt      

   Lưu     Trích dẫn   Trích dẫn 325 bài viết  Bài viết có liên quan  Tất cả 5 phiên bản          

 Quyền riêng tư  Điều khoản  Trợ giúp    
 Giới thiệu về Scholar  Trợ giúp về Tìm kiếm    

   Important dates data: 
undefined

6. Conference SAS_2:
SAS 2025   Dates to be announced Singapore    
 co-located with SPLASH 2025    

 Toggle navigation        
 Series 
  SAS 2025 
  All Editions | SAS 2025 
  SAS 2024 
  SAS 2023 
  SAS 2022 
  SAS 2021 
  SAS 2020 
  Sign in 
  Sign up 

 Static Analysis Symposium  
   
 All Editions   

 Dates to be announced Singapore  SAS 2025  with SPLASH 2025    
 Welcome to the website of the 32nd Static Analysis Symposium (SAS 2025). Static analysis is widely recognized as a fundamental tool for program verification, bug detection, compiler optimization, program understanding, and software maintenance. The series of Static Analysis Symposia has served for more than 30 years as the primary venue for the presentation of theoretical, practical, and application advances in t ... 
 Sun 20 - Tue 22 October 2024 Pasadena, California, United States  SAS 2024  with SPLASH 2024    
 No description available 
 Sun 22 - Tue 24 October 2023 Cascais, Portugal  SAS 2023  with SPLASH 2023    
 Welcome to SAS2023! If you are a speaker, please check the SPLASH instructions for presenters. If you are a session chair, please check the SPLASH instructions for session chairs. The papers are linked from the program. Paper artifacts are availble at Zenodo. The proceedings are now available from Springer. Please note that you have to reach them from this link to have access. Welcome to the we ... 
 Mon 5 - Wed 7 December 2022 Auckland, New Zealand  SAS 2022  with SPLASH 2022    
 Welcome to the website of the 29th Static Analysis Symposium (SAS 2022). Static analysis is widely recognized as a fundamental tool for program verification, bug detection, compiler optimization, program understanding, and software maintenance. The series of Static Analysis Symposia has served as the primary venue for the presentation of theoretical, practical, and application advances in the area. A selection of ... 
 Sun 17 - Fri 22 October 2021 Chicago, Illinois, United States  SAS 2021  with SPLASH 2021    
 Welcome to the 28th Static Analysis Symposium (SAS 2021)! Static analysis is widely recognized as a fundamental tool for program verification, bug detection, compiler optimization, program understanding, and software maintenance. The series of Static Analysis Symposia has served as the primary venue for the presentation of theoretical, practical, and application advances in the area. SAS begins this Sunday! W ... 
 Wed 18 - Fri 20 November 2020 Online Conference  SAS 2020  with SPLASH 2020    
 Welcome to the 27th Static Analysis Symposium (SAS 2020)! Static analysis is widely recognized as a fundamental tool for program verification, bug detection, compiler optimization, program understanding, and software maintenance. The series of Static Analysis Symposia has served as the primary venue for the presentation of theoretical, practical, and application advances in the area. 

 Organizing Committee (SAS 2025)   
   
 Hakjoo Oh Program Co-Chair    
 Korea University   
 South Korea 
  Yulei Sui Program Co-Chair    
 UNSW   
 Australia 

 x  Thu 5 Dec 12:36    

 using conf.researchr.org  ( v1.67.1  )  
   Support page    

 Sign Up    

  
Call for papers data: 
SAS 2025   Dates to be announced Singapore    
 co-located with SPLASH 2025    

 Toggle navigation        
 Attending | Venue (Sunday Workshops): NUS School of Computing 
  Venue (Main Conference): Marina Bay Sands Convention Centre 
  Track/Call 
  Organization | SAS 2025 Committees 
  Track Committees 
  Organizing Committee 
  Program Committee 
  Contributors 
  People Index 
  Search 
  Series | Series 
   SAS 2025 
  SAS 2024 
  SAS 2023 
  SAS 2022 
  SAS 2021 
  SAS 2020 
  Sign in 
  Sign up 

 Marina Bay Sands Convention Centre  

 Photo by Ilya Sergey    
 Hallway Track Space  

 MBS Shopping Mall  

 MBS Infinity Pool  

  ICFP/SPLASH 2025  ( series  ) /   SPLASH 2025  ( series  ) /  SAS 2025 ( series  ) /  Venue (Main Conference): Marina Bay Sands Convention Centre  

 Location  
 10 Bayfront Ave  
  018956  
   
  Singapore    

 x  Thu 5 Dec 12:36    

  SAS 2025   
  using conf.researchr.org  ( v1.67.1  )  
   Support page    
     
 Tracks  
 SAS 2025    

 Attending  
 Venue (Sunday Workshops): NUS School of Computing   
  Venue (Main Conference): Marina Bay Sands Convention Centre   
    
 Sign Up    

  Important dates data: 
undefined

7. Conference SAT_2:
SAT 2024  Dates and Calls   
  Dates  CFP  CFW    
   
 For Attendees   
  Keynote Speakers  Competitions  Venue  Accommodation & Transport  Visa Information  Student Grants  Registration    
   
 Resources   
  Organizers  Sponsorship  PhD Award    
   
 Organizers  Sponsorship  PhD Award  Awards  Workshops & School  Program Schedule  Highlights    

 Credit  Call for Papers   
   
 Scope  
 SAT 2024 is the 27th edition of the International Conference on Theory and Applications of Satisfiability Testing (SAT). The scope of SAT 2024 includes all aspects of the theory and applications of propositional satisfiability, broadly construed. This also includes Boolean optimization, such as MaxSAT and Pseudo-Boolean (PB) constraints, Quantified Boolean Formulas (QBF), Satisfiability Modulo Theories (SMT), Model Counting, and Constraint Programming (CP) for problems with clear connections to Boolean-level reasoning.  
   
  Topics of interest include (but are not limited to):  
   
  Theoretical advances (including algorithms, proof complexity, parameterized complexity, and other complexity issues) 
  Practical search algorithms 
  Knowledge compilation 
  Implementation-level details of SAT- and SMT-solving tools and SAT/SMT-based systems 
  Problem encodings and reformulations 
  Applications (including both novel applications domains and improvements to existing approaches) 
  Case studies and reports on insightful findings based on rigorous experimentation 
    
 Out of Scope  
 Papers claiming to resolve a major long-standing open theoretical question in Mathematics or Computer Science (such as those for which a Millennium Prize is offered), are outside the scope of the conference because there is insufficient time in the schedule to referee such papers; instead, such papers should be submitted to an appropriate technical journal.   
 Paper Categories  
 Submissions to SAT 2024 are invited in the following three categories: Long papers (9 to 15 pages, excluding references and appendices) 
  Short papers (up to 8 pages, excluding references and appendices) 
  Tool papers (up to 8 pages, excluding references and appendices) 
  Long and short papers should contain original research, with sufficient detail to assess the merits and relevance of the contribution. For papers reporting experimental results, authors are strongly encouraged to make their data and implementation available with the submission. Submissions on applications and case studies are encouraged. Such papers should describe details, weaknesses and strengths of the proposed approaches in sufficient depth, but they are not expected to introduce novel solving methods.  
   
  Long and short papers will be evaluated with the same quality standards, and are expected to contain a similar contribution per page ratio.The authors should choose between a long or a short paper depending on the space they need to fully describe their contribution. The classification between long and short papers impacts the duration of the presentation of the work during the conference. It is the responsibility of the authors to make sure that their paper is self-contained in the chosen limit of pages. There will be no re-classification of the submissions by the PC.  
   
  Tool papers are expected to report on the design and implementation of a tool and its novel features. Here “tool” is interpreted in a broad sense, including descriptions of solvers, preprocessors, etc., as well as systems that exploit SAT solvers or their extensions for use in a relevant problem domain. A demonstration is expected to accompany a tool presentation. Papers describing tools that have already been presented previously are expected to contain significant and clear enhancements to the tool.   
 Submission  
 Submissions should not be under review elsewhere nor be submitted elsewhere while under review for SAT 2024, and should not consist of previously published material. Submissions not consistent with these guidelines may be returned without review.  
   
  Papers must be formatted in the LIPIcs LaTeX style available here  . Submissions must be made electronically in PDF format. The reviewing process for SAT 2024 is single-blind. Submit Now!    
 Authors may submit a supplement containing detailed proofs, examples, software, detailed experimental data, or other material related to the submission, to be consulted at the discretion of the reviewers. Supplements will be treated with the same degree of confidentiality as the paper itself. The supplement must consist of a single file in one of the following formats: zipped tarball (.tar.gz or .tgz), gzipped file (.gz), or zip archive (.zip).  
   
  One author of each accepted paper is expected to present it at the conference.   
 Important dates  
 Abstract submission: March 8, 2024 AoE | CLOSED 
  Full paper submission: | March 15, 2024 AoE | March 17, 2024 AoE | CLOSED 
  Author response: May 9-13, 2024 AoE 
  Notification of decisions: May 22, 2024 AoE 
  Camera-ready version submission: June 22, 2024 AoE 
  Workshops & Indian SAT+SMT School: August 18-20, 2024 
  SAT conference: August 21-24, 2024 
    
 Best Paper Awards  
 Long and short papers may be considered for a Best Paper Award. If the main author is a student, both in terms of work and writing, the paper may be considered for a Best Student Paper Award.   
 Proceedings  
 Accepted papers will be published as proceedings of the conference in the Leibniz International Proceedings in Informatics (LIPIcs)  as a free, open, electronic archive with access to all. Authors will retain full rights over their work. The accepted papers will be published under a CC-BY license  .   
 Invitation of top papers to AIJ and JAIR  
 Top papers from SAT 2024 will be invited to the award-winning paper tracks in Artificial Intelligence Journal (AIJ) or Journal of Artifical Intelligence Research (JAIR). Here, "top papers" means papers that were publicly acknowledged as such, e.g., announced as best papers or runner-ups etc. The authors of these invited papers will have the option to choose between AIJ and JAIR and will get a chance to expand their conference submission by including additional details. Papers submitted to these tracks will receive expedited review, and accepted papers will receive special recognition on the web page of the selected journal. Apart from appearing in a regular volume of AIJ/JAIR with this special designation, all papers in the track will be indexed in a separate virtual volume.   
   
 SAT 2024 - August 21 - 24, 2024, Pune, India   
   
  
Call for papers data: 
SAT 2024  Dates and Calls   
  Dates  CFP  CFW    
   
 For Attendees   
  Keynote Speakers  Competitions  Venue  Accommodation & Transport  Visa Information  Student Grants  Registration    
   
 Resources   
  Organizers  Sponsorship  PhD Award    
   
 Organizers  Sponsorship  PhD Award  Awards  Workshops & School  Program Schedule  Highlights    

 Credit  Call for Papers   
   
 Scope  
 SAT 2024 is the 27th edition of the International Conference on Theory and Applications of Satisfiability Testing (SAT). The scope of SAT 2024 includes all aspects of the theory and applications of propositional satisfiability, broadly construed. This also includes Boolean optimization, such as MaxSAT and Pseudo-Boolean (PB) constraints, Quantified Boolean Formulas (QBF), Satisfiability Modulo Theories (SMT), Model Counting, and Constraint Programming (CP) for problems with clear connections to Boolean-level reasoning.  
   
  Topics of interest include (but are not limited to):  
   
  Theoretical advances (including algorithms, proof complexity, parameterized complexity, and other complexity issues) 
  Practical search algorithms 
  Knowledge compilation 
  Implementation-level details of SAT- and SMT-solving tools and SAT/SMT-based systems 
  Problem encodings and reformulations 
  Applications (including both novel applications domains and improvements to existing approaches) 
  Case studies and reports on insightful findings based on rigorous experimentation 
    
 Out of Scope  
 Papers claiming to resolve a major long-standing open theoretical question in Mathematics or Computer Science (such as those for which a Millennium Prize is offered), are outside the scope of the conference because there is insufficient time in the schedule to referee such papers; instead, such papers should be submitted to an appropriate technical journal.   
 Paper Categories  
 Submissions to SAT 2024 are invited in the following three categories: Long papers (9 to 15 pages, excluding references and appendices) 
  Short papers (up to 8 pages, excluding references and appendices) 
  Tool papers (up to 8 pages, excluding references and appendices) 
  Long and short papers should contain original research, with sufficient detail to assess the merits and relevance of the contribution. For papers reporting experimental results, authors are strongly encouraged to make their data and implementation available with the submission. Submissions on applications and case studies are encouraged. Such papers should describe details, weaknesses and strengths of the proposed approaches in sufficient depth, but they are not expected to introduce novel solving methods.  
   
  Long and short papers will be evaluated with the same quality standards, and are expected to contain a similar contribution per page ratio.The authors should choose between a long or a short paper depending on the space they need to fully describe their contribution. The classification between long and short papers impacts the duration of the presentation of the work during the conference. It is the responsibility of the authors to make sure that their paper is self-contained in the chosen limit of pages. There will be no re-classification of the submissions by the PC.  
   
  Tool papers are expected to report on the design and implementation of a tool and its novel features. Here “tool” is interpreted in a broad sense, including descriptions of solvers, preprocessors, etc., as well as systems that exploit SAT solvers or their extensions for use in a relevant problem domain. A demonstration is expected to accompany a tool presentation. Papers describing tools that have already been presented previously are expected to contain significant and clear enhancements to the tool.   
 Submission  
 Submissions should not be under review elsewhere nor be submitted elsewhere while under review for SAT 2024, and should not consist of previously published material. Submissions not consistent with these guidelines may be returned without review.  
   
  Papers must be formatted in the LIPIcs LaTeX style available here  . Submissions must be made electronically in PDF format. The reviewing process for SAT 2024 is single-blind. Submit Now!    
 Authors may submit a supplement containing detailed proofs, examples, software, detailed experimental data, or other material related to the submission, to be consulted at the discretion of the reviewers. Supplements will be treated with the same degree of confidentiality as the paper itself. The supplement must consist of a single file in one of the following formats: zipped tarball (.tar.gz or .tgz), gzipped file (.gz), or zip archive (.zip).  
   
  One author of each accepted paper is expected to present it at the conference.   
 Important dates  
 Abstract submission: March 8, 2024 AoE | CLOSED 
  Full paper submission: | March 15, 2024 AoE | March 17, 2024 AoE | CLOSED 
  Author response: May 9-13, 2024 AoE 
  Notification of decisions: May 22, 2024 AoE 
  Camera-ready version submission: June 22, 2024 AoE 
  Workshops & Indian SAT+SMT School: August 18-20, 2024 
  SAT conference: August 21-24, 2024 
    
 Best Paper Awards  
 Long and short papers may be considered for a Best Paper Award. If the main author is a student, both in terms of work and writing, the paper may be considered for a Best Student Paper Award.   
 Proceedings  
 Accepted papers will be published as proceedings of the conference in the Leibniz International Proceedings in Informatics (LIPIcs)  as a free, open, electronic archive with access to all. Authors will retain full rights over their work. The accepted papers will be published under a CC-BY license  .   
 Invitation of top papers to AIJ and JAIR  
 Top papers from SAT 2024 will be invited to the award-winning paper tracks in Artificial Intelligence Journal (AIJ) or Journal of Artifical Intelligence Research (JAIR). Here, "top papers" means papers that were publicly acknowledged as such, e.g., announced as best papers or runner-ups etc. The authors of these invited papers will have the option to choose between AIJ and JAIR and will get a chance to expand their conference submission by including additional details. Papers submitted to these tracks will receive expedited review, and accepted papers will receive special recognition on the web page of the selected journal. Apart from appearing in a regular volume of AIJ/JAIR with this special designation, all papers in the track will be indexed in a separate virtual volume.   
   
 SAT 2024 - August 21 - 24, 2024, Pune, India   
   
  Important dates data: 
SAT 2024  Dates and Calls   
  Dates  CFP  CFW    
   
 For Attendees   
  Keynote Speakers  Competitions  Venue  Accommodation & Transport  Visa Information  Student Grants  Registration    
   
 Resources   
  Organizers  Sponsorship  PhD Award    
   
 Organizers  Sponsorship  PhD Award  Awards  Workshops & School  Program Schedule  Highlights    

 Credit  Important Dates   
   
 ----- AoE: Anywhere on Earth time, UTC -12 hours -----   
   
 For Authors:  
 Abstract Submission: March 08, 2024 AoE | CLOSED 
  Paper Submission: | March 15, 2024 AoE | March 17, 2024 AoE | CLOSED 
  Author response: May 09-13, 2024 AoE 
  Notification of decisions: May 22, 2024 AoE 
  Camera-ready submission: June 22, 2024 AoE 
  Conference:  
 Indian SAT+SMT School & Workshops: August 18-20, 2024 
  SAT Conference: August 21-24, 2024 
  Excursion / cultural event (to be announced) 

 SAT 2024 - August 21 - 24, 2024, Pune, India

8. Conference SASHIMI_1:
Simulation and Synthesis in Medical Imaging | springerprofessional.de  Skip to main content    Menü   Fachgebiete Chevron down icon     Chevron up icon        Automobil + Motoren    Bauwesen + Immobilien    Business IT + Informatik    Elektrotechnik + Elektronik    Energie + Nachhaltigkeit    Finance + Banking    Management + Führung    Marketing + Vertrieb    Maschinenbau + Werkstoffe    Versicherung + Risiko      
   
 DE     
 EN      
   
 Bücher       
   
 Zeitschriften       
   
 Themenseiten Chevron down icon     Chevron up icon        Organisationspsychologie    Projektmanagement    Marketing    Smart Manufacturing      

 Weitere Formate Chevron down icon     Chevron up icon        Podcasts    Webinare Technik    Webinare Wirtschaft    Kongresse    Veranstaltungskalender    Awards    MyNewsletter    Firmensuche      

 Jetzt Einzelzugang starten       
   
 Zugang für Unternehmen       
   
 Referenzkunden       
   
 Sustainability in Automotive       

 Gesamtlebenszyklus wird immer wichtiger  
 In der Digitalkonferenz am 5. Dezember 2024 geht es um die wachsende Bedeutung der Kreislaufwirtschaft in der Automobilindustrie und wie nachhaltige Werkstoffe sowie wiederverwendbare Komponenten dazu beitragen können.  

 Springer Professional     
   
   Suche   Suchbegriffe eingeben       Suchen     
  
 Erweiterte Suche      

  Anmelden      

 Springer Professional  

 JAVASCRIPT BENÖTIGT    
 Bitte aktivieren Sie Java-Script in Ihrem Browser, damit Sie alle Vorteile und Funktionen dieser Website nutzen können.   

  INTERNET EXPLORER WIRD NICHT MEHR UNTERSTÜZT    
 Der Internet Explorer wird als Browser seitens Microsoft nicht mehr unterstützt. Für Ihr optimales Nutzungserlebnis wählen Sie bitte Microsoft Edge, Safari, Chrome oder Firefox als Browser.   

 nach oben    

 2025 | Buch  

 Kapitel lesen  Erstes Kapitel lesen     
   
 Simulation and Synthesis in Medical Imaging  
 9th International Workshop, SASHIMI 2024, Held in Conjunction with MICCAI 2024, Marrakesh, Morocco, October 10, 2024, Proceedings  
 herausgegeben von: Virginia Fernandez, Jelmer M. Wolterink, David Wiesner, Samuel Remedios, Lianrui Zuo, Adrià Casamitjana   
   
 Verlag: Springer Nature Switzerland    
 Buchreihe : Lecture Notes in Computer Science    
 Enthalten in: Springer Professional "Wirtschaft+Technik"  ,   Springer Professional "Technik"  ,   Springer Professional "Wirtschaft"    
   
 Inhaltsverzeichnis    

      Suchen      
 insite    
 SUCHEN    

 Über dieses Buch  
 This book constitutes the refereed proceedings of the 9th International Workshop on Simulation and Synthesis in Medical Imaging, SASHIMI 2024, held in conjunction with the 27th International conference on Medical Image Computing and Computer Assisted Intervention, MICCAI 2024, in Marrakesh, Morocco in October 2024.  
 The 19 papers included in this book were carefully reviewed and selected from 32 submissions. They focus on recent developments in methods for image-to-image translation, image synthesis, biophysical modelling, super-resolution and image segmentation and classification.  

 MyTopic Alert   
  Loggen Sie sich ein, um Ihre Alerts zu aktualisieren und Neue anzulegen.  

 Anzeige   

 Inhaltsverzeichnis  
 Frontmatter  
  
 Synthetic Augmentation for Anatomical Landmark Localization Using DDPMs  
  Abstract   
 Deep learning techniques for anatomical landmark localization (ALL) have shown great success, but their reliance on large annotated datasets remains a problem due to the tedious and costly nature of medical data acquisition and annotation. While traditional data augmentation, variational autoencoders (VAEs), and generative adversarial networks (GANs) have already been used to synthetically expand medical datasets, diffusion-based generative models have recently started to gain attention for their ability to generate high-quality synthetic images. In this study, we explore the use of denoising diffusion probabilistic models (DDPMs) for generating medical images and their corresponding heatmaps of landmarks to enhance the training of a supervised deep learning model for ALL. Our novel approach involves a DDPM with a 2-channel input, incorporating both the original medical image and its heatmap of annotated landmarks. We also propose a novel way to assess the quality of the generated images using a Markov Random Field (MRF) model for landmark matching and a Statistical Shape Model (SSM) to check landmark plausibility, before we evaluate the DDPM-augmented dataset in the context of an ALL task involving hand X-Rays.   
   
 Arnela Hadzic, Lea Bogensperger, Simon Johannes Joham, Martin Urschler   

 AdaptDiff: Cross-Modality Domain Adaptation via Weak Conditional Semantic Diffusion for Retinal Vessel Segmentation  
  Abstract   
 Deep learning has shown remarkable performance in medical image segmentation. However, despite its promise, deep learning has many challenges in practice due to its inability to effectively transition to unseen domains, caused by the inherent data distribution shift and the lack of manual annotations to guide domain adaptation. To tackle this problem, we present an unsupervised domain adaptation (UDA) method named AdaptDiff  that enables a retinal vessel segmentation network trained on fundus photography (FP) to produce satisfactory results on unseen modalities (e.g., OCT-A) without any manual labels. For all our target domains, we first adopt a segmentation model trained on the source domain to create pseudo-labels. With these pseudo-labels, we train a conditional semantic diffusion probabilistic model to represent the target domain distribution. Experimentally, we show that even with low quality pseudo-labels, the diffusion model can still capture the conditional semantic information. Subsequently, we sample on the target domain with binary vessel masks from the source domain to get paired data, i.e., target domain synthetic images conditioned on the binary vessel map. Finally, we fine-tune the pre-trained segmentation network using the synthetic paired data to mitigate the domain gap. We assess the effectiveness of AdaptDiff on seven publicly available datasets across three distinct modalities. Our results demonstrate a significant improvement in segmentation performance across all unseen datasets. Our code is publicly available at https://​github.​com/​DeweiHu/​AdaptDiff    .   
   
 Dewei Hu, Hao Li, Han Liu, Jiacheng Wang, Xing Yao, Daiwei Lu, Ipek Oguz   

 Adapted nnU-Net: A Robust Baseline for Cross-Modality Synthesis and Medical Image Inpainting  
  Abstract   
 In medical image synthesis, the development of robust and reliable baseline methods is crucial due to the complexity and variability of existing techniques. Despite advances with architectures such as GANs and diffusion models, a clear state-of-the-art has yet to be established. This paper introduces a versatile adaptation of the nnU-Net framework as a robust baseline for both cross-modality synthesis and image inpainting tasks. Known for its superior performance in segmentation challenges, nnU-Net’s automatic configuration and parameter optimization capabilities have been adapted for these new applications. We evaluate this method on two use cases: pelvis MR to CT translation using the Synthrad2023 challenge dataset and local synthesis using the BraTs 2023 inpainting challenge dataset. Standard synthesis metrics -MAE, MSE, SSIM and PSNR- demonstrate that our adapted nnU-Net outperforms GAN-based methods like pix2pixHD and ranks among the best methods for both challenges. We recommend this adapted nnU-Net as a new benchmark for medical image translation and inpainting tasks, and provide our implementations for public use on GitHub.   
   
 Arthur Longuefosse, Edern Le Bot, Baudouin Denis De Senneville, Rémi Giraud, Boris Mansencal, Pierrick Coupé, Pascal Desbarats, Fabien Baldacci   

 Beyond MR Image Harmonization: Resolution Matters Too  
  Abstract   
 Magnetic resonance (MR) imaging is commonly used in the clinical setting to non-invasively monitor the body. There exists a large variability in MR imaging due to differences in scanner hardware, software, and protocol design. Ideally, a processing algorithm should perform robustly to this variability, but that is not always the case in reality. This introduces a need for image harmonization  to overcome issues of domain shift when performing downstream analysis such as segmentation. Most image harmonization models focus on acquisition parameters such as inversion time or repetition time, but they ignore an important aspect in MR imaging—resolution. In this paper, we evaluate the impact of image resolution  on harmonization using a pretrained harmonization algorithm. We simulate 2D acquisitions of various slice thicknesses and gaps from 3D acquired, 1 mm \(^3\)  isotropic MR images and demonstrate how the performance of a state-of-the-art image harmonization algorithm varies as resolution changes. We discuss the most ideal scenarios for image resolution including acquisition orientation when 3D imaging is not available, which is common for many clinical scanners. Our results show that harmonization on low-resolution images does not account for acquisition resolution and orientation variations. Super-resolution can be used to alleviate resolution variations but it is not always used. Our methodology can generalize to help evaluate the impact of image acquisition resolution for multiple tasks. Determining the limits of a pretrained algorithm is important when considering preprocessing steps and trust in the results.   
   
 Savannah P. Hays, Samuel W. Remedios, Lianrui Zuo, Ellen M. Mowry, Scott D. Newsome, Peter A. Calabresi, Aaron Carass, Blake E. Dewey, Jerry L. Prince   

 Benchmarking Robustness of Endoscopic Depth Estimation with Synthetically Corrupted Data  
  Abstract   
 Accurate depth perception is crucial for patient outcomes in endoscopic surgery, yet it is compromised by image distortions common in surgical settings. To tackle this issue, our study presents a benchmark for assessing the robustness of endoscopic depth estimation models. We have compiled a comprehensive dataset that reflects real-world conditions, incorporating a range of synthetically induced corruptions at varying severity levels. To further this effort, we introduce the Depth Estimation Robustness Score ( DERS  ), a novel metric that combines measures of error, accuracy, and robustness to meet the multifaceted requirements of surgical applications. This metric acts as a foundational element for evaluating performance, establishing a new paradigm for the comparative analysis of depth estimation technologies. Additionally, we set forth a benchmark focused on robustness for the evaluation of depth estimation in endoscopic surgery, with the aim of driving progress in model refinement. A thorough analysis of two monocular depth estimation models using our framework reveals crucial information about their reliability under adverse conditions. Our results emphasize the essential need for algorithms that can tolerate data corruption, thereby advancing discussions on improving model robustness. The impact of this research transcends theoretical frameworks, providing concrete gains in surgical precision and patient safety. This study establishes a benchmark for the robustness of depth estimation and serves as a foundation for developing more resilient surgical support technologies. Code is available at https://​github.​com/​lofrienger/​EndoDepthBenchma​rk    .   
   
 An Wang, Haochen Yin, Beilei Cui, Mengya Xu, Hongliang Ren   

 A Dual-Task Mutual Learning Framework for Predicting Post-thrombectomy Cerebral Hemorrhage  
  Abstract   
 Ischemic stroke is a severe condition caused by the blockage of brain blood vessels, and can lead to the death of brain tissue due to oxygen deprivation. Thrombectomy has become a common treatment choice for ischemic stroke due to its immediate effectiveness. But, it carries the risk of postoperative cerebral hemorrhage. Clinically, multiple CT scans within 0–72 h post-surgery are used to monitor for hemorrhage. However, this approach exposes radiation dose to patients, and may delay the detection of cerebral hemorrhage. To address this dilemma, we propose a novel prediction framework for measuring postoperative cerebral hemorrhage using only the patient’s initial CT scan. Specifically, we introduce a dual-task mutual learning framework to takes the initial CT scan as input and simultaneously estimates both the follow-up CT scan and prognostic label to predict the occurrence of postoperative cerebral hemorrhage. Our proposed framework incorporates two attention mechanisms, i.e., self-attention and interactive attention. Specifically, the self-attention mechanism allows the model to focus more on high-density areas in the image, which are critical for diagnosis (i.e., potential hemorrhage areas). The interactive attention mechanism further models the dependencies between the interrelated generation and classification tasks, enabling both tasks to perform better than the case when conducted individually. Validated on clinical data, our method can generate follow-up CT scans better than state-of-the-art methods, and achieves an accuracy of \(86.37\%\)  in predicting follow-up prognostic labels. Thus, our work thus contributes to the timely screening of post-thrombectomy cerebral hemorrhage, and could significantly reform the clinical process of thrombectomy and other similar operations related to stroke.   
   
 Caiwen Jiang, Tianyu Wang, Xiaodan Xing, Mianxin Liu, Guang Yang, Zhongxiang Ding, Dinggang Shen   

 TSynD: Targeted Synthetic Data Generation for Enhanced Medical Image Classification  
  Leveraging Epistemic Uncertainty to Improve Model Performance   
 Abstract   
 The usage of medical image data for the training of large-scale machine learning approaches is particularly challenging due to its scarce availability and the costly generation of data annotations, typically requiring the engagement of medical professionals. The rapid development of generative models enables us to tackle this problem by generating large amounts of realistic synthetic data for the training process. However, randomly choosing synthetic samples, might not be an optimal strategy.   
 In this work, we investigate the targeted generation of synthetic training data, in order to improve the accuracy and robustness of image classification. Therefore, our approach aims to guide the generative model to synthesize data with high epistemic uncertainty, since large measures of epistemic uncertainty indicate underrepresented data points in the training set. During the image generation we feed images reconstructed by an auto encoder into the classifier and compute the mutual information over the class-probability distribution as a measure for uncertainty. We alter the feature space of the autoencoder through an optimization process with the objective of maximizing the classifier uncertainty on the decoded image. By training on such data we improve the performance and robustness against test time data augmentations and adversarial attacks on several classifications tasks.   
   
 Joshua Niemeijer, Jan Ehrhardt, Hristina Uzunova, Heinz Handels   

 Beyond Intensity Transforms: Medical Image Synthesis Under Large Deformation  
  Abstract   
 Deep generative models have achieved remarkable performance in various medical image-to-image translation tasks, including image reconstruction, denoising, and multimodal synthesis. However, these models typically learn to change the intensity of an image while preserving structure. In many medical image-to-image translation scenarios, there is often a significant deformation between the source and target images, such as the deformation of the lungs during breathing, adding an additional layer of complexity. Conventional generative models are not suited to capture spatial deformation. To address this, we propose a framework for medical image synthesis under large deformation which consists of two stages: the first stage predicts a dense displacement field to deform the moving image into the fixed image space, and the second stage predicts the intensity changes. We demonstrate our method on inspiratory-expiratory chest computed tomography images from a large cohort of nearly 500 subjects with varying degrees of disease severity. Ablation studies were conducted to understand the contribution of various model components. Our method achieved reliable alignment between the source and target images with a Dice similarity coefficient of 0.90 and a high multiscale structural similarity of 0.863 within the testing cohort.   
   
 Muhammad F. A. Chaudhary, Joseph M. Reinhardt, Sarah E. Gerard   

 Sim2Real in Endoscopy Segmentation with a Novel Structure Aware Image Translation  
  Abstract   
 Automatic segmentation of anatomical landmarks in endoscopic images can provide assistance to doctors and surgeons for diagnosis, treatments or medical training. However, obtaining the annotations required to train commonly used supervised learning methods is a tedious and difficult task, in particular for real images. While ground truth annotations are easier to obtain for synthetic data, models trained on such data often do not generalize well to real data. Generative approaches can add realistic texture to it, but face difficulties to maintain the structure of the original scene. The main contribution in this work is a novel image translation model that adds realistic texture to simulated endoscopic images while keeping the key scene layout information. Our approach produces realistic images in different endoscopy scenarios. We demonstrate these images can effectively be used to successfully train a model for a challenging end task without any real labeled data. In particular, we demonstrate our approach for the task of fold segmentation in colonoscopy images. Folds are key anatomical landmarks that can occlude parts of the colon mucosa and possible polyps. Our approach generates realistic images maintaining the shape and location of the original folds, after the image-style-translation, better than existing methods. We run experiments both on a novel simulated dataset for fold segmentation, and real data from the EndoMapper (EM) dataset [ 1  ]. All our new generated data and new EM metadata is being released to facilitate further research, as no public benchmark is currently available for the task of fold segmentation.   
   
 Clara Tomasini, Luis Riazuelo, Ana C. Murillo   

 Fireflies: Photorealistic Simulation and Optimization of Structured Light Endoscopy  
  Abstract   
 There exist various approaches for the 3D reconstruction of dynamic scenes. In medicine, particularly in endoscopy, single-shot structured light systems are frequently explored, as they allow for the reconstruction of dynamic, feature-less surfaces. Design and manufacturing of structured light endoscopes, however, implies high initial costs that significantly hinder the availability and development of these systems. To streamline this process, simulation systems are necessary that allow researchers to not only model the intricacies of medical domains, but also of structured light systems themselves. To address this, we propose Fireflies  , a differentiable framework for the physically-based simulation and domain randomization of structured light endoscopy. Based on the differentiable Mitsuba renderer, Fireflies facilitates and simplifies the development of domain-specific algorithms for endoscopic procedures. In this paper, we demonstrate the effectiveness of our framework by jointly optimizing domain-specific laser-based projection pattern for Structured Light Endoscopy, and generating large-scale synthetic training data for efficient supervised learning without manual labeling. We show that a) an optimized projection pattern can increase the reconstructability of a target domain and b) the synthetic data generated by Fireflies lowers the labeling effort required for endoscopic machine learning tasks. The source code is available at: https://​github.​com/​Henningson/​Fireflies      
   
 Jann-Ole Henningson, Reinhard Veltrup, Marion Semmler, Michael Döllinger, Marc Stamminger   

 Exogenous Agent-Free Synthetic Post-contrast Imaging with a Cascade of Deep Networks for Enhancement Prediction After Tumor Resection. A Parametric-Map Oriented Approach  
  Abstract   
 Gadolinium-based contrast agents (GBCAs) have become a cornerstone in clinical routine for detection, characterization and monitoring of several diseases. Particularly, GBCAs are clinically relevant for the detection of blood brain barrier (BBB) damage, which is associated with an aggressive tumor behavior. However, issues such as safety concerns related to deposition of GBCA in the brain, prolonged acquisitions, and cost increase advocate against its usage. In this work, we propose a novel approach based on a cascade of deep networks for pre- and post-contrast parametric mapping and the synthesis of post-contrast T1-weighted images. Only a pair of pre-contrast weighted images acquired with conventional pulse sequences are used as inputs; thus, our approach is GBCAs-free. Results reveal the potential of this approach to obtain T1w-enhancement information after tumor resection which is comparable with another state-of-the-art prediction approach. We provide not only the predictions, but also the pre- and post-contrast parametric maps without the usage of GBCAs.   
   
 Elisa Moya-Sáez, Rodrigo de Luis-García, Laura Nunez-Gonzalez, Carlos Alberola-López, Juan Antonio Hernández-Tamames   

 OCT Scans Simulation Framework for Data Augmentation and Controlled Evaluation of Signal Processing Approaches  
  Abstract   
 Optical Coherence Tomography (OCT) is an emerging approach for tissue diagnostics and optical biopsy. OCT can evaluate biological structures, including vessels (such as blood and lymphatic vessels), tissue layers, tumor margins, and other inclusions. OCT scans reveal coherent speckle patterns and signal decay. These parameters can be characterized by speckle contrast (SC) and the optical attenuation coefficient (OAC). This work presents the principles of OCT signal formation, demonstrates a computationally efficient OCT signal simulation framework, and outlines the applicability of its utilization to SC and OAC processing evaluation. We then demonstrate the presented approach in application to real OCT signals of cartilage under laser treatment. The presented OCT scan simulation and signal processing tools are available on the cloud-based online platform https://​www.​opticelastograph​.​com    .   
   
 Aleksandr Sovetsky, Alexander Matveyev, Peter Chizhov, Vladimir Zaitsev, Lev Matveev   

 Enhancing Quantitative Image Synthesis Through Pretraining and Resolution Scaling for Bone Mineral Density Estimation from a Plain X-Ray Image  
  Abstract   
 While most vision tasks are essentially visual in nature (for recognition), some important tasks, especially in the medical field, also require quantitative analysis (for quantification) using quantitative images. Unlike in visual analysis, pixel values in quantitative images correspond to physical metrics measured by specific devices (e.g., a depth image). However, recent work has shown that it is sometimes possible to synthesize accurate quantitative values from visual ones (e.g., depth from visual cues or defocus). This research aims to improve quantitative image synthesis (QIS) by exploring pretraining and image resolution scaling. We propose a benchmark for evaluating pretraining performance using the task of QIS-based bone mineral density (BMD) estimation from plain X-ray images, where the synthesized quantitative image is used to derive BMD. Our results show that appropriate pretraining can improve QIS performance, significantly raising the correlation of BMD estimation from 0.820 to 0.898, while others do not help or even hinder it. Scaling up the resolution can further boost the correlation up to 0.923, a significant enhancement over conventional methods.   
   
 Yi Gu, Yoshito Otake, Keisuke Uemura, Masaki Takao, Mazen Soufi, Seiji Okada, Nobuhiko Sugano, Hugues Talbot, Yoshinobu Sato   

 Latent Pollution Model: The Hidden Carbon Footprint in 3D Image Synthesis  
  Abstract   
 Contemporary developments in generative AI are rapidly transforming the field of medical AI. These developments have been predominantly driven by the availability of large datasets and high computing power, which have facilitated a significant increase in model capacity. Despite their considerable potential, these models demand substantially high power, leading to high carbon dioxide \((CO_2)\)  emissions. Given the harm such models are causing to the environment, there has been little focus on the carbon footprints of such models. This study analyzes carbon emissions from 2D and 3D latent diffusion models (LDMs) during training and data generation phases, revealing a surprising finding: the synthesis of large images contributes most significantly to these emissions. We assess different scenarios including model sizes, image dimensions, distributed training, and data generation steps. Our findings reveal substantial carbon emissions from these models, with training 2D and 3D models comparable to driving a car for 10 km and 90 km, respectively. The process of data generation is even more significant, with \(CO_2\)  emissions equivalent to driving 160 km for 2D models and driving for up to 3345 km for 3D synthesis. Additionally, we found that the location of the experiment can increase carbon emissions by up to 94 times, and even the time of year can influence emissions by up to 50%. These figures are alarming, considering they represent only a single training and data generation phase for each model. Our results emphasize the urgent need for developing environmentally sustainable strategies in generative AI.   
   
 Marvin Seyfarth, Salman Ul Hassan Dar, Sandy Engelhardt   

 Synthesizing Scalable CFD-Enhanced Aortic 4D Flow MRI for Assessing Accuracy and Precision of Deep-Learning Image Reconstruction and Segmentation Tasks  
  Abstract   
 Systematic and random errors of MRI measurements in conjunction with the absence of ground truth data limit the assessment of accuracy and precision of 4D flow MRI image reconstruction and other downstream tasks. In this work, we propose to generate scalable synthetic CFD-enhanced aortic 4D flow MRI data, which we assemble into a dataset named RACLETTE. Our approach takes in-vivo 4D flow MRI data as input and pairs it with CFD-based “ground-truth” mean and turbulent flow fields. Specifically, high-resolution pulsatile velocity-vector and turbulent flow fields are simulated for varying degrees of aortic stenosis for a set of 139 time-resolved compliant aortic geometries. To generate realistic datasets, the synthetic flow fields are projected and embedded into the background of the in-vivo 4D flow MRI scans. Upon Fourier transform, data sampling using a given velocity encoding and undersampling scheme yields k-space data as input to deep-learning image reconstruction, segmentation and other downstream tasks. Since the synthetic 4D flow MRI data is paired with noise-free reference values including velocity, pressure, wall shear stress, the Reynolds stress tensor and pulse wave velocity, accuracy and precision of reconstruction and inference are readily available. To demonstrate the value of synthetic CFD-enhanced 4D flow MRI data, we utilize the dataset to train and apply (1) deep-learning based image reconstruction and (2) automatic vessel segmentation. It is shown that the synthetically trained deep-learning tasks generalize sufficiently and provide insights into the performance of reconstruction and processing tasks, indicating the potential value of our synthetic dataset also for further applications.   
   
 Pietro Dirix, Luuk Jacobs, Stefano Buoso, Sebastian Kozerke   

 MedEdit: Counterfactual Diffusion-Based Image Editing on Brain MRI  
  Abstract   
 Denoising diffusion probabilistic models enable high-fidelity image synthesis and editing. In biomedicine, these models facilitate counterfactual image editing, producing pairs of images where one is edited to simulate hypothetical conditions. For example, they can model the progression of specific diseases, such as stroke lesions. However, current image editing techniques often fail to generate realistic biomedical counterfactuals, either by inadequately modeling indirect pathological effects like brain atrophy or by excessively altering the scan, which disrupts correspondence to the original images. Here, we propose MedEdit  , a conditional diffusion model for medical image editing. MedEdit  induces pathology in specific areas while balancing the modeling of disease effects and preserving the original scan’s integrity. We evaluated MedEdit  on the Atlas v2.0 stroke dataset using Frechet Inception Distance and Dice scores, outperforming state-of-the-art diffusion-based methods such as Palette (by 45%) and SDEdit (by 61%). Additionally, clinical evaluations by a board-certified neuroradiologist confirmed that MedEdit  generated realistic stroke scans indistinguishable from real ones. We believe this work will enable counterfactual image editing research to further advance the development of realistic and clinically useful imaging tools.   
   
 Malek Ben Alaya, Daniel M. Lang, Benedikt Wiestler, Julia A. Schnabel, Cosmin I. Bercea   

 Using MR Physics for Domain Generalisation and Super-Resolution  
  Abstract   
 MRI is a very flexible imaging modality, but with flexibility comes heterogeneity. MRI sequence choice, acquisition parameters, and image resolution form an extrinsic source of variability, reducing our ability to extract the underlying relevant biological signal and causing difficulties in downstream analyses. We propose a new method that can create resolution and acquisition-parameter invariant representations by removing external sources of variability. We use realistic physics models of image resolution and combine them with a differentiable model of MRI sequences to create an invariant high-resolution multi-parametric (MPM) MRI estimate from an arbitrary number of inputs, all trained via self-supervision. The proposed method allows clinical imaging sessions with sequences acquired at arbitrary resolutions to be transformed into a single-domain generalisable representation. We demonstrate the model’s validity by showing improved MPM reconstruction and imputation quality compared to previous methods and a significantly improved ability to super-resolve. We also demonstrate domain generalisation capabilities via a downstream classification model that is more robust to the choice of input sequences in an out-of-distribution dataset.   
   
 Pedro Borges, Virginia Fernandez, Petru Daniel Tudosiu, Parashkev Nachev, Sebastien Ourselin, M. Jorge Cardoso   

 Single-Scan mpMRI Calibration of Multi-species Brain Tumor Dynamics with Mass Effect  
  Abstract   
 We propose an inverse problem formulation and solution algorithm for the calibration of a multi-species biophysical model of glioblastoma (GBM) growth. The model couples GBM growth with GBM-induced deformation of the healthy parenchyma, the so called “mass effect”  . The model is a multi-species partial differential equation (PDE) that models interactions between proliferative, infiltrative, and necrotic tumor cells as well as hypoxia. This PDE has several unknown parameters and fields: the pretumor brain anatomy, initial conditions, and ten coefficients representing mechanisms like diffusive proliferation, migration, and growth. A key challenge is estimating these parameters using just a single multiparametric magnetic resonance imaging (mpMRI) scan.   
 To solve this inverse problem, we first segmented the mpMRI and then we use a single-species PDE model to invert for the tumor initial condition and the pretumor anatomy. Then we solve a second inverse problem with the multi-species PDE but without  mass effect, to obtain an initial estimate of the ten unknown scalar coefficients. We use these estimates to appropriately scale the mass-effect estimates from the first inverse problem. Finally, we solve a third inverse problem with the multi-species PDE including mass effect to finalize the ten coefficient values.   
 We solve all three inverse problems using quasi-Newton solvers, using an adjoint-based formulation for the single-species problem, and a sensitivity-based formulation for the two multi-species problems.   
 We present preliminary results from evaluating our methodology on five subjects from the BraTS20 dataset. We show that despite the model complexity and the sparse data it is still possible to solve the inverse problem. When comparing to the single-species reconstruction, we find that the new model results in similar or better reconstruction for the overall tumor region while extracting a richer set of biophysical biomarkers.   
   
 Ali Ghafouri, George Biros   

 Annotated Biomedical Video Generation Using Denoising Diffusion Probabilistic Models and Flow Fields  
  Abstract   
 The segmentation and tracking of living cells play a vital role within the biomedical domain, particularly in cancer research, drug development, and developmental biology. These are usually tedious and time-consuming tasks that are traditionally done by biomedical experts. Recently, to automatize these processes, deep learning based segmentation and tracking methods have been proposed. These methods require large-scale datasets and their full potential is constrained by the scarcity of annotated data in the biomedical imaging domain. To address this limitation, we propose Biomedical Video Diffusion Model (BVDM), capable of generating realistic-looking synthetic microscopy videos. Trained only on a single real video, BVDM can generate videos of arbitrary length with pixel-level annotations that can be used for training data-hungry models. It is composed of a denoising diffusion probabilistic model (DDPM) generating high-fidelity synthetic cell microscopy images and a flow prediction model (FPM) predicting the non-rigid transformation between consecutive video frames. During inference, initially, the DDPM imposes realistic cell textures on synthetic cell masks which are generated based on real data statistics. The flow prediction model predicts the flow field between consecutive masks and applies that to the DDPM output from the previous time frame to create the next one while keeping temporal consistency. BVDM outperforms state-of-the-art synthetic live cell microscopy video generation models. Furthermore, we demonstrate that a sufficiently large synthetic dataset enhances the performance of cell segmentation and tracking models compared to using a limited amount of available real data. The code is available under https://​github.​com/​ruveydayilmaz0/​BVDM    .   
   
 Rüveyda Yilmaz, Dennis Eschweiler, Johannes Stegmaier   

 Backmatter  

 Metadaten   

 Titel  Simulation and Synthesis in Medical Imaging    
 herausgegeben von  Virginia Fernandez  
  Jelmer M. Wolterink  
  David Wiesner  
  Samuel Remedios  
  Lianrui Zuo  
  Adrià Casamitjana  
     
 Copyright-Jahr  2025    
 Verlag  Springer Nature Switzerland     
   
 Electronic ISBN  978-3-031-73281-2    
 Print ISBN  978-3-031-73280-5    
 DOI  https://doi.org/10.1007/978-3-031-73281-2     

 Premium Partner  

 » zur Fachgebietsseite Business IT + Informatik 

 Bildnachweise  Rittal/© Rittal, NTT Data/© NTT Data, Wildix/© Wildix, Ceyoniq Technology GmbH/© Ceyoniq Technology GmbH, arvato Systems GmbH/© arvato Systems GmbH, Ninox Software GmbH/© Ninox Software GmbH, Everyday Software S.L./© Everyday Software S.L., Redgate/© Redgate, CELONIS Labs GmbH, DC-Datacenter-Group GmbH/© DC-Datacenter-Group GmbH, all for one/© all for one, G Data CyberDefense/© G Data CyberDefense, FAST LTA/© FAST LTA   

 Weitere Formate | Podcasts 
  Webinare Technik 
  Webinare Wirtschaft 
  Kongresse 
  Veranstaltungskalender 
  Awards 
  MyNewsletter 
  Firmensuche 
  Fachgebiete | Automobil + Motoren 
  Bauwesen + Immobilien 
  Business IT + Informatik 
  Elektrotechnik + Elektronik 
  Energie + Nachhaltigkeit 
  Finance + Banking 
  Management + Führung 
  Marketing + Vertrieb 
  Maschinenbau + Werkstoffe 
  Versicherung + Risiko 
  Bücher 
  Zeitschriften 
  Themenseiten | Organisationspsychologie 
  Projektmanagement 
  Marketing 
  Smart Manufacturing 
  Jetzt Einzelzugang starten 
  Zugang für Unternehmen 
  Referenzkunden 
  Sustainability in Automotive 
   MyNewsletter 
  Firmensuche 

  Über uns:     
  
 In eigener Sache    Das Team    Redaktionelles Leitbild    Hilfe    Referenzen      
 Unsere Produkte:     
  
 Einzelzugang    Zugang für Unternehmen    PatentFit    MyAlerts    Professional Book Archive    MyNewsletter    Carl Hanser Verlag - Bücher    KI-gestützte Suche      
 Rechtliche Informationen:     
  
 Impressum    AGB    Datenschutzerklärung    Cookies    Cookies verwalten    Verträge hier kündigen    Zahlungsarten      
 Weiterführende Links:     
  
 RSS-Feeds    Social Media    Mediadaten    Corporate Solutions    Whitepaper    Gabler Wirtschaftslexikon    Gabler Banklexikon    Versicherungsmagazin      
   
 Springer Nature Logo    © Springer Fachmedien Wiesbaden GmbH  
   
 Version: 0.3958.0   

  
Call for papers data: 
undefinedImportant dates data: 
undefined

9. Conference SAS_3:
SPLASH 2024   Sun 20 - Fri 25 October 2024 Pasadena, California, United States    

 Toggle navigation        
 Attending | Venue: Hilton Pasadena 
  Students 
  Registration 
  Visa Support Letters 
  Sponsoring 
  Code of conduct 
  Instructions for Presenters 
  Chair's Welcome 
  How to SPLASH (Quick Attendee Guide) 
  Mt. Baldy Bicycle Trip 
  Attractions Around Pasadena 
  Live Stream 
  Program | SPLASH Program 
  Your Program 
   Sun 20 Oct 
  Mon 21 Oct 
  Tue 22 Oct 
  Wed 23 Oct 
  Thu 24 Oct 
  Fri 25 Oct 
  Tracks | SPLASH 2024 
  DEI Activities 
  Doctoral Symposium 
  Keynotes 
  OOPSLA 2024 
  OOPSLA Artifacts 
  Onward! Essays 
  Onward! Papers 
  PLMW 
  Posters 
  REBASE 
  SPLASH-E 
  Student Research Competition 
  Volunteers 
  Workshops 
   Co-hosted Conferences 
  GPCE 
  SLE 
  Workshops 
  HATRA 
  IWACO 
  JENSFEST 
  LIVE 
  NSAD 
  PAINT 
  ProLaLa 
  UNSOUND 
  VIVEKFEST 
  VMIL | VMIL 
  - A tour of CPython's runtime 
  Co-hosted Symposia 
  SAS | SAS 
  SAS  Artifacts 
  Organization | SPLASH 2024 Committees 
  Organizing Committee 
  Steering Committee 
  Track Committees 
  Doctoral Symposium 
  OOPSLA 2024 
  OOPSLA Artifacts 
  Onward! Essays | Program Committee 
  Onward! Steering Committee 
  Onward! Papers | Program Committee 
  Steering Committee 
  PLMW | Organizing Committee 
  Speakers & Panelists 
  Mentors 
  Posters 
  REBASE 
  SPLASH-E | Program Commitee 
  Steering Committee 
  Student Research Competition | Organizers 
  Reviewers 
  Volunteers 
  Workshops 
  Contributors 
  People Index 
   Co-hosted Conferences 
  GPCE | Organizing Committee 
  Program Committee 
  Steering Committee 
  SLE | Organizing Committee 
  Program Committee 
  Artifact Evaluation Committee 
  Steering Committee 
  Workshops 
  HATRA | Organizing Committee 
  Program Committee 
  IWACO | Organizing Committee 
  Program Committee 
  JENSFEST | Organizing Committee 
  Program Committee 
  LIVE | Organizing Committee 
  Program Committee 
  NSAD | Organizing Committee 
  Program Committee 
  PAINT | Organizing Committee 
  Program Committee 
  ProLaLa | Organizing Committee 
  Program Committee 
  UNSOUND | Organizing Committee 
  VIVEKFEST | Organizing Committee 
  Program Committee 
  VMIL | Organizing Committee 
  Program Committee 
  Co-hosted Symposia 
  SAS | SAS 2024  Organizing Committee 
  SAS 2024  Program Committee 
  SAS Artifacts 
  Search 
  Series | Series 
   SPLASH 2025 
  SPLASH 2024 
  SPLASH 2023 
  SPLASH 2022 
  SPLASH 2021 
  SPLASH 2020 
  SPLASH 2019 
  SPLASH 2018 
  SPLASH 2017 
  SPLASH 2016 
  SPLASH 2015 
  SPLASH 2014 
  SPLASH 2013 
  SPLASH 2012 
  SPLASH 2011 
   SPLASH 2010 
   OOPSLA 2009 
  OOPSLA 2008 
  OOPSLA 2007 
  OOPSLA 2006 
  OOPSLA 2005 
  OOPSLA 2004 
  OOPSLA 2003 
  OOPSLA 2002 
  OOPSLA 2001 
  OOPSLA 2000 
  Sign in 
  Sign up 

  SPLASH 2024  ( series  ) /  SAS 2024 ( series  ) /  SAS 2024  
   
 About 
  Program 
  Accepted Papers 
  Sponsoring SAS24 
  Call for Papers 
  Welcome to the website of the 31st Static Analysis Symposium (SAS 2024). Static analysis is widely recognized as a fundamental tool for program verification, bug detection, compiler optimization, program understanding, and software maintenance. The series of Static Analysis Symposia  has served for more than 30 years as the primary venue for the presentation of theoretical, practical, and application advances in the area.  
 SAS’24 will take place from Sunday, October 20th to Tuesday, October 22nd, 2024.  The SAS 2024 Proceedings are published by Springer in the LNCS ARCoSS series, Vol. 14995.  
 This year, at SAS’24, the Radhia Cousot Award has bend announced at the conference  ! The award is in memory of Radhia Cousot and her fundamental contributions to static analysis. All young researchers (students and post-doc) authors of papers accepted at SAS’24 are invited to join SAS and register at the conference.  
 The winner of 2024 Radhia Cousot Award is: Denis Mazzucato  for the paper Quantitative Static Timing Analysis  .  
 Keynote Speakers  
   What's Still Missing in Static Analysis? A Decade-Long Journey.  
 Mayur Naik   

    Static Analysis Sparsity and Modularity  
 Kwangkeun Yi   

    Abstract Interpretation-Based Certification of Hyperproperties for High-Stakes Machine Learning Software  
 Caterina Urban   

    Measuring data lineage: when program analysis meets data science  
 Francesco Logozzo   

    A New Language for Expressive, Fast, Safe, and Analyzable Authorization  
 Emina Torlak   

 Supporters   
   
   Gold   
   Silver   
   Silver   
   Bronze   
   Bronze   

 Dates    

 Plenary    

   Program Display Configuration  
   
   Time Zone   
   
 The program is currently displayed in (GMT-07:00) Pacific Time (US & Canada)  .   Use conference time zone: (GMT-07:00) Pacific Time (US & Canada)    Select other time zone   (GMT-12:00) AoE (Anywhere On Earth)  (GMT-11:00) Midway Island, Samoa  (GMT-09:00) Hawaii-Aleutian  (GMT-10:00) Hawaii  (GMT-09:30) Marquesas Islands  (GMT-09:00) Gambier Islands  (GMT-08:00) Alaska  (GMT-07:00) Tijuana, Baja California  (GMT-08:00) Pitcairn Islands  (GMT-07:00) Pacific Time (US & Canada)  (GMT-06:00) Mountain Time (US & Canada)  (GMT-06:00) Chihuahua, La Paz, Mazatlan  (GMT-07:00) Arizona  (GMT-06:00) Saskatchewan, Central America  (GMT-05:00) Guadalajara, Mexico City, Monterrey  (GMT-05:00) Easter Island  (GMT-05:00) Central Time (US & Canada)  (GMT-04:00) Eastern Time (US & Canada)  (GMT-04:00) Cuba  (GMT-05:00) Bogota, Lima, Quito, Rio Branco  (GMT-04:00) Caracas  (GMT-03:00) Santiago  (GMT-04:00) La Paz  (GMT-03:00) Faukland Islands  (GMT-04:00) Manaus, Amazonas, Brazil  (GMT-03:00) Atlantic Time (Goose Bay)  (GMT-03:00) Atlantic Time (Canada)  (GMT-02:30) Newfoundland  (GMT-03:00) UTC-3  (GMT-03:00) Montevideo  (GMT-02:00) Miquelon, St. Pierre  (GMT-02:00) Greenland  (GMT-03:00) Buenos Aires  (GMT-03:00) Brasilia, Distrito Federal, Brazil  (GMT-02:00) Mid-Atlantic  (GMT-01:00) Cape Verde Is.  (GMT) Azores  (UTC) Coordinated Universal Time  (GMT+01:00) Belfast  (GMT+01:00) Dublin  (GMT+01:00) Lisbon  (GMT+01:00) London  (GMT) Monrovia, Reykjavik  (GMT+02:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna  (GMT+02:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague  (GMT+02:00) Brussels, Copenhagen, Madrid, Paris  (GMT+01:00) West Central Africa  (GMT+02:00) Windhoek  (GMT+03:00) Athens  (GMT+03:00) Beirut  (GMT+02:00) Cairo  (GMT+03:00) Gaza  (GMT+02:00) Harare, Pretoria  (GMT+03:00) Jerusalem  (GMT+03:00) Minsk  (GMT+03:00) Syria  (GMT+03:00) Moscow, St. Petersburg, Volgograd  (GMT+03:00) Nairobi  (GMT+03:30) Tehran  (GMT+04:00) Abu Dhabi, Muscat  (GMT+04:00) Yerevan  (GMT+04:30) Kabul  (GMT+05:00) Ekaterinburg  (GMT+05:00) Tashkent  (GMT+05:30) Chennai, Kolkata, Mumbai, New Delhi  (GMT+05:45) Kathmandu  (GMT+06:00) Astana, Dhaka  (GMT+07:00) Novosibirsk  (GMT+06:30) Yangon (Rangoon)  (GMT+07:00) Bangkok, Hanoi, Jakarta  (GMT+07:00) Krasnoyarsk  (GMT+08:00) Beijing, Chongqing, Hong Kong, Urumqi  (GMT+08:00) Irkutsk, Ulaan Bataar  (GMT+08:00) Perth  (GMT+08:45) Eucla  (GMT+09:00) Osaka, Sapporo, Tokyo  (GMT+09:00) Seoul  (GMT+09:00) Yakutsk  (GMT+10:30) Adelaide  (GMT+09:30) Darwin  (GMT+10:00) Brisbane  (GMT+11:00) Hobart  (GMT+10:00) Vladivostok  (GMT+11:00) Lord Howe Island  (GMT+11:00) Solomon Is., New Caledonia  (GMT+11:00) Magadan  (GMT+12:00) Norfolk Island  (GMT+12:00) Anadyr, Kamchatka  (GMT+13:00) Auckland, Wellington  (GMT+12:00) Fiji, Kamchatka, Marshall Is.  (GMT+13:45) Chatham Islands  (GMT+13:00) Nuku'alofa  (GMT+14:00) Kiritimati     

   The GMT offsets shown reflect the offsets at the moment of the conference  .     
   
 Time Band   
   
 By setting a time band, the program will dim events that are outside this time window. This is useful for (virtual) conferences with a continuous program (with repeated sessions).  
  The time band will also limit the events that are included in the personal iCalendar subscription service.   Display full program    Specify a time band   -      

  Save    

  Close    

 ×    You're viewing the program in a time zone which is different from your device's time zone change time zone     

 Sun 20 Oct   
  
 Displayed time zone: Pacific Time (US & Canada)  change      

 09:00 - 10:30 | Modularity and Memory Analysis SAS   at San Gabriel   
  Chair(s): Roberto Giacobazzi  University of Arizona 
 09:00   
 60m    
 Keynote | Static Analysis Sparsity and Modularity   SAS   
 Kwangkeun Yi  Seoul National University 
 10:00   
 30m | Under-approximating Memory Abstractions   SAS   
 Marco Milanese  Sorbonne University  , Antoine Miné  Sorbonne Université    
  Pre-print 

 10:30 - 11:00 | Coffee Break Catering   at Foyer 
 10:30   
 30m    
 Coffee break | Break   Catering 

 11:00 - 12:30 | Types, Control-flow and trace partitioning SAS   at San Gabriel   
  Chair(s): Michele Pasqua  University of Verona 
 11:00   
 30m    
 Full-paper | BinSub: The Simple Essence of Polymorphic Type Inference for Machine Code   SAS   
 Ian Smith  Trail of Bits    
  Pre-print 
 11:30   
 30m    
 Full-paper | Full Control-Flow Sensitivity for Definitional Interpreters   SAS   
 Kimball Germane  Brigham Young University    
  Pre-print 
 12:00   
 30m    
 Full-paper | Trace Partitioning as an Optimization Problem   SAS   
 Charles Babu M  CEA-List  , Matthieu Lemerre  Université Paris-Saclay - CEA LIST  , Sébastien Bardin  CEA LIST, University Paris-Saclay  , Jean-Yves Marion  LORIA    
  Pre-print 

 12:30 - 14:00 | Lunch Catering   at California 
 12:30   
 90m    
 Lunch | Lunch   Catering 

 14:00 - 15:30 | Machine learning and Neural networks SAS   at San Gabriel   
  Chair(s): Marco Campion  INRIA & École Normale Supérieure | Université PSL 
 14:00   
 60m    
 Tutorial | Abstract Interpretation-Based Certification of Hyperproperties for High-Stakes Machine Learning Software   SAS   
 Caterina Urban  Inria - École Normale Supérieure 
 15:00   
 30m    
 Full-paper | Robustness Verification of Multi-Label Neural Network Classifiers   SAS   
 Julian Mour   , Dana Drachsler Cohen  Technion    
  Pre-print 

 15:30 - 16:00 | Coffee Break Catering   at Foyer 
 15:30   
 30m    
 Coffee break | Break   Catering 

 16:00 - 17:30 | Machine Learning and Neural networks SAS   at San Gabriel   
  Chair(s): Marco Campion  INRIA & École Normale Supérieure | Université PSL 
 16:00   
 30m    
 Full-paper | Abstract Interpretation of ReLU Neural Networks with Optimizable Polynomial Relaxations   SAS   
 Philipp Kern  Karlsruhe Institute of Technology (KIT)  , Carsten Sinz  Karlsruhe Institute of Technology    
  Pre-print 
 16:30   
 30m    
 Short-paper | ConstraintFlow: A DSL for Specification and Verification of Neural Network Analyses (NEAT paper)   SAS   
 Avaljot Singh  UIUC  , Yasmin Sarita  Cornell University  , Charith Mendis  University of Illinois at Urbana-Champaign  , Gagandeep Singh  University of Illinois at Urbana-Champaign; VMware Research    
  Pre-print 

 Mon 21 Oct   
  
 Displayed time zone: Pacific Time (US & Canada)  change      

 09:00 - 10:30 | Authorisation and responsibility SAS   at San Gabriel   
  Chair(s): Patrick Cousot 
 09:00   
 60m    
 Tutorial | A New Language for Expressive, Fast, Safe, and Analyzable Authorization   SAS   
 Emina Torlak  Amazon Web Services, USA 
 10:00   
 30m    
 Full-paper | On the Role of Cognizance in Responsibility   SAS   
 Laura Canaia   , Mila Dalla Preda  University of Verona    
  Pre-print 

 10:30 - 11:00 | Coffee Break Catering   at Foyer 
 10:30   
 30m    
 Coffee break | Break   Catering 

 11:00 - 12:30 | Verification cost and quantitative analysis SAS   at San Gabriel   
  Chair(s): Sébastien Bardin  CEA LIST, University Paris-Saclay 
 11:00   
 30m    
 Full-paper | Verification of programs with ADTs using Shallow Horn Clauses   SAS   
 Théo Losekoot   , Thomas Genet  IRISA, Univ Rennes  , Thomas P. Jensen  INRIA Rennes    
  Pre-print 
 11:30   
 30m    
 Full-paper | An Order Theory Framework of Recurrence Equations for Static Cost Analysis – Dynamic Inference of Non-Linear Inequality Invariants   SAS   
 Louis Rustenholz  Universidad Politécnica de Madrid (UPM) and IMDEA Software Institute  , Pedro López-García  IMDEA Software Institute  , José Morales  IMDEA Software Institute  , Manuel Hermenegildo  Technical University of Madrid (UPM) and IMDEA Software Institute    
  Link to publication   Pre-print   File Attached 
 12:00   
 30m    
 Full-paper | Quantitative Static Timing Analysis   SAS   
 Denis Mazzucato  INRIA & École Normale Supérieure  , Marco Campion  INRIA & École Normale Supérieure | Université PSL  , Caterina Urban  Inria - École Normale Supérieure    
  Pre-print 

 12:30 - 14:00 | Lunch Catering   at California 
 12:30   
 90m    
 Lunch | Lunch   Catering 

 14:00 - 15:30 | Quantum and system level analysis SAS   at San Gabriel   
  Chair(s): Qirun Zhang  Georgia Institute of Technology 
 14:00   
 30m    
 Short-paper | Fixing Latent Unsound Abstract Operators in the eBPF Verifier of the Linux Kernel (NEAT paper)   SAS   
 Matan Shachnai   , Harishankar Vishwanathan   , Srinivas Narayana  Rutgers University  , Santosh Nagarakatte  Rutgers University    
  Pre-print 
 14:30   
 30m    
 Full-paper | Static Analysis of Quantum Programs   SAS   
 Nicola Assolini  University of Verona  , Alessandra Di Pierro  University of Verona  , Isabella Mastroeni  University of Verona    
  Pre-print 
 15:00   
 30m    
 Short-paper | Verifying components of Arm® Confidential Computing Architecture with ESBMC (NEAT paper)   SAS   
 Tong Wu   , Shale Xiong  ARM  , Edoardo Manino   , Gareth Stockwell  ARM  , Lucas C. Cordeiro  University of Manchester, UK and Federal University of Amazonas, Brazil    
  Pre-print 

 15:30 - 16:00 | Coffee Break Catering   at Foyer 
 15:30   
 30m    
 Coffee break | Break   Catering 

 16:00 - 17:30 | Radhia Cousot Award and SAS24 Business Meeting SAS   at San Gabriel   
  Chair(s): Marco Campion  INRIA & École Normale Supérieure | Université PSL  , Roberto Giacobazzi  University of Arizona  , Alessandra Gorla  IMDEA Software Institute 
 16:00   
 60m    
 Meeting | Radhia Cousot Award and Business Meeting   SAS 

 Tue 22 Oct   
  
 Displayed time zone: Pacific Time (US & Canada)  change      

 09:00 - 10:30 | Automatising Program Analysis SAS   at San Gabriel   
  Chair(s): Manuel Hermenegildo  Technical University of Madrid (UPM) and IMDEA Software Institute 
 09:00   
 60m    
 Keynote | What's Still Missing in Static Analysis? A Decade-Long Journey.   SAS   
 Mayur Naik  University of Pennsylvania 
 10:00   
 30m    
 Full-paper | Synthesizing Abstract Transformers for Reduced-Product Domains   SAS   
 Pankaj Kumar Kalita  IIT Kanpur  , Thomas Reps  University of Wisconsin-Madison  , Subhajit Roy  IIT Kanpur    
  Pre-print 

 10:30 - 11:00 | Coffee Break Catering   at Foyer 
 10:30   
 30m    
 Coffee break | Break   Catering 

 11:00 - 12:30 | Tracing bugs and flaws SAS   at San Gabriel   
  Chair(s): Aditya V. Thakur  University of California at Davis 
 11:00   
 60m    
 Keynote | Measuring data lineage: when program analysis meets data science   SAS   
 Francesco Logozzo  Meta 
 12:00   
 30m    
 Full-paper | Lift-offline: Instruction Lifter Generators   SAS   
 Nicholas Coughlin  Defence Science and Technology Group, Australia  , Alistair Michael   , Kait Lam     
  Pre-print 

 12:30 - 14:00 | Lunch Catering   at California 
 12:30   
 90m    
 Lunch | Lunch   Catering 

 14:00 - 15:30 | System level analysis SAS   at San Gabriel   
  Chair(s): Roberto Giacobazzi  University of Arizona 
 14:00   
 30m    
 Full-paper | GoGuard: Efficient Static Blocking Bug Detection for Go   SAS   
 Dhruti Joshi   , Bozhen Liu  Texas A&M University - Corpus Christi    
  Pre-print 
 14:30   
 30m    
 Short-paper | Should We Balance? Towards Formal Verification of the Linux Kernel Scheduler (NEAT paper)   SAS   
 Julia Lawall  Inria  , Keisuke Nishimura   , Jean-Pierre Lozi     
  Pre-print   File Attached 

 15:30 - 16:00 | Coffee Break Catering   at Foyer 
 15:30   
 30m    
 Coffee break | Break   Catering 

 Accepted Papers  
  
 Title 
 Abstract Interpretation of ReLU Neural Networks with Optimizable Polynomial Relaxations  SAS   
 Philipp Kern  , Carsten Sinz    
  Pre-print 
 An Order Theory Framework of Recurrence Equations for Static Cost Analysis – Dynamic Inference of Non-Linear Inequality Invariants  SAS   
 Louis Rustenholz  , Pedro López-García  , José Morales  , Manuel Hermenegildo    
  Link to publication   Pre-print   File Attached 
 BinSub: The Simple Essence of Polymorphic Type Inference for Machine Code  SAS   
 Ian Smith    
  Pre-print 
 ConstraintFlow: A DSL for Specification and Verification of Neural Network Analyses (NEAT paper)  SAS   
 Avaljot Singh  , Yasmin Sarita  , Charith Mendis  , Gagandeep Singh    
  Pre-print 
 Fixing Latent Unsound Abstract Operators in the eBPF Verifier of the Linux Kernel (NEAT paper)  SAS   
 Matan Shachnai  , Harishankar Vishwanathan  , Srinivas Narayana  , Santosh Nagarakatte    
  Pre-print 
 Full Control-Flow Sensitivity for Definitional Interpreters  SAS   
 Kimball Germane    
  Pre-print 
 GoGuard: Efficient Static Blocking Bug Detection for Go  SAS   
 Dhruti Joshi  , Bozhen Liu    
  Pre-print 
 Lift-offline: Instruction Lifter Generators  SAS   
 Nicholas Coughlin  , Alistair Michael  , Kait Lam    
  Pre-print 
 On the Role of Cognizance in Responsibility  SAS   
 Laura Canaia  , Mila Dalla Preda    
  Pre-print 
 Quantitative Static Timing Analysis  SAS   
 Denis Mazzucato  , Marco Campion  , Caterina Urban    
  Pre-print 
 Robustness Verification of Multi-Label Neural Network Classifiers  SAS   
 Julian Mour  , Dana Drachsler Cohen    
  Pre-print 
 Should We Balance? Towards Formal Verification of the Linux Kernel Scheduler (NEAT paper)  SAS   
 Julia Lawall  , Keisuke Nishimura  , Jean-Pierre Lozi    
  Pre-print   File Attached 
 Static Analysis of Quantum Programs  SAS   
 Nicola Assolini  , Alessandra Di Pierro  , Isabella Mastroeni    
  Pre-print 
 Synthesizing Abstract Transformers for Reduced-Product Domains  SAS   
 Pankaj Kumar Kalita  , Thomas Reps  , Subhajit Roy    
  Pre-print 
 Trace Partitioning as an Optimization Problem  SAS   
 Charles Babu M  , Matthieu Lemerre  , Sébastien Bardin  , Jean-Yves Marion    
  Pre-print 
 Under-approximating Memory Abstractions  SAS   
 Marco Milanese  , Antoine Miné    
  Pre-print 
 Verification of programs with ADTs using Shallow Horn Clauses  SAS   
 Théo Losekoot  , Thomas Genet  , Thomas P. Jensen    
  Pre-print 
 Verifying components of Arm® Confidential Computing Architecture with ESBMC (NEAT paper)  SAS   
 Tong Wu  , Shale Xiong  , Edoardo Manino  , Gareth Stockwell  , Lucas C. Cordeiro    
  Pre-print 

 Call for Papers  
  
 Deadlines extended! Check out the new dates!   
 Static Analysis is widely recognized as a fundamental tool for program verification, bug detection, compiler optimization, program understanding, and software maintenance. The series of Static Analysis Symposia has served for over 30 years as the primary venue for the presentation of theoretical, practical, and application advances in the area.  
 Important Dates  (All deadlines are AoE (Anywhere on Earth))  
  
 Paper submission: | Sunday, May 5th | , | Sunday May 19th, 2024 (Extended Deadline) 
  Artifact submission: | Sunday, May 12th | , | Wednesday May 22nd, 2024 (Extended Deadline) 
  Author response: | Monday, June 17th - Wednesday, June 19th, | Thursday, June 27th - Sunday, June 30th, 2024 
  Notification: | Sunday, July 7th, | Tuesday, July 16th, 2024 
  Camera ready: | Monday, August 5th, | Monday, August 12th, 2024 
  Topics  
 The technical program for SAS 2024 will consist of invited lectures and presentations of refereed papers. Contributions are welcomed on all aspects of program analysis analysis, including, but not limited to: Abstract interpretation 
  Automated deduction 
  Data flow analysis 
  Debugging techniques 
  Deductive methods 
  Emerging applications 
  Model-checking 
  Data science 
  Program optimizations and transformations 
  Program synthesis 
  Program verification 
  Machine learning and verification 
  Security analysis 
  Tool environments and architectures 
  Theoretical frameworks 
  Type checking 
  Distributed or networked systems 
  All paper submissions will be judged on the basis of significance, relevance, correctness, originality, and clarity.  
   
  Submission link: https://easychair.org/conferences/?conf=sas24   
   
  We welcome regular papers as well as papers focusing on any of the following in the NEAT (New questions/areas, Experience, Announcement, Tool) category: Well-motivated discussion of new questions or new areas. 
  Experience with static analysis tools, Industrial Reports, and Case Studies 
  Brief announcements of work in progress 
  Tool papers 
  Submissions can address any programming paradigm, including concurrent, constraint, functional, imperative, logic, object-oriented, aspect, multi-core, distributed, and GPU programming. We do not impose a page limit for submitted papers but we encourage brevity as reviewers have a limited time that they can spend on each paper. With the exception of NEAT papers, all papers will follow a lightweight double-blind reviewing process. The identity of the authors for the NEAT papers will be therefore known to the reviewers.  
   
  Papers must be written and presented in English. A submitted paper must describe original work and must not substantially overlap with papers that have been published or that are simultaneously submitted to a journal or a conference with refereed proceedings.  
   
  All submitted papers will be judged on the basis of significance, relevance, correctness, originality, and clarity. The review process will include a rebuttal period where authors have the opportunity to respond to preliminary reviews on the paper. Radhia Cousot Award  
 The program committee will select an accepted regular paper for the Radhia Cousot Young Researcher Best Paper Award in memory of Radhia Cousot and her fundamental contributions to static analysis, as well as being one of the main promoters and organizers of the SAS series of conferences. Artifacts  
 As in previous years, we encourage authors to submit a virtual machine image containing any artifacts and evaluations presented in the paper. Artifact submission is optional. Artifact evaluation will be concurrent with paper review. For more details, please visit the SAS 2024 Artifacts  page. Submission Details  
 Lightweight Double-Blind Requirement  
 All regular papers will follow a double-blind process, where author names and affiliations are hidden for initial review. Author names will be revealed to a reviewer only after their review has been submitted. To facilitate this process, submitted regular papers must adhere to the following: (1) Author names and affiliations must be omitted and (2) References to the authors’ own related work should be in the third person (e.g., not “We build on our previous work …” but rather “We build on the work of …”). The purpose of this process is to help the reviewers come to an initial judgment about the paper without bias, not to make it impossible for them to discover the authors if they were to try. Nothing should be done in the name of anonymity that weakens the submission, makes the job of reviewing the paper more difficult, or interferes with the process of disseminating new ideas. For example, important background references should not be omitted or anonymized, even if they are written by the same authors and share common ideas, techniques, or infrastructure. Authors should feel free to disseminate their ideas or draft versions of their papers as they normally would. For instance, authors may post drafts of their papers on the web or give talks on their research ideas. NEAT Papers Content  
 New problems papers are an opportunity to discuss visions, challenges, experiences, problems, and impactful solutions in the field of static analysis from both a research and applications perspective. Such papers are encouraged to take assertive positions and be forward-looking and aim for lively and insightful discussions that are influential to future research directions in static analysis. NEAT papers will be handled in singe-blind way. User experience & Industrial reports & Case studies papers describe the use of static analysis in industrial settings or in any chosen application domains. Papers in this category do not necessarily need to present original research results but are expected to contain applications of static analysis as well as a comprehensive evaluation in the chosen application domain. Such papers are encouraged to discuss the unique challenges of transferring research ideas to a real-world setting, reflect on any lessons learned from this technology transfer experience, and compare experiences with different analyzers highlighting their strengths and weaknesses. Brief announcements of work in progress papers may describe work in progress. A submission that is not selected for regular presentation may be invited for a brief announcement. Submission Guidelines  
 The SAS 2024 proceedings will be published by Springer in their LNCS series. Authors should consult Springer’s authors’ guidelines  and use their proceedings templates, for LaTeX, Overleaf, or Word, for the preparation of their papers. The corresponding author of each accepted paper, acting on behalf of all of the authors of that paper, must complete and sign a Consent-to-Publish form. The corresponding author signing the copyright form should match the corresponding author marked on the paper. Once the files have been sent to Springer, changes relating to the authorship of the papers cannot be made.  
   
 Sponsoring SAS24  
   
 The series of Static Analysis Symposia has served for more than 30 years as the primary venue for the presentation of theoretical, practical, and application advances in static program analysis. By becoming a SAS24 supporter, your organisation can reach a highly qualified technical audience of academics, industrial researchers, engineers, and students active in this fundamental area. You will be able to increase your visibility and product awareness among the people who are the most knowledgeable and passionate about your products.  
 All supporters will receive recognition of their level of contribution in print, on the web, in registration brochures, in the conference program, and during opening and closing of the conference.  
 You can support SAS24 at the following sponsorship levels:  
 Gold ($2.5k and up) | Company-provided banner during the conference; 
  Exhibit space at the conference; 
  May supply giveaways or swags; 
  Logo or name visibility (web, print, email, on-site); 
  2 conference registrations included; 
  Acknowledgement during opening and closing remarks 
  Silver ($2k) | Logo or name visibility (web, print, email, on-site) 
  May supply giveaways or swags 
  1 conference registrations included 
  Acknowledgement during opening and closing remarks 
  Bronze ($1k) | Logo or name visibility (web, print, email, on-site) 
  May supply giveaways or swags 
  Acknowledgement during opening and closing remarks 
  In addition to the four sponsorship levels and their benefits above, sponsors can support student travel award: $2K each!   
   
 Questions? Use the SAS contact form  .    
    
 Important Dates   AoE (UTC-12h)     

 Sun 20 - Tue 22 Oct 2024  
  Conference 
 Mon 12 Aug 2024  
  Camera Ready 
 Tue 16 Jul 2024  
  Notification 
 Thu 27 - Sun 30 Jun 2024  
  Author Response 
 Sun 19 May 2024   
  Paper Submission 

 Submission Link   
   
   https://easychair.org/conferences/?conf=sas24     
   
 Organizing Committee    
   
 Roberto Giacobazzi Program Chair    
 University of Arizona   
 United States 
  Alessandra Gorla Program Co-Chair    
 IMDEA Software Institute   
 Spain 
  Marco Campion Artifact Evaluation Chair    
 INRIA & École Normale Supérieure | Université PSL   
 France 
    
 Program Committee    
   
 Roberto Giacobazzi PC Chair    
 University of Arizona   
 United States 
  Alessandra Gorla Co-chair    
 IMDEA Software Institute   
 Spain 
  Matthew Amy Committee Member    
 Simon Fraser University   
 Canada 
  Steven Arzt Committee Member    
 Fraunhofer SIT; ATHENE   
 Germany 
  Paolo Baldan Committee Member    
 University of Padova   
 Italy 
  Sébastien Bardin Committee Member    
 CEA LIST, University Paris-Saclay   
 France 
  Roberto Bruni Committee Member    
 University of Pisa   
 Italy 
  Liqian Chen Committee Member    
 National University of Defense Technology   
 China 
  David Delmas Committee Member    
 Airbus   
 France 
  Elizabeth Dinella Committee Member    
 Bryn Mawr College 
  Antonio Filieri Committee Member    
 AWS and Imperial College London   
 United States 
  Kihong Heo Committee Member    
 KAIST   
 South Korea 
  Anastasia Isychev Committee Member    
 TU Wien   
 Austria 
  Franjo Ivancic Committee Member    
 Google   
 United States 
  Ana Milanova Committee Member    
 Rensselaer Polytechnic Institute 
  José Morales Committee Member    
 IMDEA Software Institute   
 Spain 
  Kedar Namjoshi Committee Member    
 Nokia Bell Labs   
 United States 
  Jorge A. Navas Committee Member    
 Certora   
 United States 
  Oded Padon Committee Member    
 VMware Research   
 United States 
  Michele Pasqua Committee Member    
 University of Verona   
 Italy 
  Xavier Rival Committee Member    
 Inria; ENS; CNRS; PSL University   
 France 
  Francesca Scozzari Committee Member    
 University of Chieti-Pescara   
 Italy 
  Gagandeep Singh Committee Member    
 University of Illinois at Urbana-Champaign; VMware Research   
 United States 
  Ilina Stoilkovska Committee Member    
 Amazon 
  Aditya V. Thakur Committee Member    
 University of California at Davis   
 United States 
  Arnaud Venet Committee Member    
 Facebook 
  Enea Zaffanella Committee Member    
 University of Parma   
 Italy 
  Qirun Zhang Committee Member    
 Georgia Institute of Technology   
 United States 

 x  Thu 5 Dec 12:36    

  SPLASH 2024   
  contact form    
  using conf.researchr.org  ( v1.67.1  )  
   Support page    
     
 Tracks  
 DEI Activities   
  Doctoral Symposium   
  Keynotes   
  OOPSLA 2024   
  OOPSLA Artifacts   
  Onward! Essays   
  Onward! Papers   
  PLMW   
  Posters   
  REBASE   
  SPLASH-E   
  Student Research Competition   
  Volunteers   
  Workshops    
 Co-hosted Conferences  
 GPCE 2024   
  SLE 2024   
  Workshops  
 HATRA   
  IWACO 2024   
  JENSFEST 2024   
  LIVE 2024   
  NSAD 2024   
  PAINT 2024   
  ProLaLa 2024   
  UNSOUND 2024   
  VIVEKFEST   
  VMIL 2024   
  Co-hosted Symposia  
 SAS 2024    

 Attending  
 Venue: Hilton Pasadena   
  Students   
  Registration   
  Visa Support Letters   
  Sponsoring   
  Code of conduct   
  Instructions for Presenters   
  Chair's Welcome   
  How to SPLASH (Quick Attendee Guide)   
  Mt. Baldy Bicycle Trip   
  Attractions Around Pasadena   
  Live Stream    
 Sign Up    

  
Call for papers data: 
SPLASH 2024   Sun 20 - Fri 25 October 2024 Pasadena, California, United States    

 Toggle navigation        
 Attending | Venue: Hilton Pasadena 
  Students 
  Registration 
  Visa Support Letters 
  Sponsoring 
  Code of conduct 
  Instructions for Presenters 
  Chair's Welcome 
  How to SPLASH (Quick Attendee Guide) 
  Mt. Baldy Bicycle Trip 
  Attractions Around Pasadena 
  Live Stream 
  Program | SPLASH Program 
  Your Program 
   Sun 20 Oct 
  Mon 21 Oct 
  Tue 22 Oct 
  Wed 23 Oct 
  Thu 24 Oct 
  Fri 25 Oct 
  Tracks | SPLASH 2024 
  DEI Activities 
  Doctoral Symposium 
  Keynotes 
  OOPSLA 2024 
  OOPSLA Artifacts 
  Onward! Essays 
  Onward! Papers 
  PLMW 
  Posters 
  REBASE 
  SPLASH-E 
  Student Research Competition 
  Volunteers 
  Workshops 
   Co-hosted Conferences 
  GPCE 
  SLE 
  Workshops 
  HATRA 
  IWACO 
  JENSFEST 
  LIVE 
  NSAD 
  PAINT 
  ProLaLa 
  UNSOUND 
  VIVEKFEST 
  VMIL | VMIL 
  - A tour of CPython's runtime 
  Co-hosted Symposia 
  SAS | SAS 
  SAS  Artifacts 
  Organization | SPLASH 2024 Committees 
  Organizing Committee 
  Steering Committee 
  Track Committees 
  Doctoral Symposium 
  OOPSLA 2024 
  OOPSLA Artifacts 
  Onward! Essays | Program Committee 
  Onward! Steering Committee 
  Onward! Papers | Program Committee 
  Steering Committee 
  PLMW | Organizing Committee 
  Speakers & Panelists 
  Mentors 
  Posters 
  REBASE 
  SPLASH-E | Program Commitee 
  Steering Committee 
  Student Research Competition | Organizers 
  Reviewers 
  Volunteers 
  Workshops 
  Contributors 
  People Index 
   Co-hosted Conferences 
  GPCE | Organizing Committee 
  Program Committee 
  Steering Committee 
  SLE | Organizing Committee 
  Program Committee 
  Artifact Evaluation Committee 
  Steering Committee 
  Workshops 
  HATRA | Organizing Committee 
  Program Committee 
  IWACO | Organizing Committee 
  Program Committee 
  JENSFEST | Organizing Committee 
  Program Committee 
  LIVE | Organizing Committee 
  Program Committee 
  NSAD | Organizing Committee 
  Program Committee 
  PAINT | Organizing Committee 
  Program Committee 
  ProLaLa | Organizing Committee 
  Program Committee 
  UNSOUND | Organizing Committee 
  VIVEKFEST | Organizing Committee 
  Program Committee 
  VMIL | Organizing Committee 
  Program Committee 
  Co-hosted Symposia 
  SAS | SAS 2024  Organizing Committee 
  SAS 2024  Program Committee 
  SAS Artifacts 
  Search 
  Series | Series 
   SPLASH 2025 
  SPLASH 2024 
  SPLASH 2023 
  SPLASH 2022 
  SPLASH 2021 
  SPLASH 2020 
  SPLASH 2019 
  SPLASH 2018 
  SPLASH 2017 
  SPLASH 2016 
  SPLASH 2015 
  SPLASH 2014 
  SPLASH 2013 
  SPLASH 2012 
  SPLASH 2011 
   SPLASH 2010 
   OOPSLA 2009 
  OOPSLA 2008 
  OOPSLA 2007 
  OOPSLA 2006 
  OOPSLA 2005 
  OOPSLA 2004 
  OOPSLA 2003 
  OOPSLA 2002 
  OOPSLA 2001 
  OOPSLA 2000 
  Sign in 
  Sign up 

  SPLASH 2024  ( series  ) /  Onward! Papers SPLASH 2024   
   
 About 
  Program 
  Accepted Papers 
  - 
  Call for Papers 
  Check out this year’s essays  and papers  .   
 Onward! is a premier multidisciplinary conference focused on everything to do with programming and software: including processes, methods, languages, communities and applications. Onward! is more radical, more visionary and more open than other conferences to ideas that are well-argued but not yet proven. We welcome different ways of thinking about, approaching and reporting on programming language and software engineering research.  
 The Character of Onward! Papers   
 Onward! Papers is looking for grand visions and new paradigms that could make a big difference in how we will one day build software. But it is not looking for research-as-usual papers—conferences like OOPSLA are the place for that. Those conferences require rigorous validation such as theorems or empirical experiments, which are necessary for scientific progress, but which typically preclude discussion of early-stage ideas. Onward! papers must also supply some degree of validation because mere speculation is not a good basis for progress. However, Onward! accepts less rigorous methods of validation such as compelling arguments, exploratory implementations, and substantial examples. The use of worked-out examples to support new ideas is strongly encouraged.  
   
 Dates    

 Plenary    

   Program Display Configuration  
   
   Time Zone   
   
 The program is currently displayed in (GMT-07:00) Pacific Time (US & Canada)  .   Use conference time zone: (GMT-07:00) Pacific Time (US & Canada)    Select other time zone   (GMT-12:00) AoE (Anywhere On Earth)  (GMT-11:00) Midway Island, Samoa  (GMT-09:00) Hawaii-Aleutian  (GMT-10:00) Hawaii  (GMT-09:30) Marquesas Islands  (GMT-09:00) Gambier Islands  (GMT-08:00) Alaska  (GMT-07:00) Tijuana, Baja California  (GMT-08:00) Pitcairn Islands  (GMT-07:00) Pacific Time (US & Canada)  (GMT-06:00) Mountain Time (US & Canada)  (GMT-06:00) Chihuahua, La Paz, Mazatlan  (GMT-07:00) Arizona  (GMT-06:00) Saskatchewan, Central America  (GMT-05:00) Guadalajara, Mexico City, Monterrey  (GMT-05:00) Easter Island  (GMT-05:00) Central Time (US & Canada)  (GMT-04:00) Eastern Time (US & Canada)  (GMT-04:00) Cuba  (GMT-05:00) Bogota, Lima, Quito, Rio Branco  (GMT-04:00) Caracas  (GMT-03:00) Santiago  (GMT-04:00) La Paz  (GMT-03:00) Faukland Islands  (GMT-04:00) Manaus, Amazonas, Brazil  (GMT-03:00) Atlantic Time (Goose Bay)  (GMT-03:00) Atlantic Time (Canada)  (GMT-02:30) Newfoundland  (GMT-03:00) UTC-3  (GMT-03:00) Montevideo  (GMT-02:00) Miquelon, St. Pierre  (GMT-02:00) Greenland  (GMT-03:00) Buenos Aires  (GMT-03:00) Brasilia, Distrito Federal, Brazil  (GMT-02:00) Mid-Atlantic  (GMT-01:00) Cape Verde Is.  (GMT) Azores  (UTC) Coordinated Universal Time  (GMT+01:00) Belfast  (GMT+01:00) Dublin  (GMT+01:00) Lisbon  (GMT+01:00) London  (GMT) Monrovia, Reykjavik  (GMT+02:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna  (GMT+02:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague  (GMT+02:00) Brussels, Copenhagen, Madrid, Paris  (GMT+01:00) West Central Africa  (GMT+02:00) Windhoek  (GMT+03:00) Athens  (GMT+03:00) Beirut  (GMT+02:00) Cairo  (GMT+03:00) Gaza  (GMT+02:00) Harare, Pretoria  (GMT+03:00) Jerusalem  (GMT+03:00) Minsk  (GMT+03:00) Syria  (GMT+03:00) Moscow, St. Petersburg, Volgograd  (GMT+03:00) Nairobi  (GMT+03:30) Tehran  (GMT+04:00) Abu Dhabi, Muscat  (GMT+04:00) Yerevan  (GMT+04:30) Kabul  (GMT+05:00) Ekaterinburg  (GMT+05:00) Tashkent  (GMT+05:30) Chennai, Kolkata, Mumbai, New Delhi  (GMT+05:45) Kathmandu  (GMT+06:00) Astana, Dhaka  (GMT+07:00) Novosibirsk  (GMT+06:30) Yangon (Rangoon)  (GMT+07:00) Bangkok, Hanoi, Jakarta  (GMT+07:00) Krasnoyarsk  (GMT+08:00) Beijing, Chongqing, Hong Kong, Urumqi  (GMT+08:00) Irkutsk, Ulaan Bataar  (GMT+08:00) Perth  (GMT+08:45) Eucla  (GMT+09:00) Osaka, Sapporo, Tokyo  (GMT+09:00) Seoul  (GMT+09:00) Yakutsk  (GMT+10:30) Adelaide  (GMT+09:30) Darwin  (GMT+10:00) Brisbane  (GMT+11:00) Hobart  (GMT+10:00) Vladivostok  (GMT+11:00) Lord Howe Island  (GMT+11:00) Solomon Is., New Caledonia  (GMT+11:00) Magadan  (GMT+12:00) Norfolk Island  (GMT+12:00) Anadyr, Kamchatka  (GMT+13:00) Auckland, Wellington  (GMT+12:00) Fiji, Kamchatka, Marshall Is.  (GMT+13:45) Chatham Islands  (GMT+13:00) Nuku'alofa  (GMT+14:00) Kiritimati     

   The GMT offsets shown reflect the offsets at the moment of the conference  .     
   
 Time Band   
   
 By setting a time band, the program will dim events that are outside this time window. This is useful for (virtual) conferences with a continuous program (with repeated sessions).  
  The time band will also limit the events that are included in the personal iCalendar subscription service.   Display full program    Specify a time band   -      

  Save    

  Close    

 ×    You're viewing the program in a time zone which is different from your device's time zone change time zone     

 Wed 23 Oct   
  
 Displayed time zone: Pacific Time (US & Canada)  change      

 10:10 - 10:40 | Coffee Break Catering   at Foyer 
 10:10   
 30m    
 Coffee break | Break   Catering 

 10:40 - 12:20 | Onward! Papers Onward! Papers   at Pacific 
 10:40   
 15m    
 Talk | Onward! introduction   Onward! Papers   
 C:  Jonathan Edwards  Independent  , C:  Marcel Taeumel  University of Potsdam; Hasso Plattner Institute    
  File Attached 
 10:55   
 25m    
 Talk | Moldable Exceptions   Onward! Papers   
 Andrei Chiş  feenk.com  , Tudor Gîrba  feenk.com  , Oscar Nierstrasz  feenk.com    
  DOI   Pre-print 
 11:25   
 25m    
 Talk | Reclaiming the Unexplored in Hybrid Visual Programming   Onward! Papers   
 Michael Homer  Victoria University of Wellington    
  DOI 
 11:55   
 25m    
 Talk | Beyond Procedure Calls as Component Glue: Connectors Deserve Metaclass Status   Onward! Papers   
 Marcel Weiher  Hasso Plattner Institute, University of Potsdam, Germany  , Marcel Taeumel  University of Potsdam; Hasso Plattner Institute  , Robert Hirschfeld  Hasso Plattner Institute; University of Potsdam    
  DOI   Pre-print 

 12:20 - 13:40 | Lunch Catering   at California 
 12:20   
 80m    
 Lunch | Lunch   Catering 

 15:20 - 16:00 | Coffee Break Catering   at Foyer 
 15:20   
 40m    
 Coffee break | Break   Catering 

 16:00 - 17:00 | Onward! Papers Onward! Papers   at Pacific   
  Chair(s): Stephen Kell  King's College London   Please stay seated – an Onward! essay session will follow immediately: https://2024.splashcon.org/track/splash-2024-Onward-Essays 
 16:00   
 25m    
 Talk | A Programing Language for Data and Configuration!   Onward! Papers   
 Mark Marron  University of Kentucky    
  DOI 
 16:30   
 25m    
 Talk | The Meerkat Vision: Language Support for Live, Scalable, Reactive Web Apps   Onward! Papers   
 João Costa Seco  NOVA-LINCS; Nova University of Lisbon  , Jonathan Aldrich  Carnegie Mellon University    
  DOI 

 17:40 - 19:40 | Reception and Poster session Catering   at California 
 17:40   
 2h    
 Dinner | Reception   Catering 

 Thu 24 Oct   
  
 Displayed time zone: Pacific Time (US & Canada)  change      

 15:20 - 16:00 | Coffee Break Catering   at Foyer 
 15:20   
 40m    
 Coffee break | Break   Catering 

 16:00 - 17:40 | Onward! Papers Onward! Papers   at Pacific   
  Chair(s): Oscar Nierstrasz  feenk.com 
 16:00   
 25m    
 Talk | Abstract Debuggers: Exploring Program Behaviors Using Static Analysis Results   Onward! Papers   
 Karoliine Holter  University of Tartu, Estonia  , Juhan Oskar Hennoste  University of Tartu  , Patrick Lam  University of Waterloo  , Simmo Saan  University of Tartu, Estonia  , Vesal Vojdani  University of Tartu    
  DOI 
 16:30   
 25m    
 Talk | Scimitar: Functional Programs as Optimization Problems   Onward! Papers   
 Nate Bragg  Tufts University  , Jeffrey S. Foster  Tufts University  , Philip Zucker  Draper    
  DOI 
 17:00   
 25m    
 Talk | Software Engineering Methods For AI-Driven Deductive Legal Reasoning   Onward! Papers   
 Rohan Padhye  Carnegie Mellon University    
  DOI   Pre-print 

 Fri 25 Oct   
  
 Displayed time zone: Pacific Time (US & Canada)  change      

 12:20 - 13:50 | Lunch and Awards Catering   at California 
 12:20   
 90m    
 Lunch | Awards Lunch   Catering 

 13:50 - 15:30 | Onward! Papers Onward! Papers   at Pacific 
 13:50   
 25m    
 Talk | Talking to Objects in Natural Language: Toward Semantic Tools for Exploratory Programming Remote      Onward! Papers   
 Christoph Thiede  Hasso Plattner Institute, University of Potsdam, Germany  , Marcel Taeumel  University of Potsdam; Hasso Plattner Institute  , Lukas Böhme  Hasso Plattner Institute, University of Potsdam, Potsdam, Germany  , Robert Hirschfeld  Hasso Plattner Institute; University of Potsdam    
  DOI   Media Attached   File Attached 
 14:25   
 25m    
 Talk | Active DSU: Dynamic Software Updates for Active Functions   Onward! Papers   
 Filip Strömbäck  Linköping University  , Daniel Varro  Linköping University / McGill University    
  DOI 
 15:00   
 25m    
 Talk | Source-level debugging of compiler-optimised code: ill-posed, but not impossible   Onward! Papers   
 Stephen Kell  King's College London  , J. Ryan Stinnett  King's College London    
  DOI 

 15:30 - 16:00 | Coffee Break Catering   at Foyer 
 15:30   
 30m    
 Coffee break | Break   Catering 

 Accepted Papers  
  
 Title 
 Abstract Debuggers: Exploring Program Behaviors Using Static Analysis Results  Onward! Papers   
 Karoliine Holter  , Juhan Oskar Hennoste  , Patrick Lam  , Simmo Saan  , Vesal Vojdani    
  DOI 
 Active DSU: Dynamic Software Updates for Active Functions  Onward! Papers   
 Filip Strömbäck  , Daniel Varro    
  DOI 
 A Programing Language for Data and Configuration!  Onward! Papers   
 Mark Marron    
  DOI 
 Beyond Procedure Calls as Component Glue: Connectors Deserve Metaclass Status  Onward! Papers   
 Marcel Weiher  , Marcel Taeumel  , Robert Hirschfeld    
  DOI   Pre-print 
 Moldable Exceptions  Onward! Papers   
 Andrei Chiş  , Tudor Gîrba  , Oscar Nierstrasz    
  DOI   Pre-print 
 Reclaiming the Unexplored in Hybrid Visual Programming  Onward! Papers   
 Michael Homer    
  DOI 
 Scimitar: Functional Programs as Optimization Problems  Onward! Papers   
 Nate Bragg  , Jeffrey S. Foster  , Philip Zucker    
  DOI 
 Software Engineering Methods For AI-Driven Deductive Legal Reasoning  Onward! Papers   
 Rohan Padhye    
  DOI   Pre-print 
 Source-level debugging of compiler-optimised code: ill-posed, but not impossible  Onward! Papers   
 Stephen Kell  , J. Ryan Stinnett    
  DOI 
 Talking to Objects in Natural Language: Toward Semantic Tools for Exploratory Programming Remote     Onward! Papers   
 Christoph Thiede  , Marcel Taeumel  , Lukas Böhme  , Robert Hirschfeld    
  DOI   Media Attached   File Attached 
 The Meerkat Vision: Language Support for Live, Scalable, Reactive Web Apps  Onward! Papers   
 João Costa Seco  , Jonathan Aldrich    
  DOI 

 Call for Papers  
  
 Onward! is a premier multidisciplinary conference focused on everything to do with programming and software: including processes, methods, languages, communities and applications. Onward! is more radical, more visionary and more open than other conferences to ideas that are well-argued but not yet proven. We welcome different ways of thinking about, approaching and reporting on programming language and software engineering research.  
 The Character of Onward! Papers   
 Onward! Papers is looking for grand visions and new paradigms that could make a big difference in how we will one day build software. But it is not looking for research-as-usual papers—conferences like OOPSLA are the place for that. Those conferences require rigorous validation such as theorems or empirical experiments, which are necessary for scientific progress, but which typically preclude discussion of early-stage ideas. Onward! papers must also supply some degree of validation because mere speculation is not a good basis for progress. However, Onward! accepts less rigorous methods of validation such as compelling arguments, exploratory implementations, and substantial examples. The use of worked-out examples to support new ideas is strongly encouraged.  
 Selection Process   
 Onward! papers are peer-reviewed in a double blind manner. Accepted papers will appear in the Onward! Proceedings in the ACM Digital Library. Submissions will be judged on the potential impact of the ideas and the quality of the presentation.  
 Onward! Papers follows a two-phase review process. This enables us to welcome papers that contain promising ideas and have the potential to meet the conference’s standards, but which may fall short of this in the initial submission. At the end of the first phase, all papers will be either: accepted normally; or asked to perform certain required revisions; or rejected outright. The authors of papers asked to perform revisions will get one month to complete the revisions, at which point the original reviewers decide on the final acceptance of the paper. All papers will thus remain under submission until the authors receive notification of acceptance or rejection.  
 We expect the typical strong submission to be accepted normally, with authors expected—as is conventional—to revise the paper using the program committee’s feedback.  
 The program committee may identify certain papers with promising ideas as needing important revisions. These papers will be handled in one of two ways. They may be assigned a shepherd, in the tradition followed by numerous conferences. Otherwise, they will be given a concrete set of goals to accomplish in the revision. In the latter case, the second submission must then be accompanied by a cover letter mapping the revision requests to specific parts of the paper; the program committee will use the cover letter and revised submission to arrive at a final decision.  
 The second phase will only be used to elevate promising papers to the conference’s standard, not to require additional work of papers already deemed up-to-standard.  
 Instructions for Authors   
 For fairness reasons, all submitted papers should conform to the formatting instructions (see below). Submissions that violate these instructions may be rejected without review, at the discretion of the Program Chair.  
 Authors of accepted papers are strongly encouraged to present their work in person at the conference but that is not required. There will be a remote participation option, the details of which are to be decided.  
 Submission Site   
 https://onward2024papers.hotcrp.com/   
 Concurrent Submissions   
 Papers must describe unpublished work that is not currently submitted for publication elsewhere as described by SIGPLAN’s Republication Policy. Submitters should also be aware of ACM’s Policy and Procedures on Plagiarism.  
 Policy on Double Blind Review   
 Onward! 2023 is using a double-blind submission process. This means that authors will not know who reviewed their papers, and reviewers will not know who authored the papers they review. The aim of double-blind is to treat all papers with minimal bias. Authors must take the following actions to prepare their papers for double-blind reviewing:  
 Remove identifying information (names, institutions, etc) from the author block of the first page of the paper. 
  To the extent possible, when authors cite their own work, they should refer to it in the third person. 
  To the extent possible, authors should remove any other potentially identifying information, such as acknowledgements. 
  After submitting their review, reviewers will be able to see author identities. When the paper is accepted for publication, the camera-ready copy must not be blinded.  
 See OOPSLA’s FAQ on double-blind reviewing for more information. Please contact the PC chair if you have any questions.  
 Policy on Authorship Changes   
 Any addition of authors after initial submission of a paper must be cleared with the PC chair. Authors are very strongly advised to list all authors prior to initial submission as the addition of authors may create new conflicts with the PC. In all cases, the PC chair must be provided with a rationale. The PC chair has the authority to reject any requested change.  
 Format   
 Submissions should use ACM SIGPLAN Conference acmart Format, sigplan sub-format  and 10 point font. All submissions should be in PDF format.  
 If you are formatting your paper using LaTeX, you will need to use the sigplan, anonymous and review options. Note that by default the SIGPLAN template produces two-column, 9 point papers, but you will need to you will need to set the 10pt option in the \documentclass command. If you are formatting your paper using Word, you may wish to use the provided Word template that supports this font size. Please include page numbers in your submission. Setting the review option in the LaTeX \documentclass command generates page numbers, and the anonymous option hides author names. Please also ensure that your submission is legible when printed on a black and white printer. In particular, please check that colors remain distinct and font sizes are legible.  
 Page Limit   
 To ensure that papers stay focused on their core contributions, the main part of the paper (excluding bibliographic references) should be no longer than 13 pages. There is no page limit for bibliographic references and appendices, and, therefore, for the overall submission. However, reviewers are not obligated to read the appendices, so the main part of the paper should be self contained. If the paper is accepted, the final submission will be limited to 17 pages. (The 13-page limit for the main body of the paper no longer applies.)  
 Publication (Digital Library Early Access Warning)   
 AUTHORS TAKE NOTE: The official publication date is the date the proceedings are made available in the ACM Digital Library. This date may be up to two weeks prior to the first day of the conference. The official publication date affects the deadline for any patent filings related to published work.  
 More Information   
 For additional information, clarification, or answers to questions please contact the Program Chair via onward@splashcon.org   

 Questions? Use the SPLASH Onward! Papers contact form  .    
    
 Important Dates   AoE (UTC-12h)     

 Sun 1 Sep 2024  
  Camera-ready submission 
 Thu 8 Aug 2024  
  Final notification 
 Thu 18 Jul 2024  
  Revised submission 
 Thu 6 Jun 2024  
  First notification 
 Thu 25 Apr 2024  
  Paper submission 

 Submission Link   
   
   https://onward24papers.hotcrp.com/     
   
 Program Committee    
   
 Elisa Baniassad    
 University of British Columbia   
 Canada 
  Alan Blackwell    
 University of Cambridge   
 United Kingdom 
  Andrew Blinn    
 University of Michigan   
 United States 
  William E. Byrd    
 University of Alabama at Birmingham, USA   
 United States 
  Mary Rose Cook    
   
 United States 
  Will Crichton    
 Brown University   
 United States 
  Patrick Dubroy    
 WebAssembly from the Ground Up   
 Germany 
  Jonathan Edwards PC Chair    
 Independent   
 United States 
  Elena Glassman    
 Harvard University   
 United States 
  Brian Hempel    
 UCSD 
  Robert Hirschfeld    
 Hasso Plattner Institute; University of Potsdam   
 Germany 
  Michael Homer    
 Victoria University of Wellington   
 New Zealand 
  Joshua Horowitz    
 University of Washington   
 United States 
  Roberto Ierusalimschy    
 PUC-Rio   
 Brazil 
  Jun Kato    
 National Institute of Advanced Industrial Science and Technology (AIST)   
 Japan 
  Geoffrey Litt    
 Ink & Switch 
  Justin Lubin    
 University of California at Berkeley   
 United States 
  Hidehiko Masuhara    
 Institute of Science Tokyo   
 Japan 
  Guillaume Munch-Maccagnoni    
 INRIA   
 France 
  Oscar Nierstrasz    
 feenk.com   
 Switzerland 
  Clemens Nylandsted Klokmose    
 Aarhus University   
 Denmark 
  Cyrus Omar    
 University of Michigan   
 United States 
  Tomas Petricek    
 Charles University   
 Czechia 
  Patrick Rein    
 University of Potsdam; Hasso Plattner Institute   
 Germany 
  Dave Thomas    
 Bedarra Corp   
 Canada 
  Alessandro Warth    
 Ink & Switch   
 United States 
    
 Steering Committee    
   
 Stephen Kell    
 King's College London   
 United Kingdom 
  Jonathan Edwards    
 Independent   
 United States 
  Robert Hirschfeld    
 Hasso Plattner Institute; University of Potsdam   
 Germany 
  Hidehiko Masuhara    
 Institute of Science Tokyo   
 Japan 
  Wolfgang De Meuter    
 Vrije Universiteit Brussel   
 Belgium 
  Anders Møller    
 Aarhus University   
 Denmark 
  Tomas Petricek    
 Charles University   
 Czechia 
  Alex Potanin    
 Australian National University   
 Australia 
  Hridesh Rajan    
 Iowa State University   
 United States 
  Christophe Scholliers    
 Universiteit Gent, Belgium 
  Jeremy Singer    
 University of Glasgow   
 United Kingdom 
  Tijs van der Storm    
 CWI & University of Groningen   
 Netherlands 
  Marcel Taeumel    
 University of Potsdam; Hasso Plattner Institute   
 Germany 

 x  Thu 5 Dec 12:36    

  SPLASH 2024   
  contact form    
  using conf.researchr.org  ( v1.67.1  )  
   Support page    
     
 Tracks  
 DEI Activities   
  Doctoral Symposium   
  Keynotes   
  OOPSLA 2024   
  OOPSLA Artifacts   
  Onward! Essays   
  Onward! Papers   
  PLMW   
  Posters   
  REBASE   
  SPLASH-E   
  Student Research Competition   
  Volunteers   
  Workshops    
 Co-hosted Conferences  
 GPCE 2024   
  SLE 2024   
  Workshops  
 HATRA   
  IWACO 2024   
  JENSFEST 2024   
  LIVE 2024   
  NSAD 2024   
  PAINT 2024   
  ProLaLa 2024   
  UNSOUND 2024   
  VIVEKFEST   
  VMIL 2024   
  Co-hosted Symposia  
 SAS 2024    

 Attending  
 Venue: Hilton Pasadena   
  Students   
  Registration   
  Visa Support Letters   
  Sponsoring   
  Code of conduct   
  Instructions for Presenters   
  Chair's Welcome   
  How to SPLASH (Quick Attendee Guide)   
  Mt. Baldy Bicycle Trip   
  Attractions Around Pasadena   
  Live Stream    
 Sign Up    

  Important dates data: 
undefined

10. Conference SASHIMI_2:
JavaScript is not available.  
 We’ve detected that JavaScript is disabled in this browser. Please enable JavaScript or switch to a supported browser to continue using x.com. You can see a list of supported browsers in our Help Center.  
 Help Center   
 Terms of Service  Privacy Policy  Cookie Policy  Imprint  Ads info  © 2024 X Corp.  

 Something went wrong, but don’t fret — let’s give it another shot.    
  
   Try again    
   Some privacy related extensions may cause issues on x.com. Please disable them and try again.    

                  
Call for papers data: 
undefinedImportant dates data: 
undefined

11. Conference SAT_3:
SAT 2024  Dates and Calls   
  Dates  CFP  CFW    
   
 For Attendees   
  Keynote Speakers  Competitions  Venue  Accommodation & Transport  Visa Information  Student Grants  Registration    
   
 Resources   
  Organizers  Sponsorship  PhD Award    
   
 Organizers  Sponsorship  PhD Award  Awards  Workshops & School  Program Schedule  Highlights    

 Credit  Important Dates   
   
 ----- AoE: Anywhere on Earth time, UTC -12 hours -----   
   
 For Authors:  
 Abstract Submission: March 08, 2024 AoE | CLOSED 
  Paper Submission: | March 15, 2024 AoE | March 17, 2024 AoE | CLOSED 
  Author response: May 09-13, 2024 AoE 
  Notification of decisions: May 22, 2024 AoE 
  Camera-ready submission: June 22, 2024 AoE 
  Conference:  
 Indian SAT+SMT School & Workshops: August 18-20, 2024 
  SAT Conference: August 21-24, 2024 
  Excursion / cultural event (to be announced) 

 SAT 2024 - August 21 - 24, 2024, Pune, India   
   
  
Call for papers data: 
SAT 2024  Dates and Calls   
  Dates  CFP  CFW    
   
 For Attendees   
  Keynote Speakers  Competitions  Venue  Accommodation & Transport  Visa Information  Student Grants  Registration    
   
 Resources   
  Organizers  Sponsorship  PhD Award    
   
 Organizers  Sponsorship  PhD Award  Awards  Workshops & School  Program Schedule  Highlights    

 Credit  Call for Papers   
   
 Scope  
 SAT 2024 is the 27th edition of the International Conference on Theory and Applications of Satisfiability Testing (SAT). The scope of SAT 2024 includes all aspects of the theory and applications of propositional satisfiability, broadly construed. This also includes Boolean optimization, such as MaxSAT and Pseudo-Boolean (PB) constraints, Quantified Boolean Formulas (QBF), Satisfiability Modulo Theories (SMT), Model Counting, and Constraint Programming (CP) for problems with clear connections to Boolean-level reasoning.  
   
  Topics of interest include (but are not limited to):  
   
  Theoretical advances (including algorithms, proof complexity, parameterized complexity, and other complexity issues) 
  Practical search algorithms 
  Knowledge compilation 
  Implementation-level details of SAT- and SMT-solving tools and SAT/SMT-based systems 
  Problem encodings and reformulations 
  Applications (including both novel applications domains and improvements to existing approaches) 
  Case studies and reports on insightful findings based on rigorous experimentation 
    
 Out of Scope  
 Papers claiming to resolve a major long-standing open theoretical question in Mathematics or Computer Science (such as those for which a Millennium Prize is offered), are outside the scope of the conference because there is insufficient time in the schedule to referee such papers; instead, such papers should be submitted to an appropriate technical journal.   
 Paper Categories  
 Submissions to SAT 2024 are invited in the following three categories: Long papers (9 to 15 pages, excluding references and appendices) 
  Short papers (up to 8 pages, excluding references and appendices) 
  Tool papers (up to 8 pages, excluding references and appendices) 
  Long and short papers should contain original research, with sufficient detail to assess the merits and relevance of the contribution. For papers reporting experimental results, authors are strongly encouraged to make their data and implementation available with the submission. Submissions on applications and case studies are encouraged. Such papers should describe details, weaknesses and strengths of the proposed approaches in sufficient depth, but they are not expected to introduce novel solving methods.  
   
  Long and short papers will be evaluated with the same quality standards, and are expected to contain a similar contribution per page ratio.The authors should choose between a long or a short paper depending on the space they need to fully describe their contribution. The classification between long and short papers impacts the duration of the presentation of the work during the conference. It is the responsibility of the authors to make sure that their paper is self-contained in the chosen limit of pages. There will be no re-classification of the submissions by the PC.  
   
  Tool papers are expected to report on the design and implementation of a tool and its novel features. Here “tool” is interpreted in a broad sense, including descriptions of solvers, preprocessors, etc., as well as systems that exploit SAT solvers or their extensions for use in a relevant problem domain. A demonstration is expected to accompany a tool presentation. Papers describing tools that have already been presented previously are expected to contain significant and clear enhancements to the tool.   
 Submission  
 Submissions should not be under review elsewhere nor be submitted elsewhere while under review for SAT 2024, and should not consist of previously published material. Submissions not consistent with these guidelines may be returned without review.  
   
  Papers must be formatted in the LIPIcs LaTeX style available here  . Submissions must be made electronically in PDF format. The reviewing process for SAT 2024 is single-blind. Submit Now!    
 Authors may submit a supplement containing detailed proofs, examples, software, detailed experimental data, or other material related to the submission, to be consulted at the discretion of the reviewers. Supplements will be treated with the same degree of confidentiality as the paper itself. The supplement must consist of a single file in one of the following formats: zipped tarball (.tar.gz or .tgz), gzipped file (.gz), or zip archive (.zip).  
   
  One author of each accepted paper is expected to present it at the conference.   
 Important dates  
 Abstract submission: March 8, 2024 AoE | CLOSED 
  Full paper submission: | March 15, 2024 AoE | March 17, 2024 AoE | CLOSED 
  Author response: May 9-13, 2024 AoE 
  Notification of decisions: May 22, 2024 AoE 
  Camera-ready version submission: June 22, 2024 AoE 
  Workshops & Indian SAT+SMT School: August 18-20, 2024 
  SAT conference: August 21-24, 2024 
    
 Best Paper Awards  
 Long and short papers may be considered for a Best Paper Award. If the main author is a student, both in terms of work and writing, the paper may be considered for a Best Student Paper Award.   
 Proceedings  
 Accepted papers will be published as proceedings of the conference in the Leibniz International Proceedings in Informatics (LIPIcs)  as a free, open, electronic archive with access to all. Authors will retain full rights over their work. The accepted papers will be published under a CC-BY license  .   
 Invitation of top papers to AIJ and JAIR  
 Top papers from SAT 2024 will be invited to the award-winning paper tracks in Artificial Intelligence Journal (AIJ) or Journal of Artifical Intelligence Research (JAIR). Here, "top papers" means papers that were publicly acknowledged as such, e.g., announced as best papers or runner-ups etc. The authors of these invited papers will have the option to choose between AIJ and JAIR and will get a chance to expand their conference submission by including additional details. Papers submitted to these tracks will receive expedited review, and accepted papers will receive special recognition on the web page of the selected journal. Apart from appearing in a regular volume of AIJ/JAIR with this special designation, all papers in the track will be indexed in a separate virtual volume.   
   
 SAT 2024 - August 21 - 24, 2024, Pune, India   
   
  Important dates data: 
SAT 2024  Dates and Calls   
  Dates  CFP  CFW    
   
 For Attendees   
  Keynote Speakers  Competitions  Venue  Accommodation & Transport  Visa Information  Student Grants  Registration    
   
 Resources   
  Organizers  Sponsorship  PhD Award    
   
 Organizers  Sponsorship  PhD Award  Awards  Workshops & School  Program Schedule  Highlights    

 Credit  Important Dates   
   
 ----- AoE: Anywhere on Earth time, UTC -12 hours -----   
   
 For Authors:  
 Abstract Submission: March 08, 2024 AoE | CLOSED 
  Paper Submission: | March 15, 2024 AoE | March 17, 2024 AoE | CLOSED 
  Author response: May 09-13, 2024 AoE 
  Notification of decisions: May 22, 2024 AoE 
  Camera-ready submission: June 22, 2024 AoE 
  Conference:  
 Indian SAT+SMT School & Workshops: August 18-20, 2024 
  SAT Conference: August 21-24, 2024 
  Excursion / cultural event (to be announced) 

 SAT 2024 - August 21 - 24, 2024, Pune, India

12. Conference SASHIMI_3:
true  https://prod.accdab.net/cdn/cs/ebiaklm7tP0ykOyjm7KGfgNcPyo.js  500      ×  Uh-oh, it looks like your Internet Explorer is out of date.   
   
  For a better shopping experience, please upgrade now.   

 !  
 Javascript is not enabled in your browser. Enabling JavaScript in your browser will allow you to experience all the features of our site.  
   
  Learn how to enable JavaScript on your browser   

 Premium Members Save 10% Join Now    

 Simulation and Synthesis in Medical Imaging: 9th International Workshop, SASHIMI 2024, Held in Conjunction with MICCAI 2024, Marrakesh, Morocco, October 10, 2024, Proceedings  This book constitutes the refereed proceedings of the 9th International Workshop on Simulation and Synthesis in Medical Imaging, SASHIMI 2024, held in conjunction with the 27th International conference on Medical Image Computing and Computer Assisted Intervention, MICCAI 2024, in Marrakesh, Morocco in October 2024.  
 The 19 papers included in this book were carefully reviewed and selected from 32 submissions. They focus on recent developments in methods for image-to-image translation, image synthesis, biophysical modelling, super-resolution and image segmentation and classification.  
   
  1146221577   Simulation and Synthesis in Medical Imaging: 9th International Workshop, SASHIMI 2024, Held in Conjunction with MICCAI 2024, Marrakesh, Morocco, October 10, 2024, Proceedings  This book constitutes the refereed proceedings of the 9th International Workshop on Simulation and Synthesis in Medical Imaging, SASHIMI 2024, held in conjunction with the 27th International conference on Medical Image Computing and Computer Assisted Intervention, MICCAI 2024, in Marrakesh, Morocco in October 2024.  
 The 19 papers included in this book were carefully reviewed and selected from 32 submissions. They focus on recent developments in methods for image-to-image translation, image synthesis, biophysical modelling, super-resolution and image segmentation and classification.  
   
    64.99   In Stock   

   5  1    
       
  Home | 1 
  Books | 2 

    Simulation and Synthesis in Medical Imaging: 9th International Workshop, SASHIMI 2024, Held in Conjunction with MICCAI 2024, Marrakesh, Morocco, October 10, 2024, Proceedings  
 210   by Virginia Fernandez (Editor)  , Jelmer M. Wolterink (Editor)  , David Wiesner (Editor)  , Samuel Remedios (Editor)  , Lianrui Zuo (Editor)    Virginia Fernandez     
 View More    

    Read an excerpt of this book!             

  Add to Wishlist     

    Simulation and Synthesis in Medical Imaging: 9th International Workshop, SASHIMI 2024, Held in Conjunction with MICCAI 2024, Marrakesh, Morocco, October 10, 2024, Proceedings  
 210   by Virginia Fernandez (Editor)  , Jelmer M. Wolterink (Editor)  , David Wiesner (Editor)  , Samuel Remedios (Editor)  , Lianrui Zuo (Editor)    Virginia Fernandez     
 View More    

 Paperback (2025)   
  
 Paperback-$64.99  eBook-$64.99  View All Available Formats & Editions     
 $64.99    
   
 View All Available Formats & Editions    
   
 Paperback  
 $64.99      
 eBook  
 $64.99      

 Paperback (2025) 
  $64.99 
    
 View All Available Formats & Editions    

   Learn more    

 SHIP THIS ITEM  Ships in 1-2 days | Instant Purchase 
  PICK UP IN STORE  Your local store may have stock of this item. | Available within 2 business hours 
  Want it Today?  
  Check Store Availability 
    
 Related collections and offers  

  English  3031732804    64.99   In Stock   
   
    Overview  
 This book constitutes the refereed proceedings of the 9th International Workshop on Simulation and Synthesis in Medical Imaging, SASHIMI 2024, held in conjunction with the 27th International conference on Medical Image Computing and Computer Assisted Intervention, MICCAI 2024, in Marrakesh, Morocco in October 2024.  
 The 19 papers included in this book were carefully reviewed and selected from 32 submissions. They focus on recent developments in methods for image-to-image translation, image synthesis, biophysical modelling, super-resolution and image segmentation and classification.  

  Product Details 
  Table of Contents 

 Product Details  
  
 ISBN-13: | 9783031732805 
 Publisher: | Springer Nature Switzerland 
 Publication date: | 10/06/2024 
 Series: | Lecture Notes in Computer Science  , #15187 
 Edition description: | 2025 
 Pages: | 210 
 Product dimensions: | 6.10(w) x 9.25(h) x (d) 

 Table of Contents  
 .- Synthetic Augmentation for Anatomical Landmark Localization using DDPMs.  
  .- AdaptDiff: Cross-Modality Domain Adaptation via Weak Conditional Semantic Diffusion for Retinal Vessel Segmentation.  
  .- Adapted nnU-Net: A Robust Baseline for Cross-Modality Synthesis and Medical Image Inpainting.  
  .- Beyond MR Image Harmonization: Resolution Matters Too.  
  .- Benchmarking Robustness of Endoscopic Depth Estimation with Synthetically Corrupted Data.  
  .- A dual-task mutual learning framework for predicting post-thrombectomy cerebral haemorrhage.  
  .- TSynD: Targeted Synthetic Data Generation for Enhanced Medical Image Classification.  
  .- Beyond Intensity Transforms: Medical Image Synthesis Under Large Deformation.  
  .- Sim2Real in endoscopy segmentation with a novel structure aware image translation.  
  .- Fireflies: Photorealistic Simulation and Optimization of Structured Light Endoscopy.  
  .- Exogenous Agent-Free Synthetic Post-Contrast Imaging with a Cascade of Deep Networks for enhancement Prediction after Tumor Resection. A Parametric-Map Oriented Approach.  
  .- OCT Scans Simulation Framework for Data Augmentation and Controlled Evaluation of Signal Processing Approaches.  
  .- Enhancing Quantitative Image Synthesis through Pretraining and Resolution Scaling for Bone Mineral Density Estimation from a Plain X-ray Image.  
  .- Latent Pollution Model: The Hidden Carbon Footprint in 3D Image Synthesis.  
  .- Synthesizing Scalable CFD-Enhanced Aortic 4D Flow MRI for Assessing Accuracy and Precision of Deep-Learning Image Reconstruction and Segmentation Tasks.  
  .- MedEdit: Counterfactual Diffusion-based Image Editing on Brain MRI.  
  .- Using MR physics for domain generalisation and super-resolution.  
  .- Single-scan mpMRI Calibration of Multi-Species Brain Tumor Dynamics with Mass Effect.  
  .- Annotated Biomedical Video Generation using Denoising Diffusion Probabilistic Models and Flow Fields.  

 Show More    

 From the B&N Reads Blog   
 Page 1  of    

 Customer Reviews  

  
Call for papers data: 
undefinedImportant dates data: 
undefined

13. Conference SBAC-PAD_1:
You need to enable JavaScript to run this app.    
  
Call for papers data: 
undefinedImportant dates data: 
undefined

14. Conference SBAC-PAD_2:
Close    

   Nearby     Filter      Events   
    Companies   
    Experts   
    Hubs   

   Add Event    
   
   Login   

  Add a review    
 13 - 15 Nov 2024    
 SBAC-PAD International Symposium on Computer Architecture and High Performance Computing  
   
  Conference    
   Hilo  , USA     
  1  Follower    

  Select   Select   Save   Share    
 Follow  Attended?    

 About | Exhibitors | Speakers | Reviews | Deals 
  
 Excited about the event? Spread the word and invite your network!   
  Share    

 The International Symposium on Computer Architecture and High Performance Computing SBAC-PAD is an annual conference that showcases advancements in parallel and distributed computing technologies, welcoming faculty, researchers, specialists, and graduate students globally.  
 Listed In  
  IT & Technology   #Computer   #Architecture   #Student   #researcher     

 Excited about the event? Spread the word and invite your network!   
  Share    

 Timings  
 09:00 AM-06:00 PM (expected)  
  Not Verified | Entry Fees  
 Check Official Website 
 Estimated Turnout  
 100 - 500 Delegates   
 Based on previous editions | Event Type  
  Conference 
 Editions  
 Nov 2024  

  Frequency  Not Available | Official Links  
 Website  Contacts         

  Report Error   
  Claim this event 
 Organizer  
  Follow Company   
  Queries about the event?  Ask Organizer     
   
 Brazilian Computer Society   Brazil  18  Total Events 
 19.707000  -155.088000  Venue Map & Directions  
 Booking.com     
 Venue to be announced   
 Hilo  , USA   
 Add Venue 

 Write a Review  
   Add Your Review    

   Edition Nov 2024     
 How did you participate in this event?  
   
  Visitor     
  Exhibitor     
     Speaker     

 Followers [ Users who have shown interest for this Event ]  Join Community   Invite    

 Abdulaziz Aldawish   
  Graduate Student at Boston University  
  Boston, United States    
 Connect    

  Add Profile    

  Invite users with similar interest    
    Walker Sheila   
 Ind.O&M Vision Contractor Spec  
  Hilo, United States    
 Invite    

    Sheila Walker   
 O&M and Vision Contractor  
  Hilo, United States    
 Invite    

    JEANNETTE Kama BENTO   
  Hilo, United States    
 Invite    

    Jason Kadarusman   
  Hilo, United States    
 Invite    

    Jess GAuthier   
 Director  
  Hilo, United States    
 Invite    

    Bob Nims   
 Licensing Specialist  
  Hilo, United States    
 Invite    

    Michael Nelson   
 Owner/Operator  
  Hilo, United States    
 Invite    

    Libby brennan child   
 Salon lead  
  Hilo, United States    
 Invite    

 View More    
  
 19.707000  -155.088000  Venue Map & Directions  
   Venue to be announced   
 Hilo  , USA   
 Add Venue   
   
 More Events Around Hilo  
  
 Jan 17 2025 | Paphiopedilum Guild World Slipper Orchid Conference   
  Hilo, USA 
 Feb 14 2025 | Winter Clinical Dermatology Conference   
  Hilo, USA 
 Mar 13 2025 | ELNEC Summit   
  Hilo, USA 

   Hilo   Hawaii   

 https://10times.com/hub/technology-hub   

 Next step - Complete your profile   To mark your interest in SBAC-PAD International Symposium on Computer Architecture and High Performance Computing    
 Don’t go alone!   
  1 attendees are in—find your event partner!    

 Complete your event journey   

 Network   
     
 Broadcast   
     
 Plan   
     
 Attend   
     
 Feedback   

 Related Events  
  
 Dec 12 2024 | Global Games Show    
  Dubai, UAE 
 Jan 13 2025 | BioLogic Summit    
  San Diego, USA 
 Dec 12 2024 | Global AI Show Dubai    
  Dubai, UAE 
 Feb 15 2025 | AI Revolution in Healthcare Summit Dubai    
  Dubai, UAE 
 Mar 11 2025 | International Precision Med TRI-CON    
  San Diego, USA 

 More Events Around Hilo  
  
 Jan 17 2025 | Paphiopedilum Guild World Slipper Orchid Conference   
  Hilo, USA 
 Feb 14 2025 | Winter Clinical Dermatology Conference   
  Hilo, USA 
 Mar 13 2025 | ELNEC Summit   
  Hilo, USA 

   Hilo   Hawaii   
  
 Featured Hotels in Hilo  
  
 GUEST HOUSE IN HILO   
    from USD 568.96 
 Hale Kawehi   
   from USD 130 
 Lei Hale unit 2   
   from USD 152.15 
 Shaka Shak Studios - Downtown H..   
    from USD 38 
  
 More Hotels    

   All Events 
  Conferences 
  IT & Technology Conferences 
  IT & Technology Conferences in USA 
  IT & Technology Events in Hilo 

                                         Loading...   

  Selected    

  About Us  FOR PARTNERS  Event Data Intelligence  BROWSE    
 Career | Join us  Event Management Software  List Event | Partner Login  All Events  - by Country  | by Industry     
 Media & Press Releases  Event Apps  Event Marketing  Trade Shows  - by Country  | by Industry     
 Help Center | FAQ  Event Website  Testimonials  Conferences  - by Country  | by Industry     
 Feedback  Event Venues  Blog  Companies    
  By continuing past this page, you agree to our Terms of Service  , Cookie Policy, Privacy Policy  and Content Policies. All trademarks are properties of their respective owners   
 © 2014-2024 - Ten Times Online Private Limited. All rights reserved.    

           
Call for papers data: 
undefinedImportant dates data: 
undefined

15. Conference SCA_0:
SCA 2024        
 About  Program  Registration  Author Instructions  Awards  People  Venue    

  THE 23RD ACM SIGGRAPH / Eurographics  
  SYMPOSIUM ON COMPUTER ANIMATION (SCA 2024)  
   
  McGill University, Montreal, Canada  
  August 21 to August 23, 2024  
   
  Graduate Summer School on August 20, 2024  

 Important Dates   
  
 Submission | Deadlines 
 Submission deadline (papers) | April 22  April 29, 2024 (23:59 UTC) 
 Submission deadline (posters) | April 29  June 30, 2024 (23:59 UTC) 
 Notification of acceptance | June 16, 2024 
 Revised version deadline | July 7, 2024 (23:59 UTC) 
 Journal notification | July 18, 2024 
 Camera-ready deadline | July 25, 2024 (23:59 UTC) 
 Graduate Summer School | August 20, 2024 
 Conference | August 21 - 23, 2024 

 News   
 August 26, 2024  : The list of all presentations awarded during the conference is now available. You can see all award winners here  .  
 July 31, 2024  : A tentative schedule has been posted. You can view it here  .  
 July 29, 2024  : You can now register for the event! Please visit the registration page  .  
 July 24, 2024  : Venue information has been updated.  
 July 17, 2024  : Information about our keynote and graduate summer school speakers has been added! You can take a look at the planned talks here  .  
 SCA 2024   
 The 23rd annual Symposium on Computer Animation (SCA) will take place in Montréal, Canada, from August 21 to August 23, 2024.  
 SCA is the premier forum for innovations in the software and technology of computer animation. It unites researchers and practitioners working on all aspects of time-based phenomena. Our focused, intimate gathering, with a single track program and emphasis on community interaction, makes SCA the best venue to exchange research results, get inspired, and set up collaborations.  
 We invite submission of original, high-quality papers and posters on computer animation, broadly defined as computation dealing with time-varying phenomena. Accepted full papers will be published in the journal Computer Graphics Forum  , a leading journal for in-depth technical articles on computer graphics. Posters will be published in the conference proceedings indexed by ACM and Eurographics. Best Paper Awards will be given to excellent submissions that push the leading edge. Please refer to our call-for-paper  page for paper submission information.  
 Recent SCAs can be found here: SCA 2023  , SCA 2022  , SCA 2021  , SCA 2020  , SCA 2019  , SCA 2018  . For older conferences, see here  .  

 Sponsored by  

 Supported By  

  © SCA 2024 ACM SIGGRAPH / Eurographics Symposium on Computer Animation.   

  
Call for papers data: 
undefinedImportant dates data: 
undefined

16. Conference SC_0:
Skip to main content  Dates & Deadlines 
  Volunteer 
  Contact Us 

 Toggle navigation    Toggle navigation   Program | Dropdown menu toggle | Program  Keynote 
  HPC Ignites Plenary 
  Invited Talks 
  Panels 
  Tutorials 
  Workshops 
  Birds of a Feather 
  Papers 
  Reproducibility Initiative 
  AD/AE Process & Badges 
  AD/AE Appendices 
  Early Career 
  Exhibitor Forum 
  Awards 
  Posters 
  ACM SRC 
  Doctoral Showcase 
  Research Posters 
  Job Fair 
  Receptions 
  Proceedings & Archives 
  Exhibits | Dropdown menu toggle | Exhibits  Exhibitor Prospectus 
  Exhibitor Application 
  Exhibitor List & Floorplan 
  Exhibitor Forum 
  Exhibitor Housing 
  Exhibitor Function Space 
  Quantum Locality 
  Recruit at the Job Fair 
  Students | Dropdown menu toggle | Students@SC  Lead Student Volunteers 
  Student Volunteers 
  Student Cluster Competition 
  IndySCC 
  Mentor–Protégé Matching 
  HPC Immersion 
  Alumni Reception 
  Speed Mentoring Event 
  Job Fair 
  SCinet | Dropdown menu toggle | SCinet  SCinet Technology 
  SCinet Teams 
  Participate in SCinet 
  WINS 
  SCinet History 
  Media | Dropdown menu toggle | Media  Media Registration 
  Media Partners 
  Blog 
  Newsletter 
  Photos & Logos 
  Attend | Dropdown menu toggle | Attend  St. Louis 
  Convention Center 
  Housing 
  Registration 
  Visa Applications 
  Family Resources 
  Inclusivity 
  Code of Conduct 
  Volunteer 
  Search    Search      

 The International Conference for High Performance  
  Computing, Networking, Storage, and Analysis  
   
 St. louis, MO • NOV 16–21  

  Watch Preview    

  Book Housing June 3    

  Register July 9    

 SPONSORED BY:  

 Looking for submissions & applications? See the pages in Program.   

 News  
 Students     Lead Student Volunteers — A Pathway to Leadership   
 If you’re a former SC Student Volunteer explore becoming a Lead Student Volunteer. Applications open December 2, 2024.  
  November 11, 2024 
  SCinet     SCinet for the WINS! — Come Build with Us   
 Applications open for the WINS program on December 2, 2024. Qualified female U.S. candidates early to mid-career may apply.  
  November 11, 2024 
    
  All News   

 HPC Ignites.  
   
 St. Louis is the place to be this fall as the high performance computing community convenes for an exhilarating week of sessions, speakers, and networking at its finest. SC is an unparalleled mix of thousands of scientists, engineers, researchers, educators, programmers, and developers who intermingle to learn, share, and grow.  

  Watch the SC25 preview    

 Program  
   
 Each year, SC provides the leading technical program for the HPC community. The Program is designed to share best practices in all areas of high performance computing. Become a contributor and share your excellence. Presenting at SC is extremely rewarding.  
   
  DISCOVER & PARTICIPATE    

 Exhibits  
   
 Here’s your opportunity to meet and interact with industry, research organizations, universities, and startups joining us from across the globe. As an exhibitor, showcase your cutting-edge technologies, products, and services to thousands of attendees.  
   
  RESERVE BOOTH SPACE    

 Students  
   
 The Students@SC program offers a broad range of volunteer experiences, cluster competitions, and networking opportunities. Put your professional development into overdrive and identify the possibilities within the field of high performance computing.  
   
  ENERGIZE YOUR FUTURE    

 SCinet  
   
 Industry, academia, and government experts volunteer to design, build, and administer the cutting-edge SCinet infrastructure, providing internet connectivity for attendees and pushing the boundaries of network innovation through research and demos.  
   
  GET CONNECTED    

  Explore St. Louis   
 Our host city, with its iconic Gateway Arch, honors the spirit of exploration and innovation.  

  CONFERENCE VENUE   
 America’s Center is conveniently located in the heart of downtown St. Louis near hotels and dining.  

 Stay Up to Date  
 Sign up to receive the SC newsletter in your inbox.  
   
 Please enable JavaScript in your browser to complete this form.  First Name *      
 Last Name *      
 Email *      
   
 Email     
    
      Sign Me Up    
    
 Information provided is treated in accordance with ACM  & IEEE  privacy policies.  

 SC25 Planning Committee 
  SC Steering Committee 
  SC Conference Series 
  Dates & Deadlines 
  Proceedings & Archives 
  Photos & Logos 
  Contact Us 
  Volunteer 

  CODE OF CONDUCT   
   
 ACM PRIVACY POLICY   
   
 IEEE PRIVACY POLICY   

 The International Conference for High Performance Computing, Networking, Storage, and Analysis  
   
 SPONSORED BY:  

   Back To Top Button      
Call for papers data: 
Skip to main content  Dates & Deadlines 
  Volunteer 
  Contact Us 

 Toggle navigation    Toggle navigation   Program | Dropdown menu toggle | Program  Keynote 
  HPC Ignites Plenary 
  Invited Talks 
  Panels 
  Tutorials 
  Workshops 
  Birds of a Feather 
  Papers 
  Reproducibility Initiative 
  AD/AE Process & Badges 
  AD/AE Appendices 
  Early Career 
  Exhibitor Forum 
  Awards 
  Posters 
  ACM SRC 
  Doctoral Showcase 
  Research Posters 
  Job Fair 
  Receptions 
  Proceedings & Archives 
  Exhibits | Dropdown menu toggle | Exhibits  Exhibitor Prospectus 
  Exhibitor Application 
  Exhibitor List & Floorplan 
  Exhibitor Forum 
  Exhibitor Housing 
  Exhibitor Function Space 
  Quantum Locality 
  Recruit at the Job Fair 
  Students | Dropdown menu toggle | Students@SC  Lead Student Volunteers 
  Student Volunteers 
  Student Cluster Competition 
  IndySCC 
  Mentor–Protégé Matching 
  HPC Immersion 
  Alumni Reception 
  Speed Mentoring Event 
  Job Fair 
  SCinet | Dropdown menu toggle | SCinet  SCinet Technology 
  SCinet Teams 
  Participate in SCinet 
  WINS 
  SCinet History 
  Media | Dropdown menu toggle | Media  Media Registration 
  Media Partners 
  Blog 
  Newsletter 
  Photos & Logos 
  Attend | Dropdown menu toggle | Attend  St. Louis 
  Convention Center 
  Housing 
  Registration 
  Visa Applications 
  Family Resources 
  Inclusivity 
  Code of Conduct 
  Volunteer 
  Search    Search      

  Home     Program    Papers     
 Papers  
  
   The SC Papers program is the leading venue for presenting high-quality original research, groundbreaking ideas, and compelling insights on current and future trends in high performance computing, networking, storage, and analysis. Attend presentations of peer-reviewed technical papers on a wide range of topics over three inspiring days.  
   
 FOUNDATIONS TO NEW FRONTIERS  
   
 Papers Schedule  
   Tuesday–Thursday, November 18–20, 2025  

 Technical Papers Chair   
  Jeffrey A. F. Hittinger, Lawrence LIvermore National Laboratory, USA  
 Technical Papers Vice Chair   
  Koji Inoue, Kyushu University, Japan  

 Paper Submissions Open March 3, 2025  

 New This Year  
   
 As a paper submitter, please review revised information for AD/AE Process & Badges and the new AD/AE Appendices page.  
 For an accepted paper to be included in the proceedings, the paper has to be presented at the conference in person.  
 If submitting for both a technical paper and the ACM Gordon Bell Award, please note that only one paper can be included in the proceedings unless a substantial difference between the two papers can be demonstrated.  

 Paper Submissions  
 7 APR 2025   
 Abstract Submissions Close  
   
 14 APR 2025   
 Full Paper Submissions Close  
 (No Extensions)   
   
 28 APR 2025   
 AD (Mandatory)/AE (Optional) Due  
   
 3–6 JUN 2025   
 Review/Rebuttal Period  
   
 27 JUN 2025   
 Notifications Sent  
   
 14 JUL 2025   
 Revised AD/AE, Badge Application  
 (Optional)   
   
 25 AUG 2025   
 Final Paper Due  

 How to submit  
   
 What is A Paper?  
   
 The SC Papers program is the leading venue for presenting high-quality original research, groundbreaking ideas, and compelling insights on current and future trends in high performance computing, networking, storage, and analysis. Technical papers are peer-reviewed and an Artifact Description is mandatory for all papers submitted to SC.  
   
 Areas/tracks  
   
 Submissions will be considered on any topic related to high performance computing within the areas below. Authors must indicate a primary area from the choices on the submissions form and are strongly encouraged to indicate a secondary area.  
   
 preparing your submission  
   
 A paper submission has three components: the paper itself, an Artifact Description Appendix (AD), and an Artifact Evaluation Appendix (AE). The Artifact Description Appendix, or explanation of why there is no artifact description, is mandatory. The Artifact Evaluation Appendix is optional.  
   
 Eligibility   
 Papers that have not previously been published in peer-reviewed venues are eligible for submission to SC. For example, papers pre-posted to arXiv, institutional repositories, and personal websites (but no other peer-reviewed venues) remain eligible for SC submission.  
 Papers that were published in a workshop are eligible if they have been substantially enhanced (i.e., 30% new material).  
   
 Paper Format   
 Submissions are limited to 10 2-column pages (U.S. letter – 8.5″x11″), excluding the bibliography, using the ACM proceedings template. Latex users, please use the “sigconf” option (use of the “review” option is recommended but not required). Word authors can use the “Interim Layout”. | See the templates here | . 
  AD and AE appendices do not | count against the 10 pages. 
  Authors of accepted papers may provide supplemental material with their final version of the paper (e.g., additional proofs, videos, or images). 
    
 reproducibility initiative  
   
 Reproducible science is essential, and SC continues to innovate in this area. AD/AE Appendices will be integrated into the review process, with AD/AE Appendices considered at every stage of paper review. While the Artifact Description Appendix, or explanation of why there is no Artifact Description Appendix, is mandatory, the Artifact Evaluation Appendix is optional  .  
 Learn more about the Reproducibility Initiative  .  
   
 paper review process  
   
 Papers are peer-reviewed by a committee of experts. Each paper will have three to four reviews. The peer review process is double-anonymous for the paper and double-open for the Appendices. Appendices reviewers and authors will know each other’s names. Learn more about the SC double-anonymous review policy  .  
 Papers not respecting the submission guidelines will be subject to immediate rejection without review. Examples include papers not respecting the double-blind submission, papers exceeding the page limit, and papers not submitting the AD artifacts.  
 From an author’s perspective, the following are the key steps:  
 Authors submit a title, abstract, and other metadata. 
  Authors submit their full paper. 
  After submission of their paper, authors have two weeks to complete an AD/AE form describing their computational artifacts (or lack of computational artifacts) and, optionally, how they evaluated their computational results. The paper is reviewed, and reviews are distributed to authors. 
  Authors prepare a rebuttal. 
  Reviewers consider the rebuttal. 
  Paper decisions are made in late-June. Some papers may be shepherded for further changes. Authors of accepted papers prepare the final version of their paper. 

 areas/Tracks  
   
 Submissions will be considered on any topic related to high performance computing within the areas below. Authors must indicate a primary area from the choices on the submissions form and are strongly encouraged to indicate a secondary area.  
 Small-scale studies – including single-node studies – are welcome as long as the paper clearly conveys the work’s contribution to high performance computing.  
   
 algorithms  
   
 The development, evaluation, and optimization of scalable, general-purpose, high performance algorithms.  
 Topics include:   
 Algorithms for discrete and combinatorial optimization 
  Algorithms for hybrid and heterogeneous systems with accelerators 
  Algorithms for numerical methods and algebraic systems 
  Data-intensive parallel algorithms 
  Energy- and power-efficient algorithms 
  Fault-tolerant algorithms 
  Graph and network algorithms 
  Load balancing and scheduling algorithms 
  Machine learning algorithms 
  Uncertainty quantification methods 
  Other high performance computing algorithms 

 applications  
   
 The development and enhancement of algorithms, parallel implementations, models, software and problem solving environments for specific applications that require high performance resources.  
 Topics include:   
 Bioinformatics and computational biology 
  Computational earth and atmospheric sciences 
  Computational materials science and engineering 
  Computational astrophysics/astronomy, chemistry, and physics 
  Computational fluid dynamics and mechanics 
  Computation and data enabled social science 
  Computational design optimization for aerospace, energy, manufacturing, and industrial applications 
  Computational medicine and bioengineering 
  Irregular applications including graphs, network science, and text/pattern matching 
  Improved models, algorithms, performance or scalability of specific applications and respective software 
  Use of uncertainty quantification, statistical, and machine-learning techniques to improve a specific HPC application 
  Other high performance applications 

 Architecture & Networks  
   
 All aspects of high performance hardware including the optimization and evaluation of processors and networks.  
 Topics include:   
 Hardware/software co-design for HPC 
  Hardware support for programming languages or software development 
  Architectures for extreme heterogeneity or HPC/Quantum hybrids 
  HPC interconnects: topology, switch architecture, optical networks, software-defined networks 
  Network protocols, quality of service, congestion control, collective communication, offloading 
  I/O architecture/hardware and emerging storage technologies 
  Memory Systems & Architectures: caches, memory technology, non-volatile memory, coherence, translation 
  Multi-processor architecture and micro-architecture (e.g., reconfigurable, vector, stream, dataflow, GPUs, and custom/novel architecture) 
  Design-space exploration / performance projection for future systems 
  Evaluation and measurement on testbed or production hardware systems 
  Power-efficient design and power-management strategies 
  Resilience, error correction,high availability architectures 
  Secure architectures, side-channel attacks and mitigations for HPC 

 Data Analytics, Visualization, & Storage  
   
 All aspects of data analytics, visualization, storage, and storage I/O related to HPC systems, Submissions on work done at scale are highly favored. Further, submissions having a component focusing on the “Art of HPC” are appreciated.  
 Topics include:   
 Data analytics, visualization, and storage for HPC systems 
  Cloud-based analytics and scalable databases 
  Data mining, analysis, and visualization 
  Data reduction/compression for simulation data 
  Data integration workflows and design and performance of data-centric workflows 
  I/O performance tuning and middleware 
  In situ data processing and visualization 
  Next-generation storage systems 
  Parallel storage systems (file, object, key-value, etc.) 
  Provenance, metadata, and data management 
  Reliability and fault tolerance in HPC storage 
  Storage tiering (on-premise and cloud) 
  Storage innovations using machine learning 
  Storage networks and scalable cloud solutions 
  Visual analytics for supercomputing systems, application monitoring, and machine learning model interpretation and tuning at scale 

 HPC for Machine Learning  
   
 The development and enhancement of algorithms, systems, and software for scalable machine learning utilizing high performance computing technology. This area is primarily addressing the use of HPC to improve ML rather than the use of ML to improve any technology covered by other areas. It is particularly designed for papers that have a strong ML component and that need to be evaluated by ML experts. Papers addressing the latter should be submitted to the respective areas.  
 Topics include:   
 HPC for ML 
  Parallel and distributed learning algorithms 
  Hardware-efficient training and inference 
  Model, pipeline, and data parallelism 
  Accelerated computing for ML 
  Large-scale data processing for ML 
  Performance modeling and analysis of ML applications 
  Scalable optimization methods for ML 
  Scalable hyperparameter tuning and optimization 
  Scalable neural architecture search 
  Model deployment and inference at scale 
  Systems, compilers, and languages for ML at scale 

 Performance Measurement, Modeling, & Tools  
   
 Novel methods and tools for measuring, evaluating, and/or analyzing performance for large-scale systems.  
 Topics include:   
 Analysis, modeling, or simulation methods for performance 
  Methodologies, metrics, and formalisms for performance analysis and tools 
  Novel and broadly applicable performance optimization techniques 
  Performance studies of HPC hardware and software subsystems such as processor, network, memory, accelerators, and storage 
  Scalable tools and instrumentation infrastructure for measurement, monitoring, and/or visualization of performance 
  System-design tradeoffs between performance and other metrics (e.g., performance and resilience, performance and security) 
  Workload characterization and benchmarking techniques 

 post-Moore Computing  
   
 Technologies that continue the scaling of supercomputing performance beyond the limits of Moore’s law, including system architecture, programming frameworks, system software, and applications.  
 Topics include:   
 Hardware specialization and taming extreme heterogeneity 
  Beyond von-Neumann computer architectures 
  Special purpose computing (e.g., Anton or GRAPE) 
  Quantum computing, especially focusing on hybrid HPC/QC 
  Neuromorphic and brain-inspired computing 
  Probabilistic, stochastic computing, and approximate computing 
  Novel post-CMOS device technologies and advanced packaging technologies for heterogeneous integration (evaluated in a supercomputing systems or application context) 
  Superconducting electronics for supercomputing 
  Programming models and programming paradigms for post-Moore systems 
  Tools for modeling, simulating, emulating, or benchmarking post-Moore and post-CMOS devices and systems 

 Programming Frameworks  
   
 Compilers, programming languages, libraries, programming models, and runtime systems that enable management of hardware resources and support parallel programming for large-scale systems.  
 Topics include:   
 Compiler analysis, optimization and code generation 
  Program verification, program transformation and synthesis 
  Parallel programming languages, libraries, models, and application frameworks 
  Execution models and runtime systems 
  Communication libraries 
  Programming language and compilation techniques for reducing energy and data movement 
  Solutions for parallel-programming challenges (e.g., interoperability, memory consistency, determinism, reproducibility, race detection) 
  Tools and frameworks for fault tolerance and resilience 
  Tools and frameworks for parallel program development (e.g., debuggers and integrated development environments) 
  Programming models and framework for heterogeneous systems 
  Programming models and runtime for future novel systems 

 State of the practice  
   
 All aspects of the pragmatic practices of HPC, including operational IT infrastructure, services, facilities, large-scale application executions and benchmarks. Papers are expected to capture experiences and ongoing practice relating to modern computing centers or HPC-related software. Papers do not need to cover novel research or developments, but they are expected to offer novel insights and lessons for HPC architects, developers, administrators, or users.  
 Topics include:   
 Bridging of cloud data centers and supercomputing centers 
  Energy efficiency and carbon emission of HPC and data centers 
  Comparative system benchmarking over a wide spectrum of workloads 
  Deployment experiences of large-scale hardware and software infrastructures and facilities 
  Facilitation of “big data” associated with supercomputing 
  Infrastructural policy issues and management experiences, especially international experiences 
  Pragmatic resource management strategies and experiences 
  Monitoring and operational data analytics 
  Procurement, technology investment and acquisition best practices 
  Quantitative results of education, training, and dissemination activities 
  Software engineering best practices for HPC 
  User support experiences with large-scale and novel machines 
  Provenance, logistic concerns and reproducibility of data 
  Adoption and use of infrastructure as code paradigm 
  Management, support and impact of large workflows 
  Workload analysis, accounting and group users interactions 

 System Software & Cloud Computing  
   
 Cloud and system software architecture, configuration, optimization and evaluation, support for parallel programming on large-scale systems or building blocks for next-generation HPC architectures.  
 Topics include:   
 Convergence of HPC, cloud, edge, and other distributed computing resources 
  Analysis of cost, performance, and reliability of HPC, cloud, and edge facilities 
  Systems that facilitate distributed applications, such as workflow systems, task-oriented systems, functions-as-a-service, and service-oriented computing 
  Integration and management of HPC hardware in clouds and distributed systems 
  Scheduling, load balancing, resource provisioning, resource management, cost efficiency, fault tolerance, and reliability for large-scale systems and clouds 
  Green clouds, energy efficiency, power management, carbon awareness 
  Approaches for enabling adaptive and elastic system software 
  Parallel/networked file system integration with the OS and runtime 
  OS and runtime system enhancements for accelerators 
  Runtime and OS management of complex memory hierarchies 
  Interactions among the OS, middleware and tools 
  System software for reducing energy and data movement 
  Self-configuration, monitoring, and introspection 
  Security, sharing, auditing, and identity management 
  Virtualization, containerization, and other technologies for isolation and portability 
  Case studies of scalable distributed applications that span facilities 

 conflict of interest, Plagiarism, & AI-Generated Text  
   
 conflict of interest  
   
 Please be aware of, and adhere to, these SC Conference guidelines regarding potential conflicts of interest and disclosure.  
 A potential conflict of interest occurs when a person is involved in making a decision that:  
 Could result in that person, a close associate of that person, or that person’s company or institution receiving significant financial gain, such as a contract or grant, or 
  Could result in that person, or a close associate of that person, receiving significant professional recognition, such as an award or the selection of a paper, work, exhibit, or other type of submitted presentation. 
  Program Committee members will be given the opportunity to list potential conflicts of interest during each program’s review process. Program Committee chairs and area chairs will make every effort to avoid assignments that have a potential COI. Further, starting this year, the SC online submission system (Linklings) will include automatic checks taking prior publications of authors and submitters into account.  
 According to the SC conference you have a conflict of interest with the following:  
 Your PhD advisors, post-doctoral advisors, PhD students, and post-doctoral advisees; 
  Family relations by blood or marriage, or equivalent (e.g., a partner); 
  People with whom you collaborated in the past five years. Collaborators include: co-authors on an accepted/rejected/pending research paper; co-PIs on an accepted/pending grant; those who fund your research; researchers whom you fund; or researchers with whom you are actively collaborating; 
  Close personal friends or others with whom you believe a conflict of interest exists; 
  People who were employed by, or a student at, your primary institution(s) in the past five years, or people who are active candidates for employment at your primary institution(s). 
  Note that “service” collaborations, such as writing a DOE, NSF, or DARPA report, or serving on a program committee, or serving on the editorial board of a journal, do not inherently create a COI.  
 Other situations can create COIs, and you should contact the Technical Program Chairs for questions or clarification on any of these issues.  
   
 Plagiarism  
   
 Please review the ACM guidelines on identifying plagiarism  .  
   
 AI-generated text  
   
 The use of artificial intelligence AI–generated text in an article shall be disclosed in the acknowledgements section of any paper submitted to SC. The sections of the paper that use AI-generated text shall have a citation to the AI system used to generate the text. Utilizing Large Language Models (LLMs) is permissible as a general-purpose writing assistance tool. Authors are expected to acknowledge their complete accountability for the contents of their papers, including content generated by LLMs that could be interpreted as plagiarism or scientific misconduct (e.g., fabrication of facts). LLMs are not eligible for authorship.  

 double-Anonymous review  
   
 This document aims to help authors, reviewers, and Papers Chairs understand the double-anonymous review process that the SC Conference Series has adopted. Please contact us  with any questions or comments.  
   
 Guidance for authors  
   
 If you are an author, you should write your paper so as not to disclose your identity or the identities of your co-authors. The following guidelines are best practices for anonymizing a submission in a way that should not weaken it or the presentation of its ideas. These guidelines are broken up into the major submission and review phases: while writing (before submitting), at submission time, and during the rebuttal process.  
 These practices were distilled from McKinley (2015) and Snodgrass (2007).  
 In addition, the paper evaluation draws inspiration from the three principles suggested by Snodgrass (2007):  
 Authors should not be required to go to great lengths to anonymize their submissions. 
  Comprehensiveness of the review trumps anonymity efficacy. 
  Editors and Chairs retain flexibility and authority in managing the reviewing process. 
    
 While Writing   
 Do not use your name or your co-authors’ names, affiliations, funding sources, or acknowledgments in the heading or body of the document. It is absolutely fine and encouraged to use the name of the machine you are working on and describe it. 
  Do not eliminate self-references to your published work that are relevant and essential to a proper review of your paper solely in an attempt to anonymize your submission. Instead, write self-references in the third person. Recall that the goal and spirit of double-blind review is to create uncertainty about authorship, which is sufficient to realize most of its benefits. 
  To reference your unpublished work, use anonymous citations. From Snodgrass (2007): “The authors developed … [1]” where the reference [1] appears as, “[1] Anonymous (omitted due to double-anonymous review).” You will have a chance to explain these references to the non-conflicted Papers Chair or their designee(s); see At Submission Time, below. See the FAQ for more examples. 
    
 At Submission Time   
 At submission time, you will be asked to declare conflicts of interest you may have with program committee members. You will also have the option to upload a list of conflicts. Reviewers will be asked separately to verify declared conflicts. 
  Because of the double-anonymous process, there is no limit on the number of submissions by Program Committee members. However, there is a limit of four accepted papers for Program Committee members. Track Co-Chairs are subject to submission limits. 
    
 During the Review Period   
 You are not forbidden from disseminating your work via talks or technical reports. However, you should not try to directly or otherwise unduly influence program committee members who may be reviewing your paper.  
   
 During the Rebuttal Period   
 During the rebuttal period, authors should still assume double-anonymous review. Therefore, authors should not disclose their identities in their rebuttal to the reviewers. However, as with the original submission, authors will have the option of entering identity-revealing information in a separate part of the rebuttal form that will, by default, be visible only to non-conflicted Chairs, or their designee(s) in the case of conflicts.  

 upon acceptance  
   
 REgistration  
   
 If your paper is selected, at least one author must register for the Technical Program in order to attend the SC Conference and present the paper. Paper presenters are expected to be in-person at the conference.  
 For an accepted paper to be included in the proceedings, the author has to present the paper at the conference in person. Otherwise, the paper will be removed from the proceedings.  
   
 Proceedings  
   
 All accepted papers will be listed in the online SC Schedule.  
   
 Papers are archived in the ACM Digital Library  and IEEE Xplore  ; members of SIGHPC or subscribers to the archives may access the full papers without charge. This publication contains the full text of all Papers and their Artifact Description appendices presented at the SC Conference.  

 on-site  
   
 schedule & location  
   
 Paper presentations will be held Tuesday–Thursday, November 18–20, 2025. Paper sessions are 30 minutes. Day, time, and location for each paper session will be published in the online SC Schedule by September 2025.  
   
 infrastructure  
   
 Papers are assigned a theater room equipped with standard AV facilities:  
 Projector 
  Microphone and podium 
  Wireless lapel microphone or wireless handheld microphone 
  Projection screen 
    
 Awards  
   
 Best Paper (BP), Best Student Paper (BSP), and Best Reproducibility Advancement (BRA) nominations are made during the review process and are highlighted in the online SC schedule. BP, BSP, and BRA winners are selected by a committee who attends the corresponding paper presentations, and winners are announced at the Thursday Awards Ceremony.  

 Reproducibility Initiative  
 SC has been a leader in tangible progress towards scientific rigor, through its pioneering practice of enhanced reproducibility of accepted papers. This year’s initiative builds on this success by continuing the practice of using appendices to enhance scientific rigor and transparency.  
   
 The Reproducibility Initiative impacts technical papers and their submission and peer review. All paper submitters should review the information on the Reproducibility Initiative page, including the guidelines for AD/AE Appendices & Badges.  
   
  reproducibility    
   
  AD/AE Process & Badges    
   
  AD/AE Appendices    

 Ready to Submit?  
 Create an account in the online submission system and complete the form. A sample form can be viewed before signing in.  
   
  submit    

 If you have questions about Paper submissions, please contact the program committee.  
   
  contact us    

  dates & deadlines   
 Submission, application, and nomination deadlines for all programs and awards, the housing open date, the early registration deadline, and more – all in one place.  

 SC25 Planning Committee 
  SC Steering Committee 
  SC Conference Series 
  Dates & Deadlines 
  Proceedings & Archives 
  Photos & Logos 
  Contact Us 
  Volunteer 

  CODE OF CONDUCT   
   
 ACM PRIVACY POLICY   
   
 IEEE PRIVACY POLICY   

 The International Conference for High Performance Computing, Networking, Storage, and Analysis  
   
 SPONSORED BY:  

  Back To Top Button      Important dates data: 
Skip to main content  Dates & Deadlines 
  Volunteer 
  Contact Us 

 Toggle navigation    Toggle navigation   Program | Dropdown menu toggle | Program  Keynote 
  HPC Ignites Plenary 
  Invited Talks 
  Panels 
  Tutorials 
  Workshops 
  Birds of a Feather 
  Papers 
  Reproducibility Initiative 
  AD/AE Process & Badges 
  AD/AE Appendices 
  Early Career 
  Exhibitor Forum 
  Awards 
  Posters 
  ACM SRC 
  Doctoral Showcase 
  Research Posters 
  Job Fair 
  Receptions 
  Proceedings & Archives 
  Exhibits | Dropdown menu toggle | Exhibits  Exhibitor Prospectus 
  Exhibitor Application 
  Exhibitor List & Floorplan 
  Exhibitor Forum 
  Exhibitor Housing 
  Exhibitor Function Space 
  Quantum Locality 
  Recruit at the Job Fair 
  Students | Dropdown menu toggle | Students@SC  Lead Student Volunteers 
  Student Volunteers 
  Student Cluster Competition 
  IndySCC 
  Mentor–Protégé Matching 
  HPC Immersion 
  Alumni Reception 
  Speed Mentoring Event 
  Job Fair 
  SCinet | Dropdown menu toggle | SCinet  SCinet Technology 
  SCinet Teams 
  Participate in SCinet 
  WINS 
  SCinet History 
  Media | Dropdown menu toggle | Media  Media Registration 
  Media Partners 
  Blog 
  Newsletter 
  Photos & Logos 
  Attend | Dropdown menu toggle | Attend  St. Louis 
  Convention Center 
  Housing 
  Registration 
  Visa Applications 
  Family Resources 
  Inclusivity 
  Code of Conduct 
  Volunteer 
  Search    Search      

  Home     All Dates & Deadlines     
 All Dates & Deadlines  
  
   Program  
   
 16–21 NOV 2025   
   
 Exhibits  
   
 18–20 NOV 2025   

 All Deadlines Are at 11:59 pm Anywhere on Earth  

 Attendees  
 Housing   
   
 3 JUN 2025  
   Housing Opens  
   
 10 OCT 2025   
  Housing Closes  
   
 13–17 OCT 2025   
  Late Requests  

 Registration   
   
 9 JUL 2025   
  Registration Opens  
   
 15 OCT 2025   
  Standard Reg Closes  
   
 21 NOV 2025   
  Late Reg Closes  

 Exhibitors  
 Function Space    
   
 10 FEB 2025  
   Requests Open  
   
 3 MAR 2025  
   Requests Close  
   
 17 MAR–16 MAY 2025  
   Allocations Sent  

 Exhibitor Housing   
   
 MAR 2025   
  Early Requests Open  
   
 APR 2025   
  Early Requests Close  
   
 MAY 2025   
  Allocations Sent  
   
 SEP 2025   
  Occupancy Lists Due  

 Move-In   
   
 13–16 NOV 2025   
  8 am–5 pm  

 Space Selection   
   
 19 NOV 2025   
  For SC26  

 Move-Out   
   
 20 NOV 2025   
  3–11:59 pm  
   
 21 NOV 2025   
  8 am–noon  

 Submissions  
 Workshops   
   
 7 JAN 2025  
   Submissions Open  
   
 17 FEB 2025  
   Submissions Close  
   
 15 MAR 2025  
   Notifications  
   
 5 SEP 2025  
   Paper Notifications  
   
 29 SEP 2025  
   Content/Schedule & Final Materials  

 Papers   
   
 3 MAR 2025   
  Submissions Open  
 7 APR 2025   
  Abstract Submissions Close  
   
 14 APR 2025  
  (No Extensions  )  
  Paper Submissions  
  Close  
   
 3–6 JUN 2025   
  Review/Rebuttal Period  
   
 27 JUN 2025   
  Notifications Sent  
 14 JUL 2025   
  Revised AD/AE, Badge Applications  
   
 25 AUG 2025   
  Final Paper Due  

 Tutorials   
   
 3 MAR 2025   
  Submissions Open  
   
 28 APR 2025   
  Submissions Close  
   
 27 JUN 2025   
  Notifications  
   
 4 AUG 2025   
  Final Metadata & Honorarium/Support Due  
   
 27 OCT 2025   
  Handouts/Slides  

 Panels   
   
 3 MAR 2025   
  Submissions Open  
   
 28 APR 2025   
  Submissions Close  
   
 27 JUN 2025   
  Notifications  
   
 29 SEP 2025   
  Final Materials  

 Birds of a Feather   
   
 3 MAR 2025   
  Submissions Open  
   
 14 JUL 2025   
  Submissions Close  
   
 22 AUG 2025   
  Notifications  
   
 29 SEP 2025   
  Final Materials  

 ACM SRC   
 Doctoral Showcase   
 Research Posters   
   
 5 MAY 2025   
  Submissions Open  
   
 18 AUG 2025   
  Submissions Close  
   
 5 SEP 2025   
  Notifications  
   
 15 SEP 2025   
  Content/Schedule  
   
 29 SEP 2025   
  Final Materials  

 Art of HPC    
   
 APR 15, 2024   
  Submissions Open  
   
 JUL 29, 2024   
  Submissions Close  
   
 AUG 10, 2024   
  Notifications  

 Exhibitor Forum   
   
 9 JUN 2025   
  Submissions Open  
   
 8 AUG 2025   
  Submissions Close  
   
 19 SEP 2025   
  Notifications  

 Applications  
 Volunteer   
  SC25 Committee  
   
 15 JUN 2024   
  Applications Open  
   
 31 DEC 2024   
  Applications Close  

 WINS   
   
 2 DEC 2024  
   Applications Open  
   
 31 JAN 2025  
   Applications Close  
   
 MID-MAR 2025  
   Notifications  

 Lead Student Volunteers   
   
 2 DEC 2024  
    Applications Open  
   
 13 FEB 2025  
   Applications Close  
   
 1 APR 2025  
   Notifications  

 Early Career   
   
 1 FEB 2025   
  Applications Open  
   
 31 AUG 2025  
   Applications Close  
   
 15 SEP 2025  
   Notifications  

 Student Volunteers   
   
 14 FEB 2025   
  Applications Open  
   
 31 MAY 2025   
  Applications Close  

 Student Cluster Competition   
   
 1 MAR 2025  
    Applications Open  
   
 16 MAY 2025  
   Applications Close  
   
 16 JUN 2025  
   Notifications  

 IndySCC   
   
 1 MAR 2025  
    Applications Open  
   
 16 MAY 2025  
   Applications Close  
   
 16 JUN 2025  
   Notifications  

 HPC Immersion   
   
 1 MAR 2025  
    Applications Open  
   
 15 JUN 2025  
   Applications Close  

 Volunteer   
  SC26 Committee  
   
 15 JUN 2025  
   Applications Open  
   
 31 DEC 2025   
  Applications Close  

 Mentor–Protégé   
   
 1 AUG 2025  
   Early Sign-ups Open  
   
 1 SEP 2025  
   Early Sign-ups Close  
   
 2 SEP 2025  
   Regular Sign-ups Open  
   
 1 NOV 2025  
   Regular Sign-ups Close  

 SC Award Nomination  
 Test of Time Award   
   
 8 MAR 2025   
  Nominations Open  
   
 26 MAY 2025   
  Nominations Close  
   
 26 SEP 2025   
  Award Announced  

 Society Award Nominations  
 ACM SIGHPC Outstanding Doctoral Dissertation Award   
   
 15 MAR 2025   
  Nominations Open  
   
 26 APR 2025   
  Nominations Close  
   
 AUG 2025   
  Winners Announced  

 ACM Gordon Bell Prize   
   
 WINTER 2025   
  Nominations Open  
   
 15 APR 2025   
  Nominations Close  

 ACM Gordon Bell for Climate Modelling   
   
 WINTER 2025   
  Nominations Open  
   
 15 APR 2025   
  Nominations Close  

  ACM SIGHPC Fellowships in Computational and Data Science   
   
 15 MAR 2025   
  Nominations Open  
   
 30 APR 2025   
  Nominations Close  
   
 30 JUL 2025   
  Notifications Sent  

 ACM/IEEE-CS George Michael Memorial HPC Fellowships   
   
 WINTER 2025   
  Nominations Open  
   
 1 MAY 2025   
  Nominations Close  

  ACM SIGHPC Educational Award for Outstanding Contribution to Computational Science Education   
   
 MAR 2025   
  Nominations Open  
   
 31 MAY 2025   
  Nominations Close  

 ACM/IEEE-CS Ken Kennedy Award   
   
 FALL 2024   
  Nominations Open  
   
 JUN 30, 2025   
  Nominations Close  

 IEEE-CS Sidney Fernbach Award   
   
 FALL 2024   
  Nominations Open  
   
 30 JUN 2025   
  Nominations Close  

 ACM SIGHPC Emerging Woman Leader in Technical Computing Award   
   
 APR 2025   
  Nominations Open  
   
 30 JUN 2025   
  Nominations Close  
   
 31 JUL 2025   
  Winner Selected  

 IEEE-CS Seymour Cray Computer Engineering Award   
   
 FALL 2024   
  Nominations Open  
   
 30 JUN 2025   
  Nominations Close  

  IEEE-CS TCHPC Award for Excellence in Early Career Researchers in High Performance Computing   
   
 WINTER 2025   
  Nominations Open  
   
 24 JUL 2025   
  Nominations Close  
   
 15 AUG 2025   
  Notifications Sent  

 Stay Up to Date  
 Sign up to receive the SC newsletter in your inbox.  
   
 Please enable JavaScript in your browser to complete this form.  First Name *      
 Last Name *      
 Email *      
   
 Message     
    
      Sign Me Up    
    
 Information provided is treated in accordance with ACM  & IEEE  privacy policies.  

 SC25 Planning Committee 
  SC Steering Committee 
  SC Conference Series 
  Dates & Deadlines 
  Proceedings & Archives 
  Photos & Logos 
  Contact Us 
  Volunteer 

  CODE OF CONDUCT   
   
 ACM PRIVACY POLICY   
   
 IEEE PRIVACY POLICY   

 The International Conference for High Performance Computing, Networking, Storage, and Analysis  
   
 SPONSORED BY:  

   Back To Top Button

17. Conference SC_1:
Socialist Republic of Vietnam    Choose your Country/Region  

 Asia   
   
  China    
  India    
  Japan    
  South Korea    
   
  Malaysia    
  Taiwan, China    
  United Arab Emirates    
  Indonesia    
   
  Hong Kong, China    
  Singapore    
  Thailand    
  Turkey    

 America   
   
  United States    
  Canada    
  Brazil    
  Argentina    
   
  Mexico    
  Colombia    
  Chile    
  Peru    
   
  Guatemala    

 Europe   
   
  Italy    
  United Kingdom    
  France    
  Germany    
   
  Spain    
  Portugal    
  Austria    
  Poland    
   
  Greece    
  Russian Federation    
  Czech Republic    
  Switzerland    
   
  Netherlands    
  Sweden    
  Romania    
  Hungary    
   
  Belgium    
  Ukraine    
  Ireland    
  Croatia    
   
  Finland    
  Denmark    
  Cyprus    
  Serbia    
   
  Slovakia    
  Norway    
  Bulgaria    
  Iceland    

 Oceania   
   
  Australia    
  New Zealand    
  Fiji    

 Africa   
   
  South Africa    
  Tunisia    
  Morocco    
  Egypt    

 Product | Software 
  Webinar 
  Video conference 
  Virtual conference 
  Institution Edition 
  Discover | Subject category 
  Conference in Socialist Republic of Vietnam 
  Contribution library 
  Browse by venue 
  Services 
         
 Create an event  Lecture    
   
 Meeting/Workshop/Tutorials    
   
 Conference    

 Log in  Sign up    

 2025 International Conference for High Performance Computing, Networking, Storage and Analysis (SC25)  
   
 Nov. 16 - 21, 2025  
 St. Louis · United States  
   
 Conference  Offline Conference    
  0  Views   
  0  Comments   
 Favorite    
  Share    

 Introduction  
   
 AboutComputing and Processing  
  Keywords:Supercomputing,SC has been at the forefront in gathering the best and brightest minds in supercomputing together with our unparalleled technical papers, tutorials, posters and speakers. SC24 will take a major step forward not only in supercomputing, but in super-conferencing, with everything designed to make the 2024 conference the most user friendly conference in the world. We are streamlining conference information and moving to a virtually real-time method of determining technical program thr  
  Scope:SC has been at the forefront in gathering the best and brightest minds in supercomputing together with our unparalleled technical papers, tutorials, posters and speakers. SC25 will take a major step forward not only in supercomputing, but in super-conferencing, with everything designed to make the 2025 conference the most user friendly conference in the world. We are streamlining conference information and moving to a virtually real-time method of determining technical program thrusts. No more pre-determined technical themes picked far in advance. Through social media, data mining, and active polling, we will see which technical interests and issues emerge throughout the year and force on the ones that interest our community the most  
  Sponsor Type:1; 9  

 Submit Comment  

 Verify Code     Change Another   Submit    

 All Comments  

 Submission Template  
 ×    
  Paper Template  
  Paper Template  

 Home 
  Program 
  Timetable 
  Photo 
  Management 
    
 Important Date  
   
 Conference Date | Nov 16  
 2025  
  to  Nov 21  
 2025 
  Nov 21  2025 | Registration deadline 

 Sponsored By  
   
 Association for Computing Machinery - ACM IEEE Computer Society   
   
 Contact Information  
   
 ie******@ieee.org 
  Login to view full contact details    

 Website  
   
 https://conference-api.ieee.org/conf/details?id=56645    

 Previous Conferences  
   
 2023-11-12 United States 丹佛(Denver) | International Conference for High Performance Computing, Networking, Storage and Analysis 
  2021-11-14 United States Atlanta | SC21: International Conference for High Performance Computing, Networking, Storage and Analysis 
  2020-11-15 United States | SC20: International Conference for High Performance Computing, Networking, Storage and Analysis 
  2019-11-17 United States | SC19: International Conference for High Performance Computing, Networking, Storage and Analysis 
  2018-11-01 United States Washington, USA | SC18: International Conference for High Performance Computing, Networking, Storage and Analysis 
  2017-11-12 United States Denver | The International Conference for High Performance Computing, Networking, Storage and Analysis 
  2016-11-13 United States Salt Lake,USA | The International Conference for High Performance Computing, Networking, Storage and Analysis 
  2015-11-15 United States | The International Conference for High Performance Computing, Networking, Storage and Analysis 
  2013-11-17 United States | 2013 International Conference for High Performance Computing, Networking, Storage and Analysis 

 Contact Information  
 ×    

 OK    

 Tips  
 ×    
 Coming soon to a third-party domain  
 You are about to access a third-party domain, please be aware of the security of your account and property.   
 https://https://conference-api.ieee.org/conf/details?id=56645   

 Continue to visit    

 About Us  |  News  |  Blog  |  Feedback  |  Disclaimer  |  Privacy Policy  |  Terms of Service  |  Cancellation Policy  |  Contact   
 Copyright © 2013-2021 Aconf.org  - One-stop solutions for academic events   
 鄂ICP备09016152号-4   

  
Call for papers data: 
undefinedImportant dates data: 
undefined

18. Conference SC_2:
SC Conference Series  
   
     Conference History 
  Steering Committee 
  Diversity and Inclusion 
  Nominations 
  Volunteer 

  SC24 
  SC23 
  ACM 
  IEEE-CS 

 SC Conference Series  
 The International Conference for  
  High Performance Computing,  
  Networking, Storage, and Analysis  

 Past Conferences  
 History  
 Past conferences including links to each year‘s conference proceedings.  

 Next Conference  
 SC24  
  
 November 17–22, 2024  
  Atlanta, GA   

 Established in 1988  
 The annual SC conference has grown steadily in size and impact over time, drawing more than 13,000 attendees over the last several years. SC is held in a different city in the United States each year. SC20 was our first virtual event due to the global pandemic.  

 A Diverse Community  
 SC has built a diverse community of participants including researchers, scientists, application developers, computing center staff and management, computing industry staff, agency program managers, journalists, and congressional staffers. This diversity is one of the conference’s strengths, making it a yearly “must attend” forum for stakeholders throughout the technical computing community.  

 The Technical Program  
 The Technical Program is the heart of the SC conference. It has addressed virtually every area of scientific and engineering research, as well as technological development and education. The Technical Program‘s presentations, tutorials, panels, and discussion forums have shared breakthroughs and inspired innovative ideas in the field of HPC.  

 Site Selection  
      
 The SC Conference selects conference sites in the United States through a competitive bid process at least five years prior to each conference to ensure the best possible experience for diverse attendees from around the world. The size of SC as well as the infrastructure and technical networking requirements limit the number of convention centers and cities that can host the international SC audience. The site selection process attempts to balance the necessary infrastructure needs with aspects of the location that impact the attendee’s experience.  

 Sponsoring Societies  
      
 ACM, the Association for Computing Machinery, is the world’s largest educational and scientific computing society, uniting computing educators, researchers, and professionals to inspire dialogue, share resources, and address the field's challenges. With more than 90,000 members worldwide, ACM strengthens the computing profession‘s collective voice through strong leadership, promotion of the highest standards, and recognition of technical excellence. ACM supports the professional growth of its members by providing opportunities for lifelong learning, career development, and professional networking.  

 acm.org    

 With nearly 100,000 members, the IEEE Computer Society is the world's leading organization of computer professionals. Founded in 1946, the Computer Society is the largest of the 37 societies of the Institute of Electrical and Electronics Engineers (IEEE). The Computer Society's vision is to be the leading provider of technical information and services to the world's computing professionals. The Society is dedicated to advancing the theory, practice, and application of computer and information processing technology.  

 computer.org    

 The SC Steering Committee recognizes the problem of systemic and institutionalized racism and pledges to address these issues within the SC community.  
  Read the SC statement on diversity and inclusion.    

 Conference History 
  Steering Committee 
  Nominations 
  Volunteer 

 Please enable JavaScript in your browser to complete this form.  General Information  Nominations  Volunteer  Diversity and Inclusion     
 Name   First    
  Last    

 Email     
 Comment or Message *      
 I understand that any information I provide will be treated in accordance with the ACM and IEEE privacy policies.  

     Contact Us    

    The International Conference for High Performance  
  Computing, Networking, Storage, and Analysis  

 Sponsored by:  
  IEEE                            TCHPC               
 ACM       SIGHPC                 

   
Call for papers data: 
undefinedImportant dates data: 
undefined

19. Conference SCA_1:
Skip Navigation  SIGGRAPH 2025 submissions are now open! | Submit 
  Celebrate the season of giving by contributing a donation to SIGGRAPH 2025! | Donate Now 

    SIGGRAPH 2025     
   
 Conference 
  Programs 
  Exhibit | Exhibit at SIGGRAPH 
  Sponsorship Opportunities 
  Job Fair Opportunities 
  Exhibitor Resources 
  Donate 
  Attend | Why Attend? 
  General Conference Information 
  Travel Accommodations 
  Health & Safety 
  Job Fair 
  Volunteer | SIGGRAPH 2025 Committee 
  Conference Volunteer Opportunities 
  ACM SIGGRAPH Organization Volunteers 
  Submit 
  Register 
    
  search     

  Menu     
  
 The Premier Conference & Exhibition on Computer Graphics & Interactive Techniques  
 SIGGRAPH  2025   

 Share and explore over five days of immersion into your unique area of interest.  

 Production &  
  Animation  

 Research &  
  Education  

 Arts &  
  Design  

 Gaming &  
  Interactive  

 New Technologies  

 2025   
 Featured Speakers   
 Industry experts take the stage at SIGGRAPH 2025.  
   
 View All    

 Jensen Huang   

 Dava Newman   

 Manu Prakash   

 Some Lady   

 Mark Sagar   

 Another Lady   

 Creative Submissions  
 Submit Your Work and Innovations  
   
 Technical  
  Papers  
 Submissions Form & Conflicts  

 Deadline  16 Jan 2025    

 Technical  
  Papers  
 Paper Deadline  

 Deadline  23 Jan 2025    

 Technical  
  Papers  
 Upload Deadline  

 Deadline  24 Jan 2025    

 Art  
  Papers  
 Long  

 Deadline  16 Jan 2025    

 Art  
  Papers  
 Short  

 Deadline  16 Jan 2025    

 Talks  

 Deadline  18 Feb 2025    

 Production  
  Sessions  

 Deadline  18 Feb 2025    

 Panels  

 Deadline  18 Feb 2025    

 Courses  

 Deadline  18 Feb 2025    

 Educator’s Forum  

 Deadline  18 Feb 2025    

 Computer Animation Festival  

 Deadline  To Be Announced    

 Real-Time Live!  

 Deadline  To Be Announced    

 Spatial Storytelling  

 Deadline  To Be Announced    

 Immersive  
  Pavilion  

 Deadline  18 Feb 2025    

 Art  
  Gallery  

 Deadline  28 Jan 2025    

 Posters  

 Deadline  To Be Announced    

 Labs  

 Deadline  18 Feb 2025    

 Emerging  
  Technologies  

 Deadline  18 Feb 2025    

 Birds of a Feather  

 Deadline  To Be Announced    

 Appy  
  Hour  

 Deadline  18 Feb 2025    

 Student Volunteers  
 SVSC Applications  

 Submissions Closed    

 Student  
  Volunteers  
 Team Leader Applications  

 Deadline  31 Jan 2025    

 Student  
  Volunteers  
 Volunteer Applications  

 Deadline  28 Feb 2025    

 Student Research Competition  

 Deadline  To Be Announced    

 Learn  More    

  SIGGRAPH 2025  
 Convention Centre, Vancouver, BC, Canada  
 Join Us 10–14 August  
   
 Register   
   
 Submit   
   
 Exhibit   

 Sponsor SIGGRAPH  
 Sponsor Opportunities 
  Job Fair Opportunities 
    
 Resources  
 For The Press 
  For Participants 
    
 Directories  
 Sitemap 
  2025 Committee 

 Get in Touch  
 Contact Us 
  Join Mailing List 
    
 ACM Policies & Blog  
 Anti-Harassment 
  ACM Privacy Policy 
  ACM SIGGRAPH Blog 
    
 #SIGGRAPH2025  
 News & Events 
   Facebook    Twitter    Instagram    YouTube    LinkedIn     

 © 2024 SIGGRAPH. All rights reserved.  
 The 52nd International Conference & Exhibition On Computer Graphics & Interactive Techniques  

    Conference 
  Programs 
  Exhibit | Exhibit at SIGGRAPH 
  Sponsorship Opportunities 
  Job Fair Opportunities 
  Exhibitor Resources 
  Donate 
  Attend | Why Attend? 
  General Conference Information 
  Travel Accommodations 
  Health & Safety 
  Job Fair 
  Volunteer | SIGGRAPH 2025 Committee 
  Conference Volunteer Opportunities 
  ACM SIGGRAPH Organization Volunteers 
  Submit 
  Register 
  Search Site 

    
Call for papers data: 
  Skip Navigation  SIGGRAPH 2025 submissions are now open! | Submit 
  Celebrate the season of giving by contributing a donation to SIGGRAPH 2025! | Donate Now 

    SIGGRAPH 2025     
   
 Conference 
  Programs 
  Exhibit | Exhibit at SIGGRAPH 
  Sponsorship Opportunities 
  Job Fair Opportunities 
  Exhibitor Resources 
  Donate 
  Attend | Why Attend? 
  General Conference Information 
  Travel Accommodations 
  Health & Safety 
  Job Fair 
  Volunteer | SIGGRAPH 2025 Committee 
  Conference Volunteer Opportunities 
  ACM SIGGRAPH Organization Volunteers 
  Submit 
  Register 
    
  search     

  Menu     
  
 The Apex of Innovation  
 Technical Papers  
 Technical Papers is the premier venue for disseminating and discussing scholarly work in computer graphics and interactive techniques. This core conference program features researchers who unveil the most esteemed breakthroughs that contribute to shaping and improving our collective future.  

 Welcome to SIGGRAPH 2025  
 Submit to Technical Papers  
 The SIGGRAPH 2025 Technical Papers program spans areas including but not limited to animation, simulation, imaging, geometry, modeling, rendering, human-computer interaction, haptics, fabrication, robotics, visualization, audio, optics, programming languages, immersive experiences, generative AI,  and machine learning for visual computing.  
 Building a desirable future through computer graphics and interactive techniques starts with you and your contributions to and participation in SIGGRAPH 2025. We are excited that you are submitting your paper for consideration.  
 At SIGGRAPH 2025, the Technical Papers program will have two integrated paper tracks: Journal ( ACM Transactions on Graphics  ) and Conference.  
 Journal Papers | are expected to satisfy the ACM TOG criteria of excellence established over the years, and present novel, well validated, and comprehensively described research advancing computer graphics and interactive techniques. Papers accepted to the Journal track will be published in the SIGGRAPH 2025 issue of | ACM Transactions on Graphics (TOG). 
  Conference Papers | are expected to present novel research advancing computer graphics and interactive techniques. However, the evidence supporting these advances might not be as comprehensive as expected for Journal Papers. The length of papers accepted to this track is | capped | as outlined in the “Journal vs. Conference” table below. Papers accepted to the conference track will be published in the SIGGRAPH 2025 Conference Proceedings. 
  At submission time, authors can indicate if their submission should be considered for the Journal track only  or whether they want the submission to be considered for both tracks, i.e., as a “dual-track submission.”   
 The review process, deadline, an   d papers committee are the same for both tracks. Papers considered for both tracks are first evaluated to determine if the contribution is of sufficient quality for SIGGRAPH. If judged to be of sufficient quality, they are then assessed based on the criteria above to determine the track to be accepted into.    
 The differences in the submission process for the two options are outlined below.   
 Journal-Only Submissions   
 The submitted work is expected to be novel and advance the state of the art.    
 Ideas are extensively tried and tested, and the paper is complete and comprehensive.  
 When submitting, use the “acmtog” article style, double column. No limit on the length or file size of supplementary materials.   
 No maximum (or minimum) page length.  
 Published in ACM Transactions on Graphics (TOG)  
   
 Dual-Track Submissions   
 The submitted work is expected to be novel and advance the state of the art.    
 The work can be less complete (e.g., have shorter validation and fewer comparisons).  
 When submitting, use the “acmtog” article style, double column. No limit on the length or file size of supplementary materials.   
 The submissions are required to adhere to the following length constraints: Papers must be no longer than 7 pages  excluding references and figures-only pages. There is no limit on the length of the reference section. Each paper can have at most two figures-only pages  , placed at the end of the submission, after references. Authors can also include as many figures as they wish within the core 7 pages. Papers should not include appendices in the main document.  
 Published in SIGGRAPH Conference Proceedings  

 Journal-Only Submissions   
   
 Dual Track Submissions   

 The submitted work is expected to be novel and advance the state of the art.    
   
 Ideas are extensively tried and tested, and the paper is complete and comprehensive.  
   
 The work can be less complete (e.g., have shorter validation and fewer comparisons).  

 When submitting, use the “acmtog” article style, double column. The file size of supplementary materials is limited to 500MB.    
   
 No maximum (or minimum) page length.  
   
 The submissions are required to adhere to the following length constraints: Papers must be no longer than 7 pages excluding references and figures-only pages. There is no limit on the length of the references. Each paper can have at most two figures-only pages, placed at the end of the paper PDF, after references. Figures-only pages can contain only figures and their captions (i.e., no tables). Authors can include as many figures as they wish within the core 7 pages. Appendices are to be provided as supplemental material, and not part of the paper itself.  

 Published in ACM Transactions on Graphics (TOG)  
   
 If accepted as a Conference Paper: Published in SIGGRAPH Conference Proceedings  
 If accepted as a Journal Paper: Published in ACM Transactions on Graphics (TOG)  

 Richard Zhang   
  SIGGRAPH 2025 Technical Papers Chair   
 Adriana Schulz   
  SIGGRAPH 2025 Technical Papers Assistant Chair   

 How to Submit  
     
  To start, read the information below about how to prepare your submission, including information on formatting, anonymity, and resubmissions. Then log into the Submission Portal    , select the “New Submission” tab, and select the Technical Papers submission form. You will be asked for basic information about your submission.  
 To see what you will need to submit, view the Sample Form    (Stage 1). Creating a submission form will assign your submission a paper ID, which must be included in your submitted paper.  
 Deadlines   
 All deadlines are 22:00 UTC/GMT unless otherwise noted.  
 Thursday, 16 January 2025: Submission form deadline   
 Deadline for creating the submission form with the title, complete list of co-authors, as well as the specification of conflicts of interest (COI) for each co-author. Note that once the paper is submitted, the list of authors can no longer be edited  . Exceptions can be made in special circumstances but are expected to be rare and are up to the discretion of the Technical Papers Chair.  
 Thursday, 23 January 2025: Paper deadline   
 Deadline for the complete submission, including either the actual PDF paper or an MD5 checksum (which will be required in lieu of the actual files starting at some point on this day). If you wish to submit supplemental material (additional details or comparisons, movies, code, data, etc.) as well, these files (or their MD5 checksums) must also be uploaded by this date and time. To see what you will need to submit, view the sample form    (Stage 2).  
 Friday, 24 January 2025: Upload deadline   
 Deadline for uploading all materials if you used MD5 checksums  . No new or changed material may be uploaded. Only files matching MD5 checksums submitted the previous day are valid.  
 English Review Service   
 Non-native English speakers may optionally use the English Review Service    to help improve the text of submissions. Please note that this process takes time, so plan far ahead in order to meet the submission deadline.  
   
 Back to Top    

 Review Process  
     
  All submitted papers (independent of the track they are submitted to) will receive four full reviews plus one meta review, all double-blind, and will be evaluated by the Technical Papers Committee.  
 When deciding which track a dual-track submission is suitable for, reviewers will be instructed to consider how compelling the evidence supporting the advances presented in the paper is when assessing the track the paper should be accepted to. In particular, they will be instructed to be less demanding about formal completeness, validation, and experimental evaluation when it comes to accepting papers to the Conference track, thereby allowing publication of riskier/earlier-stage work.  
 Both tracks will continue the SIGGRAPH Technical Papers program from previous years, publishing high-quality, groundbreaking, and impactful research that is presented at SIGGRAPH. Journal Papers will be published in the ACM Transactions on Graphics  . Conference Papers will be published in the SIGGRAPH Conference Proceedings in the ACM Digital Library.  
   
 Back to Top    

 Submission Policy  
     
  Double Submissions   
 By submitting a manuscript to the SIGGRAPH Technical Papers program, authors acknowledge that the technical contributions they claim have not been previously published or accepted for publication in another peer-reviewed venue and that no manuscript substantially similar in content is currently under review or will be submitted to any peer-reviewed venue during the SIGGRAPH review period. Violations constitute grounds for immediate rejection. If you wish to submit revised or extended versions of Conference or workshop Papers, please directly submit to TOG instead of SIGGRAPH.  
 Plagiarism   
 A submission to the SIGGRAPH Technical Papers program should describe an original work of the authors. Authors must not use ideas or content originating from others without properly crediting their original sources. Note that such sources are not limited to peer-reviewed publications, but also include patents, textbooks, technical reports, theses, unpublished work posted on arXiv, as well as other posts on the World Wide Web. Failure to comply with this requirement will be considered plagiarism and result in rejection. For more details, please consult the guidance    provided by ACM.  
 Anonymity   
 The SIGGRAPH review process is fully double-blind: The committee members and external reviewers do not know the identity of the authors, and the authors do not know the identity of the reviewers. This anonymity is an integral part of an objective and fair review process, so authors are required to take all reasonable measures to preserve their anonymity. Specific instructions for preserving anonymity in your submission are discussed in the Submission Requirements  section. Rules on how to preserve anonymity before and after submission when communicating about the work with others are set forth in the SIGGRAPH 2025 anonymity policy   . Authors are expected to familiarize themselves with the policy and strictly adhere to it.  
 Citing And Comparison to Prior Art, including Prepublications   
 Authors are expected to cite, discuss differences and novelty, and compare results, if applicable and feasible, with respect to relevant existing publications, provided they have been published in a peer-reviewed venue before the SIGGRAPH submission deadline. This also applies to patents, which undergo a professional reviewing process. While quantitative and qualitative comparisons to published results can be reasonably requested by reviewers, authors are NOT required to compare to methods without published code or data, e.g., by reimplementing the methods.  
 Prepublications include technical reports, and other non-peer-reviewed publications, especially papers posted on arXiv. With the rapid progress of search engines and the increased perusal of arXiv papers by the scientific community, asking authors to thoroughly compare their work to these prepublications imposes an unreasonable burden: a seemingly relevant report that is incomplete in its disclosure or validation might appear online shortly before the deadline. While peer-reviewed publications are certainly not immune to these shortcomings, they have, at least, been judged sufficiently complete and valid by a group of peers.  
 Consequently, authors are not  required to discuss and compare their work with recent prepublications (arXiv, technical reports, theses, etc.), although they must properly cite  those that inspired them (see “Plagiarism”  above). We nevertheless encourage authors to mention all related works they are aware of as good academic practice dictates. Note that with new works posted on arXiv on a daily basis, it is increasingly likely that reviewers might point out similarities between the submitted work and online reports that have been missed by the authors. In this case, authors of conditionally accepted papers should be prepared to cite these prepublications in their final revision as concurrent work, without the burden of having to detail how their work compares to or differs from these prepublications. Authors may want to upload as supplementary material anonymized versions of any relevant tech report or arXiv posting of their own, if the work can be perceived to have overlap, in terms of contribution, with the submission.  
 Citing Own Prior Art   
 When citing already published work by the same (or an overlapping) group of authors, the citation should refer to that work in the third person, just as it would refer to any other previously published work by a completely different set of authors. For other relevant work from the same author(s) as the submission, we distinguish between two cases: (A) works that have been submitted for publication elsewhere, but have some relevance to and/or overlap with the submission; and (B) largely overlapping prepublications that are available online at the time of submission (arXiv, technical report, thesis, etc.).  
 For case (A), the other work (e.g., tech report, arXiv posting) should be cited anonymously, as well as provided as anonymous supplementary material. The authors must convince the reviewers that the current submission is sufficiently different from the other work, which can be done using an anonymous cover letter that outlines the differences. 
  For case (B), these earlier or largely similar versions of the submission that are publicly available (on arXiv, as a technical report, etc.) should | NOT | be cited in the submission, as this would identify the authors. Instead, these prepublications must be listed in the appropriate field of the submission form, titled “Prepublication.” This field is not visible to reviewers. 
  Ethics   
 Computer graphics have an increasing societal impact. Authors should be aware of the ACM Code of Ethics and Professional Conduct   and adhere to it. Authors should also adhere to the ACM Publications Policy on Research Involving Human Participants and Subjects   if human subjects are involved in their research. The Technical Papers Committee will judge each submission solely based on its technical merits and novelty. If a submission that the Technical Papers Committee recommends to accept raises an ethical issue, it will be forwarded to a relevant ACM body for ethics evaluation. This body can recommend changes to the submission or, in extreme cases, rejecting the work. The Technical Papers Chair will take the final decision in these cases.  
 Lobbying Reviewers   
 It is strictly prohibited to make any attempt to intervene in the review process. For example, it is inappropriate for an author to contact a committee member or a person they suspect to be a reviewer during the review process and mention the author’s own submission, even if the author does not explicitly ask for a favor. Committee members and reviewers will be asked to report such incidents and subsequently may be marked as conflicted and removed from the review process for that submission. For the most serious interventions, the submission may be rejected without completing the review process.  
   
 Back to Top    

 Submission Requirements  
     
  Submission Format   
 Technical Papers authors should prepare their documents according to the ACM SIGGRAPH publication guidelines    . All submissions should be prepared in ACM double-column format. For convenience, we recommend using the provided “acmtog” LaTeX Article Template Style, which is already in the correct format. The other templates (e.g., Word, Overleaf) might need adaptation to obtain double-column format. Please pay particular attention to the citation format for prior ACM SIGGRAPH Conference Papers, as specified in the ACM SIGGRAPH publication guidelines, because the proper format varies depending on the year of publication.  
 If you use LaTeX, please anonymize your initial submission with the following \documentclass command:  
 \documentclass[acmtog,anonymous,review]{acmart}  
 and add your assigned paper ID with:  
 \acmSubmissionID{paper ID}  
 Authors who use LaTeX must make certain that any packages they use in their paper are part of ACM’s list of accepted LaTeX packages — https://authors.acm.org/proceedings/production-information/accepted-latex-packages  . TAPS will reject submissions that use packages that are not part of this list. Authors can request that packages be added — see the documentation for information on that request process.  
 Please use the same formatting for both Journal and dual-track submissions.  For dual-track submissions, please follow the instructions in the section below regarding paper length and organization. Papers that do not conform to these instructions will not be considered for the conference track and may be desk rejected.  
 Please ensure that you are using version 2.09 or higher of the “acmart” class; earlier versions of the article template will not produce a valid submission. Download the latest acmart class along with other necessary materials here    . A LaTeX submission template    is provided for your convenience.  
 Authors are required to submit fully formatted papers, with graphs, images, and other special areas arranged as intended for final publication, using the ACM SIGGRAPH paper preparation guidelines. Be sure that all pages are numbered and contain your paper’s ID number. You should obtain this paper ID by completing the Online Submission Form before finalizing your paper. If your paper is accepted, you will receive instructions for formatting the final version, which will be different because, among other things, the authors’ names and affiliations will be included, and the pages will not be numbered.  
 Authors must submit their papers electronically. The only allowable format is Adobe PDF. We prefer that authors upload supplemental materials (anything except the paper) electronically, but physical submission is also possible. If there is some reason why electronic submission is impossible for you, please contact us via the Technical Papers Email Contact Form    well before the deadline. See How to Submit  for more information. For videos, we strongly encourage MP4, and for still images, we strongly encourage JPG or PNG. If you use another format, you are not guaranteed that reviewers will view them. In preparing videos, please choose a reasonable frame size and rate, but be prepared to submit a higher-resolution video if a section of your video is selected for the Papers Preview section of the Electronic Theater. If your supplemental materials amount to more than 100 MB of data, you are not guaranteed that reviewers will download and view them.  
 Preserving Anonymity in the Submission   
 Remove any information from your submission materials (paper, video, images, data, code, etc.) that identifies you, any of the other authors, and any of your institutions or places of work. In addition to not listing your names and affiliations in the paper, please omit acknowledgements (you will be able to add them back upon acceptance). If you are a well-known author with a possibly recognizable voice, do not narrate your video; get someone else to do it. You must reference all relevant work completely, including your own and that of the other authors. The detailed policy on how to cite these papers, including prepublications (arXiv, technical reports, etc.), theses, submitted work, and published work, is described in the “Citing Own Prior Art” section in the Submission Policy. Please read the instructions carefully before submitting your work.  
 We strongly discourage authors from including any URLs referring to websites that contain vital material for their submissions, with the exception of fully anonymized code/data that has to be accessed through an external link. We still prefer that the code/data is submitted as part of the supplementary material. The main reason is that accessing external websites runs a high risk of breaking anonymity, which will lead to desk rejections. SIGGRAPH reviewers are instructed to ignore URLs in paper submissions unless the information is deemed absolutely necessary for their review. Such decisions are made completely at the reviewers’ discretion.  
 Please keep the PDF version anonymous; in particular, note that under some operating systems the “properties” of a PDF file may contain the creator’s name. Also, Version 7 PDF files allow inclusion of a script that will contact the author each time the file is opened. Do not include this script in your PDF file; if we find it, we will reject your paper without review. Make sure that no submitted files contain any information about the authors in the metadata.  
 Paper Length   
 Journal-only submissions have no maximum (or minimum) length. Have a look at previous proceedings to get a sense of the range of paper lengths, where typical lengths are between 8 and 12 pages, not including references, though the variation is large. For Journal Papers that are conditionally accepted, the final paper length may increase when approved by the primary reviewer.  
 Dual-track submissions are required to adhere to the following length constraints: Papers must be no longer than 7 pages excluding references and figures-only pages. There is no limit on the length of the reference section. Each paper can have at most two figures-only pages, placed at the end of the submission, after references.  Figures-only pages can contain only figures and their caption (i.e., no tables). Authors can also include as many figures as they wish within the core 7 pages. Any appendix can only be included as supplementary material and not part of the main paper.  Papers will not be considered for conference publication if they exceed the page limit, are not submitted using the formatting described in the section “Submission Format,” or appear to alter the format to bypass the page limit. Post-acceptance, authors of papers accepted to the Conference track can add one additional page to the final-format papers to accommodate the author list, author affiliations, copyright, and acknowledgements (no other content should be added, i.e., the anonymous version still needs to fulfill the length requirements discussed before).  
 The submitted paper should stand on its own, allowing evaluation of the main ideas without reliance on supplemental material. For example, main results and discussion of the method must be in the submission; extra ablation studies, additional comparisons, implementation details, and similar material can be provided in the supplemental material. Animated results may be included as an accompanying video.  
 For all submissions, clarity of writing is considered vital to a high-quality submission. Papers may be perceived as too long if they are repetitive or verbose or too short if they omit important details or neglect relevant prior art.  
 Companion Videos   
 Papers may be accompanied by a video that is five minutes or less in duration. In recent years, well over half of the accepted papers were accompanied by some kind of video material. To the extent possible, accepted papers should stand on their own, with the video providing supplementary information or visual confirmation of results. However, it is fine to refer to the video in the paper, in which case the video should be submitted under Supplementary Materials, part A in the submission form, as described below. A video should not be included in a submission unless substantively similar footage can later publicly appear in the ACM Digital Library. If your paper is accepted and you cannot comply with this requirement because of copyright or permission problems, your paper’s acceptance will be rescinded.  
 Supplemental Materials   
 Authors are invited, but not required, to include supplemental materials such as additional implementation details, ablations, comparisons, additional images or videos, related papers, derivations, or results, as well as code and data files (so that reviewers can reproduce results in the paper). These materials will be viewed only at the discretion of the reviewers, who are only obligated to read the paper itself.  These materials must be anonymized  , so that they can be made available to all reviewers. There are two separate parts in the online submission form for uploading supplementary materials:  
 A) Anonymous supplemental materials that are considered part of the submission, and that you are committing to provide for the ACM Digital Library if your paper is accepted.  
 B) Anonymous materials that you are submitting to help in the review process but do not plan to submit to the ACM Digital Library.  
 For instance, in addition to videos, A) may include some code, and a .zip archive containing result images and some text files, such as detailed user-study results or other appendices associated to your submission. B) may include anonymized versions of related papers from the same authors currently under review or in press elsewhere, together with an anonymous cover letter that outlines the differences between the submission and these other papers. In case of resubmission with reviewer continuity, the cover letter explaining how you took into account previous reviews and listing the improvements in your method should be there, too.  
 Resubmissions   
 If your paper is a revision of a paper that has previously been submitted to a SIGGRAPH or SIGGRAPH Asia conference, we recommend (but do not require) that when you fill out the submission form you identify it as a resubmission, and select the option that allows the previous review materials (reviews, reviewer discussions, summaries, etc.) to be made available to the Technical Papers Committee. Please indicate the latest conference that your paper was submitted to and its paper ID at the time. If you choose to use this option, your paper may be assigned to some or all of the previous reviewers, and all reviewers will have access to suitably anonymized versions of the prior review materials. We encourage you to choose this option if you consider the paper to be derived from the previous version, even if the paper has been substantially rewritten and authors have been added. It will result in more consistent reviews and decrease the chance that a new set of reviewers will want completely different changes than those you made in response to the reviews of your earlier submissions. This option also has the added side benefit of reducing the overall burden on the volunteer reviewing community. Note that simply responding to all earlier criticisms will not guarantee acceptance. If you resubmit with reviewer continuity, you should include a cover letter within the anonymous supplementary materials, part B, in order to explain the changes you made to the paper and how you improved your work and its exposition since the last review cycle. If you resubmit without continuity, you may still choose to submit a similar anonymous cover letter to make it easier for recurring reviewers to understand the changes that have been made since the previous submission.  
 Permissions and Copyrights   
 You must have permission from the owner or copyright holder to use any images or video (or provide rationale for using them without permission) that you do not own in your submitted paper or supplementary material. ACM has a clear policy and procedures for handling Third-Party Material   . If your submission is accepted, you will be asked to provide a signed rights form, which is required by ACM before your paper can be published. The contact author of each paper will receive an email message from ACM Rights Review containing instructions and a link to the rights form, which is completed online.  
 Authors of accepted Technical Papers are required to complete the ACM Rights Form prior to publication. They also are required to upload final versions of all public supplementary materials (Part A) that were originally part of their submission.  
 If the contact author for an accepted paper is affiliated with an institution that is part of the ACM OPEN program, and their e-mail address is associated with that institution, their paper can be published Open Access without having to pay the APC. If you are the contact author for a paper and your institution is part of that program, make sure you are using your institution’s email address and not a personal email address for correspondence.  
   
 Back to Top    

 Evaluation  
     
  The Technical Papers Committee and a set of external (i.e., tertiary) reviewers, both consisting of recognized experts, will review submitted papers. Then, at the committee meeting, the committee will select the papers to be presented at SIGGRAPH 2025 and published in either a special issue of ACM Transactions on Graphics  or in the SIGGRAPH Conference Proceedings in the ACM Digital Library.  
 The Technical Papers review process will be conducted by (1) the Technical Papers Chair, who was chosen by the SIGGRAPH 2025 Conference Chair and approved by the ACM SIGGRAPH Executive Committee and its Conference Advisory Group; (2) the Assistant Technical Papers Chair, chosen by the Technical Papers Chair; (3) the Technical Papers Advisory Board, consisting of past and future Technical Papers Chairs and other trusted and experienced advisors, chosen by the SIGGRAPH 2025 Technical Papers Chair; (4) the Technical Papers Committee, chosen by the Technical Papers Chair with the assistance of the members of the Technical Papers Advisory Board, and consisting of about 100 people whose expertise spans the entire field. Both Journal-only and dual-track submissions will be reviewed by the same Technical Papers Committee. The Technical Papers Chair will work with the Technical Papers Committee and the tertiary reviewers to evaluate each valid submission.  
 The Review Process   
 After the submission deadline, the Technical Papers Chair and several others selected by the Technical Papers Chair will conduct the paper sort. During this meeting, they assign each paper to two senior reviewers, called the primary and secondary reviewers, who are members of the Technical Papers Committee. All parties participating in the review process enter their conflict of interest data into the submission system ahead of time. The Technical Papers Chair does not make assignments or review papers. Rather, it is the job of the chair to facilitate the process. Papers that are inappropriate may be desk rejected during this assignment process without being sent to any senior reviewers. Papers rejected at this stage would include those that are clearly off topic for SIGGRAPH 2025, discovered to have been published previously or to have been submitted simultaneously to another conference or journal, breaking anonymity or format requirements in the submission, or clearly below the minimum quality standard of a SIGGRAPH paper. For more details, see | Submission Policy | and | Frequently Asked Questions | . 
  The two assigned senior reviewers may, upon conferring with each other and the Technical Papers Chair, recommend a paper to be rejected without additional review. A paper will normally be rejected at this stage only if it falls into one of the categories listed in phase one, but this fact was not detected during the paper sort. 
  Each paper is distributed to three or more additional experts, called tertiary reviewers. These reviewers are selected by the primary and the secondary reviewers. The identity of the authors is not revealed to any of the reviewers. The primary and the secondary reviewer are warned by the submission system, Linklings, if their selection of tertiary reviewers would result in a conflict of interest. For each reviewed paper, all tertiary reviewers and the secondary write full reviews, while the primary may write a meta-review. See the | Review Form | and | Reviewer Instructions | . Thus, at least four full reviews are written for each paper that has not been rejected during phases one and two. In unusual cases, such as when a tertiary reviewer fails to deliver a review on time, papers may receive less than four reviews. However, if a paper receives fewer than four reviews, additional reviewers will be found, possibly from the committee. For more details, see the | Review Process | section in the | Technical Papers FAQ | . 
  After all reviews are complete, the review system allows the authors access to the reviews and scores for their papers on | 10 March 2025 | . Then, authors have until | 17 March 2025, | 22:00 UTC/GMT, | to enter rebuttals if they feel the reviewers have made substantive errors or to answer specific questions posed by the reviewers. The rebuttal is confined to 1,000 words in length (plain text) and must be self-contained. For instance, URLs to additional material are not allowed. The rebuttal period is for addressing factual errors in the reviews, not for providing revised text or new results. Any such novel material will be ignored by the reviewers. For more details, see the | Rebuttal Process | section of the | Technical Papers FAQ | . 
  Between the end of the rebuttal period and the committee meeting, the senior reviewers will read all the submitted reviews (at least four), as well as the author rebuttals, confer intensively about the paper, and prepare a recommendation for the committee meeting. The three tertiary reviewers will see the author rebuttals and will participate in discussions about the paper. Due to the double-blind review process, the authors must maintain anonymity in their rebuttals. In addition, the tertiary reviewers do not know each other’s identities, so they too must maintain anonymity during the discussion. The preliminary recommendation agreed on at this stage will be either “conditionally accepted” or “rejected.” If an agreement on the recommendation cannot be reached, a third option is to “table” the paper for further review and discussion during the final Technical Papers Committee meeting. 
  If a paper is tabled, the senior reviewers will select one or more other members of the Technical Papers Committee to write extra reviews of the paper and be prepared to discuss it in detail at the meeting. The extra reviews will be written during the week before the committee meeting. If consensus still cannot be reached, it is even possible that additional extra reviews will be assigned during the meeting itself. Any extra paper reviews will be provided to the authors after the meeting. 
  The full Technical Papers Committee meets to finalize conditional acceptance or rejection of each paper. In cases where a consensus on a paper was not reached during the pre-meeting discussion phase, additional committee members may read the paper, and their evaluations will be taken into account in the decision. Submissions will either be accepted as a Journal Paper or a Conference Paper. 
  Members of the Technical Papers Committee, including the chairs, are not present when papers for which they have conflicts of interest are discussed. Papers are judged solely on their merit, as determined by the reviews. Although the acceptance rate of SIGGRAPH papers has remained stable in the range of ~20-30%, there is no quota for the number of papers that should be accepted by the SIGGRAPH 2025 Technical Papers Committee; this number will arise organically from the actions of the committee.  
 Possible Outcomes for a Paper   
 Email notifications of the Technical Papers Committee’s decisions will be sent following the committee meeting (see the Timeline  below). The notifications will place each paper in one of the following categories.  
 Conditionally accepted Journal Paper for presentation at SIGGRAPH 2025. | The committee provides a list of required changes that must be performed to the paper for the work to be published. 
  Conditionally accepted Conference Paper for presentation at SIGGRAPH 2025. | The committee provides a list of required changes that must be performed to the paper for the work to be published, limited to changes that are satisfiable within the current page limits. 
  Rejected from SIGGRAPH 2025. | Submissions that were deemed not suitable for the conference, or too flawed or incomplete to be accepted, will be rejected. In some cases, the reviewers may find enough merit in the submission that they encourage the authors to consider resubmitting to either | ACM Transactions on Graphics | or a future SIGGRAPH conference, with reviewer continuity. The review summary includes a set of suggested changes. 
  Conditionally accepted papers undergo a second reviewing process, in which a member of the Technical Papers Committee verifies that the final version of the paper is acceptable, i.e., that any required changes have been made, and that other changes made by the authors have not compromised the paper in any way. This second and final stage determines the final acceptance status of all papers. The referees’ decisions are final. Papers that do not satisfy the referees in the second stage of reviewing and/or that are not uploaded in final form by the final deadline, together with the original or revised versions of the submitted supplementary material, will be rejected. One author of the paper, or an author’s designate in the unlikely event that none of the authors could attend the conference, must commit to presenting the paper in person at the SIGGRAPH 2025 conference in Vancouver, Canada.  
   
 Back to Top    

 Upon Acceptance  
     
  Authors of papers conditionally accepted by the committee must revise their submission for the second round of reviewing and deliver that material to Linklings. Once the reviewers have approved the paper, authors will finalize the preparation of their camera-ready paper and deliver the source of that paper, and any supplemental materials, to TAPS for publication. Accepted Conference Papers will appear in the conference proceedings, and Journal Papers will be published as a special issue of ACM Transactions on Graphics.   
 TAPS is ACM’s article processing system, which accepts LaTeX or Word source documents and prepares the formatted PDF and HTML5 versions of one’s article for publication in the ACM Digital Library. The use of TAPS replaces the need for authors to prepare and deliver “camera-ready” materials to Linklings. Information on preparing and delivering materials to TAPS can be found here    . Conference Track papers go through TAPS, and Journal Track papers go through Linklings.   
 Notification of conditional acceptances and rejections will be sent to authors, along with any extra reviews and possibly a list of required changes (see Timeline  below). A member of the Technical Papers Committee, typically the primary reviewer, will be assigned as referee for the revision cycle.  
 A few days after notification, any changes to the paper title along with a 50-word description of your paper suitable for the web site will be submitted in the “Stage 3 Program Material” form. Note: changes to the paper title must be approved by your referee. For Journal Papers, changes to paper length must be approved by the referee, and extensions of more than one page are unlikely to be granted. Papers accepted to the conference program can be extended by one page in the camera-ready version only to accommodate the author list, author affiliations, and acknowledgements (no other content should be added, i.e., the anonymous version still must fulfill the paper length requirements discussed before). In addition, after the final version has been approved, the authors may integrate figures included in the two figures-only pages of the submission into the main text, resulting in a total of at most 10 pages plus references.  
 The deadlines for the revised version and final version of your paper are listed in the Timeline below. During the week between these two dates, the referees and authors will communicate via the bulletin board process about the adequacy of the changes in the revisions. Sometimes, changes are not initially considered adequate, or introduce new problems, so further revision may be required. It is recommended to submit the initial revised version sooner than the deadline in order to provide more time for iterated revisions. It is hoped that all conditionally accepted papers will be accepted by the end of this process, but this is not guaranteed. When writing successive revisions, the referee’s job is made easier if authors use a different color for the added or revised text in each new version. (Please remember to remove these colors in the final version.) It also helps to describe the changes in the bulletin board post to which the revision is attached.  
 ORCID Mandate   
 ACM requires that all accepted journal authors  register and provide ACM with valid ORCIDs prior to paper publication. Corresponding authors are responsible for collecting these ORCIDs from co-authors and providing them to ACM as part of the ACM eRights selection process.  
 You and your co-authors can create and register your ORCIDs at https://orcid.org/register  . ACM only requires you to complete the initial ORCID registration process. However, ACM encourages you to take the additional step to claim ownership of all of your published works via the ORCID site.  
 Papers Fast Forward Session   
 For each accepted paper, one author is required to participate in the Papers Fast Forward session on-site in Vancouver, Sunday, 10 August 2025. In addition to the material that is part of your publication, you will be asked to provide a short presentation for the Papers Fast Forward. The authors will be allowed 20 seconds to summarize the paper and entice attendees to attend their complete paper presentation during the conference week. The deadline for the Papers Fast Forward pre-recorded video is 30 June 2025. Additional information will be provided upon acceptance.  
 In-Person Presentation   
 For each accepted paper, one author is required to present in-person at SIGGRAPH 2025 in Vancouver, 10-14 August 2025. Following the oral presentations, the author is expected to participate in an interactive discussion poster session where they will have the opportunity to interact with participants in a more intimate setting. Additional information will be provided upon acceptance including live streaming and recording details.  
 Presenter Recognition   
 Contributor Registration Benefit: One author per accepted Paper receive a 25% discount on Full Conference registration.  
 To present your Paper at SIGGRAPH 2025, authors must be registered at the Full Conference registration level.  
 You will receive an email by early June explaining how to access the registration discount code as well as instructions for registering. The author using the discount code is eligible for the early-bird registration rate regardless of when registration is completed. Any additional authors who will be presenting the paper are required to register at the appropriate registration level for the program, and prevailing registration rates will apply.  
 Authorization for Use   
 Any material that supports a paper’s acceptance for publication must be available as part of the final publication (see Submission Requirements)  . Thus, all material uploaded for review in the “public materials that are considered part of the submission” section of the submission form, including supplementary text, images, and videos, are subject to the ACM copyright policy, and the required permission forms must be completed upon acceptance. If it subsequently becomes apparent that the necessary permissions cannot be given for publication of material that is substantially similar to that submitted for review, acceptance of the paper may be withdrawn. Upon acceptance, authors must deliver final versions of their papers and their supplementary material, which will be made available to subscribers to the ACM Digital Library via the web page associated with their TOG papers.  
 Please be aware that ACM has updated its copyright policy to give authors the options of retaining copyrights on some materials or to pay fees that enable free access. You can read about the policy here     or a more concise summary here    . Authors of accepted Technical Papers are required to complete the ACM Rights Form prior to publication. For every supplemental file originally uploaded as part of your submission, you must upload either copies of the originally submitted material (now in non-anonymized form) or updated versions of this material to the online submission system’s final versions page (see the Timeline below for the deadline)  .  
 Technical Papers Preview Trailer   
 A Technical Papers Preview Trailer will be prepared from selected parts of the videos accompanying accepted papers. The preview will appear in the Electronic Theater at the conference and may also be used to publicize the Technical Papers program inside and outside the conference, like on the web. If a section of your video is selected, you will be asked to provide a high-quality rendering of that clip. Therefore, if you submit a video accompanying your paper, please keep your raw data available for that purpose.  
 ACM Rights Management Form   
 If your work is accepted for presentation at SIGGRAPH 2025, you must complete the ACM Rights Management Form. The form will be sent to all submitters whose work is accepted.  
 Your representative image and text may be used for promotional purposes. Several SIGGRAPH 2025 programs may prepare preview videos for pre-conference promotion of accepted content, which may include a portion of the video you submitted for review. You have the option to grant or deny us the ability to use the representative image and submitted video for these purposes.  
   
 Back to Top    

 Timeline  
     
  All deadlines are 22:00 UTC/GMT unless otherwise noted  
 16 January 2025   
  Submission form deadline   
  One of the authors must start a submission in the online submission system “Linklings” and provide basic information about the paper, including the complete list of authors and abstract. All authors must enter their complete and valid conflict of interest and research expertise data in Linklings by this deadline.  
 23 January 2025   
  Paper deadline   
  Basic information about your submission such as contact details of the corresponding authors, paper title, paper length, are required. Additionally, the submitted paper in PDF format and a representative image must be uploaded, along with any video, code and data, and other supplemental material if applicable. Alternatively, MD5 checksums may be uploaded in lieu of any of the files involved in the submission.  
 24 January 2025   
  Upload deadline   
  If MD5 checksums were submitted by the Paper deadline (as described above), files that match the checksums can be submitted until this deadline.  
 10 March 2025   
  Reviews available for authors & rebuttal begins  
 17 March 2025   
  Rebuttals due  
 31 March 2025   
  Decisions announced  
 29 April 2025   
  Revised paper submitted by authors for final review  
 6 May 2025   
  Final version deadline  
 30 June 2025   
  20-second pre-recorded Papers Fast Forward video deadline  
 27 July 2025   
  Official publication date for both the SIGGRAPH 2025 Conference Papers Proceedings and the Technical Papers TOG Issue (Volume 44, Issue No. 4 of ACM Transactions on Graphics  ).  
 Please Note:  The official publication date is the date the proceedings are made available in the ACM Digital Library. This date may be up to two weeks prior to the first day of your conference. The official publication date affects the deadline for any patent filings related to published work. (For those rare conferences whose proceedings are published in the ACM Digital Library after the conference is over, the official publication date remains the first day of the conference.)  
 10 August 2025   
  Papers Fast Forward Session  
 10-14 August 2025   
  SIGGRAPH 2025  
  Vancouver Convention Centre  
  Vancouver, Canada  
   
 Back to Top    

 Diversity, Equity, and Inclusion  
     
  SIGGRAPH prioritizes conversations and industry contributions that spotlight how diversity, equity, and inclusion makes our communities, industries, and teams stronger. Conference programs provide a safe place to grow, discuss, and learn from one another and to bridge boundaries with the goal of making our community more inclusive and accessible to all. SIGGRAPH encourages submissions that spotlight DEI content across every SIGGRAPH program.  
   
 Back to Top    

 Submissions  
 Deadline  
 Submissions Form & Conflicts  
 Thu, 16 January 2025  
  22:00 +00:00 GMT  
 Thu, 16 Jan 2025 22:00 +00:00  2025-01-16 22:00:00  Submit  Convert Time Zone    
 Deadline  
 Paper Deadline  
 Thu, 23 January 2025  
  22:00 +00:00 GMT  
 Thu, 23 Jan 2025 22:00 +00:00  2025-01-23 22:00:00  Submit  Convert Time Zone    
 Deadline  
 Upload Deadline  
 Fri, 24 January 2025  
  22:00 +00:00 GMT  
 Fri, 24 Jan 2025 22:00 +00:00  2025-01-24 22:00:00  Submit  Convert Time Zone    
   
 Additional Links  
 Technical Papers Submissions FAQs   
 English Review Service for Submissions   
 Anonymity Policy   
   
 Share This Page  
  Facebook    Twitter    LinkedIn     
 Technical Papers Chair  
    
 Richard Zhang   

  SIGGRAPH 2025  
 Convention Centre, Vancouver, BC, Canada  
 Join Us 10–14 August  
   
 Register   
   
 Submit   
   
 Exhibit   

 Sponsor SIGGRAPH  
 Sponsor Opportunities 
  Job Fair Opportunities 
    
 Resources  
 For The Press 
  For Participants 
    
 Directories  
 Sitemap 
  2025 Committee 

 Get in Touch  
 Contact Us 
  Join Mailing List 
    
 ACM Policies & Blog  
 Anti-Harassment 
  ACM Privacy Policy 
  ACM SIGGRAPH Blog 
    
 #SIGGRAPH2025  
 News & Events 
   Facebook    Twitter    Instagram    YouTube    LinkedIn     

 © 2024 SIGGRAPH. All rights reserved.  
 The 52nd International Conference & Exhibition On Computer Graphics & Interactive Techniques  

    Conference 
  Programs 
  Exhibit | Exhibit at SIGGRAPH 
  Sponsorship Opportunities 
  Job Fair Opportunities 
  Exhibitor Resources 
  Donate 
  Attend | Why Attend? 
  General Conference Information 
  Travel Accommodations 
  Health & Safety 
  Job Fair 
  Volunteer | SIGGRAPH 2025 Committee 
  Conference Volunteer Opportunities 
  ACM SIGGRAPH Organization Volunteers 
  Submit 
  Register 
  Search Site 

    Important dates data: 
undefined

20. Conference SCA_2:
Skip Navigation  SIGGRAPH 2025 submissions are now open! | Submit 
  Celebrate the season of giving by contributing a donation to SIGGRAPH 2025! | Donate Now 

    SIGGRAPH 2025     
   
 Conference 
  Programs 
  Exhibit | Exhibit at SIGGRAPH 
  Sponsorship Opportunities 
  Job Fair Opportunities 
  Exhibitor Resources 
  Donate 
  Attend | Why Attend? 
  General Conference Information 
  Travel Accommodations 
  Health & Safety 
  Job Fair 
  Volunteer | SIGGRAPH 2025 Committee 
  Conference Volunteer Opportunities 
  ACM SIGGRAPH Organization Volunteers 
  Submit 
  Register 
    
  search     

  Menu     
  
 Year-Round Interactions  
 ACM SIGGRAPH Volunteers  
 ACM SIGGRAPH  is the Special Interest Group on Computer Graphics and Interactive Techniques, a special interest group within ACM that serves as an interdisciplinary community for members in computer graphics and interactive techniques. Beyond the annual SIGGRAPH conference, ACM SIGGRAPH welcomes dedicated industry leaders to contribute to the community year-round. Discover how you can get involved with ACM SIGGRAPH.  
 Get Involved   

  SIGGRAPH 2025  
 Convention Centre, Vancouver, BC, Canada  
 Join Us 10–14 August  
   
 Register   
   
 Submit   
   
 Exhibit   

 Sponsor SIGGRAPH  
 Sponsor Opportunities 
  Job Fair Opportunities 
    
 Resources  
 For The Press 
  For Participants 
    
 Directories  
 Sitemap 
  2025 Committee 

 Get in Touch  
 Contact Us 
  Join Mailing List 
    
 ACM Policies & Blog  
 Anti-Harassment 
  ACM Privacy Policy 
  ACM SIGGRAPH Blog 
    
 #SIGGRAPH2025  
 News & Events 
   Facebook    Twitter    Instagram    YouTube    LinkedIn     

 © 2024 SIGGRAPH. All rights reserved.  
 The 52nd International Conference & Exhibition On Computer Graphics & Interactive Techniques  

    Conference 
  Programs 
  Exhibit | Exhibit at SIGGRAPH 
  Sponsorship Opportunities 
  Job Fair Opportunities 
  Exhibitor Resources 
  Donate 
  Attend | Why Attend? 
  General Conference Information 
  Travel Accommodations 
  Health & Safety 
  Job Fair 
  Volunteer | SIGGRAPH 2025 Committee 
  Conference Volunteer Opportunities 
  ACM SIGGRAPH Organization Volunteers 
  Submit 
  Register 
  Search Site 

    
Call for papers data: 
undefinedImportant dates data: 
undefined

21. Conference SBAC-PAD_3:
Open main menu       
 Principal 
  Notícias 
  Eventos | SBAC-PAD 
  SSCAD 
  ERADs 
  Documentos | Regimento 
  Atas das Assembléias 
  Editais 
  Identidade Visual 
  Homenagens 
  Coordenação | Geral e Comitês 
  Comissões Regionais 
  Contato | CE-ACPAD 
  Sobre a SBC 

 SBAC-PAD   
   
 Por: Márcio Castro    
 Em: 09/05/2023  

 The IEEE International Symposium on Computer Architecture and High Performance Computing (SBAC-PAD)   is an annual conference series held since 1987. The conference presents the latest developments in High Performance Computing, Computer Architecture and Parallel and Distributed Systems.  
 SBAC-PAD is open for faculty members, researchers, specialists, undergraduate and graduate students around the world. Its scientific program is elaborated from the result of high quality submitted papers, where only the best ones are selected by a peer reviewing process to be presented at the conference. The conference has the involvement of numerous academic institutions and national research, public and private companies and research groups involved in technological innovation in Information Technology (IT).  
 The conference has a solid international reputation, with regular submissions from dozens of countries yearly. It is also known for its highly competitive and rigorous review process, highlighting its commitment to ensuring that showcased research is highly innovative and impactful. SBAC-PAD proceedings are published by IEEE and available at IEEE Xplore.  
 Next Edition  
 XXXVII Symposium on Computer Architecture and High Performance Computing (SBAC-PAD 2025)  
  28-31 October, 2025 – Bonito/MS   
 Previous Editions  
  
 Edition | Submitted | Accepted | Acceptance Rate 
 SBAC-PAD 2024  (Hilo, USA) | 55 | 21 | 38% 
 SBAC-PAD 2023  (Porto Alegre, Brazil) | 68 | 23 | 34% 
 SBAC-PAD 2022  (Bordeaux, France) | 96 | 34 | 35% 
 SBAC-PAD 2021  (Belo Horizonte, Brazil) | 53 | 21 | 39% 
 SBAC-PAD 2020  (Porto, Portugal) | 87 | 30 | 34% 
 SBAC-PAD 2019  (Campo Grande, Brazil) | 69 | 24 | 35% 
 SBAC-PAD 2018  (Lyon, France) | 108 | 30 | 27% 
 SBAC-PAD 2017  (Campinas, Brazil) | 73 | 23 | 32% 
 SBAC-PAD 2016  (Los Angeles, USA) | 77 | 27 | 35% 
 SBAC-PAD 2015  (Florianopólis, Brazil) | 102 | 26 | 25% 
 SBAC-PAD 2014  (Paris, France) | 132 | 43 | 32% 
 SBAC-PAD 2013  (Porto de Galinhas, Brazil) | 108 | 28 | 26% 
 SBAC-PAD 2012  (New York, USA) | 128 | 36 | 28% 
 SBAC-PAD 2011  (Vitória, Brazil) | 76 | 26 | 34% 
 SBAC-PAD 2010  (Petrópolis, Brazil) | 100 | 30 | 30% 
 SBAC-PAD 2009  (São Paulo, Brazil) | 60 | 21 | 35% 
 SBAC-PAD 2008  (Campo Grande, Brazil) | 57 | 22 | 38% 
 SBAC-PAD 2007  (Gramado, Brazil) | 107 | 32 | 30% 
 SBAC-PAD 2006  (Ouro Preto, Brazil) | 71 | 23 | 32% 
 SBAC-PAD 2005  (Rio de Janeiro, Brazil) | 83 | 29 | 35% 
 SBAC-PAD 2004  (Foz do Iguaçu, Brazil) | 93 | 32 | 34% 
 SBAC-PAD 2003  (São Paulo, Brazil) | 103 | 31 | 30% 
 SBAC-PAD 2002  (Vitória, Brazil) | 74 | 25 | 34% 
 SBAC-PAD 2001  (Pirenópolis, Brazil) | 84 | 32 | 38% 
 SBAC-PAD 2000 (São Pedro, Brazil) | 70 | 41 | 58% 
 SBAC-PAD 1999 (Natal, Brazil) | 90 | 43 | 48% 

  CE-ACPAD     
 Realização  
     
 Eventos Principais  
 SBAC-PAD 
  WSCAD 
    
 Escolas Regionais  
 ERAD/RS 
  ERAD/SP 
  ERAD/RJ 
  ERAD/NE 
  ERAD/CO 

  © 2024 Alisson Steffens  . All Rights Reserved.    

  
Call for papers data: 
undefinedImportant dates data: 
undefined

22. Conference SCA_3:
Skip Navigation  SIGGRAPH 2025 submissions are now open! | Submit 
  Celebrate the season of giving by contributing a donation to SIGGRAPH 2025! | Donate Now 

    SIGGRAPH 2025     
   
 Conference 
  Programs 
  Exhibit | Exhibit at SIGGRAPH 
  Sponsorship Opportunities 
  Job Fair Opportunities 
  Exhibitor Resources 
  Donate 
  Attend | Why Attend? 
  General Conference Information 
  Travel Accommodations 
  Health & Safety 
  Job Fair 
  Volunteer | SIGGRAPH 2025 Committee 
  Conference Volunteer Opportunities 
  ACM SIGGRAPH Organization Volunteers 
  Submit 
  Register 
    
  search     

  Menu     
  
 Visionary Ideas Propel Our Future  
 Submit to SIGGRAPH  
 We seek to showcase excellence and innovation across many disciplines in many formats. As the source of inspiration year after year, we invite you, our contributors, to submit your latest work in research, art, production, technology, and more. Your ingenuity and vision are transforming technology and storytelling to create a future that connects our physical and digital worlds with incredible potential for advancing the human story. Our juries of experts provide high-quality reviews and feedback. Which program is the best venue for your innovation? Click on a program for an overview and submissions details. We value excellence and pushing boundaries, and we want to help you find the right venue fit for innovative work. Contact program chairs  for additional information. Programs are now accepting submissions.  

 Submit Today  
 Programs Accepting Submissions  
   
 Technical  
  Papers  
 Submissions Form & Conflicts  

 Deadline  16 Jan 2025    

 Technical  
  Papers  
 Paper Deadline  

 Deadline  23 Jan 2025    

 Technical  
  Papers  
 Upload Deadline  

 Deadline  24 Jan 2025    

 Art  
  Papers  
 Long  

 Deadline  16 Jan 2025    

 Art  
  Papers  
 Short  

 Deadline  16 Jan 2025    

 Talks  

 Deadline  18 Feb 2025    

 Production  
  Sessions  

 Deadline  18 Feb 2025    

 Panels  

 Deadline  18 Feb 2025    

 Courses  

 Deadline  18 Feb 2025    

 Educator’s Forum  

 Deadline  18 Feb 2025    

 Computer Animation Festival  

 Deadline  To Be Announced    

 Real-Time Live!  

 Deadline  To Be Announced    

 Spatial Storytelling  

 Deadline  To Be Announced    

 Immersive  
  Pavilion  

 Deadline  18 Feb 2025    

 Art  
  Gallery  

 Deadline  28 Jan 2025    

 Posters  

 Deadline  To Be Announced    

 Labs  

 Deadline  18 Feb 2025    

 Emerging  
  Technologies  

 Deadline  18 Feb 2025    

 Birds of a Feather  

 Deadline  To Be Announced    

 Appy  
  Hour  

 Deadline  18 Feb 2025    

 Student Volunteers  
 SVSC Applications  

 Submissions Closed    

 Student  
  Volunteers  
 Team Leader Applications  

 Deadline  31 Jan 2025    

 Student  
  Volunteers  
 Volunteer Applications  

 Deadline  28 Feb 2025    

 Student Research Competition  

 Deadline  To Be Announced    

 Learn  More    

  SIGGRAPH 2025  
 Convention Centre, Vancouver, BC, Canada  
 Join Us 10–14 August  
   
 Register   
   
 Submit   
   
 Exhibit   

 Sponsor SIGGRAPH  
 Sponsor Opportunities 
  Job Fair Opportunities 
    
 Resources  
 For The Press 
  For Participants 
    
 Directories  
 Sitemap 
  2025 Committee 

 Get in Touch  
 Contact Us 
  Join Mailing List 
    
 ACM Policies & Blog  
 Anti-Harassment 
  ACM Privacy Policy 
  ACM SIGGRAPH Blog 
    
 #SIGGRAPH2025  
 News & Events 
   Facebook    Twitter    Instagram    YouTube    LinkedIn     

 © 2024 SIGGRAPH. All rights reserved.  
 The 52nd International Conference & Exhibition On Computer Graphics & Interactive Techniques  

    Conference 
  Programs 
  Exhibit | Exhibit at SIGGRAPH 
  Sponsorship Opportunities 
  Job Fair Opportunities 
  Exhibitor Resources 
  Donate 
  Attend | Why Attend? 
  General Conference Information 
  Travel Accommodations 
  Health & Safety 
  Job Fair 
  Volunteer | SIGGRAPH 2025 Committee 
  Conference Volunteer Opportunities 
  ACM SIGGRAPH Organization Volunteers 
  Submit 
  Register 
  Search Site 

    
Call for papers data: 
  Skip Navigation  SIGGRAPH 2025 submissions are now open! | Submit 
  Celebrate the season of giving by contributing a donation to SIGGRAPH 2025! | Donate Now 

    SIGGRAPH 2025     
   
 Conference 
  Programs 
  Exhibit | Exhibit at SIGGRAPH 
  Sponsorship Opportunities 
  Job Fair Opportunities 
  Exhibitor Resources 
  Donate 
  Attend | Why Attend? 
  General Conference Information 
  Travel Accommodations 
  Health & Safety 
  Job Fair 
  Volunteer | SIGGRAPH 2025 Committee 
  Conference Volunteer Opportunities 
  ACM SIGGRAPH Organization Volunteers 
  Submit 
  Register 
    
  search     

  Menu     
  
 The Apex of Innovation  
 Technical Papers  
 Technical Papers is the premier venue for disseminating and discussing scholarly work in computer graphics and interactive techniques. This core conference program features researchers who unveil the most esteemed breakthroughs that contribute to shaping and improving our collective future.  

 Welcome to SIGGRAPH 2025  
 Submit to Technical Papers  
 The SIGGRAPH 2025 Technical Papers program spans areas including but not limited to animation, simulation, imaging, geometry, modeling, rendering, human-computer interaction, haptics, fabrication, robotics, visualization, audio, optics, programming languages, immersive experiences, generative AI,  and machine learning for visual computing.  
 Building a desirable future through computer graphics and interactive techniques starts with you and your contributions to and participation in SIGGRAPH 2025. We are excited that you are submitting your paper for consideration.  
 At SIGGRAPH 2025, the Technical Papers program will have two integrated paper tracks: Journal ( ACM Transactions on Graphics  ) and Conference.  
 Journal Papers | are expected to satisfy the ACM TOG criteria of excellence established over the years, and present novel, well validated, and comprehensively described research advancing computer graphics and interactive techniques. Papers accepted to the Journal track will be published in the SIGGRAPH 2025 issue of | ACM Transactions on Graphics (TOG). 
  Conference Papers | are expected to present novel research advancing computer graphics and interactive techniques. However, the evidence supporting these advances might not be as comprehensive as expected for Journal Papers. The length of papers accepted to this track is | capped | as outlined in the “Journal vs. Conference” table below. Papers accepted to the conference track will be published in the SIGGRAPH 2025 Conference Proceedings. 
  At submission time, authors can indicate if their submission should be considered for the Journal track only  or whether they want the submission to be considered for both tracks, i.e., as a “dual-track submission.”   
 The review process, deadline, an   d papers committee are the same for both tracks. Papers considered for both tracks are first evaluated to determine if the contribution is of sufficient quality for SIGGRAPH. If judged to be of sufficient quality, they are then assessed based on the criteria above to determine the track to be accepted into.    
 The differences in the submission process for the two options are outlined below.   
 Journal-Only Submissions   
 The submitted work is expected to be novel and advance the state of the art.    
 Ideas are extensively tried and tested, and the paper is complete and comprehensive.  
 When submitting, use the “acmtog” article style, double column. No limit on the length or file size of supplementary materials.   
 No maximum (or minimum) page length.  
 Published in ACM Transactions on Graphics (TOG)  
   
 Dual-Track Submissions   
 The submitted work is expected to be novel and advance the state of the art.    
 The work can be less complete (e.g., have shorter validation and fewer comparisons).  
 When submitting, use the “acmtog” article style, double column. No limit on the length or file size of supplementary materials.   
 The submissions are required to adhere to the following length constraints: Papers must be no longer than 7 pages  excluding references and figures-only pages. There is no limit on the length of the reference section. Each paper can have at most two figures-only pages  , placed at the end of the submission, after references. Authors can also include as many figures as they wish within the core 7 pages. Papers should not include appendices in the main document.  
 Published in SIGGRAPH Conference Proceedings  

 Journal-Only Submissions   
   
 Dual Track Submissions   

 The submitted work is expected to be novel and advance the state of the art.    
   
 Ideas are extensively tried and tested, and the paper is complete and comprehensive.  
   
 The work can be less complete (e.g., have shorter validation and fewer comparisons).  

 When submitting, use the “acmtog” article style, double column. The file size of supplementary materials is limited to 500MB.    
   
 No maximum (or minimum) page length.  
   
 The submissions are required to adhere to the following length constraints: Papers must be no longer than 7 pages excluding references and figures-only pages. There is no limit on the length of the references. Each paper can have at most two figures-only pages, placed at the end of the paper PDF, after references. Figures-only pages can contain only figures and their captions (i.e., no tables). Authors can include as many figures as they wish within the core 7 pages. Appendices are to be provided as supplemental material, and not part of the paper itself.  

 Published in ACM Transactions on Graphics (TOG)  
   
 If accepted as a Conference Paper: Published in SIGGRAPH Conference Proceedings  
 If accepted as a Journal Paper: Published in ACM Transactions on Graphics (TOG)  

 Richard Zhang   
  SIGGRAPH 2025 Technical Papers Chair   
 Adriana Schulz   
  SIGGRAPH 2025 Technical Papers Assistant Chair   

 How to Submit  
     
  To start, read the information below about how to prepare your submission, including information on formatting, anonymity, and resubmissions. Then log into the Submission Portal    , select the “New Submission” tab, and select the Technical Papers submission form. You will be asked for basic information about your submission.  
 To see what you will need to submit, view the Sample Form    (Stage 1). Creating a submission form will assign your submission a paper ID, which must be included in your submitted paper.  
 Deadlines   
 All deadlines are 22:00 UTC/GMT unless otherwise noted.  
 Thursday, 16 January 2025: Submission form deadline   
 Deadline for creating the submission form with the title, complete list of co-authors, as well as the specification of conflicts of interest (COI) for each co-author. Note that once the paper is submitted, the list of authors can no longer be edited  . Exceptions can be made in special circumstances but are expected to be rare and are up to the discretion of the Technical Papers Chair.  
 Thursday, 23 January 2025: Paper deadline   
 Deadline for the complete submission, including either the actual PDF paper or an MD5 checksum (which will be required in lieu of the actual files starting at some point on this day). If you wish to submit supplemental material (additional details or comparisons, movies, code, data, etc.) as well, these files (or their MD5 checksums) must also be uploaded by this date and time. To see what you will need to submit, view the sample form    (Stage 2).  
 Friday, 24 January 2025: Upload deadline   
 Deadline for uploading all materials if you used MD5 checksums  . No new or changed material may be uploaded. Only files matching MD5 checksums submitted the previous day are valid.  
 English Review Service   
 Non-native English speakers may optionally use the English Review Service    to help improve the text of submissions. Please note that this process takes time, so plan far ahead in order to meet the submission deadline.  
   
 Back to Top    

 Review Process  
     
  All submitted papers (independent of the track they are submitted to) will receive four full reviews plus one meta review, all double-blind, and will be evaluated by the Technical Papers Committee.  
 When deciding which track a dual-track submission is suitable for, reviewers will be instructed to consider how compelling the evidence supporting the advances presented in the paper is when assessing the track the paper should be accepted to. In particular, they will be instructed to be less demanding about formal completeness, validation, and experimental evaluation when it comes to accepting papers to the Conference track, thereby allowing publication of riskier/earlier-stage work.  
 Both tracks will continue the SIGGRAPH Technical Papers program from previous years, publishing high-quality, groundbreaking, and impactful research that is presented at SIGGRAPH. Journal Papers will be published in the ACM Transactions on Graphics  . Conference Papers will be published in the SIGGRAPH Conference Proceedings in the ACM Digital Library.  
   
 Back to Top    

 Submission Policy  
     
  Double Submissions   
 By submitting a manuscript to the SIGGRAPH Technical Papers program, authors acknowledge that the technical contributions they claim have not been previously published or accepted for publication in another peer-reviewed venue and that no manuscript substantially similar in content is currently under review or will be submitted to any peer-reviewed venue during the SIGGRAPH review period. Violations constitute grounds for immediate rejection. If you wish to submit revised or extended versions of Conference or workshop Papers, please directly submit to TOG instead of SIGGRAPH.  
 Plagiarism   
 A submission to the SIGGRAPH Technical Papers program should describe an original work of the authors. Authors must not use ideas or content originating from others without properly crediting their original sources. Note that such sources are not limited to peer-reviewed publications, but also include patents, textbooks, technical reports, theses, unpublished work posted on arXiv, as well as other posts on the World Wide Web. Failure to comply with this requirement will be considered plagiarism and result in rejection. For more details, please consult the guidance    provided by ACM.  
 Anonymity   
 The SIGGRAPH review process is fully double-blind: The committee members and external reviewers do not know the identity of the authors, and the authors do not know the identity of the reviewers. This anonymity is an integral part of an objective and fair review process, so authors are required to take all reasonable measures to preserve their anonymity. Specific instructions for preserving anonymity in your submission are discussed in the Submission Requirements  section. Rules on how to preserve anonymity before and after submission when communicating about the work with others are set forth in the SIGGRAPH 2025 anonymity policy   . Authors are expected to familiarize themselves with the policy and strictly adhere to it.  
 Citing And Comparison to Prior Art, including Prepublications   
 Authors are expected to cite, discuss differences and novelty, and compare results, if applicable and feasible, with respect to relevant existing publications, provided they have been published in a peer-reviewed venue before the SIGGRAPH submission deadline. This also applies to patents, which undergo a professional reviewing process. While quantitative and qualitative comparisons to published results can be reasonably requested by reviewers, authors are NOT required to compare to methods without published code or data, e.g., by reimplementing the methods.  
 Prepublications include technical reports, and other non-peer-reviewed publications, especially papers posted on arXiv. With the rapid progress of search engines and the increased perusal of arXiv papers by the scientific community, asking authors to thoroughly compare their work to these prepublications imposes an unreasonable burden: a seemingly relevant report that is incomplete in its disclosure or validation might appear online shortly before the deadline. While peer-reviewed publications are certainly not immune to these shortcomings, they have, at least, been judged sufficiently complete and valid by a group of peers.  
 Consequently, authors are not  required to discuss and compare their work with recent prepublications (arXiv, technical reports, theses, etc.), although they must properly cite  those that inspired them (see “Plagiarism”  above). We nevertheless encourage authors to mention all related works they are aware of as good academic practice dictates. Note that with new works posted on arXiv on a daily basis, it is increasingly likely that reviewers might point out similarities between the submitted work and online reports that have been missed by the authors. In this case, authors of conditionally accepted papers should be prepared to cite these prepublications in their final revision as concurrent work, without the burden of having to detail how their work compares to or differs from these prepublications. Authors may want to upload as supplementary material anonymized versions of any relevant tech report or arXiv posting of their own, if the work can be perceived to have overlap, in terms of contribution, with the submission.  
 Citing Own Prior Art   
 When citing already published work by the same (or an overlapping) group of authors, the citation should refer to that work in the third person, just as it would refer to any other previously published work by a completely different set of authors. For other relevant work from the same author(s) as the submission, we distinguish between two cases: (A) works that have been submitted for publication elsewhere, but have some relevance to and/or overlap with the submission; and (B) largely overlapping prepublications that are available online at the time of submission (arXiv, technical report, thesis, etc.).  
 For case (A), the other work (e.g., tech report, arXiv posting) should be cited anonymously, as well as provided as anonymous supplementary material. The authors must convince the reviewers that the current submission is sufficiently different from the other work, which can be done using an anonymous cover letter that outlines the differences. 
  For case (B), these earlier or largely similar versions of the submission that are publicly available (on arXiv, as a technical report, etc.) should | NOT | be cited in the submission, as this would identify the authors. Instead, these prepublications must be listed in the appropriate field of the submission form, titled “Prepublication.” This field is not visible to reviewers. 
  Ethics   
 Computer graphics have an increasing societal impact. Authors should be aware of the ACM Code of Ethics and Professional Conduct   and adhere to it. Authors should also adhere to the ACM Publications Policy on Research Involving Human Participants and Subjects   if human subjects are involved in their research. The Technical Papers Committee will judge each submission solely based on its technical merits and novelty. If a submission that the Technical Papers Committee recommends to accept raises an ethical issue, it will be forwarded to a relevant ACM body for ethics evaluation. This body can recommend changes to the submission or, in extreme cases, rejecting the work. The Technical Papers Chair will take the final decision in these cases.  
 Lobbying Reviewers   
 It is strictly prohibited to make any attempt to intervene in the review process. For example, it is inappropriate for an author to contact a committee member or a person they suspect to be a reviewer during the review process and mention the author’s own submission, even if the author does not explicitly ask for a favor. Committee members and reviewers will be asked to report such incidents and subsequently may be marked as conflicted and removed from the review process for that submission. For the most serious interventions, the submission may be rejected without completing the review process.  
   
 Back to Top    

 Submission Requirements  
     
  Submission Format   
 Technical Papers authors should prepare their documents according to the ACM SIGGRAPH publication guidelines    . All submissions should be prepared in ACM double-column format. For convenience, we recommend using the provided “acmtog” LaTeX Article Template Style, which is already in the correct format. The other templates (e.g., Word, Overleaf) might need adaptation to obtain double-column format. Please pay particular attention to the citation format for prior ACM SIGGRAPH Conference Papers, as specified in the ACM SIGGRAPH publication guidelines, because the proper format varies depending on the year of publication.  
 If you use LaTeX, please anonymize your initial submission with the following \documentclass command:  
 \documentclass[acmtog,anonymous,review]{acmart}  
 and add your assigned paper ID with:  
 \acmSubmissionID{paper ID}  
 Authors who use LaTeX must make certain that any packages they use in their paper are part of ACM’s list of accepted LaTeX packages — https://authors.acm.org/proceedings/production-information/accepted-latex-packages  . TAPS will reject submissions that use packages that are not part of this list. Authors can request that packages be added — see the documentation for information on that request process.  
 Please use the same formatting for both Journal and dual-track submissions.  For dual-track submissions, please follow the instructions in the section below regarding paper length and organization. Papers that do not conform to these instructions will not be considered for the conference track and may be desk rejected.  
 Please ensure that you are using version 2.09 or higher of the “acmart” class; earlier versions of the article template will not produce a valid submission. Download the latest acmart class along with other necessary materials here    . A LaTeX submission template    is provided for your convenience.  
 Authors are required to submit fully formatted papers, with graphs, images, and other special areas arranged as intended for final publication, using the ACM SIGGRAPH paper preparation guidelines. Be sure that all pages are numbered and contain your paper’s ID number. You should obtain this paper ID by completing the Online Submission Form before finalizing your paper. If your paper is accepted, you will receive instructions for formatting the final version, which will be different because, among other things, the authors’ names and affiliations will be included, and the pages will not be numbered.  
 Authors must submit their papers electronically. The only allowable format is Adobe PDF. We prefer that authors upload supplemental materials (anything except the paper) electronically, but physical submission is also possible. If there is some reason why electronic submission is impossible for you, please contact us via the Technical Papers Email Contact Form    well before the deadline. See How to Submit  for more information. For videos, we strongly encourage MP4, and for still images, we strongly encourage JPG or PNG. If you use another format, you are not guaranteed that reviewers will view them. In preparing videos, please choose a reasonable frame size and rate, but be prepared to submit a higher-resolution video if a section of your video is selected for the Papers Preview section of the Electronic Theater. If your supplemental materials amount to more than 100 MB of data, you are not guaranteed that reviewers will download and view them.  
 Preserving Anonymity in the Submission   
 Remove any information from your submission materials (paper, video, images, data, code, etc.) that identifies you, any of the other authors, and any of your institutions or places of work. In addition to not listing your names and affiliations in the paper, please omit acknowledgements (you will be able to add them back upon acceptance). If you are a well-known author with a possibly recognizable voice, do not narrate your video; get someone else to do it. You must reference all relevant work completely, including your own and that of the other authors. The detailed policy on how to cite these papers, including prepublications (arXiv, technical reports, etc.), theses, submitted work, and published work, is described in the “Citing Own Prior Art” section in the Submission Policy. Please read the instructions carefully before submitting your work.  
 We strongly discourage authors from including any URLs referring to websites that contain vital material for their submissions, with the exception of fully anonymized code/data that has to be accessed through an external link. We still prefer that the code/data is submitted as part of the supplementary material. The main reason is that accessing external websites runs a high risk of breaking anonymity, which will lead to desk rejections. SIGGRAPH reviewers are instructed to ignore URLs in paper submissions unless the information is deemed absolutely necessary for their review. Such decisions are made completely at the reviewers’ discretion.  
 Please keep the PDF version anonymous; in particular, note that under some operating systems the “properties” of a PDF file may contain the creator’s name. Also, Version 7 PDF files allow inclusion of a script that will contact the author each time the file is opened. Do not include this script in your PDF file; if we find it, we will reject your paper without review. Make sure that no submitted files contain any information about the authors in the metadata.  
 Paper Length   
 Journal-only submissions have no maximum (or minimum) length. Have a look at previous proceedings to get a sense of the range of paper lengths, where typical lengths are between 8 and 12 pages, not including references, though the variation is large. For Journal Papers that are conditionally accepted, the final paper length may increase when approved by the primary reviewer.  
 Dual-track submissions are required to adhere to the following length constraints: Papers must be no longer than 7 pages excluding references and figures-only pages. There is no limit on the length of the reference section. Each paper can have at most two figures-only pages, placed at the end of the submission, after references.  Figures-only pages can contain only figures and their caption (i.e., no tables). Authors can also include as many figures as they wish within the core 7 pages. Any appendix can only be included as supplementary material and not part of the main paper.  Papers will not be considered for conference publication if they exceed the page limit, are not submitted using the formatting described in the section “Submission Format,” or appear to alter the format to bypass the page limit. Post-acceptance, authors of papers accepted to the Conference track can add one additional page to the final-format papers to accommodate the author list, author affiliations, copyright, and acknowledgements (no other content should be added, i.e., the anonymous version still needs to fulfill the length requirements discussed before).  
 The submitted paper should stand on its own, allowing evaluation of the main ideas without reliance on supplemental material. For example, main results and discussion of the method must be in the submission; extra ablation studies, additional comparisons, implementation details, and similar material can be provided in the supplemental material. Animated results may be included as an accompanying video.  
 For all submissions, clarity of writing is considered vital to a high-quality submission. Papers may be perceived as too long if they are repetitive or verbose or too short if they omit important details or neglect relevant prior art.  
 Companion Videos   
 Papers may be accompanied by a video that is five minutes or less in duration. In recent years, well over half of the accepted papers were accompanied by some kind of video material. To the extent possible, accepted papers should stand on their own, with the video providing supplementary information or visual confirmation of results. However, it is fine to refer to the video in the paper, in which case the video should be submitted under Supplementary Materials, part A in the submission form, as described below. A video should not be included in a submission unless substantively similar footage can later publicly appear in the ACM Digital Library. If your paper is accepted and you cannot comply with this requirement because of copyright or permission problems, your paper’s acceptance will be rescinded.  
 Supplemental Materials   
 Authors are invited, but not required, to include supplemental materials such as additional implementation details, ablations, comparisons, additional images or videos, related papers, derivations, or results, as well as code and data files (so that reviewers can reproduce results in the paper). These materials will be viewed only at the discretion of the reviewers, who are only obligated to read the paper itself.  These materials must be anonymized  , so that they can be made available to all reviewers. There are two separate parts in the online submission form for uploading supplementary materials:  
 A) Anonymous supplemental materials that are considered part of the submission, and that you are committing to provide for the ACM Digital Library if your paper is accepted.  
 B) Anonymous materials that you are submitting to help in the review process but do not plan to submit to the ACM Digital Library.  
 For instance, in addition to videos, A) may include some code, and a .zip archive containing result images and some text files, such as detailed user-study results or other appendices associated to your submission. B) may include anonymized versions of related papers from the same authors currently under review or in press elsewhere, together with an anonymous cover letter that outlines the differences between the submission and these other papers. In case of resubmission with reviewer continuity, the cover letter explaining how you took into account previous reviews and listing the improvements in your method should be there, too.  
 Resubmissions   
 If your paper is a revision of a paper that has previously been submitted to a SIGGRAPH or SIGGRAPH Asia conference, we recommend (but do not require) that when you fill out the submission form you identify it as a resubmission, and select the option that allows the previous review materials (reviews, reviewer discussions, summaries, etc.) to be made available to the Technical Papers Committee. Please indicate the latest conference that your paper was submitted to and its paper ID at the time. If you choose to use this option, your paper may be assigned to some or all of the previous reviewers, and all reviewers will have access to suitably anonymized versions of the prior review materials. We encourage you to choose this option if you consider the paper to be derived from the previous version, even if the paper has been substantially rewritten and authors have been added. It will result in more consistent reviews and decrease the chance that a new set of reviewers will want completely different changes than those you made in response to the reviews of your earlier submissions. This option also has the added side benefit of reducing the overall burden on the volunteer reviewing community. Note that simply responding to all earlier criticisms will not guarantee acceptance. If you resubmit with reviewer continuity, you should include a cover letter within the anonymous supplementary materials, part B, in order to explain the changes you made to the paper and how you improved your work and its exposition since the last review cycle. If you resubmit without continuity, you may still choose to submit a similar anonymous cover letter to make it easier for recurring reviewers to understand the changes that have been made since the previous submission.  
 Permissions and Copyrights   
 You must have permission from the owner or copyright holder to use any images or video (or provide rationale for using them without permission) that you do not own in your submitted paper or supplementary material. ACM has a clear policy and procedures for handling Third-Party Material   . If your submission is accepted, you will be asked to provide a signed rights form, which is required by ACM before your paper can be published. The contact author of each paper will receive an email message from ACM Rights Review containing instructions and a link to the rights form, which is completed online.  
 Authors of accepted Technical Papers are required to complete the ACM Rights Form prior to publication. They also are required to upload final versions of all public supplementary materials (Part A) that were originally part of their submission.  
 If the contact author for an accepted paper is affiliated with an institution that is part of the ACM OPEN program, and their e-mail address is associated with that institution, their paper can be published Open Access without having to pay the APC. If you are the contact author for a paper and your institution is part of that program, make sure you are using your institution’s email address and not a personal email address for correspondence.  
   
 Back to Top    

 Evaluation  
     
  The Technical Papers Committee and a set of external (i.e., tertiary) reviewers, both consisting of recognized experts, will review submitted papers. Then, at the committee meeting, the committee will select the papers to be presented at SIGGRAPH 2025 and published in either a special issue of ACM Transactions on Graphics  or in the SIGGRAPH Conference Proceedings in the ACM Digital Library.  
 The Technical Papers review process will be conducted by (1) the Technical Papers Chair, who was chosen by the SIGGRAPH 2025 Conference Chair and approved by the ACM SIGGRAPH Executive Committee and its Conference Advisory Group; (2) the Assistant Technical Papers Chair, chosen by the Technical Papers Chair; (3) the Technical Papers Advisory Board, consisting of past and future Technical Papers Chairs and other trusted and experienced advisors, chosen by the SIGGRAPH 2025 Technical Papers Chair; (4) the Technical Papers Committee, chosen by the Technical Papers Chair with the assistance of the members of the Technical Papers Advisory Board, and consisting of about 100 people whose expertise spans the entire field. Both Journal-only and dual-track submissions will be reviewed by the same Technical Papers Committee. The Technical Papers Chair will work with the Technical Papers Committee and the tertiary reviewers to evaluate each valid submission.  
 The Review Process   
 After the submission deadline, the Technical Papers Chair and several others selected by the Technical Papers Chair will conduct the paper sort. During this meeting, they assign each paper to two senior reviewers, called the primary and secondary reviewers, who are members of the Technical Papers Committee. All parties participating in the review process enter their conflict of interest data into the submission system ahead of time. The Technical Papers Chair does not make assignments or review papers. Rather, it is the job of the chair to facilitate the process. Papers that are inappropriate may be desk rejected during this assignment process without being sent to any senior reviewers. Papers rejected at this stage would include those that are clearly off topic for SIGGRAPH 2025, discovered to have been published previously or to have been submitted simultaneously to another conference or journal, breaking anonymity or format requirements in the submission, or clearly below the minimum quality standard of a SIGGRAPH paper. For more details, see | Submission Policy | and | Frequently Asked Questions | . 
  The two assigned senior reviewers may, upon conferring with each other and the Technical Papers Chair, recommend a paper to be rejected without additional review. A paper will normally be rejected at this stage only if it falls into one of the categories listed in phase one, but this fact was not detected during the paper sort. 
  Each paper is distributed to three or more additional experts, called tertiary reviewers. These reviewers are selected by the primary and the secondary reviewers. The identity of the authors is not revealed to any of the reviewers. The primary and the secondary reviewer are warned by the submission system, Linklings, if their selection of tertiary reviewers would result in a conflict of interest. For each reviewed paper, all tertiary reviewers and the secondary write full reviews, while the primary may write a meta-review. See the | Review Form | and | Reviewer Instructions | . Thus, at least four full reviews are written for each paper that has not been rejected during phases one and two. In unusual cases, such as when a tertiary reviewer fails to deliver a review on time, papers may receive less than four reviews. However, if a paper receives fewer than four reviews, additional reviewers will be found, possibly from the committee. For more details, see the | Review Process | section in the | Technical Papers FAQ | . 
  After all reviews are complete, the review system allows the authors access to the reviews and scores for their papers on | 10 March 2025 | . Then, authors have until | 17 March 2025, | 22:00 UTC/GMT, | to enter rebuttals if they feel the reviewers have made substantive errors or to answer specific questions posed by the reviewers. The rebuttal is confined to 1,000 words in length (plain text) and must be self-contained. For instance, URLs to additional material are not allowed. The rebuttal period is for addressing factual errors in the reviews, not for providing revised text or new results. Any such novel material will be ignored by the reviewers. For more details, see the | Rebuttal Process | section of the | Technical Papers FAQ | . 
  Between the end of the rebuttal period and the committee meeting, the senior reviewers will read all the submitted reviews (at least four), as well as the author rebuttals, confer intensively about the paper, and prepare a recommendation for the committee meeting. The three tertiary reviewers will see the author rebuttals and will participate in discussions about the paper. Due to the double-blind review process, the authors must maintain anonymity in their rebuttals. In addition, the tertiary reviewers do not know each other’s identities, so they too must maintain anonymity during the discussion. The preliminary recommendation agreed on at this stage will be either “conditionally accepted” or “rejected.” If an agreement on the recommendation cannot be reached, a third option is to “table” the paper for further review and discussion during the final Technical Papers Committee meeting. 
  If a paper is tabled, the senior reviewers will select one or more other members of the Technical Papers Committee to write extra reviews of the paper and be prepared to discuss it in detail at the meeting. The extra reviews will be written during the week before the committee meeting. If consensus still cannot be reached, it is even possible that additional extra reviews will be assigned during the meeting itself. Any extra paper reviews will be provided to the authors after the meeting. 
  The full Technical Papers Committee meets to finalize conditional acceptance or rejection of each paper. In cases where a consensus on a paper was not reached during the pre-meeting discussion phase, additional committee members may read the paper, and their evaluations will be taken into account in the decision. Submissions will either be accepted as a Journal Paper or a Conference Paper. 
  Members of the Technical Papers Committee, including the chairs, are not present when papers for which they have conflicts of interest are discussed. Papers are judged solely on their merit, as determined by the reviews. Although the acceptance rate of SIGGRAPH papers has remained stable in the range of ~20-30%, there is no quota for the number of papers that should be accepted by the SIGGRAPH 2025 Technical Papers Committee; this number will arise organically from the actions of the committee.  
 Possible Outcomes for a Paper   
 Email notifications of the Technical Papers Committee’s decisions will be sent following the committee meeting (see the Timeline  below). The notifications will place each paper in one of the following categories.  
 Conditionally accepted Journal Paper for presentation at SIGGRAPH 2025. | The committee provides a list of required changes that must be performed to the paper for the work to be published. 
  Conditionally accepted Conference Paper for presentation at SIGGRAPH 2025. | The committee provides a list of required changes that must be performed to the paper for the work to be published, limited to changes that are satisfiable within the current page limits. 
  Rejected from SIGGRAPH 2025. | Submissions that were deemed not suitable for the conference, or too flawed or incomplete to be accepted, will be rejected. In some cases, the reviewers may find enough merit in the submission that they encourage the authors to consider resubmitting to either | ACM Transactions on Graphics | or a future SIGGRAPH conference, with reviewer continuity. The review summary includes a set of suggested changes. 
  Conditionally accepted papers undergo a second reviewing process, in which a member of the Technical Papers Committee verifies that the final version of the paper is acceptable, i.e., that any required changes have been made, and that other changes made by the authors have not compromised the paper in any way. This second and final stage determines the final acceptance status of all papers. The referees’ decisions are final. Papers that do not satisfy the referees in the second stage of reviewing and/or that are not uploaded in final form by the final deadline, together with the original or revised versions of the submitted supplementary material, will be rejected. One author of the paper, or an author’s designate in the unlikely event that none of the authors could attend the conference, must commit to presenting the paper in person at the SIGGRAPH 2025 conference in Vancouver, Canada.  
   
 Back to Top    

 Upon Acceptance  
     
  Authors of papers conditionally accepted by the committee must revise their submission for the second round of reviewing and deliver that material to Linklings. Once the reviewers have approved the paper, authors will finalize the preparation of their camera-ready paper and deliver the source of that paper, and any supplemental materials, to TAPS for publication. Accepted Conference Papers will appear in the conference proceedings, and Journal Papers will be published as a special issue of ACM Transactions on Graphics.   
 TAPS is ACM’s article processing system, which accepts LaTeX or Word source documents and prepares the formatted PDF and HTML5 versions of one’s article for publication in the ACM Digital Library. The use of TAPS replaces the need for authors to prepare and deliver “camera-ready” materials to Linklings. Information on preparing and delivering materials to TAPS can be found here    . Conference Track papers go through TAPS, and Journal Track papers go through Linklings.   
 Notification of conditional acceptances and rejections will be sent to authors, along with any extra reviews and possibly a list of required changes (see Timeline  below). A member of the Technical Papers Committee, typically the primary reviewer, will be assigned as referee for the revision cycle.  
 A few days after notification, any changes to the paper title along with a 50-word description of your paper suitable for the web site will be submitted in the “Stage 3 Program Material” form. Note: changes to the paper title must be approved by your referee. For Journal Papers, changes to paper length must be approved by the referee, and extensions of more than one page are unlikely to be granted. Papers accepted to the conference program can be extended by one page in the camera-ready version only to accommodate the author list, author affiliations, and acknowledgements (no other content should be added, i.e., the anonymous version still must fulfill the paper length requirements discussed before). In addition, after the final version has been approved, the authors may integrate figures included in the two figures-only pages of the submission into the main text, resulting in a total of at most 10 pages plus references.  
 The deadlines for the revised version and final version of your paper are listed in the Timeline below. During the week between these two dates, the referees and authors will communicate via the bulletin board process about the adequacy of the changes in the revisions. Sometimes, changes are not initially considered adequate, or introduce new problems, so further revision may be required. It is recommended to submit the initial revised version sooner than the deadline in order to provide more time for iterated revisions. It is hoped that all conditionally accepted papers will be accepted by the end of this process, but this is not guaranteed. When writing successive revisions, the referee’s job is made easier if authors use a different color for the added or revised text in each new version. (Please remember to remove these colors in the final version.) It also helps to describe the changes in the bulletin board post to which the revision is attached.  
 ORCID Mandate   
 ACM requires that all accepted journal authors  register and provide ACM with valid ORCIDs prior to paper publication. Corresponding authors are responsible for collecting these ORCIDs from co-authors and providing them to ACM as part of the ACM eRights selection process.  
 You and your co-authors can create and register your ORCIDs at https://orcid.org/register  . ACM only requires you to complete the initial ORCID registration process. However, ACM encourages you to take the additional step to claim ownership of all of your published works via the ORCID site.  
 Papers Fast Forward Session   
 For each accepted paper, one author is required to participate in the Papers Fast Forward session on-site in Vancouver, Sunday, 10 August 2025. In addition to the material that is part of your publication, you will be asked to provide a short presentation for the Papers Fast Forward. The authors will be allowed 20 seconds to summarize the paper and entice attendees to attend their complete paper presentation during the conference week. The deadline for the Papers Fast Forward pre-recorded video is 30 June 2025. Additional information will be provided upon acceptance.  
 In-Person Presentation   
 For each accepted paper, one author is required to present in-person at SIGGRAPH 2025 in Vancouver, 10-14 August 2025. Following the oral presentations, the author is expected to participate in an interactive discussion poster session where they will have the opportunity to interact with participants in a more intimate setting. Additional information will be provided upon acceptance including live streaming and recording details.  
 Presenter Recognition   
 Contributor Registration Benefit: One author per accepted Paper receive a 25% discount on Full Conference registration.  
 To present your Paper at SIGGRAPH 2025, authors must be registered at the Full Conference registration level.  
 You will receive an email by early June explaining how to access the registration discount code as well as instructions for registering. The author using the discount code is eligible for the early-bird registration rate regardless of when registration is completed. Any additional authors who will be presenting the paper are required to register at the appropriate registration level for the program, and prevailing registration rates will apply.  
 Authorization for Use   
 Any material that supports a paper’s acceptance for publication must be available as part of the final publication (see Submission Requirements)  . Thus, all material uploaded for review in the “public materials that are considered part of the submission” section of the submission form, including supplementary text, images, and videos, are subject to the ACM copyright policy, and the required permission forms must be completed upon acceptance. If it subsequently becomes apparent that the necessary permissions cannot be given for publication of material that is substantially similar to that submitted for review, acceptance of the paper may be withdrawn. Upon acceptance, authors must deliver final versions of their papers and their supplementary material, which will be made available to subscribers to the ACM Digital Library via the web page associated with their TOG papers.  
 Please be aware that ACM has updated its copyright policy to give authors the options of retaining copyrights on some materials or to pay fees that enable free access. You can read about the policy here     or a more concise summary here    . Authors of accepted Technical Papers are required to complete the ACM Rights Form prior to publication. For every supplemental file originally uploaded as part of your submission, you must upload either copies of the originally submitted material (now in non-anonymized form) or updated versions of this material to the online submission system’s final versions page (see the Timeline below for the deadline)  .  
 Technical Papers Preview Trailer   
 A Technical Papers Preview Trailer will be prepared from selected parts of the videos accompanying accepted papers. The preview will appear in the Electronic Theater at the conference and may also be used to publicize the Technical Papers program inside and outside the conference, like on the web. If a section of your video is selected, you will be asked to provide a high-quality rendering of that clip. Therefore, if you submit a video accompanying your paper, please keep your raw data available for that purpose.  
 ACM Rights Management Form   
 If your work is accepted for presentation at SIGGRAPH 2025, you must complete the ACM Rights Management Form. The form will be sent to all submitters whose work is accepted.  
 Your representative image and text may be used for promotional purposes. Several SIGGRAPH 2025 programs may prepare preview videos for pre-conference promotion of accepted content, which may include a portion of the video you submitted for review. You have the option to grant or deny us the ability to use the representative image and submitted video for these purposes.  
   
 Back to Top    

 Timeline  
     
  All deadlines are 22:00 UTC/GMT unless otherwise noted  
 16 January 2025   
  Submission form deadline   
  One of the authors must start a submission in the online submission system “Linklings” and provide basic information about the paper, including the complete list of authors and abstract. All authors must enter their complete and valid conflict of interest and research expertise data in Linklings by this deadline.  
 23 January 2025   
  Paper deadline   
  Basic information about your submission such as contact details of the corresponding authors, paper title, paper length, are required. Additionally, the submitted paper in PDF format and a representative image must be uploaded, along with any video, code and data, and other supplemental material if applicable. Alternatively, MD5 checksums may be uploaded in lieu of any of the files involved in the submission.  
 24 January 2025   
  Upload deadline   
  If MD5 checksums were submitted by the Paper deadline (as described above), files that match the checksums can be submitted until this deadline.  
 10 March 2025   
  Reviews available for authors & rebuttal begins  
 17 March 2025   
  Rebuttals due  
 31 March 2025   
  Decisions announced  
 29 April 2025   
  Revised paper submitted by authors for final review  
 6 May 2025   
  Final version deadline  
 30 June 2025   
  20-second pre-recorded Papers Fast Forward video deadline  
 27 July 2025   
  Official publication date for both the SIGGRAPH 2025 Conference Papers Proceedings and the Technical Papers TOG Issue (Volume 44, Issue No. 4 of ACM Transactions on Graphics  ).  
 Please Note:  The official publication date is the date the proceedings are made available in the ACM Digital Library. This date may be up to two weeks prior to the first day of your conference. The official publication date affects the deadline for any patent filings related to published work. (For those rare conferences whose proceedings are published in the ACM Digital Library after the conference is over, the official publication date remains the first day of the conference.)  
 10 August 2025   
  Papers Fast Forward Session  
 10-14 August 2025   
  SIGGRAPH 2025  
  Vancouver Convention Centre  
  Vancouver, Canada  
   
 Back to Top    

 Diversity, Equity, and Inclusion  
     
  SIGGRAPH prioritizes conversations and industry contributions that spotlight how diversity, equity, and inclusion makes our communities, industries, and teams stronger. Conference programs provide a safe place to grow, discuss, and learn from one another and to bridge boundaries with the goal of making our community more inclusive and accessible to all. SIGGRAPH encourages submissions that spotlight DEI content across every SIGGRAPH program.  
   
 Back to Top    

 Submissions  
 Deadline  
 Submissions Form & Conflicts  
 Thu, 16 January 2025  
  22:00 +00:00 GMT  
 Thu, 16 Jan 2025 22:00 +00:00  2025-01-16 22:00:00  Submit  Convert Time Zone    
 Deadline  
 Paper Deadline  
 Thu, 23 January 2025  
  22:00 +00:00 GMT  
 Thu, 23 Jan 2025 22:00 +00:00  2025-01-23 22:00:00  Submit  Convert Time Zone    
 Deadline  
 Upload Deadline  
 Fri, 24 January 2025  
  22:00 +00:00 GMT  
 Fri, 24 Jan 2025 22:00 +00:00  2025-01-24 22:00:00  Submit  Convert Time Zone    
   
 Additional Links  
 Technical Papers Submissions FAQs   
 English Review Service for Submissions   
 Anonymity Policy   
   
 Share This Page  
  Facebook    Twitter    LinkedIn     
 Technical Papers Chair  
    
 Richard Zhang   

  SIGGRAPH 2025  
 Convention Centre, Vancouver, BC, Canada  
 Join Us 10–14 August  
   
 Register   
   
 Submit   
   
 Exhibit   

 Sponsor SIGGRAPH  
 Sponsor Opportunities 
  Job Fair Opportunities 
    
 Resources  
 For The Press 
  For Participants 
    
 Directories  
 Sitemap 
  2025 Committee 

 Get in Touch  
 Contact Us 
  Join Mailing List 
    
 ACM Policies & Blog  
 Anti-Harassment 
  ACM Privacy Policy 
  ACM SIGGRAPH Blog 
    
 #SIGGRAPH2025  
 News & Events 
   Facebook    Twitter    Instagram    YouTube    LinkedIn     

 © 2024 SIGGRAPH. All rights reserved.  
 The 52nd International Conference & Exhibition On Computer Graphics & Interactive Techniques  

    Conference 
  Programs 
  Exhibit | Exhibit at SIGGRAPH 
  Sponsorship Opportunities 
  Job Fair Opportunities 
  Exhibitor Resources 
  Donate 
  Attend | Why Attend? 
  General Conference Information 
  Travel Accommodations 
  Health & Safety 
  Job Fair 
  Volunteer | SIGGRAPH 2025 Committee 
  Conference Volunteer Opportunities 
  ACM SIGGRAPH Organization Volunteers 
  Submit 
  Register 
  Search Site 

    Important dates data: 
undefined

23. Conference SCAM_0:
SCAM 2024   Mon 7 - Tue 8 October 2024    
 co-located with ICSME 2024    

 Toggle navigation        
 Attending | Venue: NAU High Country Conference Center 
  ICSME 2024 
  Registration 
  Accomodation 
  Travel Information 
  Visa Information 
  Code of Conduct 
  Equity, Diversity, and Inclusion 
  Travel Support 
  Flagstaff and Tourism information 
  Conference Venue 
  Social events 
  Organizer's picks 
  Program | SCAM Program 
  Your Program 
  Keynotes 
   Mon 7 Oct 
  Tue 8 Oct 
  Tracks | SCAM 2024 
  Research Track 
  Engineering Track 
  New Ideas and Emerging Results 
  Organization | SCAM 2024 Committees 
  Organising Committee 
  Track Committees 
  Research Track 
  Engineering Track 
  New Ideas and Emerging Results 
  Contributors 
  People Index 
  Search 
   Series 
  Sign in 
  Sign up 

 SCAM 2024  

 The aim of the IEEE International Conference on Source Code Analysis & Manipulation   (SCAM) is to bring together researchers and practitioners working on theory, techniques and applications that concern analysis and/or manipulation of the source code of computer systems. While much attention in the wider software engineering community is properly directed towards other aspects of systems development and evolution, such as specification, design, and requirements engineering, it is the source code that contains the only precise description of the behavior of the system. The analysis and manipulation of source code thus remains a pressing concern.  
 For the purpose of clarity, ‘source code’ is taken to mean any fully executable description of a software system. It is therefore so-construed as to include machine code, very high level languages and executable graphical representations of systems. The term ‘analysis’ is taken to mean any automated or semi automated procedure which takes source code and yields insight into its meaning. The term ‘manipulation’ is taken to mean any automated or semi-automated procedure which takes and returns source code.  
 — Steering Committee Charter  
  
 The 24th IEEE International Conference on Source Code Analysis and Manipulation (SCAM 2024) will be held on October 7-8 in Flagstaff, Arizona, USA, co-located with ICSME 2024  .  
 SCAM 2024 will feature three tracks:  
 Research Track 
  Engineering Track 
  New Ideas and Emerging Results Track 

 Latest News  
   
 Tue 3 Sep 2024 by Davide Corradini | Student Discount | Thanks to the generous support of Raincode Labs ( https://www.raincodelabs.com  ), SCAM is able to offer a discount of $200 for 10 students who would like to attend the conference but have trouble covering the full student registration rate. | Please use discount code SCAM-st24  when registering through https://conf.researchr.org/attending/icsme-2024/Registration  (offer valid until exhausted). 
    
 All News Articles     

  SCAM 2024 Tracks   
   
 Research Track  | Engineering Track  | New Ideas and Emerging Results    

  Featured News    

 Student Discount Tue 3 Sep 2024 

   Posts   

 Supporters   

 x  Thu 5 Dec 12:36    

  SCAM 2024   
  contact form    
  using conf.researchr.org  ( v1.67.1  )  
   Support page    
     
 Tracks  
 Research Track   
  Engineering Track   
  New Ideas and Emerging Results    

 Attending  
 Venue: NAU High Country Conference Center   
  Registration   
  Accomodation   
  Travel Information   
  Visa Information   
  Code of Conduct   
  Equity, Diversity, and Inclusion   
  Travel Support   
  Flagstaff and Tourism information   
  Conference Venue   
  Social events   
  Organizer's picks    
 Sign Up    

  
Call for papers data: 
SCAM 2024   Mon 7 - Tue 8 October 2024    
 co-located with ICSME 2024    

 Toggle navigation        
 Attending | Venue: NAU High Country Conference Center 
  ICSME 2024 
  Registration 
  Accomodation 
  Travel Information 
  Visa Information 
  Code of Conduct 
  Equity, Diversity, and Inclusion 
  Travel Support 
  Flagstaff and Tourism information 
  Conference Venue 
  Social events 
  Organizer's picks 
  Program | SCAM Program 
  Your Program 
  Keynotes 
   Mon 7 Oct 
  Tue 8 Oct 
  Tracks | SCAM 2024 
  Research Track 
  Engineering Track 
  New Ideas and Emerging Results 
  Organization | SCAM 2024 Committees 
  Organising Committee 
  Track Committees 
  Research Track 
  Engineering Track 
  New Ideas and Emerging Results 
  Contributors 
  People Index 
  Search 
   Series 
  Sign in 
  Sign up 

  ICSME 2024  ( series  ) /   SCAM 2024  ( series  ) /   Research Track  /  Program Committee SCAM Research Track    
   
   Andrea Stocco Program Co-Chair   
 Technical University of Munich, fortiss   
 Germany   

   Valentina Lenarduzzi Program Co-Chair   
 University of Oulu   
 Finland   

   Aitor Arrieta   
 Mondragon University   
 Spain   

   Wesley Assunção   
 North Carolina State University   
 United States   

   Olga Baysal   
 Carleton University   
 Canada   

   Alexandre Bergel   
 University of Chile   
 Chile   

   Lola Burgueño   
 University of Malaga   
 Spain   

   Mariano Ceccato   
 University of Verona   
 Italy   

   Swaroopa Dola   
 University of Virginia   

   Matteo Esposito   
 University of Oulu   
 Finland   

   Mohammad Ghafari Committee Member   
 TU Clausthal   
 Germany   

   Nan Jiang   
 Purdue University   
 United States   

   Jinhan Kim   
 Università della Svizzera italiana (USI)   
 Switzerland   

   Seongmin Lee   
 Max Planck Institute for Security and Privacy (MPI-SP)   
 Germany   

   Maurizio Leotta   
 DIBRIS, University of Genova, Italy   
 Italy   

   Csaba Nagy   
 Software Institute - USI, Lugano   
 Switzerland   

   Michele Pasqua   
 University of Verona   
 Italy   

   Mikel Robredo   
 University of Oulu   
 Finland   

   Guido Salvaneschi   
 University of St. Gallen   
 Switzerland   

   Tushar Sharma   
 Dalhousie University   
 Canada   

   Donghwan Shin   
 University of Sheffield   
 United Kingdom   

   Valerio Terragni   
 University of Auckland   
 New Zealand   

 x  Thu 5 Dec 12:36    

  SCAM 2024   
  contact form    
  using conf.researchr.org  ( v1.67.1  )  
   Support page    
     
 Tracks  
 Research Track   
  Engineering Track   
  New Ideas and Emerging Results    

 Attending  
 Venue: NAU High Country Conference Center   
  Registration   
  Accomodation   
  Travel Information   
  Visa Information   
  Code of Conduct   
  Equity, Diversity, and Inclusion   
  Travel Support   
  Flagstaff and Tourism information   
  Conference Venue   
  Social events   
  Organizer's picks    
 Sign Up    

  Important dates data: 
undefined

24. Conference SC_3:
Skip to main content  Digital Experience 
  Schedule 
  Dates & Deadlines 

 Toggle navigation    Toggle navigation   Program | Dropdown menu toggle | Program  Keynote 
  HPC Creates Plenary 
  Invited Talks 
  Panels 
  Tutorials 
  Workshops 
  Birds of a Feather 
  Papers 
  Reproducibility Initiative 
  AD/AE Process & Badges 
  AD/AE Appendices 
  Awards 
  Early Career 
  Exhibitor Forum 
  Posters 
  ACM SRC 
  Doctoral Showcase 
  Research Posters 
  Art of HPC 
  Receptions 
  Proceedings & Archives 
  Exhibits | Dropdown menu toggle | Exhibits  Exhibitor Prospectus 
  Exhibitor Application 
  Exhibitor List & Floorplan 
  Exhibitor Manual 
  Exhibitor Housing 
  Exhibitor Function Space 
  SCinet for Exhibitors 
  Promotional Opportunities 
  Exhibitor Forum 
  Quantum Locality 
  HPC Illuminations Pavilion 
  Recruit at the Job Fair 
  Students | Dropdown menu toggle | Students@SC  Lead Student Volunteers 
  Student Volunteers 
  Student Cluster Competition 
  IndySCC 
  Mentor–Protégé Matching 
  HPC Immersion 
  Alumni Showcase 
  Speed Mentoring Event 
  AI & HPC in the Classroom 
  Student Tours 
  Guided Interest Groups 
  Job Fair 
  SCinet | Dropdown menu toggle | SCinet  SCinet Technology 
  SCinet Teams 
  SCinet History 
  Contributors & Volunteers 
  Participate in SCinet 
  Network Research Exhibition 
  Accepted NRE Demos 
  INDIS Workshop 
  WINS 
  SCinet for Exhibitors 
  SC Network Policy 
  Media | Dropdown menu toggle | Media  Media Registration 
  Media Partners 
  Blog 
  Newsletter 
  Photos & Logos 
  Attend | Dropdown menu toggle | Attend  Registration 
  Visa Applications 
  Digital Experience 
  Mobile App 
  Schedule 
  Atlanta 
  Convention Center 
  Housing & Shuttles 
  Family Resources 
  Job Fair 
  Inclusivity 
  HPC Illuminations Pavilion 
  Code of Conduct 
  Volunteer 
  Search    Search      

 The International Conference for High Performance  
  Computing, Networking, Storage, and Analysis  
   
 ATLANTA, GA • NOV 17–22   

  Official SC photos    

  Proceedings & Archives    

  SC & Society Awards    

 SPONSORED BY:  

 SC24 Welcomed Over 18,000 Attendees and 494 Exhibitors • Thank You For Attending and Exhibiting  

 News  
 SC News     Navigating SC24: Know Before You Go   
 Whether you’re new to SC or a returning attendee, here’s a list of valuable information and resources to help enrich your SC24 conference experience. See you there!  
  November 6, 2024 
  Exhibits     Five Experiences Dell Technologies Has in Store for You at SC24   
 Discover the latest innovations in AI and HPC at SC24! Dell Technologies presents five exclusive events and experiences to elevate your week in Atlanta. Learn more now!  
  November 5, 2024 
  Program     Invited Talks Feature Thought Leaders and Distinguished Experts in HPC at SC24   
 This year’s invited speakers cover poignant topics in HPC. Your Technical Program badge allows access to these important talks.  
  October 14, 2024 
  SC News     SC24 Celebrates Hispanic Heritage Month Worldwide   
 SC24 reaffirms its commitment to fostering an equitable environment where everyone has the opportunity to share their contributions and succeed.  
  October 14, 2024 
    
  All News   

 HPC Creates.  
   
 Atlanta is the place to be this fall as the high performance computing community convenes for an exhilarating week of sessions, speakers, and networking at its finest. SC is an unparalleled mix of thousands of scientists, engineers, researchers, educators, programmers, and developers and who intermingle to learn, share, and grow.  

  watch the SC24 preview    

 PROGRAM  
   
 Each year, SC provides the leading technical program for the HPC community. The Program is designed to share best practices in all areas of high performance computing. Become a contributor and share your excellence. Presenting at SC is extremely rewarding.  
   
  DISCOVER & PARTICIPATE    

 EXHIBITS  
   
 Here’s your opportunity to meet and interact with industry, research organizations, universities, and startups joining us from across the globe. As an exhibitor, showcase your cutting-edge technologies, products, and services to thousands of attendees.  
   
  RESERVE BOOTH SPACE    

 STUDENTS  
   
 The Students@SC program offers a broad range of volunteer experiences, cluster competitions, and networking opportunities. Put your professional development into overdrive and identify the possibilities within the field of high performance computing.  
   
  ENERGIZE YOUR FUTURE    

 SCINET  
   
 Industry, academia, and government experts volunteer to design, build, and administer the cutting-edge SCinet infrastructure, providing internet connectivity for attendees and pushing the boundaries of network innovation through research and demos.  
   
  GET CONNECTED    

  Discover atlanta   
 Our host city enjoys the most dense urban tree coverage of any major city in the United States.  

  CONFERENCE VENUE   
 The Georgia World Congress Center is the world’s largest LEED certified convention center.  

 Stay Up to Date  
 Sign up to receive the SC newsletter in your inbox.  
   
 Please enable JavaScript in your browser to complete this form.  First Name *      
 Last Name *      
 Email *      
   
 Name     
    
      Sign Me Up    
    
 Information provided is treated in accordance with ACM  & IEEE  privacy policies.  

 SC Network Policy 
  Dates & Deadlines 
  SC24 Planning Committee 
  Proceedings & Archives 
  Contact Us 
  SC Steering Committee 
  Photos & Logos 
  Volunteer 
  SC Conference Series 

  CODE OF CONDUCT   
   
 ACM PRIVACY POLICY   
   
 IEEE PRIVACY POLICY   

 The International Conference for High Performance Computing, Networking, Storage, and Analysis  
   
 SPONSORED BY:  

   Back To Top Button      
Call for papers data: 
Skip to main content  Digital Experience 
  Schedule 
  Dates & Deadlines 

 Toggle navigation    Toggle navigation   Program | Dropdown menu toggle | Program  Keynote 
  HPC Creates Plenary 
  Invited Talks 
  Panels 
  Tutorials 
  Workshops 
  Birds of a Feather 
  Papers 
  Reproducibility Initiative 
  AD/AE Process & Badges 
  AD/AE Appendices 
  Awards 
  Early Career 
  Exhibitor Forum 
  Posters 
  ACM SRC 
  Doctoral Showcase 
  Research Posters 
  Art of HPC 
  Receptions 
  Proceedings & Archives 
  Exhibits | Dropdown menu toggle | Exhibits  Exhibitor Prospectus 
  Exhibitor Application 
  Exhibitor List & Floorplan 
  Exhibitor Manual 
  Exhibitor Housing 
  Exhibitor Function Space 
  SCinet for Exhibitors 
  Promotional Opportunities 
  Exhibitor Forum 
  Quantum Locality 
  HPC Illuminations Pavilion 
  Recruit at the Job Fair 
  Students | Dropdown menu toggle | Students@SC  Lead Student Volunteers 
  Student Volunteers 
  Student Cluster Competition 
  IndySCC 
  Mentor–Protégé Matching 
  HPC Immersion 
  Alumni Showcase 
  Speed Mentoring Event 
  AI & HPC in the Classroom 
  Student Tours 
  Guided Interest Groups 
  Job Fair 
  SCinet | Dropdown menu toggle | SCinet  SCinet Technology 
  SCinet Teams 
  SCinet History 
  Contributors & Volunteers 
  Participate in SCinet 
  Network Research Exhibition 
  Accepted NRE Demos 
  INDIS Workshop 
  WINS 
  SCinet for Exhibitors 
  SC Network Policy 
  Media | Dropdown menu toggle | Media  Media Registration 
  Media Partners 
  Blog 
  Newsletter 
  Photos & Logos 
  Attend | Dropdown menu toggle | Attend  Registration 
  Visa Applications 
  Digital Experience 
  Mobile App 
  Schedule 
  Atlanta 
  Convention Center 
  Housing & Shuttles 
  Family Resources 
  Job Fair 
  Inclusivity 
  HPC Illuminations Pavilion 
  Code of Conduct 
  Volunteer 
  Search    Search      

  Home     Program    Papers     
 Papers  
  
   The SC Papers program is the leading venue for presenting high-quality original research, groundbreaking ideas, and compelling insights on future trends in high performance computing, networking, storage, and analysis. Attend presentations of peer-reviewed technical papers on a wide range of topics over three inspiring days.  
   
 FOUNDATIONS TO NEW FRONTIERS  
   
 Papers Schedule  
   Tuesday–Thursday, November 19–21, 2024  
   
  SCHEDULE    

 Technical Papers Chair   
  Didem Unat, Koç University, Turkey  
 Technical Papers Vice Chair   
  Aparna Chandramowlishwaran, University of California, Irvine  

 Paper submissions open March 1, 2024.  

 NEW THIS YEAR   
 1) As a paper submitter, please review revised information for AD/AE Process & Badges and the new AD/AE Appendices page.  
 2) For an accepted paper to be included in the proceedings, the paper has to be presented at the conference in person.  

 Paper Submissions  
 MAR 26, 2024   
 Abstract Submissions Close  
   
 APR 2, 2024 (No Extensions)   
 Full Paper Submissions Close  
   
 APR 20, 2024   
 AD (Mandatory)/AE (Optional) Due  
   
 MAY 20–24, 2024   
 Review/Rebuttal Period  
   
 JUN 14, 2024   
 Notifications Sent  
   
 JUN 28, 2024 (Optional)   
 Revised AD/AE, Badge Application  
   
 AUG 23, 2024   
 Final Paper Due  

 How to submit  
   
 What is A Paper?  
   
 The SC Papers program is the leading venue for presenting high-quality original research, groundbreaking ideas, and compelling insights on future trends in high performance computing, networking, storage, and analysis. Technical papers are peer-reviewed and an Artifact Description is mandatory for all papers submitted to SC.  
   
 Areas/tracks  
   
 Submissions will be considered on any topic related to high performance computing within the areas below. Authors must indicate a primary area from the choices on the submissions form and are strongly encouraged to indicate a secondary area.  
   
 preparing your submission  
   
 A paper submission has three components: the paper itself, an Artifact Description Appendix (AD), and an Artifact Evaluation Appendix (AE). The Artifact Description Appendix, or explanation of why there is no artifact description, is mandatory. The Artifact Evaluation Appendix is optional.  
   
 Eligibility   
 Papers that have not previously been published in peer-reviewed venues are eligible for submission to SC. For example, papers pre-posted to arXiv, institutional repositories, and personal websites (but no other peer-reviewed venues) remain eligible for SC submission.  
 Papers that were published in a workshop are eligible if they have been substantially enhanced (i.e., 30% new material).  
   
 Paper Format   
 Submissions are limited to 10 two-column pages (U.S. letter – 8.5″ x 11″), excluding the bibliography, using the IEEE proceedings template. The IEEE conference proceeding templates for LaTeX and MS Word provided by IEEE eXpress Conference Publishing are available for download. | See the templates here | . 
  AD and AE appendices do not | count against the 10 pages. 
  Authors of accepted papers may provide supplemental material with their final version of the paper (e.g., additional proofs, videos, or images). 
    
 reproducibility initiative  
   
 Reproducible science is essential, and SC continues to innovate in this area. AD/AE Appendices will be integrated into the review process, with AD/AE Appendices considered at every stage of paper review. While the Artifact Description Appendix, or explanation of why there is no Artifact Description Appendix, is mandatory, the Artifact Evaluation Appendix is optional  .  
 Learn more about the Reproducibility Initiative  .  
   
 paper review process  
   
 Papers are peer-reviewed by a committee of experts. Each paper will have three to four reviews. The peer review process is double-anonymous for the paper and double-open for the Appendices. Appendices reviewers and authors will know each other’s names. Learn more about the SC double-anonymous review policy  .  
 Papers not respecting the submission guidelines will be subject to immediate rejection without review. Examples include papers not respecting the double-blind submission, papers exceeding the page limit, and papers not submitting the AD artifacts.  
 From an author’s perspective, the following are the key steps:  
 Authors submit a title, abstract, and other metadata. 
  Authors submit their full paper. 
  After submission of their paper, authors have two weeks to complete an AD/AE form describing their computational artifacts (or lack of computational artifacts) and, optionally, how they evaluated their computational results. The paper is reviewed, and reviews are distributed to authors. 
  Authors prepare a rebuttal. 
  Reviewers consider the rebuttal. 
  Paper decisions are made in mid-June. Some papers may be shepherded for further changes. Authors of accepted papers prepare the final version of their paper. 

 areas/Tracks  
   
 Submissions will be considered on any topic related to high performance computing within the areas below. Authors must indicate a primary area from the choices on the submissions form and are strongly encouraged to indicate a secondary area.  
 Small-scale studies – including single-node studies – are welcome as long as the paper clearly conveys the work’s contribution to high performance computing.  
   
 algorithms  
   
 The development, evaluation, and optimization of scalable, general-purpose, high performance algorithms.  
 Topics include:   
 Algorithms for discrete and combinatorial optimization 
  Algorithms for hybrid and heterogeneous systems with accelerators 
  Algorithms for numerical methods and algebraic systems 
  Data-intensive parallel algorithms 
  Energy- and power-efficient algorithms 
  Fault-tolerant algorithms 
  Graph and network algorithms 
  Load balancing and scheduling algorithms 
  Machine learning algorithms 
  Uncertainty quantification methods 
  Other high performance computing algorithms 

 applications  
   
 The development and enhancement of algorithms, parallel implementations, models, software and problem solving environments for specific applications that require high performance resources.  
 Topics include:   
 Bioinformatics and computational biology 
  Computational earth and atmospheric sciences 
  Computational materials science and engineering 
  Computational astrophysics/astronomy, chemistry, and physics 
  Computational fluid dynamics and mechanics 
  Computation and data enabled social science 
  Computational design optimization for aerospace, energy, manufacturing, and industrial applications 
  Computational medicine and bioengineering 
  Irregular applications including graphs, network science, and text/pattern matching 
  Improved models, algorithms, performance or scalability of specific applications and respective software 
  Use of uncertainty quantification, statistical, and machine-learning techniques to improve a specific HPC application 
  Other high performance applications 

 Architecture & Networks  
   
 All aspects of high performance hardware including the optimization and evaluation of processors and networks.  
 Topics include:   
 Hardware/software co-design for HPC 
  Hardware support for programming languages or software development 
  Architectures for extreme heterogeneity or HPC/Quantum hybrids 
  HPC interconnects: topology, switch architecture, optical networks, software-defined networks 
  Network protocols, quality of service, congestion control, collective communication, offloading 
  I/O architecture/hardware and emerging storage technologies 
  Memory Systems & Architectures: caches, memory technology, non-volatile memory, coherence, translation 
  Multi-processor architecture and micro-architecture (e.g., reconfigurable, vector, stream, dataflow, GPUs, and custom/novel architecture) 
  Design-space exploration / performance projection for future systems 
  Evaluation and measurement on testbed or production hardware systems 
  Power-efficient design and power-management strategies 
  Resilience, error correction,high availability architectures 
  Secure architectures, side-channel attacks and mitigations for HPC 

 Data Analytics, Visualization, & Storage  
   
 All aspects of data analytics, visualization, storage, and storage I/O related to HPC systems, Submissions on work done at scale are highly favored.  
 Topics include:   
 Data analytics, visualization, and storage for HPC systems 
  Cloud-based analytics and scalable databases 
  Data mining, analysis, and visualization 
  Data reduction/compression for simulation data 
  Data integration workflows and design and performance of data-centric workflows 
  I/O performance tuning and middleware 
  In situ data processing and visualization 
  Next-generation storage systems 
  Parallel storage systems (file, object, key-value, etc.) 
  Provenance, metadata, and data management 
  Reliability and fault tolerance in HPC storage 
  Storage tiering (on-premise and cloud) 
  Storage innovations using machine learning 
  Storage networks and scalable cloud solutions 
  Visual analytics for supercomputing systems, application monitoring, and machine learning model interpretation and tuning at scale 

 HPC for Machine Learning  
   
 The development and enhancement of algorithms, systems, and software for scalable machine learning utilizing high performance computing technology. This area is primarily addressing the use of HPC to improve ML rather than the use of ML to improve any technology covered by other areas. It is particularly designed for papers that have a strong ML component and that need to be evaluated by ML experts. Papers addressing the latter should be submitted to the respective areas.  
 Topics include:   
 HPC for ML 
  Parallel and distributed learning algorithms 
  Hardware-efficient training and inference 
  Model, pipeline, and data parallelism 
  Accelerated computing for ML 
  Large-scale data processing for ML 
  Performance modeling and analysis of ML applications 
  Scalable optimization methods for ML 
  Scalable hyperparameter tuning and optimization 
  Scalable neural architecture search 
  Model deployment and inference at scale 
  Systems, compilers, and languages for ML at scale 

 Performance Measurement, Modeling, & Tools  
   
 Novel methods and tools for measuring, evaluating, and/or analyzing performance for large-scale systems.  
 Topics include:   
 Analysis, modeling, or simulation methods for performance 
  Methodologies, metrics, and formalisms for performance analysis and tools 
  Novel and broadly applicable performance optimization techniques 
  Performance studies of HPC hardware and software subsystems such as processor, network, memory, accelerators, and storage 
  Scalable tools and instrumentation infrastructure for measurement, monitoring, and/or visualization of performance 
  System-design tradeoffs between performance and other metrics (e.g., performance and resilience, performance and security) 
  Workload characterization and benchmarking techniques 

 post-Moore Computing  
   
 Technologies that continue the scaling of supercomputing performance beyond the limits of Moore’s law, including system architecture, programming frameworks, system software, and applications.  
 Topics include:   
 Hardware specialization and taming extreme heterogeneity 
  Beyond von-Neumann computer architectures 
  Special purpose computing (e.g., Anton or GRAPE) 
  Quantum computing 
  Neuromorphic and brain-inspired computing 
  Probabilistic, stochastic computing, and approximate computing 
  Novel post-CMOS device technologies and advanced packaging technologies for heterogeneous integration (evaluated in a supercomputing systems or application context) 
  Superconducting electronics for supercomputing 
  Programming models and programming paradigms for post-Moore systems 
  Tools for modeling, simulating, emulating, or benchmarking post-Moore and post-CMOS devices and systems 

 Programming Frameworks  
   
 Compilers, programming languages, libraries, programming models, and runtime systems that enable management of hardware resources and support parallel programming for large-scale systems.  
 Topics include:   
 Compiler analysis, optimization and code generation 
  Program verification, program transformation and synthesis 
  Parallel programming languages, libraries, models, and application frameworks 
  Execution models and runtime systems 
  Communication libraries 
  Programming language and compilation techniques for reducing energy and data movement 
  Solutions for parallel-programming challenges (e.g., interoperability, memory consistency, determinism, reproducibility, race detection) 
  Tools and frameworks for fault tolerance and resilience 
  Tools and frameworks for parallel program development (e.g., debuggers and integrated development environments) 
  Programming models and framework for heterogeneous systems 
  Programming models and runtime for future novel systems 

 State of the practice  
   
 All aspects of the pragmatic practices of HPC, including operational IT infrastructure, services, facilities, large-scale application executions and benchmarks. Papers are expected to capture experiences and ongoing practice relating to modern computing centers or HPC-related software. Papers do not need to cover novel research or developments, but they are expected to offer novel insights and lessons for HPC architects, developers, administrators, or users.  
 Topics include:   
 Bridging of cloud data centers and supercomputing centers 
  Energy efficiency and carbon emission of HPC and data centers 
  Comparative system benchmarking over a wide spectrum of workloads 
  Deployment experiences of large-scale hardware and software infrastructures and facilities 
  Facilitation of “big data” associated with supercomputing 
  Infrastructural policy issues and management experiences, especially international experiences 
  Pragmatic resource management strategies and experiences 
  Monitoring and operational data analytics 
  Procurement, technology investment and acquisition best practices 
  Quantitative results of education, training, and dissemination activities 
  Software engineering best practices for HPC 
  User support experiences with large-scale and novel machines 
  Provenance, logistic concerns and reproducibility of data 
  Adoption and use of infrastructure as code paradigm 
  Management, support and impact of large workflows 
  Workload analysis, accounting and group users interactions 

 System Software & Cloud Computing  
   
 Cloud and system software architecture, configuration, optimization and evaluation, support for parallel programming on large-scale systems or building blocks for next-generation HPC architectures.  
 Topics include:   
 Convergence of HPC, cloud, edge, and other distributed computing resources 
  Analysis of cost, performance, and reliability of HPC, cloud, and edge facilities 
  Systems that facilitate distributed applications, such as workflow systems, task-oriented systems, functions-as-a-service, and service-oriented computing 
  Integration and management of HPC hardware in clouds and distributed systems 
  Scheduling, load balancing, resource provisioning, resource management, cost efficiency, fault tolerance, and reliability for large-scale systems and clouds 
  Green clouds, energy efficiency, power management, carbon awareness 
  Approaches for enabling adaptive and elastic system software 
  Parallel/networked file system integration with the OS and runtime 
  OS and runtime system enhancements for accelerators 
  Runtime and OS management of complex memory hierarchies 
  Interactions among the OS, middleware and tools 
  System software for reducing energy and data movement 
  Self-configuration, monitoring, and introspection 
  Security, sharing, auditing, and identity management 
  Virtualization, containerization, and other technologies for isolation and portability 
  Case studies of scalable distributed applications that span facilities 

 conflict of interest, Plagiarism, & AI-Generated Text  
   
 conflict of interest  
   
 Please be aware of, and adhere to, these SC Conference guidelines regarding potential conflicts of interest and disclosure.  
 A potential conflict of interest occurs when a person is involved in making a decision that:  
 Could result in that person, a close associate of that person, or that person’s company or institution receiving significant financial gain, such as a contract or grant, or 
  Could result in that person, or a close associate of that person, receiving significant professional recognition, such as an award or the selection of a paper, work, exhibit, or other type of submitted presentation. 
  Program Committee members will be given the opportunity to list potential conflicts of interest during each program’s review process. Program Committee chairs and area chairs will make every effort to avoid assignments that have a potential COI.  
 According to the SC conference you have a conflict of interest with the following:  
 Your PhD advisors, post-doctoral advisors, PhD students, and post-doctoral advisees; 
  Family relations by blood or marriage, or equivalent (e.g., a partner); 
  People with whom you collaborated in the past five years. Collaborators include: co-authors on an accepted/rejected/pending research paper; co-PIs on an accepted/pending grant; those who fund your research; researchers whom you fund; or researchers with whom you are actively collaborating; 
  Close personal friends or others with whom you believe a conflict of interest exists; 
  People who were employed by, or a student at, your primary institution(s) in the past five years, or people who are active candidates for employment at your primary institution(s). 
  Note that “service” collaborations, such as writing a DOE, NSF, or DARPA report, or serving on a program committee, or serving on the editorial board of a journal, do not inherently create a COI.  
 Other situations can create COIs, and you should contact the Technical Program Chairs for questions or clarification on any of these issues.  
   
 Plagiarism  
   
 Please review the IEEE guidelines on identifying plagiarism  .  
   
 AI-generated text  
   
 The use of artificial intelligence AI–generated text in an article shall be disclosed in the acknowledgements section of any paper submitted to SC. The sections of the paper that use AI-generated text shall have a citation to the AI system used to generate the text. Utilizing Large Language Models (LLMs) is permissible as a general-purpose writing assistance tool. Authors are expected to acknowledge their complete accountability for the contents of their papers, including content generated by LLMs that could be interpreted as plagiarism or scientific misconduct (e.g., fabrication of facts). LLMs are not eligible for authorship.  

 double-Anonymous review  
   
 This document aims to help authors, reviewers, and Papers Chairs understand the double-anonymous review process that the SC Conference Series has adopted. Please contact us  with any questions or comments.  
   
 Guidance for authors  
   
 If you are an author, you should write your paper so as not to disclose your identity or the identities of your co-authors. The following guidelines are best practices for anonymizing a submission in a way that should not weaken it or the presentation of its ideas. These guidelines are broken up into the major submission and review phases: while writing (before submitting), at submission time, and during the rebuttal process.  
 These practices were distilled from McKinley (2015) and Snodgrass (2007).  
 In addition, the paper evaluation draws inspiration from the three principles suggested by Snodgrass (2007):  
 Authors should not be required to go to great lengths to anonymize their submissions. 
  Comprehensiveness of the review trumps anonymity efficacy. 
  Editors and Chairs retain flexibility and authority in managing the reviewing process. 
    
 While Writing   
 Do not use your name or your co-authors’ names, affiliations, funding sources, or acknowledgments in the heading or body of the document. It is absolutely fine and encouraged to use the name of the machine you are working on and describe it. 
  Do not eliminate self-references to your published work that are relevant and essential to a proper review of your paper solely in an attempt to anonymize your submission. Instead, write self-references in the third person. Recall that the goal and spirit of double-blind review is to create uncertainty about authorship, which is sufficient to realize most of its benefits. 
  To reference your unpublished work, use anonymous citations. From Snodgrass (2007): “The authors developed … [1]” where the reference [1] appears as, “[1] Anonymous (omitted due to double-anonymous review).” You will have a chance to explain these references to the non-conflicted Papers Chair or their designee(s); see At Submission Time, below. See the FAQ for more examples. 
    
 At Submission Time   
 At submission time, you will be asked to declare conflicts of interest you may have with program committee members. You will also have the option to upload a list of conflicts. Reviewers will be asked separately to verify declared conflicts. 
  Because of the double-anonymous process, there is no limit on the number of submissions by Program Committee members. However, there is a limit of four accepted papers for Program Committee members. Track Co-Chairs are subject to submission limits. 
    
 During the Review Period   
 You are not forbidden from disseminating your work via talks or technical reports. However, you should not try to directly or otherwise unduly influence program committee members who may be reviewing your paper.  
   
 During the Rebuttal Period   
 During the rebuttal period, authors should still assume double-anonymous review. Therefore, authors should not disclose their identities in their rebuttal to the reviewers. However, as with the original submission, authors will have the option of entering identity-revealing information in a separate part of the rebuttal form that will, by default, be visible only to non-conflicted Chairs, or their designee(s) in the case of conflicts.  

 upon acceptance  
   
 REgistration  
   
 If your paper is selected, at least one author must register for the Technical Program in order to attend the SC Conference and present the paper.  
 For an accepted paper to be included in the proceedings, the author has to present the paper at the conference in person. Otherwise, the paper will be removed from the proceedings.  
   
 Proceedings  
   
 All accepted papers will be listed in the online SC Schedule  .  
   
 Papers are archived in the ACM Digital Library  and IEEE Xplore  ; members of SIGHPC or subscribers to the archives may access the full papers without charge. This publication contains the full text of all Papers and their Artifact Description appendices presented at the SC Conference.  

 on-site  
   
 schedule & location  
   
 Paper presentations will be held Tuesday–Thursday, November 19–21, 2024. Paper sessions are 30 minutes. Day, time, and location for each paper session will be published in the online SC Schedule by September 2024.  
   
 infrastructure  
   
 Papers are assigned a theater room equipped with standard AV facilities:  
 Projector 
  Microphone and podium 
  Wireless lapel microphone or wireless handheld microphone 
  Projection screen 
    
 Awards  
   
 Best Paper (BP), Best Student Paper (BSP), and Best Reproducibility Advancement (BRA) nominations are made during the review process and are highlighted in the online SC schedule. BP, BSP, and BRA winners are selected by a committee who attends the corresponding paper presentations, and winners are announced at the Thursday Awards ceremony.  

 Reproducibility Initiative  
 SC has been a leader in tangible progress towards scientific rigor, through its pioneering practice of enhanced reproducibility of accepted papers. This year’s initiative builds on this success by continuing the practice of using appendices to enhance scientific rigor and transparency.  
   
 The Reproducibility Initiative impacts technical papers and their submission and peer review. All paper submitters should review the information on the Reproducibility Initiative page, including the guidelines for AD/AE Appendices & Badges.  
   
  reproducibility    
   
  AD/AE Process & Badges    
   
  AD/AE Appendices    

 Submissions Closed  
 Create an account in the online submission system and complete the form. A sample form can be viewed before signing in.  
   
  submit    

 If you have questions about Paper submissions, please contact the program committee.  
   
  contact us    

  dates & deadlines   
 Submission, application, and nomination deadlines for all programs and awards, the housing open date, the early registration deadline, and more – all in one place.  

 SC Network Policy 
  Dates & Deadlines 
  SC24 Planning Committee 
  Proceedings & Archives 
  Contact Us 
  SC Steering Committee 
  Photos & Logos 
  Volunteer 
  SC Conference Series 

  CODE OF CONDUCT   
   
 ACM PRIVACY POLICY   
   
 IEEE PRIVACY POLICY   

 The International Conference for High Performance Computing, Networking, Storage, and Analysis  
   
 SPONSORED BY:  

  Back To Top Button      Important dates data: 
Skip to main content  Digital Experience 
  Schedule 
  Dates & Deadlines 

 Toggle navigation    Toggle navigation   Program | Dropdown menu toggle | Program  Keynote 
  HPC Creates Plenary 
  Invited Talks 
  Panels 
  Tutorials 
  Workshops 
  Birds of a Feather 
  Papers 
  Reproducibility Initiative 
  AD/AE Process & Badges 
  AD/AE Appendices 
  Awards 
  Early Career 
  Exhibitor Forum 
  Posters 
  ACM SRC 
  Doctoral Showcase 
  Research Posters 
  Art of HPC 
  Receptions 
  Proceedings & Archives 
  Exhibits | Dropdown menu toggle | Exhibits  Exhibitor Prospectus 
  Exhibitor Application 
  Exhibitor List & Floorplan 
  Exhibitor Manual 
  Exhibitor Housing 
  Exhibitor Function Space 
  SCinet for Exhibitors 
  Promotional Opportunities 
  Exhibitor Forum 
  Quantum Locality 
  HPC Illuminations Pavilion 
  Recruit at the Job Fair 
  Students | Dropdown menu toggle | Students@SC  Lead Student Volunteers 
  Student Volunteers 
  Student Cluster Competition 
  IndySCC 
  Mentor–Protégé Matching 
  HPC Immersion 
  Alumni Showcase 
  Speed Mentoring Event 
  AI & HPC in the Classroom 
  Student Tours 
  Guided Interest Groups 
  Job Fair 
  SCinet | Dropdown menu toggle | SCinet  SCinet Technology 
  SCinet Teams 
  SCinet History 
  Contributors & Volunteers 
  Participate in SCinet 
  Network Research Exhibition 
  Accepted NRE Demos 
  INDIS Workshop 
  WINS 
  SCinet for Exhibitors 
  SC Network Policy 
  Media | Dropdown menu toggle | Media  Media Registration 
  Media Partners 
  Blog 
  Newsletter 
  Photos & Logos 
  Attend | Dropdown menu toggle | Attend  Registration 
  Visa Applications 
  Digital Experience 
  Mobile App 
  Schedule 
  Atlanta 
  Convention Center 
  Housing & Shuttles 
  Family Resources 
  Job Fair 
  Inclusivity 
  HPC Illuminations Pavilion 
  Code of Conduct 
  Volunteer 
  Search    Search      

  Home     All Dates & Deadlines     
 All Dates & Deadlines  
  
   Program  
   
 NOV 17–22   , 2024   
   
 Exhibits  
   
 NOV  19–21, 2024   
   
 All Deadlines Are at 11:59 pm Anywhere on Earth  

 Attendees  
 Housing   
   
 JUN 3, 2024   
  Housing Opens  
   
 OCT 11, 2024   
  Housing Closes  
   
 OCT 14–21, 2024   
  Late Requests  

 Registration   
   
 JUL 10, 2024   
  Registration Opens  
   
 OCT 15, 2024   
  Standard Reg Closes  

 Exhibitors  
 Function Space    
   
 FEB 12, 2024   
  Requests Open  
   
 MAR 4, 2024   
  Requests Close  
   
 MAR 18–MAY 17   
  Allocations Sent  

 Exhibitor Housing   
   
 MAR 18, 2024   
  Early Requests Open  
   
 APR 13, 2024   
  Early Requests Close  
   
 MAY 20–24, 2024   
  Allocations Sent  
   
 SEP 13, 2024   
  Occupancy Lists Due  

 Move-In   
   
 NOV 14–17, 2024   
  8 am–5 pm  

 Space Selection   
   
 NOV 20, 2024   
  For SC25  

 Move-Out   
   
 NOV 21, 2024   
  3–11:59 pm  
   
 NOV 22, 2024   
  8 am–5 pm  

 Submissions  
 Workshops   
   
 JAN 1, 2024  
   Submissions Open  
   
 FEB 23, 2024  
   Submissions Close  
   
 MAR 15, 2024  
   Notifications  
   
 SEP 6, 2024  
   Paper Notifications  
   
 SEP 27, 2024  
   Content/Schedule & Final Materials  

 Tutorials   
   
 JAN 1, 2024   
  Submissions Open  
   
 APR 19, 2024   
  Submissions Close  
   
 JUN 28, 2024   
  Notifications  
   
 AUG 2, 2024   
  Final Materials  
   
 SEP 6, 2024   
  Honorarium/Support  
 OCT 25, 2024   
  Handouts/Slides  

 Panels   
   
 JAN 1, 2024   
  Submissions Open  
   
 MAY 3, 2024   
  Submissions Close  
   
 JUN 7, 2024   
  Notifications  
   
 AUG 15, 2024   
  Final Materials  

 Birds of a Feather   
   
 JAN 1, 2024   
  Submissions Open  
   
 JUL 5, 2024   
  Submissions Close  
   
 AUG 16, 2024   
  Notifications  
   
 SEP 15, 2024   
  Final Materials  

 ACM SRC   
 Doctoral Showcase   
 Research Posters   
   
 JAN 1, 2024   
  Submissions Open  
   
 AUG 16, 2024   
  Submissions Close  
   
 SEP 9, 2024   
  Notifications  
   
 SEP 15, 2024   
  Content/Schedule  
   
 SEP 30, 2024   
  Final Materials  

 Papers   
   
 MAR 1, 2024   
  Submissions Open  
 MAR 26, 2024   
  Abstract Submissions Close  
   
 APR 2, 2024  
  (No Extensions  )  
  Paper Submissions  
  Close  
   
 APR 20, 2024   
  AD Due  
 MAY 20–24, 2024   
  Review/Rebuttal Period  
   
 JUN 14, 2024   
  Notifications Sent  
 JUN 28, 2024   
  Revised AD/AE, Badge Applications  
   
 AUG 23, 2024   
  Final Paper Due  

 Art of HPC    
   
 APR 15, 2024   
  Submissions Open  
   
 JUL 29, 2024   
  Submissions Close  
   
 AUG 10, 2024   
  Notifications  

 Exhibitor Forum   
   
 JUN 10, 2024   
  Submissions Open  
   
 AUG 9, 2024   
  Submissions Close  
   
 SEP 20, 2024   
  Notifications  

 Applications  
 Lead Student Volunteers   
   
 DEC 4, 2023  
    Applications Open  
   
 FEB 15, 2024  
   Applications Close  
   
 APR 1, 2024  
   Notifications  

 WINS   
   
 DEC 4, 2023  
   Applications Open  
   
 JAN 26, 2024  
   Applications Close  
   
 MID-MAR 2024  
   Notifications  

 Early Career   
   
 FEB 1, 2024   
  Applications Open  
   
 AUG 31, 2024  
   Applications Close  
   
 SEP 18, 2024  
   Notifications  

 Student Volunteers   
   
 FEB 16, 2024   
  Applications Open  
   
 MAY 31, 2024   
  Applications Close  

 Student Cluster Competition   
   
 MAR 1, 2024  
    Applications Open  
   
 MAY 15, 2024  
   Applications Close  
   
 JUN 15, 2024  
   Notifications  

 IndySCC   
   
 MAR 1, 2024  
    Applications Open  
   
 MAY 15, 2024  
   Applications Close  
   
 JUN 15, 2024  
   Notifications  

 HPC Immersion   
   
 MAR 1, 2024  
    Applications Open  
   
 JUN 15, 2024  
   Applications Close  

 HPC Illuminations Pavilion   
   
 MAY 19, 2024  
    Applications Open  
   
 AUG 23, 2024  
   Applications Close  

 Volunteer   
  SC24 Committee  
   
 JUN 15, 2023   
  Applications Open  
   
 DEC 31, 2023   
  Applications Close  

 Volunteer   
  SC25 Committee  
   
 JUN 15, 2024  
   Applications Open  
   
 DEC 31, 2024   
  Applications Close  

 Mentor–Protégé   
   
 AUG 1, 2024  
   Early Sign-ups Open  
   
 SEP 1, 2024  
   Early Sign-ups Close  
   
 SEP 2, 2024  
   Regular Sign-ups Open  
   
 NOV 1, 2024  
   Regular Sign-ups Close  

 SC Award Nomination  
 Test of Time Award   
   
 MAR 8, 2024   
  Nominations Open  
   
 MAY 24, 2024   
  Nominations Close  
   
 SEP 2024   
  Award Announced  

 Society Award Nominations  
 ACM SIGHPC Outstanding Doctoral Dissertation Award   
   
 MAR 1, 2024   
  Nominations Open  
   
 APR 10, 2024   
  Nominations Close  
   
 AUG 2024   
  Winners Announced  

 ACM Gordon Bell Prize   
   
 WINTER 2024   
  Nominations Open  
   
 APR 15, 2024   
  Nominations Close  

 ACM Gordon Bell for Climate Modelling   
   
 WINTER 2024   
  Nominations Open  
   
 APR 15, 2024   
  Nominations Close  

  ACM SIGHPC Fellowships in Computational and Data Science   
   
 MAR 15, 2024   
  Nominations Open  
   
 APR 30, 2024   
  Nominations Close  
   
 JUL 30, 2024   
  Notifications Sent  

 ACM/IEEE-CS George Michael Memorial HPC Fellowships   
   
 WINTER 2024   
  Nominations Open  
   
 MAY 1, 2024   
  Nominations Close  

  ACM SIGHPC Educational Award for Outstanding Contribution to Computational Science Education   
   
 MAR 2024   
  Nominations Open  
   
 MAY 31, 2024   
  Nominations Close  

 ACM/IEEE-CS Ken Kennedy Award   
   
 WINTER 2024   
  Nominations Open  
   
 JUN 30, 2024   
  Nominations Close  

 IEEE-CS Sidney Fernbach Award   
   
 FALL 2023   
  Nominations Open  
   
 JUN 30, 2024   
  Nominations Close  

 ACM SIGHPC Emerging Woman Leader in Technical Computing Award   
   
 APR 2024   
  Nominations Open  
   
 JUN 30, 2024   
  Nominations Close  
   
 JUL 31, 2024   
  Winner Selected  

 IEEE-CS Seymour Cray Computer Engineering Award   
   
 WINTER 2023   
  Nominations Open  
   
 JUN 30, 2024   
  Nominations Close  

  IEEE-CS TCHPC Award for Excellence in Early Career Researchers in High Performance Computing   
   
 WINTER 2024   
  Nominations Open  
   
 JUL 24, 2024   
  Nominations Close  

 Stay Up to Date  
 Sign up to receive the SC newsletter in your inbox.  
   
 Please enable JavaScript in your browser to complete this form.  First Name *      
 Last Name *      
 Email *      
   
 Comment     
    
      Sign Me Up    
    
 Information provided is treated in accordance with ACM  & IEEE  privacy policies.  

 SC Network Policy 
  Dates & Deadlines 
  SC24 Planning Committee 
  Proceedings & Archives 
  Contact Us 
  SC Steering Committee 
  Photos & Logos 
  Volunteer 
  SC Conference Series 

  CODE OF CONDUCT   
   
 ACM PRIVACY POLICY   
   
 IEEE PRIVACY POLICY   

 The International Conference for High Performance Computing, Networking, Storage, and Analysis  
   
 SPONSORED BY:  

   Back To Top Button

25. Conference SCAM_1:
Zum Inhalt springen      
            
 Deutsch 
  English 

 Vorlesen        

   Institute for Software and Systems Engineering   

 Forschung | Bereich  
  Forschung    Inhalt  
 Forschungsgruppen 
  Labore und Infrastruktur 
  Laufende Projekte 
  Abgeschlossene Projekte 
  Abgeschlossene Promotionen und Habilitationen 
  Publikationen 
  KI Sprechstunde 
   Schnellzugriff  
 DIGIT (ehem. IPSSE) 
  Digital Technologies 
  Lehre | Bereich  
  Lehre    Inhalt  
 Lehrveranstaltungen 
  Studentische Arbeiten 
  Prüfungstermine 
  Studiengänge 
  Zertifikate 
   Schnellzugriff  
 Stud.IP 
  Prüfungsamt (Klausurtermine) 
  Labore und Infrastruktur 
  Informatik studieren 
  Karriere | Bereich  
  Karriere    Inhalt 
  Über uns | Bereich  
  Über uns    Inhalt  
 Team 
  Mitgliedschaften 
  Anfahrt 
  Kontakt 
  Nachrichtenübersicht 
  Querverweis 
  Events 
   Schnellzugriff  
 Facebook 
  Instagram 
  YouTube 
  Team | Professoren und Dozenten 
  Institutsverwaltung 
  Wissenschaftliche Mitarbeiter und Doktoranden 
  Hilfswissenschaftler 
  Mitgliedschaften 
  Anfahrt 
  Kontakt 
  Nachrichtenübersicht 
  Querverweis 
  Events 

  Über uns 
  Team 
  Professoren und Dozenten 
  Prof. Dr. Mohammad Ghafari 

 Prof. Dr. Mohammad Ghafari  
 Institute for Software and Systems Engineering  
 Secure IT Systems  
   
 Office Hours  :  
  By appointment only (online and in-person)  
  
 CV  :  
 04.2022-present Professor for Secure IT Systems, Technical University of Clausthal, Germany  
 2020-2022 Senior Lecturer, University of Auckland, New Zealand  
 2016-2020 Postdoctoral Researcher, University of Bern, Switzerland  
 2012-2015 PhD student and Research Assistant, Politecnico di Milano, Italy  
  
 Research Interests  :  
  Secure Software Engineering, Usable Security, Empirical Studies  
 Publications  :  
  Google Scholar   
 Research Group  :  
  Secure Software Engineering (SSE)    
  
 Professional Services (selected)  :  
 Program Committee Member, 22 nd  IEEE/ACM International Conference on Mining Software Repositories (MSR 2025)  
 Program Committee Member, 32 nd  edition of the IEEE International Conference on Software Analysis, Evolution and Reengineering (SANER 2025)  
 Program Committee Member, 24 th  IEEE International Working Conference on Source Code Analysis and Manipulation (SCAM 2024)  
 Guest Editor, Journal of Software: Evolution and Process (SPECIAL ISSUE on Source Code Analysis and Manipulation, 2023)  
 Program Committee Member, 17 th  ACM/IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM 2023)  
 Program Committee Member, 30 th  edition of the IEEE International Conference on Software Analysis, Evolution and Reengineering (SANER 2023)  
 Conference organizer, Program Co-chair of the 22 nd  IEEE International Working Conference on Source Code Analysis and Manipulation (SCAM 2022)  
 Vice president of CHOOSE, the Swiss Informatics Society (SI) special interest group for innovative Software Engineering topics (2019-2020)  

 Kontakt   
  Tel: +49 (0) 5321 3816 8233  
  E-Mail: mohammad.ghafari @  tu-clausthal .  de   
 Adresse   
  Technische Universität Clausthal  
  Institut für Software and Systems Engineering  
  Room 2.02, Wallstr. 6  
  38640 Goslar  
  Germany  

 Info  
  
 Kontakt 
  Impressum 
  Datenschutz 

 Querverweis  
  
 Center for Digital Technologies   
  Informatik studieren an der TU Clausthal   
  Informatik an der TU Clausthal   

  Portale  
  
 Stud.IP 
  Studienportale 
  webMail 
  Alumni-Portal der TU Clausthal 

 Social Media  

 Hinweis zu Cookies  
 Unsere Webseite verwendet Cookies. Diese haben zwei Funktionen: Zum einen sind sie erforderlich für die grundlegende Funktionalität unserer Website. Zum anderen können wir mit Hilfe der Cookies unsere Inhalte für Sie immer weiter verbessern. Hierzu werden u. a. pseudonymisierte Daten von Website-Besuchern gesammelt und ausgewertet. Mit dem Klick auf Einstellungen  können Sie zudem die einzelnen Cookies auswählen  , welche Sie akzeptieren wollen. Das Einverständnis in die Verwendung der Cookies können Sie jederzeit, auch teilweise, widerrufen. Weitere Informationen zu Cookies auf dieser Website finden Sie in unserer Datenschutzerklärung    und zu uns im Impressum    .  
 Einstellungen    
 Erforderlich    
  Zustimmen    
   
 Diese Cookies werden für eine reibungslose Funktion unserer Website benötigt.  
  
 Name | Zweck | Ablauf | Typ | Anbieter 
 CookieConsent | Speichert Ihre Einwilligung zur Verwendung von Cookies. | 1 Jahr | HTML | Website 

 Schrift-Skalierung    
  Zustimmen    

 Name | Zweck | Ablauf | Typ | Anbieter 
 FontScaler | Aktiviert einige Schaltflächen am oberen Rand der Seite, um die Schriftgröße der Website zu skalieren | 1 Monate | HTML | TU Clausthal 

 Readspeaker    
  Zustimmen    

 Name | Zweck | Ablauf | Typ | Anbieter 
 ReadSpeaker | Aktiviert die Funktion "Readspeaker", die Teile einer Seite oder die ganze Seite vorliest, ohne dass eine zusätzliche Software installiert werden muss | 1 Monate | HTML | TU Clausthal 

 Druck-Schaltfläche    
  Zustimmen    

 Name | Zweck | Ablauf | Typ | Anbieter 
 PrintButton | Aktiviert eine Schaltfläche zum Ausdrucken der aktuellen Seite per Klick | 1 Monate | HTML | TU Clausthal 

 Marketing    
  Zustimmen    

 Name | Zweck | Ablauf | Typ | Anbieter 
 _pk_id | Wird verwendet, um ein paar Details über den Benutzer wie die eindeutige Besucher-ID zu speichern. | 13 Monate | HTML | Matomo 
 _pk_ref | Wird benutzt, um die Informationen der Herkunftswebsite des Benutzers zu speichern. | 6 Monate | HTML | Matomo 
 _pk_ses | Kurzzeitiges Cookie, um vorübergehende Daten des Besuchs zu speichern. | 30 Minuten | HTML | Matomo 
 _pk_cvar | Kurzzeitiges Cookie, um vorübergehende Daten des Besuchs zu speichern. | 30 Minuten | HTML | Matomo 
 _pk_hsr | Kurzzeitiges Cookie, um vorübergehende Daten des Besuchs zu speichern. | 30 Minuten | HTML | Matomo 

 Alle Cookies ablehnen  Speichern  Alle Cookies akzeptieren    

  
Call for papers data: 
Zum Inhalt springen      
            
 Deutsch 
  English 

 Vorlesen        

   DIGIT Forschungszentrum   

 DIGITAL TECHNOLOGIES 
  Reallabore | Bereich  
 Reallabore    Inhalt  
 Circular Economy 
  Nachhaltige Produktion 
  Autonome und Nachhaltige Mobilität 
  Land- und Wasserwirtschaft 
  Unser Hightech-Inkubator | Bereich  
 Unser Hightech-Inkubator    Inhalt  
 Unser Talentprogram 
  Partner 
  Workshops & Events | Bereich  
  Workshops & Events    Inhalt  
 Workshops 
  Deep Driving 
  KI-Workshop für Unternehmen 
  Rückblick 
  Forschung | Bereich  
  Forschung    Inhalt  
 Anwendungsgebiete des DIGIT 
  Forschungsprojekte 
  Forschungsgruppen 
  Promotionskolleg 
  Uns kennenlernen | Bereich  
  Uns kennenlernen    Inhalt  
 Das DIGIT 
  Mitglieder des DIGIT 
  Stellenangebote 
  Wissensbotschafterinnen und Wissensbotschafter 
  Presse und News | Bereich  
  Presse und News    Inhalt  
 Downloads 

           Circular Economy    
           DIGITAL TECHNOLOGIES    
           Forschung    
           Workshops & Events    
           https://www.digit-research.de/start-ups    

 DIGITAL TECHNOLOGIES           
 Digital Technologies  
 Dein Studiengang für Digitalisierung und Nachhaltigkeit der Ostfalia Hochschule und der TU Clausthal. Auch möglich :  DIGITAL TECHNOLOGIES mit Praxiskooperation studieren!  

 https://t70fb1153.emailsys1c.net/136/4721/53ac3135fb/subscribe/form.html?_g=1624434178           
 JETZT NEU - Der DIGIT-Newsletter!  
 Mit unserem neuen Newsletter bleiben Sie immer auf dem neusten Stand zu Forschungsaktivitäten und Events aus dem DIGIT!  
 Melden Sie sich jetzt an...  

 https://www.digit-research.de/reallabor-head           
 Reallabore  
 In unseren Reallaboren gestalten Professorinnen und Professoren gemeinsam mit der Wirtschaft die digitale Transformation nachhaltiger industrieller Prozesse.  

 Willkommen beim DIGIT  
  
 Das Center for Digital Technologies (DIGIT) ist ein Forschungszentrum der Technischen Universität Clausthal  in Kooperation mit der Ostfalia Hochschule für angewandte Wissenschaften  . Hier gestalten die Professorinnen und Professoren beider Hochschulen gemeinsam mit der Wirtschaft die digitale Transformation nachhaltiger industrieller Prozesse. Unsere Forschungsschwerpunkte liegen in den sechs Anwendungsgebieten  Autonome Systeme, Circular Economy & Umwelttechnik, Digitale Transformation, Energie, Industrie 4.0 und Mobilität.  
 Am DIGIT entstehen Innovationen für eine digitale und nachhaltige Zukunft. Dabei möchten wir mit unseren Partnerinnen und Partner aus Wirtschaft und Wissenschaft, Studierenden sowie Schülerinnen und Schülern in den Austausch kommen und bieten hierfür eine Vielzahl von Transferformaten an. Diese bestehen beispielsweise aus unseren Workshops  , unserem Digitalierungs-Podcast "Can you Dig IT?!" und unseren Digitalisierungslaboren und Co-Working-Spaces. Außerdem laden wir alle Interessierten ein, sich mit unserer DIGIT.Community beim DIGIT.RoundTable zu Themen der Digitalisierung und Nachhaltigkeit in lockerer After-Work-Athmosphäre auszutauschen.  
 Ebenfalls im DIGIT beheimatet ist das gemeinsame Studienprogramm der Ostfalia Hochschule und TU Clausthal DIGITAL TECHNOLOGIES  . Das innovative Studienprogramm verbindet das beste aus der Informatik, Technik und Wirtschaft und macht unsere Studierenden zu Expertinnen und Experten für der digitalen Transformation nachhaltiger industrieller Prozesse. Außerdem bauen unsere Studierenden innerhalb der Projektarbeit Kompetenzen wie agiles Projektmanagement, Qualitätsmanagement und konzeptionelles Arbeiten (Systemarchitektur, Modellierung) auf. Durch die Wahl eines der sechs Anwendungsgebiete des DIGIT legen die Studierenden zudem ihren fachlichen Schwerpunkt fest und eignen sich hervorragendes Domänenwissen an.  

 Neuigkeiten aus dem DIGIT  
  
  26.08.2024   Abschlussveranstaltung des Projekts „5G Smart Country“ auf dem Rittergut Lucklum  
 Das Projekt „5G Smart Country“ lädt am 24. September 2024 alle Unterstützer, Freunde und Interessierten zur Abschlussveranstaltung auf das Rittergut Lucklum ein. Erleben Sie spannende Einblicke in die entwickelten 5G-Anwendungen für die Land- und Forstwirtschaft.  

  22.08.2024   Kick-Off - Zukunftslabor Circular Economy  
 Am 21. August 2024 fand das Kick-off des neuen Zukunftslabors Circular Economy am Center for Digital Technologies (DIGIT) in Goslar statt.  

  12.06.2024   Neues Zukunftslabor am ZDIN: Digitalisierung in der Circular Economy  
 Das neue Zukunftslabor Circular Economy wird innovative, digitale Lösungen für eine nachhaltige und effiziente Nutzung natürlicher Ressourcen erforschen. Dafür erhält es 3,7 Mio. Euro vom niedersächsischen Wissenschaftsministerium und von der VolkswagenStiftung für eine Projektlaufzeit von fünf Jahren.  

  26.04.2024   Konferenzteilnahme ADAPTIVE 2024  
 Das ISSE präsentierte auf der diesjährigen ADAPTIVE 2024, welche vom 14.-18. April in Venedig stattfand, insgesamt drei Paper aus den Forschungsbereichen Circular Economy und Autonomous Mobility.  

  05.04.2024   Entsorgungslogistik von Elektroaltgeräten ganz neu gedacht  
 Im Projekt „6RLogistics“ wird KI eingesetzt, um die Wiederverwertung von Elektroaltgeräten zu optimieren. Die TU Clausthal leitet den Bereich Forschung in dem Drei-Millionen-Euro-Projekt.  

  25.03.2024   HICSS Minitrack - Fostering Digitally Enabled Collaboration for Circular Economy Transformation  
 The Institute for Software and Systems Engineering is glad to announce, that we successfully applied for a minitrack on the 2025 Hawaii International Conference on System Sciences.  

  27.11.2023   Die Kuba-Methode und der Bergbau 2.0  
 Im Rahmen der Serie „Weniger ist mehr“ traf sich die GZ mit den Vordenkern der Recycling-Region Harz von der TU Clausthal.  

  24.11.2023   Reallabor DCE im Finale  
 Unser Reallabor DCE hat es bis ins Finale des Reallaborwettbewerbs vom BMWK geschafft!  

 weitere Neuigkeiten finden Sie hier in unserem Archiv...   

  Kontakt & Service 
  Impressum 
  Datenschutz 

  Portale  
  
 Stud.IP 
  Studienportale 
  webMail 
  Alumni-Portal der TU Clausthal 

 Ein Forschungszentrum der  

 Social Media  

 Hinweis zu Cookies  
 Unsere Webseite verwendet Cookies. Diese haben zwei Funktionen: Zum einen sind sie erforderlich für die grundlegende Funktionalität unserer Website. Zum anderen können wir mit Hilfe der Cookies unsere Inhalte für Sie immer weiter verbessern. Hierzu werden u. a. pseudonymisierte Daten von Website-Besuchern gesammelt und ausgewertet. Mit dem Klick auf Einstellungen  können Sie zudem die einzelnen Cookies auswählen  , welche Sie akzeptieren wollen. Das Einverständnis in die Verwendung der Cookies können Sie jederzeit, auch teilweise, widerrufen. Weitere Informationen zu Cookies auf dieser Website finden Sie in unserer Datenschutzerklärung    und zu uns im Impressum    .  
 Einstellungen    
 Erforderlich    
  Zustimmen    
   
 Diese Cookies werden für eine reibungslose Funktion unserer Website benötigt.  
  
 Name | Zweck | Ablauf | Typ | Anbieter 
 CookieConsent | Speichert Ihre Einwilligung zur Verwendung von Cookies. | 1 Jahr | HTML | Website 

 Schrift-Skalierung    
  Zustimmen    

 Name | Zweck | Ablauf | Typ | Anbieter 
 FontScaler | Aktiviert einige Schaltflächen am oberen Rand der Seite, um die Schriftgröße der Website zu skalieren | 1 Monate | HTML | TU Clausthal 

 Readspeaker    
  Zustimmen    

 Name | Zweck | Ablauf | Typ | Anbieter 
 ReadSpeaker | Aktiviert die Funktion "Readspeaker", die Teile einer Seite oder die ganze Seite vorliest, ohne dass eine zusätzliche Software installiert werden muss | 1 Monate | HTML | TU Clausthal 

 Druck-Schaltfläche    
  Zustimmen    

 Name | Zweck | Ablauf | Typ | Anbieter 
 PrintButton | Aktiviert eine Schaltfläche zum Ausdrucken der aktuellen Seite per Klick | 1 Monate | HTML | TU Clausthal 

 Marketing    
  Zustimmen    

 Name | Zweck | Ablauf | Typ | Anbieter 
 _pk_id | Wird verwendet, um ein paar Details über den Benutzer wie die eindeutige Besucher-ID zu speichern. | 13 Monate | HTML | Matomo 
 _pk_ref | Wird benutzt, um die Informationen der Herkunftswebsite des Benutzers zu speichern. | 6 Monate | HTML | Matomo 
 _pk_ses | Kurzzeitiges Cookie, um vorübergehende Daten des Besuchs zu speichern. | 30 Minuten | HTML | Matomo 
 _pk_cvar | Kurzzeitiges Cookie, um vorübergehende Daten des Besuchs zu speichern. | 30 Minuten | HTML | Matomo 
 _pk_hsr | Kurzzeitiges Cookie, um vorübergehende Daten des Besuchs zu speichern. | 30 Minuten | HTML | Matomo 

 Alle Cookies ablehnen  Speichern  Alle Cookies akzeptieren    

  Important dates data: 
undefined

26. Conference SCN_0:
Salta al contenuto     
   
   14th International Conference on Security and Cryptography for Networks – SCN 2024   
 In Cooperation with IACR  

     Menu  Home 
  Conference | Call for Papers 
  Committees 
  Program at a glance 
  Final program 
  Dates and Deadlines 
  Proceedings and Special Issue 
  SCN Registration 
  Submission Instructions for Accepted Papers – EquinOCS 
  Invited Speakers 
  Venue 
  Contact 
  Amalfi | History 
  How to reach 
  Hotels in Amalfi 
  Climate 
  Previous Editions | SCN 2022 
  SCN 2020 
  SCN 2018 
  SCN 2016 
  SCN 2014 
  SCN 2012 (Proceedings) 
  SCN 2010 (Proceedings) 
  SCN 2008 (Prooceedings) 
  SCN 2006 (Prooceedings) 
  SCN 2004 (Prooceedings) 
  SCN 2002 (Prooceedings) 
    
   Vai al contenuto    

 14th International Conference on Security and Cryptography for Networks  
  
 Amalfi (SA) Italy  . September 11-13, 2024   
 The Fourteenth International Conference on Security and Cryptography for Networks (SCN 2024) aims to bring together researchers in the field of cryptography and information security, practitioners, developers, and users to foster cooperation, exchange techniques, tools, experiences and ideas. The conference seeks submissions from academia, government, and industry presenting novel research on all practical and theoretical aspects of cryptography and information security. The primary focus is on original, high quality, unpublished research of theoretical and practical impact, including concepts, techniques, applications and practical experiences. Submitted papers must not substantially overlap with papers that have been published or that are simultaneously submitted to a journal or a conference/workshop with proceedings.  
 SCN is organized in cooperation with International Association for Cryptologic Research  .  
 SCN 2024 Final Program   
 SCN Proceedings – Part I – LNCS 14973   
 SCN Proceedings – Part II – LNCS 14974   
 List of paper accepted to SCN 2024   
 Instructions for accepted paper available here  . We remind authors that author camera ready and author registration  deadlines are July 17th.  
 Amalfi is a very popular place. We recommend to book your stay as soon as possible.  
 NEWS   
 02/07/24 Notifications sent to authors  
 28/06/2024: Registration  is now open!   
 18/04/24 SCN24 Invited speakers  will be Yevgeniy Dodis  and Alice Pellet-Mary   
 05/03/24 Submissions  now open!  
 05/03/24 A Special issue of Cryptography and Communications  will be devoted to selected papers from SCN 24!  
 18/01/24 The First CFP is out!  
 16/01/24 SCN 24 obtains the IACR-ICW  status  
 15/01/24 SCN 24 Proceedings will be published by Springer!  
 12/01/24. Website is up  

  Partially funded by:  

 Condividi:  
 Facebook 
  X 
  LinkedIn 

 Proudly powered by WordPress    

                                                                                                              
Call for papers data: 
Salta al contenuto     
   
   14th International Conference on Security and Cryptography for Networks – SCN 2024   
 In Cooperation with IACR  

     Menu  Home 
  Conference | Call for Papers 
  Committees 
  Program at a glance 
  Final program 
  Dates and Deadlines 
  Proceedings and Special Issue 
  SCN Registration 
  Submission Instructions for Accepted Papers – EquinOCS 
  Invited Speakers 
  Venue 
  Contact 
  Amalfi | History 
  How to reach 
  Hotels in Amalfi 
  Climate 
  Previous Editions | SCN 2022 
  SCN 2020 
  SCN 2018 
  SCN 2016 
  SCN 2014 
  SCN 2012 (Proceedings) 
  SCN 2010 (Proceedings) 
  SCN 2008 (Prooceedings) 
  SCN 2006 (Prooceedings) 
  SCN 2004 (Prooceedings) 
  SCN 2002 (Prooceedings) 

 Call for Papers  
  
 Scope   
 The Fourteenth International Conference on Security and Cryptography for Networks (SCN 2024) aims to bring together researchers in the field of cryptography and information security, practitioners, developers, and users to foster cooperation, exchange techniques, tools, experiences and ideas. The conference seeks submissions from academia, government, and industry presenting novel research on all practical and theoretical aspects of cryptography and information security. The primary focus is on original, high quality, unpublished research of theoretical and practical impact, including concepts, techniques, applications and practical experiences. Submitted papers must not substantially overlap with papers that have been published or that are simultaneously submitted to a journal or a conference/workshop with proceedings.  
 Topics   
 All topic areas related to cryptography and information security are of interest and in scope. Suggested topics include but are not restricted to:  
 Anonymity and Privacy 
  Applied Cryptography and Implementations 
  Authentication, Identification and Access Control 
  Block and Stream Ciphers 
  Complexity-Theoretic Cryptography 
  Cryptanalysis 
  Cryptocurrencies and Blockchain 
  Cryptographic Hash Functions 
  Cryptographic Protocols 
  Digital Signatures and Message Authentication Codes 
  Distributed Systems Security 
  Elliptic-Curve Cryptography 
  Formal Security Methods 
  Information-Theoretic Security 
  Post-quantum Cryptography 
  Public-Key Encryption 
  Physical Cryptography 
  Conference Proceedings   
 Conference Proceedings will be published by Springer in the Lecture Notes in Computer Science series.  
 Submissions  
   Authors are invited to submit electronically (PDF format) a non-anonymous  extended abstract using EquinOCS: https://equinocs.springernature.com/service/SCN2024   
 We strongly encourage to typeset the extended abstract using Springer’s LNCS LaTeX package  with no changes to the style. Springer encourages authors to include their ORCIDs in the final published versions of their papers. See Springer Lecture Notes in Computer Science instructions for authors  .  
 The submission should begin with a title, followed by the names, affiliations and contact information of all authors  , and a short abstract. The length of the submission should be at most 20 pages, including bibliography but excluding clearly marked appendices. Within these 20 pages, the submission should clearly indicate the results achieved, their significance, and their relation to other work in the area. Referees are not required to read appendices; the paper should be intelligible without them. Submissions must not substantially duplicate work that was published elsewhere, or work that any of the authors has submitted in parallel to a journal or to any other conference or workshop with proceedings.  
 Reviewers assignment will follow IACR Policy on Conflict of Interests  .  
 Submissions deviating significantly from these guidelines risk rejection without consideration of their merits. All submissions will be treated as confidential, and will only be disclosed to the committee and their chosen sub-referees.  
 Presentation   
 Authors of accepted papers must guarantee that their paper will be presented at the conference.  
 Dates and Deadlines   
  
 Submission: | May 6, 2024, 23:59 AoE  April 24, 2024    
  Revisions possible until May 9 
 Notification to authors: | July 2 , 2024   June 24 
 Camera-Ready Version/Author Registration: | July 17, 2024 
 Early Registration: | July 31, 2024 
 Late Registration: | September 2, 2024 
 Conference: | September 11-13, 2024 
  
  Program Chair   
 Duong Hieu Phan, Telecom Paris, France  
 Program Committee   
 Masayuki Abe, NTT and Kyoto University, Japan 
  Zhenzhen Bao, Tsinghua University, China 
  Carsten Baum, Technical University of Denmark, Denmark 
  Olivier Blazy, Ecole Polytechnique, France 
  Guilhem Castagnos, Université de Bordeaux, France 
  Alain Couvreur, Inria Saclay, France 
  Dario Catalano, University of Catania, Italy 
  Sébastien Canard, Telecom Paris, France 
  Juan A. Garay, Texas A&M University, USA 
  Satrajit Ghosh, IIT Kharagpur, India 
  Rosario Gennaro, City University of New York (CUNY), USA 
  Dario Fiore, IMDEA Software Institute, Spain 
  Viet Tung Hoang, Florida State University, USA 
  Fabien Laguillaumie, Univ. Montpellier, LIRMM, France 
  Chen-Da Liu-Zhang, Luzern University of Applied Sciences and Arts & Web3 Foundation, Switzerland 
  Pierrick Méaux, Luxembourg University, Luxembourg 
  Silvia Mella, Radboud University, The Netherlands 
  Pierre Meyer, Aarhus Universitet, Denmark 
  Ngoc Khanh Nguyen, King’s College London, United Kingdom 
  Khoa Nguyen, University of Wollongong, Australia 
  Phong Nguyen, ENS, France 
  Jiaxin Pan, University of Kassel, Germany 
  Giuseppe Persiano, Università di Salerno, Italy and Google, USA 
  Thomas Peters, UCLouvain, Belgium 
  David Pointcheval, ENS, France 
  Thomas Prest, PQShield 
  Christian Rechberger, TU Graz 
  Yannick Seurin, Ledger 
  Luisa Siniscalchi, Technical University of Denmark – DTU, Denmark 
  Damien Stehlé, CryptoLab 
  Mehdi Tibouchi, NTT, Japan 
  Junichi Tomida, NTT, Japan 
  Ni Trieu, Arizona State University, USA 
  Damien Vergnaud, Sorbonne Université, France 
  Ivan Visconti, University of Salerno, Italy 
  Qingju Wang, Telecom Paris, France 
  Shota Yamada, AIST, Japan 

 General Chair   
 Clemente Galdi, University of Salerno, Italy  
  
  Local Organization   
 Luigi Catuogno, University of Napoli “Parthenope”, Italy  
  Paolo D’Arco, University of Salerno, Italy  
  Barbara Masucci, University of Salerno, Italy  
  Francesco Orciuoli, University of Salerno, Italy  
  Antonella Pascuzzo, University of Salerno, Italy  
  Rocco Zaccagnino, University of Salerno, Italy  
 Steering Committee   
 Carlo Blundo, Università di Salerno, Italy  
  Alfredo De Santis, Università di Salerno, Italy  
  Ueli Maurer, ETH Zurich, Switzerland  
  Rafail Ostrovsky, University of California – Los Angeles, USA  
  Giuseppe Persiano, Università di Salerno, Italy  
  Jacques Stern, ENS Paris, France  
  Gene Tsudik, University of California – Irvine, USA  
  Moti Yung, Google, USA  
 Condividi:  
 Facebook 
  X 
  LinkedIn 

 Proudly powered by WordPress    

                                                                                                              Important dates data: 
Salta al contenuto     
   
   14th International Conference on Security and Cryptography for Networks – SCN 2024   
 In Cooperation with IACR  

     Menu  Home 
  Conference | Call for Papers 
  Committees 
  Program at a glance 
  Final program 
  Dates and Deadlines 
  Proceedings and Special Issue 
  SCN Registration 
  Submission Instructions for Accepted Papers – EquinOCS 
  Invited Speakers 
  Venue 
  Contact 
  Amalfi | History 
  How to reach 
  Hotels in Amalfi 
  Climate 
  Previous Editions | SCN 2022 
  SCN 2020 
  SCN 2018 
  SCN 2016 
  SCN 2014 
  SCN 2012 (Proceedings) 
  SCN 2010 (Proceedings) 
  SCN 2008 (Prooceedings) 
  SCN 2006 (Prooceedings) 
  SCN 2004 (Prooceedings) 
  SCN 2002 (Prooceedings) 

 Dates and Deadlines  
  
 Submission  : May 6, 2024, 23:59 AoE   April 24  ( Revisions until May 9, 2024, 23:59 AoE    )   
 Notification to authors:  July 2, 2024,   June 24   
 Camera-Ready Version/Author Registration:  July 17, 2024  
 Early Registration:  July 31, 2024  
 Conference dates:  September 11-13, 2024  
 Condividi:  
 Facebook 
  X 
  LinkedIn 

 Proudly powered by WordPress

27. Conference SCOPES_0:
Welcome 

 The 29th Ada-Europe International Conference on Reliable Software Technologies (AEiC 2025 aka Ada-Europe 2025) will take place in Paris, France. The conference schedule comprises a keynote and an invited talk, a panel with invited speakers, a journal track, an industrial track, a work-in-progress track, a vendor exhibition, parallel tutorials, and satellite workshops.  
 Latest News  
 17 October 2024:  Website online.  
   Scope and Topics  
 The conference is a leading international forum for providers, practitioners, and researchers in reliable software technologies. The conference presentations will illustrate current work in the theory and practice of the design, development, and maintenance of long-lived high-quality software systems for a challenging variety of application domains. The program will allow ample time for keynotes, Q&A sessions and discussions, and social events. Participants include practitioners and researchers from industry, academia, and government organizations active in the promotion and development of reliable software technologies.  
 The topics of interest for the conference include but are not limited to:  
 Formal and model-based engineering of critical systems | Formal specification; Formal verification; Integrated methods for engineering reliable software-intensive systems; Formal architectural patterns; Multi-aspect modelling and verification; Model-based engineering of safety-critical systems. 
  High-Integrity Systems and Reliability | Theory and Practice of High-Integrity Systems: Medium to Large-Scale Distribution, Fault Tolerance Security, Reliability, Trust and Safety, Languages Vulnerabilities, Assurance Case; 
  Software Architectures for Reliable Systems: Design Patterns, Frameworks, Architecture-Centered Development Component-based Design and Development; 
  Methods and Techniques for Quality Software Development and Maintenance: Requirements Engineering, Re-engineering and Reverse Engineering Reuse, Software Management Issues, Compilers, Libraries, Support Tools. 
  AI for High-Integrity Systems Engineering | AI for code generation, AI for test generation, AI for refactoring of code, AI for code comprehension, AI for program analysis; 
  Evaluation of how well AI solutions for software engineering perform (efficiency, accuracy, etc.) 
  Reliable/responsible/robust AI 
  Real-Time Systems | Design and Implementation of Real-Time and Embedded Systems: Real-Time Scheduling, Design Methods and Techniques, Architecture Modelling HW/SW Co-Design, Reliability and Performance; 
  Design and Implementation of Mixed-Criticality Systems: Scheduling Methods, Architectures, Design Methods, Analysis Methods 
  Domain applications | Mainstream and Emerging Applications with Reliability Requirements: Manufacturing, Robotics, Avionics, Space, Health Care, Transportation Cloud Environments, Smart Energy Systems, Serious Games, etc; 
  Experience Reports in Reliable System Development: Case Studies and Comparative Assessments, Management Approaches Qualitative and Quantitative Metrics. 
  Ada Language | Ada Language and Technologies: Compilation Issues, Runtimes, Ravenscar Profiles, Distributed Systems, SPARK; 
  Experiences with Ada: Reviews of the Ada 2012 or 2022 language features implementation and use issues, positioning in the market and in the software engineering curriculum, lessons learned on Ada Education and Training Activities with bearing on any of the conference topics. 

  
Call for papers data: 
undefinedImportant dates data: 
undefined

28. Conference SCOPES_1:
Embedded Systems Conferences 2024/2025/2026           Conference Index    Submit Your Event for FREE 
  Conferences 
  Disciplines 
  Locations 
  Contact 

 Home 
  Conferences 
  Embedded Systems 
   
 Embedded Systems Conferences 2024/2025/2026  

  December, 2024    
 Dec 09 | International Conference on Electrical, Computer and Communication Engineering (ICECCE) | - London, United Kingdom 
  Dec 09 | International Conference on Solid-State Sensors, Actuators and Microsystems (ICSSSAM) | - London, United Kingdom 
  Dec 09 | International Conference on Electrical and Communication Engineering (ICECE) | - New York, United States 
  Dec 09 | International Conference on Electrical, Computer, Electronics and Communication Engineering (ICECECE) | - Kuala Lumpur, Malaysia 
  Dec 09 | International Conference on Solid-State Sensors, Actuators and Microsystems (ICSSSAM) | - New York, United States 
  Dec 09 | International Conference on Control, Automation and Robotics (ICCAR) | - London, United Kingdom 
  Dec 09 | International Conference on Electronics and Electrical Engineering (ICEEE) | - Kuala Lumpur, Malaysia 
  Dec 09 | International Conference on Solid-State Sensors, Actuators and Microsystems (ICSSSAM) | - Kuala Lumpur, Malaysia 
  Dec 09 | International Conference on Electrical, Computer, Electronics and Communication Engineering (ICECECE) | - London, United Kingdom 
  Dec 09 | International Conference on Electrical, Computer, Electronics and Communication Engineering (ICECECE) | - New York, United States 
  Dec 09 | International Conference on Control, Automation and Robotics (ICCAR) | - Kuala Lumpur, Malaysia 
  Dec 09 | International Conference on Computing, Electrical and Electronic Engineering (ICCEEE) | - Kuala Lumpur, Malaysia 
  Dec 09 | International Conference on Computer and Electrical Engineering (ICCEE) | - Kuala Lumpur, Malaysia 
  Dec 09 | International Conference on Electric Machines and Drive Systems (ICEMDS) | - New York, United States 
  Dec 09 | International Conference on Control, Automation and Robotics (ICCAR) | - New York, United States 
  Dec 09 | International Conference on Computing, Electrical and Electronic Engineering (ICCEEE) | - London, United Kingdom 
  Dec 09 | International Conference on Computing, Electrical and Electronic Engineering (ICCEEE) | - New York, United States 
  Dec 09 | International Conference on Computer and Electrical Engineering (ICCEE) | - New York, United States 
  Dec 09 | International Conference on Computer and Electrical Engineering (ICCEE) | - London, United Kingdom 
  Dec 09 | International Conference on Electrical, Computer, Electronics and Communication Engineering (ICECECE) | - Goa, India 
  Dec 09 | International Conference on Solid-State Sensors, Actuators and Microsystems (ICSSSAM) | - Toronto, Canada 
  Dec 09 | International Conference on Electrical, Computer, Electronics and Communication Engineering (ICECECE) | - Toronto, Canada 
  Dec 09 | International Conference on Computing, Electrical and Electronic Engineering (ICCEEE) | - Goa, India 
  Dec 09 | International Conference on Computer and Electrical Engineering (ICCEE) | - Goa, India 
  Dec 09 | International Conference on Solid-State Sensors, Actuators and Microsystems (ICSSSAM) | - Goa, India 
  Dec 09 | International Conference on Computer and Electrical Engineering (ICCEE) | - Toronto, Canada 
  Dec 09 | International Conference on Control, Automation and Robotics (ICCAR) | - Goa, India 
  Dec 09 | International Conference on Computing, Electrical and Electronic Engineering (ICCEEE) | - Toronto, Canada 
  Dec 09 | International Conference on Control, Automation and Robotics (ICCAR) | - Toronto, Canada 
  Dec 09 | International Conference on Circuits, Devices and Systems (ICCDS) | - London, United Kingdom 
  Dec 13 | International Conference on Detection Technology and Intelligence System | - Changsha, China 
  Dec 16 | International Conference on Control, Automation and Robotics (ICCAR) | - Vientiane, Laos 
  Dec 16 | International Conference on Computing, Electrical and Electronic Engineering (ICCEEE) | - Vientiane, Laos 
  Dec 16 | International Conference on Control, Automation and Robotics (ICCAR) | - Cairo, Egypt 
  Dec 16 | International Conference on Electrical, Computer, Electronics and Communication Engineering (ICECECE) | - Cairo, Egypt 
  Dec 16 | International Conference on Solid-State Sensors, Actuators and Microsystems (ICSSSAM) | - Cairo, Egypt 
  Dec 16 | International Conference on Electrical, Computer and Systems Engineering (ICECSE) | - Cairo, Egypt 
  Dec 16 | International Conference on Electrical and Electronics Engineering (ICEEE) | - Rome, Italy 
  Dec 16 | International Conference on Control, Automation, Robotics and Vision Engineering (ICCARVE) | - Cairo, Egypt 
  Dec 16 | International Conference on Solid-State Sensors, Actuators and Microsystems (ICSSSAM) | - Rome, Italy 
  Dec 16 | International Conference on Control, Automation and Robotics (ICCAR) | - Rome, Italy 
  Dec 16 | International Conference on Computer and Electrical Engineering (ICCEE) | - Cairo, Egypt 
  Dec 16 | International Conference on Computer and Electrical Engineering (ICCEE) | - Vientiane, Laos 
  Dec 16 | International Conference on Computer and Electrical Engineering (ICCEE) | - Rome, Italy 
  Dec 16 | International Conference on Electrical, Computer, Electronics and Communication Engineering (ICECECE) | - Vientiane, Laos 
  Dec 16 | International Conference on Computing, Electrical and Electronic Engineering (ICCEEE) | - Cairo, Egypt 
  Dec 16 | International Conference on Computing, Electrical and Electronic Engineering (ICCEEE) | - Rome, Italy 
  Dec 16 | International Conference on Electrical, Computer, Electronics and Communication Engineering (ICECECE) | - Rome, Italy 
  Dec 16 | International Conference on Electrical and Computer Systems Engineering (ICECSE) | - Rome, Italy 
  Dec 16 | International Conference on Solid-State Sensors, Actuators and Microsystems (ICSSSAM) | - Vientiane, Laos 
  Dec 16 | International Conference on Electrical Engineering (ICEE) | - Rome, Italy 
  Dec 16 | International Conference on Electrical, Computer, Electronics and Communication Engineering (ICECECE) | - Macau, China 
  Dec 16 | World Robotics, Artificial Intelligence and Machine Learning Congress | - Osaka, Japan 
  Dec 16 | International Conference on Electrical, Computer, Electronics and Communication Engineering (ICECECE) | - Phnom Penh, Cambodia 
  Dec 16 | International Conference on Electrical, Computer, Electronics and Communication Engineering (ICECECE) | - Vancouver, Canada 
  Dec 16 | International Conference on Solid-State Sensors, Actuators and Microsystems (ICSSSAM) | - Vancouver, Canada 
  Dec 16 | International Conference on Solid-State Sensors, Actuators and Microsystems (ICSSSAM) | - Strasbourg, France 
  Dec 16 | International Conference on Computing, Electrical and Electronic Engineering (ICCEEE) | - Macau, China 
  Dec 16 | International Conference on Computer and Electrical Engineering (ICCEE) | - Macau, China 
  Dec 16 | International Conference on Computer and Electrical Engineering (ICCEE) | - Phnom Penh, Cambodia 
  Dec 16 | International Conference on Computer and Electrical Engineering (ICCEE) | - Vancouver, Canada 
  Dec 16 | International Conference on Solid-State Sensors, Actuators and Microsystems (ICSSSAM) | - Phnom Penh, Cambodia 
  Dec 16 | International Conference on Solid-State Sensors, Actuators and Microsystems (ICSSSAM) | - Macau, China 
  Dec 16 | International Conference on Computer and Electrical Engineering (ICCEE) | - Strasbourg, France 
  Dec 16 | International Conference on Electrical Machines and Systems (ICEMS) | - Phnom Penh, Cambodia 
  Dec 16 | International Conference on Control, Automation and Robotics (ICCAR) | - Macau, China 
  Dec 16 | International Conference on Computing, Electrical and Electronic Engineering (ICCEEE) | - Phnom Penh, Cambodia 
  Dec 16 | International Conference on Control, Automation and Robotics (ICCAR) | - Phnom Penh, Cambodia 
  Dec 16 | International Conference on Control, Automation and Robotics (ICCAR) | - Strasbourg, France 
  Dec 16 | International Conference on Control, Automation and Robotics (ICCAR) | - Vancouver, Canada 
  Dec 16 | International Conference on Computing, Electrical and Electronic Engineering (ICCEEE) | - Vancouver, Canada 
  Dec 16 | International Conference on Electrical, Computer, Electronics and Communication Engineering (ICECECE) | - Strasbourg, France 
  Dec 16 | International Conference on Computing, Electrical and Electronic Engineering (ICCEEE) | - Strasbourg, France 
  Dec 23 | International Conference on Control, Automation and Robotics (ICCAR) | - Bangkok, Thailand 
  Dec 23 | International Conference on Solid-State Sensors, Actuators and Microsystems (ICSSSAM) | - Dubai, United Arab Emirates 
  Dec 23 | International Conference on Electrical Engineering, Computer Science and Technology (ICEECST) | - Istanbul, Turkey 
  Dec 23 | International Conference on Electrical, Computer and Systems Engineering (ICECSE) | - Dubai, United Arab Emirates 
  Dec 23 | International Conference on Electrical, Computer, Electronics and Communication Engineering (ICECECE) | - Istanbul, Turkey 
  Dec 23 | International Conference on Electrical, Computer, Electronics and Mechatronics Engineering (ICECEME) | - Barcelona, Spain 
  Dec 23 | International Conference on Computer and Electrical Engineering (ICCEE) | - Bangkok, Thailand 
  Dec 23 | International Conference on Electrical, Computer, Electronics and Communication Engineering (ICECECE) | - Dubai, United Arab Emirates 
  Dec 23 | International Conference on Electrical Engineering (ICEE) | - Bangkok, Thailand 
  Dec 23 | International Conference on Control, Automation and Robotics (ICCAR) | - Dubai, United Arab Emirates 
  Dec 23 | International Conference on Electrical and Microelectronics Systems (ICEMS) | - Istanbul, Turkey 
  Dec 23 | International Conference on Computing, Electrical and Electronic Engineering (ICCEEE) | - Bangkok, Thailand 
  Dec 23 | International Conference on Electrical and Computer Systems Engineering (ICECSE) | - Bangkok, Thailand 
  Dec 23 | International Conference on Software and Electrical Engineering (ICSEE) | - Dubai, United Arab Emirates 
  Dec 23 | International Conference on Electrical, Computer, Electronics and Biomedical Engineering (ICECEBE) | - Barcelona, Spain 
  Dec 23 | International Conference on Computing, Electrical and Electronic Engineering (ICCEEE) | - Istanbul, Turkey 
  Dec 23 | International Conference on Computer and Electrical Engineering (ICCEE) | - Istanbul, Turkey 
  Dec 23 | International Conference on Electrical Engineering (ICEE) | - Dubai, United Arab Emirates 
  Dec 23 | International Conference on Solid-State Sensors, Actuators and Microsystems (ICSSSAM) | - Istanbul, Turkey 
  Dec 23 | International Conference on Computing, Electrical and Electronic Engineering (ICCEEE) | - Dubai, United Arab Emirates 
  Dec 23 | International Conference on Computer and Electrical Engineering (ICCEE) | - Dubai, United Arab Emirates 
  Dec 23 | International Conference on Mechanical, Electronics and Mechatronics Engineering (ICMEME) | - Barcelona, Spain 
  Dec 23 | International Conference on Control, Automation and Robotics (ICCAR) | - Barcelona, Spain 
  Dec 23 | International Conference on Computing, Electrical and Electronic Engineering (ICCEEE) | - Barcelona, Spain 
  Dec 23 | International Conference on Electrical and Electronics Engineering (ICEEE) | - Bangkok, Thailand 
  Dec 23 | International Conference on Solid-State Sensors, Actuators and Microsystems (ICSSSAM) | - Bangkok, Thailand 
  Dec 23 | International Conference on Electrical, Computer, Electronics and Communication Engineering (ICECECE) | - Bangkok, Thailand 
  Dec 23 | International Conference on Computer and Electrical Engineering (ICCEE) | - Barcelona, Spain 
  Dec 23 | International Conference on Electrical, Electronics and Systems Engineering (ICEESE) | - Istanbul, Turkey 
  Dec 23 | International Conference on Control, Automation, Robotics and Vision Engineering (ICCARVE) | - Dubai, United Arab Emirates 
  Dec 23 | International Conference on Electrical, Computer, Electronics and Communication Engineering (ICECECE) | - Barcelona, Spain 
  Dec 23 | International Conference on Solid-State Sensors, Actuators and Microsystems (ICSSSAM) | - Barcelona, Spain 
  Dec 23 | International Conference on Control, Automation and Robotics (ICCAR) | - Istanbul, Turkey 
  Dec 23 | International Conference on Solid-State Sensors, Actuators and Microsystems (ICSSSAM) | - Quebec City, Canada 
  Dec 23 | International Conference on Electrical, Computer, Electronics and Communication Engineering (ICECECE) | - Quebec City, Canada 
  Dec 23 | International Conference on Computer and Electrical Engineering (ICCEE) | - Quebec City, Canada 
  Dec 23 | International Conference on Control, Automation and Robotics (ICCAR) | - Quebec City, Canada 
  Dec 23 | International Conference on Computing, Electrical and Electronic Engineering (ICCEEE) | - Quebec City, Canada 
  Dec 23 | International Conference on Circuits, Devices and Systems (ICCDS) | - Dubai, United Arab Emirates 
  Dec 23 | International Conference on MEMS, Nano and Smart Systems (ICMNSS) | - Barcelona, Spain 
  Dec 28 | International Conference on Advanced Materials and Equipment Manufacturing | - Kunming, China 
  Dec 30 | International Conference on Computing, Electrical and Electronic Engineering (ICCEEE) | - Honolulu, United States 
  Dec 30 | International Conference on Computer and Electrical Engineering (ICCEE) | - Honolulu, United States 
  Dec 30 | International Conference on Control, Automation and Robotics (ICCAR) | - Karachi, Pakistan 
  Dec 30 | International Conference on Computing, Electrical and Electronic Engineering (ICCEEE) | - Vienna, Austria 
  Dec 30 | International Conference on Solid-State Sensors, Actuators and Microsystems (ICSSSAM) | - Honolulu, United States 
  Dec 30 | International Conference on Electrical, Computer and Communication Engineering (ICECCE) | - Honolulu, United States 
  Dec 30 | International Conference on Electrical, Computer, Electronics and Communication Engineering (ICECECE) | - Karachi, Pakistan 
  Dec 30 | International Conference on Control, Automation and Robotics (ICCAR) | - Vienna, Austria 
  Dec 30 | International Conference on Control Automation Robotics and Vision (ICCARV) | - Karachi, Pakistan 
  Dec 30 | International Conference on Computer and Electrical Engineering (ICCEE) | - Karachi, Pakistan 
  Dec 30 | International Conference on Solid-State Sensors, Actuators and Microsystems (ICSSSAM) | - Karachi, Pakistan 
  Dec 30 | International Conference on Electrical, Computer, Electronics and Communication Engineering (ICECECE) | - Vienna, Austria 
  Dec 30 | International Conference on Control, Automation and Robotics (ICCAR) | - Honolulu, United States 
  Dec 30 | International Conference on Computer and Electrical Engineering (ICCEE) | - Vienna, Austria 
  Dec 30 | International Conference on Electric Machines and Drive Systems (ICEMDS) | - Vienna, Austria 
  Dec 30 | International Conference on Computing, Electrical and Electronic Engineering (ICCEEE) | - Paris, France 
  Dec 30 | International Conference on Electrical, Computer, Electronics and Communication Engineering (ICECECE) | - Honolulu, United States 
  Dec 30 | International Conference on Solid-State Sensors, Actuators and Microsystems (ICSSSAM) | - Paris, France 
  Dec 30 | International Conference on Computing, Electrical and Electronic Engineering (ICCEEE) | - Karachi, Pakistan 
  Dec 30 | International Conference on Electrical, Computer, Electronics and Communication Engineering (ICECECE) | - Paris, France 
  Dec 30 | International Conference on Computer and Electrical Engineering (ICCEE) | - Paris, France 
  Dec 30 | International Conference on Control, Automation and Robotics (ICCAR) | - Paris, France 
  Dec 30 | International Conference on Solid-State Sensors, Actuators and Microsystems (ICSSSAM) | - Vienna, Austria 
  Dec 30 | International Conference on Human Computer Interaction Technologies and Applications (ICHCITA) | - Karachi, Pakistan 
  Dec 30 | International Conference on Electrical and Communication Engineering (ICECE) | - Paris, France 

  January, 2025    
 Jan 09 | International Conference on Electrical, Computer, Electronics and Biomedical Engineering (ICECEBE) | - Singapore, Singapore 
  Jan 09 | International Conference on Electrical, Computer, Electronics and Mechatronics Engineering (ICECEME) | - Singapore, Singapore 
  Jan 09 | International Conference on Electrical, Computer, Electronics and Communication Engineering (ICECECE) | - Honolulu, United States 
  Jan 09 | International Conference on Solid-State Sensors, Actuators and Microsystems (ICSSSAM) | - Vancouver, Canada 
  Jan 09 | International Conference on Solid-State Sensors, Actuators and Microsystems (ICSSSAM) | - Bali, Indonesia 
  Jan 09 | International Conference on Solid-State Sensors, Actuators and Microsystems (ICSSSAM) | - Singapore, Singapore 
  Jan 09 | International Conference on Electrical, Computer, Electronics and Communication Engineering (ICECECE) | - Singapore, Singapore 
  Jan 09 | International Conference on Electrical, Computer, Electronics and Communication Engineering (ICECECE) | - Tokyo, Japan 
  Jan 09 | International Conference on Electrical, Computer, Electronics and Communication Engineering (ICECECE) | - Bali, Indonesia 
  Jan 09 | International Conference on Electrical, Computer, Electronics and Communication Engineering (ICECECE) | - Vancouver, Canada 
  Jan 09 | International Conference on Electric Machines and Drive Systems (ICEMDS) | - Bali, Indonesia 
  Jan 09 | International Conference on Solid-State Sensors, Actuators and Microsystems (ICSSSAM) | - Honolulu, United States 
  Jan 09 | International Conference on Computer and Electrical Engineering (ICCEE) | - Vancouver, Canada 
  Jan 09 | International Conference on Computer and Electrical Engineering (ICCEE) | - Honolulu, United States 
  Jan 09 | International Conference on Electrical, Computer, Electronics and Biomedical Engineering (ICECEBE) | - Tokyo, Japan 
  Jan 09 | International Conference on Electrical, Computer and Communication Engineering (ICECCE) | - Tokyo, Japan 
  Jan 09 | International Conference on Computer and Electrical Engineering (ICCEE) | - Bali, Indonesia 
  Jan 09 | International Conference on Computing, Electrical and Electronic Engineering (ICCEEE) | - Tokyo, Japan 
  Jan 09 | International Conference on Control, Automation and Robotics (ICCAR) | - Vancouver, Canada 
  Jan 09 | International Conference on Control, Automation and Robotics (ICCAR) | - Honolulu, United States 
  Jan 09 | International Conference on Electric Motors and Electric Motor Design (ICEMEMD) | - Tokyo, Japan 
  Jan 09 | International Conference on Control, Automation and Robotics (ICCAR) | - Singapore, Singapore 
  Jan 09 | International Conference on Computer and Electrical Engineering (ICCEE) | - Singapore, Singapore 
  Jan 09 | International Conference on Control, Automation and Robotics (ICCAR) | - Tokyo, Japan 
  Jan 09 | International Conference on Control, Automation and Robotics (ICCAR) | - Bali, Indonesia 
  Jan 09 | International Conference on Computing, Electrical and Electronic Engineering (ICCEEE) | - Bali, Indonesia 
  Jan 09 | International Conference on Computing, Electrical and Electronic Engineering (ICCEEE) | - Singapore, Singapore 
  Jan 09 | International Conference on Circuits, Devices and Systems (ICCDS) | - Bali, Indonesia 
  Jan 09 | International Conference on Computer and Electrical Engineering (ICCEE) | - Tokyo, Japan 
  Jan 09 | International Conference on Computing, Electrical and Electronic Engineering (ICCEEE) | - Vancouver, Canada 
  Jan 09 | International Conference on Solid-State Sensors, Actuators and Microsystems (ICSSSAM) | - Tokyo, Japan 
  Jan 09 | International Conference on Computing, Electrical and Electronic Engineering (ICCEEE) | - Honolulu, United States 
  Jan 16 | International Conference on Computer and Electrical Engineering (ICCEE) | - Montevideo, Uruguay 
  Jan 16 | International Conference on Electrical, Computer, Electronics and Biomedical Engineering (ICECEBE) | - Zurich, Switzerland 
  Jan 16 | International Conference on Computing, Electrical and Electronic Engineering (ICCEEE) | - Zurich, Switzerland 
  Jan 16 | International Conference on Electrical, Computer, Electronics and Communication Engineering (ICECECE) | - Montevideo, Uruguay 
  Jan 16 | International Conference on Electrical, Computer, Electronics and Communication Engineering (ICECECE) | - San Diego, United States 
  Jan 16 | International Conference on Solid-State Sensors, Actuators and Microsystems (ICSSSAM) | - Phuket, Thailand 
  Jan 16 | International Conference on Solid-State Sensors, Actuators and Microsystems (ICSSSAM) | - Rome, Italy 
  Jan 16 | International Conference on Electrical, Computer, Electronics and Communication Engineering (ICECECE) | - Zurich, Switzerland 
  Jan 16 | International Conference on Electrical, Computer, Electronics and Communication Engineering (ICECECE) | - Phuket, Thailand 
  Jan 16 | International Conference on Solid-State Sensors, Actuators and Microsystems (ICSSSAM) | - Zurich, Switzerland 
  Jan 16 | International Conference on Solid-State Sensors, Actuators and Microsystems (ICSSSAM) | - San Diego, United States 
  Jan 16 | International Conference on Electrical, Computer, Electronics and Communication Engineering (ICECECE) | - Rome, Italy 
  Jan 16 | International Conference on Computer and Electrical Engineering (ICCEE) | - Nicosia, Cyprus 
  Jan 16 | International Conference on Electrical, Computer, Electronics and Communication Engineering (ICECECE) | - Nicosia, Cyprus 
  Jan 16 | International Conference on Computer and Electrical Engineering (ICCEE) | - San Diego, United States 
  Jan 16 | International Conference on Solid-State Sensors, Actuators and Microsystems (ICSSSAM) | - Nicosia, Cyprus 
  Jan 16 | International Conference on Computer and Electrical Engineering (ICCEE) | - Zurich, Switzerland 
  Jan 16 | International Conference on Computer and Electrical Engineering (ICCEE) | - Rome, Italy 
  Jan 16 | International Conference on Computer and Electrical Engineering (ICCEE) | - Phuket, Thailand 
  Jan 16 | International Conference on Control, Automation and Robotics (ICCAR) | - Zurich, Switzerland 
  Jan 16 | International Conference on Computing, Electrical and Electronic Engineering (ICCEEE) | - Montevideo, Uruguay 
  Jan 16 | International Conference on Electrotechnics and Electrical Engineering (ICEEE) | - Rome, Italy 
  Jan 16 | International Conference on Control, Automation and Robotics (ICCAR) | - Montevideo, Uruguay 
  Jan 16 | International Conference on Control, Automation and Robotics (ICCAR) | - Nicosia, Cyprus 
  Jan 16 | International Conference on Control, Automation and Robotics (ICCAR) | - San Diego, United States 
  Jan 16 | International Conference on Computing, Electrical and Electronic Engineering (ICCEEE) | - Phuket, Thailand 
  Jan 16 | International Conference on Control, Automation and Robotics (ICCAR) | - Rome, Italy 
  Jan 16 | International Conference on Control, Automation and Robotics (ICCAR) | - Phuket, Thailand 
  Jan 16 | International Conference on Computing, Electrical and Electronic Engineering (ICCEEE) | - Nicosia, Cyprus 
  Jan 16 | International Conference on Control, Automation, Robotics and Vision Engineering (ICCARVE) | - Rome, Italy 
  Jan 16 | International Conference on Solid-State Sensors, Actuators and Microsystems (ICSSSAM) | - Montevideo, Uruguay 
  Jan 16 | International Conference on Computing, Electrical and Electronic Engineering (ICCEEE) | - Rome, Italy 
  Jan 16 | International Conference on Computing, Electrical and Electronic Engineering (ICCEEE) | - San Diego, United States 
  Jan 23 | International Conference on Mechanical, Electronics and Mechatronics Engineering (ICMEME) | - London, United Kingdom 
  Jan 23 | International Conference on Electrical, Computer, Electronics and Communication Engineering (ICECECE) | - Mandalay, Myanmar 
  Jan 23 | International Conference on Electrical, Computer, Electronics and Biomedical Engineering (ICECEBE) | - London, United Kingdom 
  Jan 23 | International Conference on Electrical, Computer, Electronics and Communication Engineering (ICECECE) | - Maldives, Maldives 
  Jan 23 | International Conference on Informatics, Control, Automation and Robotics (ICICAR) | - London, United Kingdom 
  Jan 23 | International Conference on Solid-State Sensors, Actuators and Microsystems (ICSSSAM) | - Cancún, Mexico 
  Jan 23 | International Conference on Electrical, Computer, Electronics and Communication Engineering (ICECECE) | - Bangkok, Thailand 
  Jan 23 | International Conference on Electrical, Computer, Electronics and Communication Engineering (ICECECE) | - London, United Kingdom 
  Jan 23 | International Conference on Electrical, Computer, Electronics and Communication Engineering (ICECECE) | - Amsterdam, Netherlands 
  Jan 23 | International Conference on Electrical, Computer, Electronics and Communication Engineering (ICECECE) | - Cancún, Mexico 
  Jan 23 | International Conference on Computing, Electrical and Electronic Engineering (ICCEEE) | - Mandalay, Myanmar 
  Jan 23 | International Conference on Solid-State Sensors, Actuators and Microsystems (ICSSSAM) | - London, United Kingdom 
  Jan 23 | International Conference on Solid-State Sensors, Actuators and Microsystems (ICSSSAM) | - Bangkok, Thailand 
  Jan 23 | International Conference on Computer and Electrical Engineering (ICCEE) | - Maldives, Maldives 
  Jan 23 | International Conference on Computer and Electrical Engineering (ICCEE) | - Cancún, Mexico 
  Jan 23 | International Conference on Computer and Electrical Engineering (ICCEE) | - Amsterdam, Netherlands 
  Jan 23 | International Conference on Solid-State Sensors, Actuators and Microsystems (ICSSSAM) | - Maldives, Maldives 
  Jan 23 | International Conference on Computing, Electrical and Electronic Engineering (ICCEEE) | - Bangkok, Thailand 
  Jan 23 | International Conference on Solid-State Sensors, Actuators and Microsystems (ICSSSAM) | - Amsterdam, Netherlands 
  Jan 23 | International Conference on Computer and Electrical Engineering (ICCEE) | - London, United Kingdom 
  Jan 23 | International Conference on Solid-State Sensors, Actuators and Microsystems (ICSSSAM) | - Mandalay, Myanmar 
  Jan 23 | International Conference on Information Science, Electronics and Electrical Engineering (ICISEEE) | - London, United Kingdom 
  Jan 23 | International Conference on Computing, Electrical and Electronic Engineering (ICCEEE) | - Maldives, Maldives 
  Jan 23 | International Conference on Control, Automation and Robotics (ICCAR) | - Mandalay, Myanmar 
  Jan 23 | International Conference on Control, Automation and Robotics (ICCAR) | - Maldives, Maldives 
  Jan 23 | International Conference on Electrotechnics and Electrical Engineering (ICEEE) | - London, United Kingdom 
  Jan 23 | International Conference on Control, Automation and Robotics (ICCAR) | - Cancún, Mexico 
  Jan 23 | International Conference on Electric Motors and Electric Motor Design (ICEMEMD) | - Mandalay, Myanmar 
  Jan 23 | International Conference on Computing, Electrical and Electronic Engineering (ICCEEE) | - Cancún, Mexico 
  Jan 23 | International Conference on Control, Automation and Robotics (ICCAR) | - London, United Kingdom 
  Jan 23 | International Conference on Computing, Electrical and Electronic Engineering (ICCEEE) | - Amsterdam, Netherlands 
  Jan 23 | International Conference on Computing, Electrical and Electronic Engineering (ICCEEE) | - London, United Kingdom 
  Jan 23 | International Conference on MEMS, Nano and Smart Systems (ICMNSS) | - Bangkok, Thailand 
  Jan 23 | International Conference on MEMS, Nano and Smart Systems (ICMNSS) | - Amsterdam, Netherlands 
  Jan 23 | International Conference on Electrical and Microelectronics Systems (ICEMS) | - Maldives, Maldives 
  Jan 23 | International Conference on Control, Automation and Robotics (ICCAR) | - Bangkok, Thailand 
  Jan 23 | International Conference on Control, Automation and Robotics (ICCAR) | - Amsterdam, Netherlands 
  Jan 23 | International Conference on Computer and Electrical Engineering (ICCEE) | - Mandalay, Myanmar 
  Jan 23 | International Conference on Computer and Electrical Engineering (ICCEE) | - Bangkok, Thailand 
  Jan 30 | International Conference on Control, Automation and Robotics (ICCAR) | - New York, United States 
  Jan 30 | International Conference on Solid-State Sensors, Actuators and Microsystems (ICSSSAM) | - Paris, France 
  Jan 30 | International Conference on Electrical, Computer, Electronics and Communication Engineering (ICECECE) | - New York, United States 
  Jan 30 | International Conference on Electrical, Computer, Electronics and Communication Engineering (ICECECE) | - Istanbul, Turkey 
  Jan 30 | International Conference on Electrical, Computer, Electronics and Communication Engineering (ICECECE) | - Sydney, Australia 
  Jan 30 | International Conference on Electrical, Computer, Electronics and Communication Engineering (ICECECE) | - Paris, France 
  Jan 30 | International Conference on Electrical, Computer, Electronics and Communication Engineering (ICECECE) | - Dubai, United Arab Emirates 
  Jan 30 | International Conference on Solid-State Sensors, Actuators and Microsystems (ICSSSAM) | - Bengaluru, India 
  Jan 30 | International Conference on Computer and Electrical Engineering (ICCEE) | - Bengaluru, India 
  Jan 30 | International Conference on Computer and Electrical Engineering (ICCEE) | - New York, United States 
  Jan 30 | International Conference on Computer and Electrical Engineering (ICCEE) | - Istanbul, Turkey 
  Jan 30 | International Conference on Computer and Electrical Engineering (ICCEE) | - Paris, France 
  Jan 30 | International Conference on Computer and Electrical Engineering (ICCEE) | - Dubai, United Arab Emirates 
  Jan 30 | International Conference on Computer Science and Electrical Engineering (ICCSEE) | - Paris, France 
  Jan 30 | International Conference on Electrical Machines and Systems (ICEMS) | - Dubai, United Arab Emirates 
  Jan 30 | International Conference on Computer Science, Information Technology, Computer and Electrical Engineering (ICCSITCEE) | - Sydney, Australia 
  Jan 30 | International Conference on Computer Science, Information Technology, Computer and Electrical Engineering (ICCSITCEE) | - New York, United States 
  Jan 30 | International Conference on Electrotechnics and Electrical Engineering (ICEEE) | - Sydney, Australia 
  Jan 30 | International Conference on Control, Automation and Robotics (ICCAR) | - Paris, France 
  Jan 30 | International Conference on Computing, Electrical and Electronic Engineering (ICCEEE) | - Dubai, United Arab Emirates 
  Jan 30 | International Conference on Control, Automation and Robotics (ICCAR) | - Dubai, United Arab Emirates 
  Jan 30 | International Conference on Computing, Electrical and Electronic Engineering (ICCEEE) | - Paris, France 
  Jan 30 | International Conference on Computing, Electrical and Electronic Engineering (ICCEEE) | - Sydney, Australia 
  Jan 30 | International Conference on Computing, Electrical and Electronic Engineering (ICCEEE) | - Istanbul, Turkey 
  Jan 30 | International Conference on Control, Automation, Robotics and Vision Engineering (ICCARVE) | - New York, United States 
  Jan 30 | International Conference on Control, Automation, Robotics and Vision Engineering (ICCARVE) | - Istanbul, Turkey 
  Jan 30 | International Conference on Control, Automation, Robotics and Vision Engineering (ICCARVE) | - Sydney, Australia 
  Jan 30 | International Conference on Electrical and Communication Engineering (ICECE) | - Paris, France 
  Jan 30 | International Conference on Electrical and Communication Engineering (ICECE) | - Dubai, United Arab Emirates 
  Jan 30 | International Conference on Electrical, Computer and Systems Engineering (ICECSE) | - Istanbul, Turkey 
  Jan 30 | International Conference on Computing, Electrical and Electronic Engineering (ICCEEE) | - New York, United States 
  Jan 30 | International Conference on Control, Automation and Robotics (ICCAR) | - Bengaluru, India 
  Jan 30 | International Conference on Solid-State Sensors, Actuators and Microsystems (ICSSSAM) | - Dubai, United Arab Emirates 
  Jan 30 | International Conference on Computer and Electrical Engineering (ICCEE) | - Sydney, Australia 
  Jan 30 | International Conference on Control, Automation and Robotics (ICCAR) | - Istanbul, Turkey 
  Jan 30 | International Conference on Electrical, Computer, Electronics and Communication Engineering (ICECECE) | - Bengaluru, India 
  Jan 30 | International Conference on Computing, Electrical and Electronic Engineering (ICCEEE) | - Bengaluru, India 
  Jan 30 | International Conference on Control, Automation and Robotics (ICCAR) | - Sydney, Australia 
  Jan 30 | International Conference on Solid-State Sensors, Actuators and Microsystems (ICSSSAM) | - Sydney, Australia 
  Jan 30 | International Conference on Solid-State Sensors, Actuators and Microsystems (ICSSSAM) | - Istanbul, Turkey 
  Jan 30 | International Conference on Solid-State Sensors, Actuators and Microsystems (ICSSSAM) | - New York, United States 

  February, 2025    
 Feb 03 | International Conference on Control, Automation and Robotics (ICCAR) | - Guangzhou, China 
  Feb 03 | International Conference on Circuits, Devices and Systems (ICCDS) | - Kuala Lumpur, Malaysia 
  Feb 03 | International Conference on Solid-State Sensors, Actuators and Microsystems (ICSSSAM) | - Melbourne, Australia 
  Feb 03 | International Conference on Control, Automation and Robotics (ICCAR) | - Amsterdam, Netherlands 
  Feb 03 | International Conference on Computing, Electrical and Electronic Engineering (ICCEEE) | - Havana, Cuba 
  Feb 03 | International Conference on Electrical, Computer, Electronics and Communication Engineering (ICECECE) | - Guangzhou, China 
  Feb 03 | International Conference on Computer and Electrical Engineering (ICCEE) | - Havana, Cuba 
  Feb 03 | International Conference on Computing, Electrical and Electronic Engineering (ICCEEE) | - Kuala Lumpur, Malaysia 
  Feb 03 | International Conference on Computing, Electrical and Electronic Engineering (ICCEEE) | - Amsterdam, Netherlands 
  Feb 03 | International Conference on Control, Automation and Robotics (ICCAR) | - Kuala Lumpur, Malaysia 
  Feb 03 | International Conference on MEMS, Nano and Smart Systems (ICMNSS) | - Guangzhou, China 
  Feb 03 | International Conference on Computer and Electrical Engineering (ICCEE) | - Guangzhou, China 
  Feb 03 | International Conference on Electrical Engineering and Automation Control (ICEEAC) | - Lisbon, Portugal 
  Feb 03 | International Conference on Computer and Electrical Engineering (ICCEE) | - Bangkok, Thailand 
  Feb 03 | International Conference on Computer and Electrical Engineering (ICCEE) | - Amsterdam, Netherlands 
  Feb 03 | International Conference on Electronics and Electrical Engineering (ICEEE) | - Guangzhou, China 
  Feb 03 | International Conference on Solid-State Sensors, Actuators and Microsystems (ICSSSAM) | - Havana, Cuba 
  Feb 03 | International Conference on Control, Automation and Robotics (ICCAR) | - Bangkok, Thailand 
  Feb 03 | International Conference on Computer, Electrical and Electronics Engineering (ICCEEE) | - Melbourne, Australia 
  Feb 03 | International Conference on Electrical, Computer, Electronics and Communication Engineering (ICECECE) | - Havana, Cuba 
  Feb 03 | International Conference on Computer and Electrical Engineering (ICCEE) | - Lisbon, Portugal 
  Feb 03 | International Conference on Electrical Engineering (ICEE) | - Kuala Lumpur, Malaysia 
  Feb 03 | International Conference on Electrical Engineering and Automation Control (ICEEAC) | - Amsterdam, Netherlands 
  Feb 03 | International Conference on Electrical Engineering, Computer Science and Technology (ICEECST) | - Melbourne, Australia 
  Feb 03 | International Conference on Software and Electrical Engineering (ICSEE) | - Havana, Cuba 
  Feb 03 | International Conference on Computer and Electrical Engineering (ICCEE) | - Melbourne, Australia 
  Feb 03 | International Conference on Computing, Electrical and Electronic Engineering (ICCEEE) | - Lisbon, Portugal 
  Feb 03 | International Conference on Computing, Electrical and Electronic Engineering (ICCEEE) | - Guangzhou, China 
  Feb 03 | International Conference on Solid-State Sensors, Actuators and Microsystems (ICSSSAM) | - Kuala Lumpur, Malaysia 
  Feb 03 | International Conference on Electrical Engineering and Automation Control (ICEEAC) | - Bangkok, Thailand 
  Feb 03 | International Conference on Solid-State Sensors, Actuators and Microsystems (ICSSSAM) | - Guangzhou, China 
  Feb 03 | International Conference on Computing, Electrical and Electronic Engineering (ICCEEE) | - Melbourne, Australia 
  Feb 03 | International Conference on Solid-State Sensors, Actuators and Microsystems (ICSSSAM) | - Bangkok, Thailand 
  Feb 03 | International Conference on Solid-State Sensors, Actuators and Microsystems (ICSSSAM) | - Amsterdam, Netherlands 
  Feb 03 | International Conference on Electrical and Electronics Engineering (ICEEE) | - Melbourne, Australia 
  Feb 03 | International Conference on Electrical, Computer, Electronics and Communication Engineering (ICECECE) | - Bangkok, Thailand 
  Feb 03 | International Conference on Electrical, Computer, Electronics and Communication Engineering (ICECECE) | - Amsterdam, Netherlands 
  Feb 03 | International Conference on Electrical, Computer, Electronics and Communication Engineering (ICECECE) | - Lisbon, Portugal 
  Feb 03 | International Conference on Control, Automation and Robotics (ICCAR) | - Havana, Cuba 
  Feb 03 | International Conference on Electrical, Computer, Electronics and Communication Engineering (ICECECE) | - Melbourne, Australia 
  Feb 03 | International Conference on Solid-State Sensors, Actuators and Microsystems (ICSSSAM) | - Lisbon, Portugal 
  Feb 03 | International Conference on Electrical Machines and Systems (ICEMS) | - Havana, Cuba 
  Feb 03 | International Conference on Computer and Electrical Engineering (ICCEE) | - Kuala Lumpur, Malaysia 
  Feb 03 | International Conference on Electrical, Computer, Electronics and Communication Engineering (ICECECE) | - Kuala Lumpur, Malaysia 
  Feb 03 | International Conference on Control, Automation and Robotics (ICCAR) | - Melbourne, Australia 
  Feb 03 | International Conference on Computing, Electrical and Electronic Engineering (ICCEEE) | - Bangkok, Thailand 
  Feb 03 | International Conference on Control, Automation and Robotics (ICCAR) | - Lisbon, Portugal 
  Feb 10 | International Conference on Control, Automation and Robotics (ICCAR) | - Istanbul, Turkey 
  Feb 10 | International Conference on Computer and Electrical Engineering (ICCEE) | - Istanbul, Turkey 
  Feb 10 | International Conference on Electrical, Computer, Electronics and Communication Engineering (ICECECE) | - Pattaya, Thailand 
  Feb 10 | International Conference on Computing, Electrical and Electronic Engineering (ICCEEE) | - Barcelona, Spain 
  Feb 10 | International Conference on Computing, Electrical and Electronic Engineering (ICCEEE) | - Istanbul, Turkey 
  Feb 10 | International Conference on Control, Automation and Robotics (ICCAR) | - Barcelona, Spain 
  Feb 10 | International Conference on Computer and Electrical Engineering (ICCEE) | - Toronto, Canada 
  Feb 10 | International Conference on Computing, Electrical and Electronic Engineering (ICCEEE) | - Toronto, Canada 
  Feb 10 | International Conference on Computer and Electrical Engineering (ICCEE) | - London, United Kingdom 
  Feb 10 | International Conference on Control, Automation and Robotics (ICCAR) | - Houston, United States 
  Feb 10 | International Conference on Computing, Electrical and Electronic Engineering (ICCEEE) | - London, United Kingdom 
  Feb 10 | International Conference on Electrical, Computer and Communication Engineering (ICECCE) | - Barcelona, Spain 
  Feb 10 | International Conference on Computing, Electrical and Electronic Engineering (ICCEEE) | - Houston, United States 
  Feb 10 | International Conference on Computer and Electrical Engineering (ICCEE) | - Dubai, United Arab Emirates 
  Feb 10 | International Conference on Control, Automation and Robotics (ICCAR) | - Pattaya, Thailand 
  Feb 10 | International Conference on Computing, Electrical and Electronic Engineering (ICCEEE) | - Dubai, United Arab Emirates 
  Feb 10 | International Conference on Control, Automation and Robotics (ICCAR) | - London, United Kingdom 
  Feb 10 | International Conference on Control Automation Robotics and Vision (ICCARV) | - Barcelona, Spain 
  Feb 10 | International Conference on Control, Automation and Robotics (ICCAR) | - Toronto, Canada 
  Feb 10 | International Conference on Solid-State Sensors, Actuators and Microsystems (ICSSSAM) | - Houston, United States 
  Feb 10 | International Conference on Control, Automation and Robotics (ICCAR) | - Dubai, United Arab Emirates 
  Feb 10 | International Conference on Solid-State Sensors, Actuators and Microsystems (ICSSSAM) | - Barcelona, Spain 
  Feb 10 | International Conference on Electrical, Computer, Electronics and Communication Engineering (ICECECE) | - Houston, United States 
  Feb 10 | International Conference on Electrical Engineering and Automation Control (ICEEAC) | - Dubai, United Arab Emirates 
  Feb 10 | International Conference on Solid-State Sensors, Actuators and Microsystems (ICSSSAM) | - Istanbul, Turkey 
  Feb 10 | International Conference on Electrical, Computer, Electronics and Communication Engineering (ICECECE) | - Dubai, United Arab Emirates 
  Feb 10 | International Conference on Solid-State Sensors, Actuators and Microsystems (ICSSSAM) | - London, United Kingdom 
  Feb 10 | International Conference on Electrical, Computer, Electronics and Communication Engineering (ICECECE) | - Istanbul, Turkey 
  Feb 10 | International Conference on Solid-State Sensors, Actuators and Microsystems (ICSSSAM) | - Dubai, United Arab Emirates 
  Feb 10 | International Conference on Computer and Electrical Engineering (ICCEE) | - Pattaya, Thailand 
  Feb 10 | International Conference on Electrical, Computer, Electronics and Communication Engineering (ICECECE) | - London, United Kingdom 
  Feb 10 | International Conference on Electrical Engineering and Automation Control (ICEEAC) | - Istanbul, Turkey 
  Feb 10 | International Conference on Solid-State Sensors, Actuators and Microsystems (ICSSSAM) | - Pattaya, Thailand 
  Feb 10 | International Conference on Computing, Electrical and Electronic Engineering (ICCEEE) | - Pattaya, Thailand 
  Feb 10 | International Conference on Solid-State Sensors, Actuators and Microsystems (ICSSSAM) | - Toronto, Canada 
  Feb 10 | International Conference on Computer and Electrical Engineering (ICCEE) | - Houston, United States 
  Feb 10 | International Conference on Computer and Electrical Engineering (ICCEE) | - Barcelona, Spain 
  Feb 10 | International Conference on Electrical, Computer, Electronics and Communication Engineering (ICECECE) | - Barcelona, Spain 
  Feb 10 | International Conference on Control, Automation, Robotics and Vision Engineering (ICCARVE) | - London, United Kingdom 
  Feb 10 | International Conference on Electrical, Computer, Electronics and Communication Engineering (ICECECE) | - Toronto, Canada 
  Feb 17 | International Conference on Biomedical Devices, Sensors and Signal Processing (ICBDSSP) | - Mumbai, India 
  Feb 17 | International Conference on Computer and Electrical Engineering (ICCEE) | - Mumbai, India 
  Feb 17 | International Conference on Electrical and Communication Engineering (ICECE) | - Bogota, Colombia 
  Feb 17 | International Conference on Solid-State Sensors, Actuators and Microsystems (ICSSSAM) | - Mumbai, India 
  Feb 17 | International Conference on Electrical, Computer and Systems Engineering (ICECSE) | - Jeddah, Saudi Arabia 
  Feb 17 | International Conference on Computer and Electrical Engineering (ICCEE) | - Bogota, Colombia 
  Feb 17 | International Conference on Electrical, Computer and Systems Engineering (ICECSE) | - Rome, Italy 
  Feb 17 | International Conference on Computer and Electrical Engineering (ICCEE) | - New York, United States 
  Feb 17 | International Conference on Control, Automation and Robotics (ICCAR) | - Bogota, Colombia 
  Feb 17 | International Conference on Electrical, Electronics and Systems Engineering (ICEESE) | - New York, United States 
  Feb 17 | International Conference on Control, Automation and Robotics (ICCAR) | - New York, United States 
  Feb 17 | International Conference on Computer and Electrical Engineering (ICCEE) | - Jeddah, Saudi Arabia 
  Feb 17 | International Conference on Solid-State Sensors, Actuators and Microsystems (ICSSSAM) | - Jeddah, Saudi Arabia 
  Feb 17 | International Conference on Control, Automation and Robotics (ICCAR) | - Manila, Philippines 
  Feb 17 | International Conference on Control, Automation, Robotics and Vision Engineering (ICCARVE) | - Rome, Italy 
  Feb 17 | International Conference on Solid-State Sensors, Actuators and Microsystems (ICSSSAM) | - Manila, Philippines 
  Feb 17 | International Conference on Electrical, Computer, Electronics and Communication Engineering (ICECECE) | - New York, United States 
  Feb 17 | International Conference on Control, Automation and Robotics (ICCAR) | - Paris, France 
  Feb 17 | International Conference on Electrical, Computer, Electronics and Communication Engineering (ICECECE) | - Paris, France 
  Feb 17 | International Conference on Control, Automation and Robotics (ICCAR) | - Mumbai, India 
  Feb 17 | International Conference on Electrical, Computer, Electronics and Communication Engineering (ICECECE) | - Rome, Italy 
  Feb 17 | International Conference on Computing, Electrical and Electronic Engineering (ICCEEE) | - Rome, Italy 
  Feb 17 | International Conference on Computing, Electrical and Electronic Engineering (ICCEEE) | - Bogota, Colombia 
  Feb 17 | International Conference on Information Science, Electronics and Electrical Engineering (ICISEEE) | - Rome, Italy 
  Feb 17 | International Conference on Computing, Electrical and Electronic Engineering (ICCEEE) | - New York, United States 
  Feb 17 | International Conference on Electrical, Computer, Electronics and Communication Engineering (ICECECE) | - Bogota, Colombia 
  Feb 17 | International Conference on Information Science, Electronics and Electrical Engineering (ICISEEE) | - Jeddah, Saudi Arabia 
  Feb 17 | International Conference on Computing, Electrical and Electronic Engineering (ICCEEE) | - Mumbai, India 
  Feb 17 | International Conference on Solid-State Sensors, Actuators and Microsystems (ICSSSAM) | - Paris, France 
  Feb 17 | International Conference on Computing, Electrical and Electronic Engineering (ICCEEE) | - Manila, Philippines 
  Feb 17 | International Conference on Control, Automation and Robotics (ICCAR) | - Rome, Italy 
  Feb 17 | International Conference on Electrical Engineering and Technology (ICEET) | - Paris, France 
  Feb 17 | International Conference on Electrical, Computer, Electronics and Communication Engineering (ICECECE) | - Jeddah, Saudi Arabia 
  Feb 17 | International Conference on Control, Automation, Robotics and Vision Engineering (ICCARVE) | - Jeddah, Saudi Arabia 
  Feb 17 | International Conference on Solid-State Sensors, Actuators and Microsystems (ICSSSAM) | - Bogota, Colombia 
  Feb 17 | International Conference on Solid-State Sensors, Actuators and Microsystems (ICSSSAM) | - New York, United States 
  Feb 17 | International Conference on Computing, Electrical and Electronic Engineering (ICCEEE) | - Jeddah, Saudi Arabia 
  Feb 17 | International Conference on Computer and Electrical Engineering (ICCEE) | - Rome, Italy 
  Feb 17 | International Conference on Computer and Electrical Engineering (ICCEE) | - Manila, Philippines 
  Feb 17 | International Conference on Electrical, Computer, Electronics and Communication Engineering (ICECECE) | - Manila, Philippines 
  Feb 17 | International Conference on Computing, Electrical and Electronic Engineering (ICCEEE) | - Paris, France 
  Feb 17 | International Conference on Electrical, Computer, Electronics and Communication Engineering (ICECECE) | - Mumbai, India 
  Feb 17 | International Conference on Computer and Electrical Engineering (ICCEE) | - Paris, France 
  Feb 17 | International Conference on Control, Automation and Robotics (ICCAR) | - Jeddah, Saudi Arabia 
  Feb 17 | International Conference on Solid-State Sensors, Actuators and Microsystems (ICSSSAM) | - Rome, Italy 
  Feb 24 | International Conference on Control, Automation and Robotics (ICCAR) | - New Delhi, India 
  Feb 24 | International Conference on Electrical, Computer, Electronics and Communication Engineering (ICECECE) | - Sydney, Australia 
  Feb 24 | International Conference on Computing, Electrical and Electronic Engineering (ICCEEE) | - Rio de Janeiro, Brazil 
  Feb 24 | International Conference on Control, Automation and Robotics (ICCAR) | - Sydney, Australia 
  Feb 24 | International Conference on Circuits, Devices and Systems (ICCDS) | - Buenos Aires, Argentina 
  Feb 24 | International Conference on Control, Automation and Robotics (ICCAR) | - Washington, United States 
  Feb 24 | International Conference on Solid-State Sensors, Actuators and Microsystems (ICSSSAM) | - Sydney, Australia 
  Feb 24 | International Conference on Computing, Electrical and Electronic Engineering (ICCEEE) | - New Delhi, India 
  Feb 24 | International Conference on Computer and Electrical Engineering (ICCEE) | - New Delhi, India 
  Feb 24 | International Conference on Electrical, Computer, Electronics and Communication Engineering (ICECECE) | - Buenos Aires, Argentina 
  Feb 24 | International Conference on Computer and Electrical Engineering (ICCEE) | - Sydney, Australia 
  Feb 24 | International Conference on Solid-State Sensors, Actuators and Microsystems (ICSSSAM) | - Washington, United States 
  Feb 24 | International Conference on Electrical and Communication Engineering (ICECE) | - Tokyo, Japan 
  Feb 24 | International Conference on Solid-State Sensors, Actuators and Microsystems (ICSSSAM) | - Buenos Aires, Argentina 
  Feb 24 | International Conference on Solid-State Sensors, Actuators and Microsystems (ICSSSAM) | - Phuket, Thailand 
  Feb 24 | International Conference on Electrical Engineering, Computer Science and Technology (ICEECST) | - Tokyo, Japan 
  Feb 24 | International Conference on Computing, Electrical and Electronic Engineering (ICCEEE) | - Washington, United States 
  Feb 24 | International Conference on Electrical Engineering and Technology (ICEET) | - Sydney, Australia 
  Feb 24 | International Conference on Electrical, Computer, Electronics and Communication Engineering (ICECECE) | - Tokyo, Japan 
  Feb 24 | International Conference on Computing, Electrical and Electronic Engineering (ICCEEE) | - Phuket, Thailand 
  Feb 24 | International Conference on Electrotechnics and Electrical Engineering (ICEEE) | - New Delhi, India 
  Feb 24 | International Conference on Electrical, Computer, Electronics and Communication Engineering (ICECECE) | - Phuket, Thailand 
  Feb 24 | International Conference on Solid-State Sensors, Actuators and Microsystems (ICSSSAM) | - New Delhi, India 
  Feb 24 | International Conference on Control, Automation and Robotics (ICCAR) | - Buenos Aires, Argentina 
  Feb 24 | International Conference on Computing, Electrical and Electronic Engineering (ICCEEE) | - Sydney, Australia 
  Feb 24 | International Conference on Electrical, Computer, Electronics and Communication Engineering (ICECECE) | - Rio de Janeiro, Brazil 
  Feb 24 | International Conference on Electrical Engineering (ICEE) | - Buenos Aires, Argentina 
  Feb 24 | International Conference on Computer and Electrical Engineering (ICCEE) | - Washington, United States 
  Feb 24 | International Conference on MEMS, Nano and Smart Systems (ICMNSS) | - Buenos Aires, Argentina 
  Feb 24 | International Conference on Electrical, Computer, Electronics and Mechatronics Engineering (ICECEME) | - New Delhi, India 
  Feb 24 | International Conference on Electrical, Computer, Electronics and Communication Engineering (ICECECE) | - Washington, United States 
  Feb 24 | International Conference on Computing, Electrical and Electronic Engineering (ICCEEE) | - Tokyo, Japan 
  Feb 24 | International Conference on Computer and Electrical Engineering (ICCEE) | - Rio de Janeiro, Brazil 
  Feb 24 | International Conference on Computing, Electrical and Electronic Engineering (ICCEEE) | - Buenos Aires, Argentina 
  Feb 24 | International Conference on Electrical Engineering and Technology (ICEET) | - Rio de Janeiro, Brazil 
  Feb 24 | International Conference on Solid-State Sensors, Actuators and Microsystems (ICSSSAM) | - Rio de Janeiro, Brazil 
  Feb 24 | International Conference on Solid-State Sensors, Actuators and Microsystems (ICSSSAM) | - Tokyo, Japan 
  Feb 24 | International Conference on Computer and Electrical Engineering (ICCEE) | - Phuket, Thailand 
  Feb 24 | International Conference on Computer and Electrical Engineering (ICCEE) | - Tokyo, Japan 
  Feb 24 | International Conference on Electrical, Computer, Electronics and Communication Engineering (ICECECE) | - New Delhi, India 
  Feb 24 | International Conference on Control and Automation Systems (ICCAS) | - Tokyo, Japan 
  Feb 24 | International Conference on Control, Automation and Robotics (ICCAR) | - Tokyo, Japan 
  Feb 24 | International Conference on Computer and Electrical Engineering (ICCEE) | - Buenos Aires, Argentina 
  Feb 24 | International Conference on Control, Automation and Robotics (ICCAR) | - Rio de Janeiro, Brazil 
  Feb 24 | International Conference on Control, Automation and Robotics (ICCAR) | - Phuket, Thailand 
  Feb 24 | International Conference on Electrical, Electronics and Systems Engineering (ICEESE) | - Tokyo, Japan 

  March, 2025    
 Mar 03 | International Conference on Electrical, Computer, Electronics and Communication Engineering (ICECECE) | - Arizona, United States 
  Mar 03 | International Conference on Electrical, Computer, Electronics and Communication Engineering (ICECECE) | - Haifa, Israel 
  Mar 03 | International Conference on Computer and Electrical Engineering (ICCEE) | - Taipei, Taiwan 
  Mar 03 | International Conference on Computer and Electrical Engineering (ICCEE) | - Bangkok, Thailand 
  Mar 03 | International Conference on Computing, Electrical and Electronic Engineering (ICCEEE) | - Rome, Italy 
  Mar 03 | International Conference on Control, Automation and Robotics (ICCAR) | - Rome, Italy 
  Mar 03 | International Conference on Circuits, Devices and Systems (ICCDS) | - Haifa, Israel 
  Mar 03 | International Conference on Computer and Electrical Engineering (ICCEE) | - Arizona, United States 
  Mar 03 | International Conference on Electrical, Computer and Systems Engineering (ICECSE) | - Rome, Italy 
  Mar 03 | International Conference on Control, Automation and Robotics (ICCAR) | - Taipei, Taiwan 
  Mar 03 | International Conference on Control, Automation and Robotics (ICCAR) | - Barcelona, Spain 
  Mar 03 | International Conference on Electrical, Computer, Electronics and Communication Engineering (ICECECE) | - Taipei, Taiwan 
  Mar 03 | International Conference on Control, Automation and Robotics (ICCAR) | - Bangkok, Thailand 
  Mar 03 | International Conference on Solid-State Sensors, Actuators and Microsystems (ICSSSAM) | - Haifa, Israel 
  Mar 03 | International Conference on Computing, Electrical and Electronic Engineering (ICCEEE) | - Taipei, Taiwan 
  Mar 03 | International Conference on Solid-State Sensors, Actuators and Microsystems (ICSSSAM) | - Rome, Italy 
  Mar 03 | International Conference on Solid-State Sensors, Actuators and Microsystems (ICSSSAM) | - Taipei, Taiwan 
  Mar 03 | International Conference on Computer and Electrical Engineering (ICCEE) | - Rome, Italy 
  Mar 03 | International Conference on Electrical Engineering and Technology (ICEET) | - Barcelona, Spain 
  Mar 03 | International Conference on Computing, Electrical and Electronic Engineering (ICCEEE) | - Haifa, Israel 
  Mar 03 | International Conference on Control, Automation, Robotics and Vision Engineering (ICCARVE) | - Rome, Italy 
  Mar 03 | International Conference on Computing, Electrical and Electronic Engineering (ICCEEE) | - Arizona, United States 
  Mar 03 | International Conference on Electrical, Computer, Electronics and Communication Engineering (ICECECE) | - Rome, Italy 
  Mar 03 | International Conference on Control, Automation and Robotics (ICCAR) | - Haifa, Israel 
  Mar 03 | International Conference on Solid-State Sensors, Actuators and Microsystems (ICSSSAM) | - Bangkok, Thailand 
  Mar 03 | International Conference on Solid-State Sensors, Actuators and Microsystems (ICSSSAM) | - Arizona, United States 
  Mar 03 | International Conference on Computing, Electrical and Electronic Engineering (ICCEEE) | - Bangkok, Thailand 
  Mar 03 | International Conference on Electrical, Computer, Electronics and Communication Engineering (ICECECE) | - Barcelona, Spain 
  Mar 03 | International Conference on Control, Automation and Robotics (ICCAR) | - Arizona, United States 
  Mar 03 | International Conference on Electrical Engineering and Automation Control (ICEEAC) | - Bangkok, Thailand 
  Mar 03 | International Conference on Computer and Electrical Engineering (ICCEE) | - Haifa, Israel 
  Mar 03 | International Conference on Computing, Electrical and Electronic Engineering (ICCEEE) | - Barcelona, Spain 
  Mar 03 | International Conference on Electrical, Computer, Electronics and Communication Engineering (ICECECE) | - Bangkok, Thailand 
  Mar 03 | International Conference on Solid-State Sensors, Actuators and Microsystems (ICSSSAM) | - Barcelona, Spain 
  Mar 03 | International Conference on Computer and Electrical Engineering (ICCEE) | - Barcelona, Spain 
  Mar 10 | International Conference on Circuits, Devices and Systems (ICCDS) | - Istanbul, Turkey 
  Mar 10 | International Conference on Computer and Electrical Engineering (ICCEE) | - Miami, United States 
  Mar 10 | International Conference on Electrical and Microelectronics Systems (ICEMS) | - Miami, United States 

 ‹ 
  1 
  2 
  3 
  4 
  5 
  › 

 © 2024 Conference Index   
   
    Except where otherwise noted  , content on this site is licensed under a Creative Commons Attribution 4.0 International license  . Icons  by The Noun Project.   

  
Call for papers data: 
undefinedImportant dates data: 
undefined

29. Conference SCAM_2:
Skip to Main Content    

 About | History 
  Code of Conduct 
  Industry 
  News 
  Members | Become a member 
  Committee 
  All members’ bios 
  Partners 
  Seminars 
  Document Library 
  Contact 

   Menu     
 About | History 
  Code of Conduct 
  Industry 
  News 
  Members | Become a member 
  Committee 
  All members’ bios 
  Partners 
  Seminars 
  Document Library 
  Contact 

  2  Sep 2024   
   
 ICSME 2025 will be held in Auckland  
  by Daniel Alencar da Costa   |   posted in: Misc   |   0    
  
   We are happy to announce that the 41st instance of the International Conference on Software Maintenance and Evolution (ICSME 2025) will be held in Auckland next year. The main conference plus co-located events will run from Monday, 8 September through Saturday, 13 September 2025. This is the first time the ICSME will be in NZ and only the second time in Australasia (after it was planned to be held in Adelaide in 2020, which was done virtually due to COVID-19 travel restrictions).  
 There will be two co-located events to be held together with ICSME:  
 IEEE International Conference on Source Code Analysis & Manipulation (SCAM) 
  IEEE Working Conference on Software Visualization (VISSOFT) 
  The conference will feature several tracks, including a Doctoral Symposium, Industrial Talks and Tools Demos. The main conference will also feature two keynote speeches from world-renowned researchers.  
 An event like this requires many people to get behind it to make it a success. Several SI^NZ members are already involved in organising ICSME and the other co-located events. We look forward to the support of all software engineering researchers and practitioners in New Zealand to take part and participate in the conference (through submissions or other forms of participation).  
 The conference website is now up and running. Please check more details here:  
 https://conf.researchr.org/home/icsme-2025   
 If you have any questions about ICSME 2025, please contact Steve MacDonell or Amjed Tahir.  

 Recent Posts  
 Congratulating Sherlock on Securing MBIE Endeavour Fund for his Research! | September 30, 2024 
  ICSME 2025 will be held in Auckland | September 2, 2024 
  Success of the SI^NZ Workshop 2024 | July 2, 2024 
  SI^NZ 2024 workshop: registration is open | May 14, 2024 
  Research on Non-technical Skills (Request for Participation) | May 8, 2024 

 Recent Tweets  
 Software Innovation New Zealand     Follow   
 Software Innovation NZ is the New Zealand software research network. It aspires to bring together software researchers within NZ.  

   Software Innovation New Zealand  @softwareinnovnz  ·  2 Sep    

 New article on our website, ICSME (CORE rank A) is coming to Auckland in September 2025 🎉  
  https://softwareinnovation.nz/icsme-2025-will-be-held-in-auckland/  
   
  @IEEEICSME #SoftwareEngineering  
   
    Reply on Twitter 1830715003311399159     Retweet on Twitter 1830715003311399159  6      Like on Twitter 1830715003311399159  3   Twitter  1830715003311399159     
   
   Software Innovation New Zealand  @softwareinnovnz  ·  12 Aug    

 Are you a software developer in New Zealand? If so, please complete this survey for a chance to win a $10 NZD food voucher! The survey will take about 15 minutes to complete and allow for an understanding of software development practices in New Zealand. https://homepages.ecs.vuw.ac.nz/~kaurgurl/  
   
    Reply on Twitter 1822808861994332336     Retweet on Twitter 1822808861994332336       Like on Twitter 1822808861994332336  1   Twitter  1822808861994332336     
   
   Retweet on Twitter   Software Innovation New Zealand Retweeted    
   UC Computer Science and Software Engineering  @uccsse  ·  6 Aug    

 We also recruit a Lecturer / Senior Lecturer (eq. Assist. / Assoc. Prof US system) in Software Engineering. More info: https://jobs.canterbury.ac.nz/jobdetails/ajid/Ojd89/Lecturer-Senior-Lecturer-in-Software-Engineering,19482  
   
    Reply on Twitter 1820732277120180398     Retweet on Twitter 1820732277120180398  2      Like on Twitter 1820732277120180398  1   Twitter  1820732277120180398     

 Load More...     

 Follow us  

 © 2024 Software Innovation NZ - WordPress Theme by Kadence WP   

    
Call for papers data: 
ICSME 2025   Mon 8 - Sat 13 September 2025 Auckland, New Zealand    

 Toggle navigation        
 Attending | Venue: Owen G Glenn Building 
  Venue: The University of Auckland - Owen G Glenn Building 
  Program | Keynotes 
  Track/Call 
  Organization | ICSME 2025 Committees 
  Organizing Committee 
  Track Committees 
  Program Committee 
  Contributors 
  People Index 
  Search 
  Series | Series 
   ICSME 2025 
  ICSME 2024 
  ICSME 2023 
  Sign in 
  Sign up 

 Auckland City Skyline  
 Auckland  

 Auckland Harbour  

 Sir Owen G Glenn Building  

 ICSME 2025  
   
 Welcome to the website of the International Conference on Software Maintenance and Evolution (ICSME) 2025 conference. We are looking forward to providing a great conference experience in New Zealand.  
 We are working hard to fill the website with all related information. Please check back soon!  

  ICSME 2025 Tracks   
   
 Research Papers    

 Important Dates  up till Thu 5 Jun 2025     

 Thu 6 Mar 2025     
  Research Papers  Abstract submission 
 Thu 13 Mar 2025     
  Research Papers  Paper submission 
 Wed 7 May 2025     
  Research Papers  Early Decisions notification 
 Thu 5 Jun 2025     
  Research Papers  Final notification 
 All important dates 

   Posts   
   
 ICSME    
 Supporters   

 x  Thu 5 Dec 12:37    

  ICSME 2025   
  contact form    
  using conf.researchr.org  ( v1.67.1  )  
   Support page    
     
 Tracks  
 Research Papers    

 Attending  
 Venue: Owen G Glenn Building   
  Venue: The University of Auckland - Owen G Glenn Building   
    
 Sign Up    

  Important dates data: 
ICSME 2025   Mon 8 - Sat 13 September 2025 Auckland, New Zealand    

 Toggle navigation        
 Attending | Venue: Owen G Glenn Building 
  Venue: The University of Auckland - Owen G Glenn Building 
  Program | Keynotes 
  Track/Call 
  Organization | ICSME 2025 Committees 
  Organizing Committee 
  Track Committees 
  Program Committee 
  Contributors 
  People Index 
  Search 
  Series | Series 
   ICSME 2025 
  ICSME 2024 
  ICSME 2023 
  Sign in 
  Sign up 

  ICSME 2025  ( series  ) /  Important Dates  

 When | Track | What 
 Thu 6 Mar 2025 | Research Papers | Abstract submission 
 Thu 13 Mar 2025 | Research Papers | Paper submission 
 Wed 7 May 2025 | Research Papers | Early Decisions notification 
 Thu 5 Jun 2025 | Research Papers | Final notification 

 x  Thu 5 Dec 12:37    

  ICSME 2025   
  contact form    
  using conf.researchr.org  ( v1.67.1  )  
   Support page    
     
 Tracks  
 Research Papers    

 Attending  
 Venue: Owen G Glenn Building   
  Venue: The University of Auckland - Owen G Glenn Building   
    
 Sign Up

30. Conference SCOPES_2:
CGO 2025   Sat 1 - Wed 5 March 2025 Las Vegas, Nevada, United States    

 Toggle navigation        
 Attending | Code of Conduct 
  Venue 
  Calls | CGO 2025 
  Artifact Evaluation 
  Main Conference 
  Student Research Competition 
  Workshops and Tutorials 
  Organization | CGO 2025 Committees 
  Organizing Committee 
  Steering Committee 
  Track Committees 
  Artifact Evaluation 
  Main Conference 
  Student Research Competition 
  Workshops and Tutorials 
  Contributors 
  People Index 
  Search 
  Series | Series 
   CGO 2025 
  CGO 2024 
  CGO 2023 
  CGO 2022 
  CGO 2021 
   CGO 2020 
  CGO 2019 
  CGO 2018 
  CGO 2017 
  CGO 2016 
  CGO 2015 
  CGO 2014 
  CGO 2013 
  CGO 2012 
  CGO 2011 
  CGO 2010 
  CGO 2009 
  CGO 2008 
  CGO 2007 
  CGO 2006 
  CGO 2005 
  CGO 2004 
  CGO 2003 
  Sign in 
  Sign up 

  CGO 2025  ( series  ) /  Main Conference CGO 2025   
   
 Call for Papers 
  Submission Information 
  Call for Papers  
  
 IEEE/ACM International Symposium on Code Generation and Optimization (CGO)   
 Co-located with PPoPP, HPCA and CC   
 Las Vegas, USA   
 The International Symposium on Code Generation and Optimization (CGO’25) will be held in Las Vegas, USA. CGO is the premier venue to bring together researchers and practitioners working at the interface of hardware and software on a wide range of optimization and code generation techniques and related issues. The conference spans the spectrum from purely static to fully dynamic approaches, and from pure software-based methods to specific architectural features and support for code generation and optimization.  
  CGO now uses two submissions per year.   
  This follows the model established by other conferences in our field in recent years, such as ASPLOS and OOPSLA. Papers submitted to the first round can either be directly accepted, rejected, or invited to submit a revised version of the paper to the second round. Papers rejected in the first round may not be submitted to the second round. For papers invited to submit a revised version, authors will be given a list of revisions that should be acted on to improve the paper. We will make every effort to ensure that the revised paper is reviewed by the same reviewers (and possibly additional reviewers), who will assess whether the revisions are satisfactory. If so, the paper will be accepted. If the revised paper is rejected, the authors may submit a further revised version in a subsequent round, which will be treated as a new submission.  
  First Submission Deadline   
 Paper Submission: May 30, 2024 
  Author Rebuttal Period: July 9-11, 2024 
  Paper Notification: July 22, 2024 
  Second Submission Deadline   
 Paper Submission: September 12, 2024 
  Author Rebuttal Period: October 22 - 24, 2024 
  Paper Notification: November 4, 2024 
  Contacts:   
 Hugh Leather - Meta – | hleather@meta.com 
  P. (Saday) Sadayappan – University of Utah – | saday@cs.utah.edu 
   Topics   
 Original contributions are solicited on, but not limited to, the following topics:  
 Code Generation, Translation, Transformation, and Optimization for performance, energy, virtualization, portability, security, or reliability concerns, and architectural support 
  Efficient execution of dynamically typed and higher-level languages 
  Optimization and code generation for emerging programming models, platforms, domain-specific languages 
  Dynamic/static, profile-guided, feedback-directed, and machine learning-based optimization 
  Static, Dynamic, and Hybrid Analysis for performance, energy, memory locality, throughput or latency, security, reliability, or functional debugging 
  Program characterization methods 
  Profiling and instrumentation techniques; architectural support 
  Novel and efficient tools 
  Compiler design, practice and experience 
  Compiler abstraction and intermediate representations 
  Vertical integration of language features, representations, optimizations, and runtime support for parallelism 
  Solutions that involve cross-layer (HW/OS/VM/SW) design and integration 
  Deployed dynamic/static compiler and runtime systems for general purpose, embedded system and Cloud/HPC platforms 
  Parallelism, heterogeneity, and reconfigurable architectures 
  Optimizations for heterogeneous or specialized targets, GPUs, SoCs, CGRA and Quantum Computers 
  Compiler support for vectorization, thread extraction, task scheduling, speculation, transaction, memory management, data distribution and synchronization 
  Standard research papers must be written in the ACM format  (use the sample-sigplan.tex template), and may have up to 11 pages, references excluded. Supplementary materials may be included as an Appendix at the end of the submitted paper. The Appendix has no page limit, but the text of the full paper excluding the Appendix must fit within 11 pages. Reviewers are not required to read the Appendix and may do so at their discretion. So papers must be self-contained without needing to read any material in the Appendix.  
 Please ensure that you and your co-authors obtain an ORCID ID, so you can complete the publishing process for your accepted paper. ACM has been involved in ORCID from the start and we have recently made a commitment to collect ORCID IDs from all of our published authors  . We are committed to improve author discoverability, ensure proper attribution and contribute to ongoing community efforts around name normalization; your ORCID ID will help in these efforts.  
 By submitting your article to an ACM Publication, you are hereby acknowledging that you and your co-authors are subject to all ACM Publications Policies  , including ACM’s new Publications Policy on Research Involving Human Participants and Subjects  . Alleged violations of this policy or any ACM Publications Policy will be investigated by ACM and may result in a full retraction of your paper, in addition to other potential penalties, as per ACM Publications Policy.  
  Call for Tool and Practical Experience Papers   
 CGO has a second category of papers called “Tools and Practical Experience”. Papers in this category must either give a clear account of a tool’s functionality or summarize a practical experience with realistic case studies.  
 The successful evaluation of an artifact is mandatory for a Tool Paper.   
  Therefore, authors of work conditionally accepted as Tool Papers must submit an artifact to the Artifact Evaluation Committee. The successful evaluation of the artifact is a requirement for final acceptance.  
 Practical experience papers are encouraged, but not required, to submit an artifact to the Artifact Evaluation process.   
 The selection criteria for papers in this category are:  
 Originality: Papers should present CGO-related technologies applied to real-world problems with scope or characteristics that set them apart from previous solutions. 
  Usability: The presented Tools or compilers should have broad usage or applicability. They are expected to assist in CGO-related research, or could be extended to investigate or demonstrate new technologies. If significant components are not yet implemented, the paper will not be considered. 
  Documentation: The tool or compiler should be presented on a web-site giving documentation and further information about the tool. 
  Benchmark Repository: A suite of benchmarks for testing should be provided. 
  Availability: The tool or compiler should be available for public use. 
  Foundations: Papers should incorporate the principles underpinning Code Generation and Optimization (CGO). However, a thorough discussion of theoretical foundations is not required; a summary of such should suffice. 
  Artifact Evaluation: The submitted artifact must be functional and support the claims made in the paper. Submission of an artifact is mandatory for papers presenting a tool. 
  Tool and Practical Experience papers abide by the same limit of 11 pages in the ACM format  , references excluded, and are not distinguished in the final proceedings. We encourage shorter submissions that give account of how scientific ideas have been incorporated and used in practice.  
  Geographic Diversity and Inclusion   
 Authors of papers accepted for CGO 2025 are encouraged to present their work in person. However, to foster the participation of students and professionals from everywhere, CGO 2025 will allow the remote presentation of papers, if their authors are unable to travel to the conference venue for reasons beyond their control (e.g. visa issues). Additionally, the conference organization will try to make attendance of CGO 2025 affordable for as many people as possible, with a specific focus on students from universities located in under-represented countries who are paper authors.  
  Artifact Evaluation   
 The Artifact Evaluation process is run by a separate committee whose task is to assess how the artifacts support the work described in the papers. This process contributes to improved reproducibility in research that should be a great concern to all of us. There is also some evidence that papers with a supporting artifact receive higher citations than papers without artifact evaluation. Authors of accepted papers at CGO have the option of submitting their artifacts for evaluation within two weeks of paper acceptance. To ease the organization of the AE committee, we kindly ask authors to indicate at the time they submit the paper, whether they are interested in submitting an artifact. Papers that go through the Artifact Evaluation process successfully will receive a seal of approval printed on the papers themselves. Additional information is available on the CGO AE web page. Authors of accepted papers are encouraged, but not required, to make these materials publicly available upon publication of the proceedings.  
  AUTHORS TAKE NOTE: The official publication date is the date the proceedings are made available in the ACM Digital Library. This date may be up to two weeks prior to the first day of your conference. The official publication date affects the deadline for any patent filings related to published work.  
  Distinguished Paper Awards   
 Up to 10% of papers accepted at CGO 2025 will be designated as Distinguished Papers, following the ACM policy. This award is open to both regular and tool papers.  

 Submission Information  
   
 Submission Site   
 Papers can be submitted at https://cgo25-second-round.hotcrp.com/  .  
 Submission Guidelines   
 Please make sure that your paper satisfies ALL of the following requirements before it is submitted:  
 The paper must be original material  that has not been previously published in another conference or journal, nor is currently under review by another conference or journal. Note that you may submit material presented previously at a workshop without copyrighted proceedings. 
  Your submission is limited to eleven (11) letter-size (8.5"x11"), single-spaced, double-column pages  , using 10pt or larger font  , not including references. There is no page limit for references  . We strongly encourage the use of the ACM Conference Template  (use the sample-sigplan.tex template). Submissions not adhering to these submission guidelines may be outright rejected at the discretion of the program chairs. (Please make sure your paper prints satisfactorily on letter-size (8.5"x11") paper: this is especially important for submissions from countries where A4 paper is standard.) 
  Supplementary materials may be included as an Appendix at the end of the submitted paper. The Appendix has no page limit, but the text of the full paper excluding the Appendix must fit within 11 pages. Reviewers are not required to read the Appendix and may do so at their discretion. So papers must be self-contained without needing to read any material in the Appendix. 
  Papers are to be submitted for double-blind review  . Blind reviewing of papers will be done by the program committee, assisted by outside referees. Author names as well as hints of identity are to be removed from the submitted paper. Use care in naming your files. Source file names, e.g., Joe.Smith.dvi, are often embedded in the final output as readily accessible comments. In addition, do not omit references to provide anonymity, as this leaves the reviewer unable to grasp the context. Instead, if you are extending your own work, you need to reference and discuss the past work in third person, as if you were extending someone else’s research. We realize in doing this that for some papers it will still be obvious who the authors are. In this case, the submission will not be penalized as long a concerted effort was made to reference and describe the relationship to the prior work as if you were extending someone else’s research. For example, if your name is Joe Smith: | In previous work [1,2], Smith presented a new branch predictor for …. In this paper, we extend their work by …  
 Bibliography  
 [1] Joe Smith, “A Simple Branch Predictor for …,” Proceedings of CGO 2019.  
 [2] Joe Smith, “A More Complicated Branch Predictor for…,” Proceedings of CGO 2019. 
  Your submission must be formatted for black-and-white printers and not color printers. This is especially true for plots and graphs in the paper. 
  Please make sure that the labels on your graphs are readable without the aid of a magnifying glass. Typically the default font sizes on the graph axes in a program like Microsoft Excel are too small. 
  Please number the pages. 
  The paper must be written in English. 
  The paper must be submitted in PDF. We cannot accept any other format, and we must be able to print the document just as we receive it. We strongly suggest that you use only the four widely-used printer fonts: Times, Helvetica, Courier and Symbol. Please make sure that the output has been formatted for printing on LETTER size paper. If generating the paper using “dvips”, use the option “-P cmz -t letter”, and if that is not supported, use “-t letter”. 
  The Artifact Evaluation process is run by a separate committee whose task is to assess how the artifacts support the work described in the papers. Authors of accepted papers have the option of submitting their artifacts for evaluation within one week of paper acceptance. To ease the organization of the AE committee, we kindly ask authors to indicate at the time they submit the paper, whether they are interested in submitting an artifact. Papers that go through the Artifact Evaluation process successfully will receive a seal of approval printed on the papers themselves. Additional information is available on the CGO AE web page. Authors of accepted papers are encouraged, but not required, to make these materials publicly available upon publication of the proceedings. 
  Authors must register all their conflicts on the paper submission site  . Conflicts are needed to ensure appropriate assignment of reviewers. If a paper is found to have an undeclared conflict that causes a problem OR if a paper is found to declare false conflicts in order to abuse or “game” the review system, the paper may be rejected. 
  Please declare a conflict of interest with the following people for any author of your paper: | Your Ph.D. advisor(s), post-doctoral advisor(s), Ph.D. students, and post-doctoral advisees, forever. 
  Family relations by blood or marriage, or their equivalent, forever (if they might be potential reviewers). 
  People with whom you have collaborated in the last FIVE years, including: 
  Co-authors of accepted/rejected/pending papers. 
  Co-PIs on accepted/rejected/pending grant proposals. 
  Funders (decision-makers) of your research grants, and researchers whom you fund. 
  People (including students) who shared your primary institution(s) in the last FIVE years. 
  Other relationships, such as close personal friendship, that you think might tend to affect your judgment or be seen as doing so by a reasonable person familiar with the relationship. 
  “Service” collaborations such as co-authoring a report for a professional organization, serving on a program committee, or co-presenting tutorials, do not themselves create a conflict of interest. Co-authoring a paper that is a compendium of various projects with no true collaboration among the projects does not constitute a conflict among the authors of the different projects. 
  On the other hand, there may be others not covered by the above with whom you believe a COI exists, for example, an ongoing collaboration that has not yet resulted in the creation of a paper or proposal. Please report such COIs; however, you may be asked to justify them. Please be reasonable. For example, you cannot declare a COI with a reviewer just because that reviewer works on topics similar to or related to those in your paper. The PC Chair may contact co-authors to explain a COI whose origin is unclear. 

 Important Dates   AoE (UTC-12h)     

 Mon 4 Nov 2024  
  R2: Author Notification 
 Tue 22 - Thu 24 Oct 2024  
  R2: Author Rebuttal 
 Thu 12 Sep 2024   
  R2: Submission Deadline 
 Mon 22 Jul 2024  
  R1: Author Notification 
 Tue 9 - Thu 11 Jul 2024  
  R1: Author Rebuttal 
 Thu 30 May 2024   
  R1: Submission Deadline 

 Submission Link   
   
   https://cgo25-second-round.hotcrp.com/     
   
 Program Committee    
   
 Hugh Leather Co-chair    
 Facebook 
  Saday Sadayappan Co-chair    
 University of Utah, USA 
  Andrew Adams    
 Adobe Research 
  Saman Amarasinghe    
 Massachusetts Institute of Technology   
 United States 
  Tal Ben-Nun    
 Lawrence Livermore National Laboratory   
 United States 
  Milind Chabbi    
 Uber Technologies   
 United States 
  Albert Cohen    
 Google DeepMind   
 France 
  Huimin Cui    
 Institute of Computing Technology, Chinese Academy of Sciences   
 China 
  Maryam Mehri Dehnavi    
 University of Toronto   
 Canada 
  Christophe Dubach    
 McGill University   
 Canada 
  Anderson Faustino da Silva    
 State University of Maringá   
 Brazil 
  Björn Franke    
 University of Edinburgh   
 United Kingdom 
  Laure Gonnord    
 Université Grenoble-Alpes - Grenoble INP - LCIS   
 France 
  R. Govindarajan    
 IISC 
  Rajiv Gupta    
 University of California at Riverside (UCR)   
 United States 
  Sebastian Hack    
 Saarland University, Saarland Informatics Campus   
 Germany 
  Bastian Hagedorn    
 NVIDIA   
 Germany 
  Wei-Chung Hsu    
 Intel, USA 
  Abhinav Jangda    
 Microsoft Research   
 United States 
  Shoaib Kamil    
 Adobe Research 
  Mahmut Taylan Kandemir    
 Pennsylvania State University   
 United States 
  Fredrik Kjolstad    
 Stanford University   
 United States 
  Martin Kong    
 Ohio State University   
 United States 
  Milind Kulkarni    
 Purdue University   
 United States 
  Lian Li    
 Institute of Computing Technology at Chinese Academy of Sciences; University of Chinese Academy of Sciences   
 China 
  Xu Liu    
 North Carolina State University   
 United States 
  Scott Mahlke    
 University of Michigan 
  Vanderson Martins do Rosario    
 Cadence Design Systems 
  Stephen McCamant    
 University of Minnesota, USA 
  Santosh Nagarakatte    
 Rutgers University   
 United States 
  Yongjun Park    
 Yonsei University 
  Pavlos Petoumenos    
 University of Manchester   
 United Kingdom 
  Louis-Noël Pouchet    
 Colorado State University, USA 
  Isabelle Puaut    
 Université de Rennes - Inria - CNRS - IRISA   
 France 
  Bin Ren    
 William & Mary   
 United States 
  Atanas Rountev    
 Ohio State University 
  Volker Seeker    
 Meta AI Research   
 United States 
  Xipeng Shen    
 North Carolina State University   
 United States 
  Tatiana Shpeisman    
 Modular 
  Aravind Sukumaran-Rajam    
 Meta 
  Kirshanthan Sundararajah    
 Virginia Tech   
 United States 
  Antonino Tumeo    
 Pacific Northwest National Laboratory   
 United States 
  Ramakrishna Upadrasta 
  Wenwen Wang    
 University of Georgia   
 United States 
  Zheng Wang    
 University of Leeds, UK 
  Yufan Xu    
 Uber Technologies 
  Jingling Xue    
 UNSW Sydney   
 Australia 
  Jidong Zhai    
 Tsinghua University 
  Keren Zhou    
 George Mason University 
  Oleksandr Zinenko    
 Google DeepMind   
 France 

 x  Thu 5 Dec 12:37    

  CGO 2025   
  contact form    
  using conf.researchr.org  ( v1.67.1  )  
   Support page    
     
 CGO 2025  
 Artifact Evaluation   
  Main Conference   
  Student Research Competition   
  Workshops and Tutorials    

 Attending  
 Code of Conduct   
  Venue    
 Sign Up    

  
Call for papers data: 
CGO 2025   Sat 1 - Wed 5 March 2025 Las Vegas, Nevada, United States    

 Toggle navigation        
 Attending | Code of Conduct 
  Venue 
  Calls | CGO 2025 
  Artifact Evaluation 
  Main Conference 
  Student Research Competition 
  Workshops and Tutorials 
  Organization | CGO 2025 Committees 
  Organizing Committee 
  Steering Committee 
  Track Committees 
  Artifact Evaluation 
  Main Conference 
  Student Research Competition 
  Workshops and Tutorials 
  Contributors 
  People Index 
  Search 
  Series | Series 
   CGO 2025 
  CGO 2024 
  CGO 2023 
  CGO 2022 
  CGO 2021 
   CGO 2020 
  CGO 2019 
  CGO 2018 
  CGO 2017 
  CGO 2016 
  CGO 2015 
  CGO 2014 
  CGO 2013 
  CGO 2012 
  CGO 2011 
  CGO 2010 
  CGO 2009 
  CGO 2008 
  CGO 2007 
  CGO 2006 
  CGO 2005 
  CGO 2004 
  CGO 2003 
  Sign in 
  Sign up 

  CGO 2025  ( series  ) /  Main Conference CGO 2025   
   
 Call for Papers 
  Submission Information 
  Call for Papers  
  
 IEEE/ACM International Symposium on Code Generation and Optimization (CGO)   
 Co-located with PPoPP, HPCA and CC   
 Las Vegas, USA   
 The International Symposium on Code Generation and Optimization (CGO’25) will be held in Las Vegas, USA. CGO is the premier venue to bring together researchers and practitioners working at the interface of hardware and software on a wide range of optimization and code generation techniques and related issues. The conference spans the spectrum from purely static to fully dynamic approaches, and from pure software-based methods to specific architectural features and support for code generation and optimization.  
  CGO now uses two submissions per year.   
  This follows the model established by other conferences in our field in recent years, such as ASPLOS and OOPSLA. Papers submitted to the first round can either be directly accepted, rejected, or invited to submit a revised version of the paper to the second round. Papers rejected in the first round may not be submitted to the second round. For papers invited to submit a revised version, authors will be given a list of revisions that should be acted on to improve the paper. We will make every effort to ensure that the revised paper is reviewed by the same reviewers (and possibly additional reviewers), who will assess whether the revisions are satisfactory. If so, the paper will be accepted. If the revised paper is rejected, the authors may submit a further revised version in a subsequent round, which will be treated as a new submission.  
  First Submission Deadline   
 Paper Submission: May 30, 2024 
  Author Rebuttal Period: July 9-11, 2024 
  Paper Notification: July 22, 2024 
  Second Submission Deadline   
 Paper Submission: September 12, 2024 
  Author Rebuttal Period: October 22 - 24, 2024 
  Paper Notification: November 4, 2024 
  Contacts:   
 Hugh Leather - Meta – | hleather@meta.com 
  P. (Saday) Sadayappan – University of Utah – | saday@cs.utah.edu 
   Topics   
 Original contributions are solicited on, but not limited to, the following topics:  
 Code Generation, Translation, Transformation, and Optimization for performance, energy, virtualization, portability, security, or reliability concerns, and architectural support 
  Efficient execution of dynamically typed and higher-level languages 
  Optimization and code generation for emerging programming models, platforms, domain-specific languages 
  Dynamic/static, profile-guided, feedback-directed, and machine learning-based optimization 
  Static, Dynamic, and Hybrid Analysis for performance, energy, memory locality, throughput or latency, security, reliability, or functional debugging 
  Program characterization methods 
  Profiling and instrumentation techniques; architectural support 
  Novel and efficient tools 
  Compiler design, practice and experience 
  Compiler abstraction and intermediate representations 
  Vertical integration of language features, representations, optimizations, and runtime support for parallelism 
  Solutions that involve cross-layer (HW/OS/VM/SW) design and integration 
  Deployed dynamic/static compiler and runtime systems for general purpose, embedded system and Cloud/HPC platforms 
  Parallelism, heterogeneity, and reconfigurable architectures 
  Optimizations for heterogeneous or specialized targets, GPUs, SoCs, CGRA and Quantum Computers 
  Compiler support for vectorization, thread extraction, task scheduling, speculation, transaction, memory management, data distribution and synchronization 
  Standard research papers must be written in the ACM format  (use the sample-sigplan.tex template), and may have up to 11 pages, references excluded. Supplementary materials may be included as an Appendix at the end of the submitted paper. The Appendix has no page limit, but the text of the full paper excluding the Appendix must fit within 11 pages. Reviewers are not required to read the Appendix and may do so at their discretion. So papers must be self-contained without needing to read any material in the Appendix.  
 Please ensure that you and your co-authors obtain an ORCID ID, so you can complete the publishing process for your accepted paper. ACM has been involved in ORCID from the start and we have recently made a commitment to collect ORCID IDs from all of our published authors  . We are committed to improve author discoverability, ensure proper attribution and contribute to ongoing community efforts around name normalization; your ORCID ID will help in these efforts.  
 By submitting your article to an ACM Publication, you are hereby acknowledging that you and your co-authors are subject to all ACM Publications Policies  , including ACM’s new Publications Policy on Research Involving Human Participants and Subjects  . Alleged violations of this policy or any ACM Publications Policy will be investigated by ACM and may result in a full retraction of your paper, in addition to other potential penalties, as per ACM Publications Policy.  
  Call for Tool and Practical Experience Papers   
 CGO has a second category of papers called “Tools and Practical Experience”. Papers in this category must either give a clear account of a tool’s functionality or summarize a practical experience with realistic case studies.  
 The successful evaluation of an artifact is mandatory for a Tool Paper.   
  Therefore, authors of work conditionally accepted as Tool Papers must submit an artifact to the Artifact Evaluation Committee. The successful evaluation of the artifact is a requirement for final acceptance.  
 Practical experience papers are encouraged, but not required, to submit an artifact to the Artifact Evaluation process.   
 The selection criteria for papers in this category are:  
 Originality: Papers should present CGO-related technologies applied to real-world problems with scope or characteristics that set them apart from previous solutions. 
  Usability: The presented Tools or compilers should have broad usage or applicability. They are expected to assist in CGO-related research, or could be extended to investigate or demonstrate new technologies. If significant components are not yet implemented, the paper will not be considered. 
  Documentation: The tool or compiler should be presented on a web-site giving documentation and further information about the tool. 
  Benchmark Repository: A suite of benchmarks for testing should be provided. 
  Availability: The tool or compiler should be available for public use. 
  Foundations: Papers should incorporate the principles underpinning Code Generation and Optimization (CGO). However, a thorough discussion of theoretical foundations is not required; a summary of such should suffice. 
  Artifact Evaluation: The submitted artifact must be functional and support the claims made in the paper. Submission of an artifact is mandatory for papers presenting a tool. 
  Tool and Practical Experience papers abide by the same limit of 11 pages in the ACM format  , references excluded, and are not distinguished in the final proceedings. We encourage shorter submissions that give account of how scientific ideas have been incorporated and used in practice.  
  Geographic Diversity and Inclusion   
 Authors of papers accepted for CGO 2025 are encouraged to present their work in person. However, to foster the participation of students and professionals from everywhere, CGO 2025 will allow the remote presentation of papers, if their authors are unable to travel to the conference venue for reasons beyond their control (e.g. visa issues). Additionally, the conference organization will try to make attendance of CGO 2025 affordable for as many people as possible, with a specific focus on students from universities located in under-represented countries who are paper authors.  
  Artifact Evaluation   
 The Artifact Evaluation process is run by a separate committee whose task is to assess how the artifacts support the work described in the papers. This process contributes to improved reproducibility in research that should be a great concern to all of us. There is also some evidence that papers with a supporting artifact receive higher citations than papers without artifact evaluation. Authors of accepted papers at CGO have the option of submitting their artifacts for evaluation within two weeks of paper acceptance. To ease the organization of the AE committee, we kindly ask authors to indicate at the time they submit the paper, whether they are interested in submitting an artifact. Papers that go through the Artifact Evaluation process successfully will receive a seal of approval printed on the papers themselves. Additional information is available on the CGO AE web page. Authors of accepted papers are encouraged, but not required, to make these materials publicly available upon publication of the proceedings.  
  AUTHORS TAKE NOTE: The official publication date is the date the proceedings are made available in the ACM Digital Library. This date may be up to two weeks prior to the first day of your conference. The official publication date affects the deadline for any patent filings related to published work.  
  Distinguished Paper Awards   
 Up to 10% of papers accepted at CGO 2025 will be designated as Distinguished Papers, following the ACM policy. This award is open to both regular and tool papers.  

 Submission Information  
   
 Submission Site   
 Papers can be submitted at https://cgo25-second-round.hotcrp.com/  .  
 Submission Guidelines   
 Please make sure that your paper satisfies ALL of the following requirements before it is submitted:  
 The paper must be original material  that has not been previously published in another conference or journal, nor is currently under review by another conference or journal. Note that you may submit material presented previously at a workshop without copyrighted proceedings. 
  Your submission is limited to eleven (11) letter-size (8.5"x11"), single-spaced, double-column pages  , using 10pt or larger font  , not including references. There is no page limit for references  . We strongly encourage the use of the ACM Conference Template  (use the sample-sigplan.tex template). Submissions not adhering to these submission guidelines may be outright rejected at the discretion of the program chairs. (Please make sure your paper prints satisfactorily on letter-size (8.5"x11") paper: this is especially important for submissions from countries where A4 paper is standard.) 
  Supplementary materials may be included as an Appendix at the end of the submitted paper. The Appendix has no page limit, but the text of the full paper excluding the Appendix must fit within 11 pages. Reviewers are not required to read the Appendix and may do so at their discretion. So papers must be self-contained without needing to read any material in the Appendix. 
  Papers are to be submitted for double-blind review  . Blind reviewing of papers will be done by the program committee, assisted by outside referees. Author names as well as hints of identity are to be removed from the submitted paper. Use care in naming your files. Source file names, e.g., Joe.Smith.dvi, are often embedded in the final output as readily accessible comments. In addition, do not omit references to provide anonymity, as this leaves the reviewer unable to grasp the context. Instead, if you are extending your own work, you need to reference and discuss the past work in third person, as if you were extending someone else’s research. We realize in doing this that for some papers it will still be obvious who the authors are. In this case, the submission will not be penalized as long a concerted effort was made to reference and describe the relationship to the prior work as if you were extending someone else’s research. For example, if your name is Joe Smith: | In previous work [1,2], Smith presented a new branch predictor for …. In this paper, we extend their work by …  
 Bibliography  
 [1] Joe Smith, “A Simple Branch Predictor for …,” Proceedings of CGO 2019.  
 [2] Joe Smith, “A More Complicated Branch Predictor for…,” Proceedings of CGO 2019. 
  Your submission must be formatted for black-and-white printers and not color printers. This is especially true for plots and graphs in the paper. 
  Please make sure that the labels on your graphs are readable without the aid of a magnifying glass. Typically the default font sizes on the graph axes in a program like Microsoft Excel are too small. 
  Please number the pages. 
  The paper must be written in English. 
  The paper must be submitted in PDF. We cannot accept any other format, and we must be able to print the document just as we receive it. We strongly suggest that you use only the four widely-used printer fonts: Times, Helvetica, Courier and Symbol. Please make sure that the output has been formatted for printing on LETTER size paper. If generating the paper using “dvips”, use the option “-P cmz -t letter”, and if that is not supported, use “-t letter”. 
  The Artifact Evaluation process is run by a separate committee whose task is to assess how the artifacts support the work described in the papers. Authors of accepted papers have the option of submitting their artifacts for evaluation within one week of paper acceptance. To ease the organization of the AE committee, we kindly ask authors to indicate at the time they submit the paper, whether they are interested in submitting an artifact. Papers that go through the Artifact Evaluation process successfully will receive a seal of approval printed on the papers themselves. Additional information is available on the CGO AE web page. Authors of accepted papers are encouraged, but not required, to make these materials publicly available upon publication of the proceedings. 
  Authors must register all their conflicts on the paper submission site  . Conflicts are needed to ensure appropriate assignment of reviewers. If a paper is found to have an undeclared conflict that causes a problem OR if a paper is found to declare false conflicts in order to abuse or “game” the review system, the paper may be rejected. 
  Please declare a conflict of interest with the following people for any author of your paper: | Your Ph.D. advisor(s), post-doctoral advisor(s), Ph.D. students, and post-doctoral advisees, forever. 
  Family relations by blood or marriage, or their equivalent, forever (if they might be potential reviewers). 
  People with whom you have collaborated in the last FIVE years, including: 
  Co-authors of accepted/rejected/pending papers. 
  Co-PIs on accepted/rejected/pending grant proposals. 
  Funders (decision-makers) of your research grants, and researchers whom you fund. 
  People (including students) who shared your primary institution(s) in the last FIVE years. 
  Other relationships, such as close personal friendship, that you think might tend to affect your judgment or be seen as doing so by a reasonable person familiar with the relationship. 
  “Service” collaborations such as co-authoring a report for a professional organization, serving on a program committee, or co-presenting tutorials, do not themselves create a conflict of interest. Co-authoring a paper that is a compendium of various projects with no true collaboration among the projects does not constitute a conflict among the authors of the different projects. 
  On the other hand, there may be others not covered by the above with whom you believe a COI exists, for example, an ongoing collaboration that has not yet resulted in the creation of a paper or proposal. Please report such COIs; however, you may be asked to justify them. Please be reasonable. For example, you cannot declare a COI with a reviewer just because that reviewer works on topics similar to or related to those in your paper. The PC Chair may contact co-authors to explain a COI whose origin is unclear. 

 Important Dates   AoE (UTC-12h)     

 Mon 4 Nov 2024  
  R2: Author Notification 
 Tue 22 - Thu 24 Oct 2024  
  R2: Author Rebuttal 
 Thu 12 Sep 2024   
  R2: Submission Deadline 
 Mon 22 Jul 2024  
  R1: Author Notification 
 Tue 9 - Thu 11 Jul 2024  
  R1: Author Rebuttal 
 Thu 30 May 2024   
  R1: Submission Deadline 

 Submission Link   
   
   https://cgo25-second-round.hotcrp.com/     
   
 Program Committee    
   
 Hugh Leather Co-chair    
 Facebook 
  Saday Sadayappan Co-chair    
 University of Utah, USA 
  Andrew Adams    
 Adobe Research 
  Saman Amarasinghe    
 Massachusetts Institute of Technology   
 United States 
  Tal Ben-Nun    
 Lawrence Livermore National Laboratory   
 United States 
  Milind Chabbi    
 Uber Technologies   
 United States 
  Albert Cohen    
 Google DeepMind   
 France 
  Huimin Cui    
 Institute of Computing Technology, Chinese Academy of Sciences   
 China 
  Maryam Mehri Dehnavi    
 University of Toronto   
 Canada 
  Christophe Dubach    
 McGill University   
 Canada 
  Anderson Faustino da Silva    
 State University of Maringá   
 Brazil 
  Björn Franke    
 University of Edinburgh   
 United Kingdom 
  Laure Gonnord    
 Université Grenoble-Alpes - Grenoble INP - LCIS   
 France 
  R. Govindarajan    
 IISC 
  Rajiv Gupta    
 University of California at Riverside (UCR)   
 United States 
  Sebastian Hack    
 Saarland University, Saarland Informatics Campus   
 Germany 
  Bastian Hagedorn    
 NVIDIA   
 Germany 
  Wei-Chung Hsu    
 Intel, USA 
  Abhinav Jangda    
 Microsoft Research   
 United States 
  Shoaib Kamil    
 Adobe Research 
  Mahmut Taylan Kandemir    
 Pennsylvania State University   
 United States 
  Fredrik Kjolstad    
 Stanford University   
 United States 
  Martin Kong    
 Ohio State University   
 United States 
  Milind Kulkarni    
 Purdue University   
 United States 
  Lian Li    
 Institute of Computing Technology at Chinese Academy of Sciences; University of Chinese Academy of Sciences   
 China 
  Xu Liu    
 North Carolina State University   
 United States 
  Scott Mahlke    
 University of Michigan 
  Vanderson Martins do Rosario    
 Cadence Design Systems 
  Stephen McCamant    
 University of Minnesota, USA 
  Santosh Nagarakatte    
 Rutgers University   
 United States 
  Yongjun Park    
 Yonsei University 
  Pavlos Petoumenos    
 University of Manchester   
 United Kingdom 
  Louis-Noël Pouchet    
 Colorado State University, USA 
  Isabelle Puaut    
 Université de Rennes - Inria - CNRS - IRISA   
 France 
  Bin Ren    
 William & Mary   
 United States 
  Atanas Rountev    
 Ohio State University 
  Volker Seeker    
 Meta AI Research   
 United States 
  Xipeng Shen    
 North Carolina State University   
 United States 
  Tatiana Shpeisman    
 Modular 
  Aravind Sukumaran-Rajam    
 Meta 
  Kirshanthan Sundararajah    
 Virginia Tech   
 United States 
  Antonino Tumeo    
 Pacific Northwest National Laboratory   
 United States 
  Ramakrishna Upadrasta 
  Wenwen Wang    
 University of Georgia   
 United States 
  Zheng Wang    
 University of Leeds, UK 
  Yufan Xu    
 Uber Technologies 
  Jingling Xue    
 UNSW Sydney   
 Australia 
  Jidong Zhai    
 Tsinghua University 
  Keren Zhou    
 George Mason University 
  Oleksandr Zinenko    
 Google DeepMind   
 France 

 x  Thu 5 Dec 12:37    

  CGO 2025   
  contact form    
  using conf.researchr.org  ( v1.67.1  )  
   Support page    
     
 CGO 2025  
 Artifact Evaluation   
  Main Conference   
  Student Research Competition   
  Workshops and Tutorials    

 Attending  
 Code of Conduct   
  Venue    
 Sign Up    

  Important dates data: 
undefined

31. Conference SCAM_3:
Michele Pasqua    
 Education  Work Experience  Research  Publications  Teaching  Contact  News and events  Tools   English  English  Italiano        

   Michele Pasqua    

 Education  Work Experience  Research  Publications  Teaching  Contact  News and events  Tools    English  English  Italiano      

 Michele Pasqua, Ph.D.  

  News (last update: October 1, 2024)   
   
   ISSTA 2025   
  Program Committee Member   
  34 th  ACM International Symposium on Software Testing and Analysis  
  ICST 2025   
  Publicity Co-Chair   
  18 th  IEEE International Conference on Software Testing, Verification and Validation  
  ST&V Summer School 2024   
  Invited Speaker   
  3 rd  Summer School on Security Testing and Verification  
  SCAM 2024   
  Program Committee Member  – Research Track  ; New Ideas and Emerging Results Track   
  24 th  IEEE International Working Conference on Source Code Analysis and Manipulation  
  NSAD 2024   
  Program Co-Chair   
  10 th  ACM SIGPLAN International Workshop on Numerical and Symbolic Abstract Domains  
  Lipari AbsInt 2024   
  Organizer   
  Lipari Summer School on Abstract Interpretation  
  CyberChallenge.IT 2024   
  Local Organizer and Instructor   
  7 th  Edition of the Italian Training Program in Cybersecurity  
  SAS 2024   
  Program Committee Member   
  31 st  Static Analysis Symposium  
  ECAI 2024   
  Program Committee Member   
  27 th  European Conference on Artificial Intelligence  
  ICSE 2024   
  Speaker  – Research Track   
  46 th  IEEE/ACM International Conference on Software Engineering  
  ASE 2024   
  Program Committee Member  – Research Track   
  39 th  IEEE/ACM International Conference on Automated Software Engineering  
  ICSE 2024   
  Program Committee Member  – Demonstrations Track   
  46 th  IEEE/ACM International Conference on Software Engineering  
  
   More   

 Powered by Hugo    
  2021 - 2024    | CC BY-NC 4.0     

    
Call for papers data: 
  
   Michele Pasqua    
 Education  Work Experience  Research  Publications  Teaching  Contact  News and events  Tools   English  English  Italiano        

   Michele Pasqua    

 Education  Work Experience  Research  Publications  Teaching  Contact  News and events  Tools    English  English  Italiano      

 Research  
 Interests  
 My main research interests are in the fields of software engineering  and formal methods  for programming languages; with particular attention to functional and security testing, program verification and semantics, language-based security, distributed systems design, code protection and malware detection.  

 Projects  
 (last update: August 20, 2024)   
  Smartitude: Automated Testing and Security Assessment of Smart Contracts   
  Funded by Ministry of Education, University and Research - Italy (PRIN Project 2022)  
  Coordinator:  Dr. Dario Di Nucci  
  
  Research Assistant  
  Blockchain  · Smart-contracts  · Software testing  · Security   
  
  Automated Testing of REST APIs     
  Funded by Muscope Cybersecurity Srl  
  Coordinator:  Prof. Mariano Ceccato  
  
  Research assistant  
  REST API  · Black-box testing  · Cybersecurity  · Verification   
  
  Machine Learning for Automated Testing of REST APIs     
  Funded by Equixely Srl  
  Coordinator:  Prof. Mariano Ceccato  
  
  Research assistant  
  REST API  · Black-box testing  · Machine learning  · NLP  · Verification   
  
  Metamorphic Hyperproperty Testing   
  Funded by Swiss National Science Foundation - Switzerland (SNSF Research Visit 2022)  
  Supervisor:  Prof. Paolo Tonella  
  
  Principal investigator  
  Search-based testing  · Hyperproperty  · Verification  · Security   
  
  Build Trust Proof of Concept     
  Funded by University of Verona and Build Trust Srl (Joint Project 2021)  
  Coordinator:  Prof. Franco Fummi  
  
  Research assistant  
  Blockchain  · UML  · Smart-contracts  · Automatic code generation  · Certification   
  
  IT MATTERS – Methods and Tools for Trustworthy Smart Systems     
  Funded by Ministry of Education, University and Research - Italy (PRIN Project 2017)  
  Coordinator:  Prof. Rocco De Nicola  
  
  Research assistant  
  Autonomic computing  · Formal methods  · IoT systems  · Verification   
  
  ASPRA – Analysis of Program Analyses   
  Funded by Ministry of Education, University and Research - Italy (PRIN Project 2017)  
  Coordinator:  Prof. Roberto Giacobazzi  
  
  Research assistant  
  Static analysis  · Up-to techniques  · Abstract interpretation  · Completeness   

 Powered by Hugo    
  2021 - 2024    | CC BY-NC 4.0     

     Important dates data: 
undefined

32. Conference SDH_0:
Socialist Republic of Vietnam    Choose your Country/Region  

 Asia   
   
  China    
  India    
  Japan    
  South Korea    
   
  Malaysia    
  Taiwan, China    
  United Arab Emirates    
  Indonesia    
   
  Hong Kong, China    
  Singapore    
  Thailand    
  Turkey    

 America   
   
  United States    
  Canada    
  Brazil    
  Argentina    
   
  Mexico    
  Colombia    
  Chile    
  Peru    
   
  Guatemala    

 Europe   
   
  Italy    
  United Kingdom    
  France    
  Germany    
   
  Spain    
  Portugal    
  Austria    
  Poland    
   
  Greece    
  Russian Federation    
  Czech Republic    
  Switzerland    
   
  Netherlands    
  Sweden    
  Romania    
  Hungary    
   
  Belgium    
  Ukraine    
  Ireland    
  Croatia    
   
  Finland    
  Denmark    
  Cyprus    
  Serbia    
   
  Slovakia    
  Norway    
  Bulgaria    
  Iceland    

 Oceania   
   
  Australia    
  New Zealand    
  Fiji    

 Africa   
   
  South Africa    
  Tunisia    
  Morocco    
  Egypt    

 Product | Software 
  Webinar 
  Video conference 
  Virtual conference 
  Institution Edition 
  Discover | Subject category 
  Conference in Socialist Republic of Vietnam 
  Contribution library 
  Browse by venue 
  Services 
         
 Create an event  Lecture    
   
 Meeting/Workshop/Tutorials    
   
 Conference    

 Log in  Sign up    

 The 14th International Symposium on Spatial Data Handling  
   
 May. 26 - 28, 2010  
 · Hong Kong, China  
   
 Conference  Offline Conference    
  0  Views   
  0  Comments   
 Favorite    
  Share    

  Call for paper 〔OPEN〕  
 My Submissions   

 〔CLOSED〕    
   
  Registration 〔OPEN〕  
 My tickets   

 〔CLOSED〕    

 Introduction  
   
 The International Symposium on Spatial Data Handling (SDH) is the premier biennial international research forum for Geospatial Information Science (GISc). It commenced in 1984, in Zurich, Switzerland and has been held in Seattle, USA; Sydney, Australia; Zurich, Switzerland; Charleston, USA; Edinburgh, UK; Delft, The Netherlands; Vancouver, Canada; Beijing, China; Ottawa, Canada; Leicester, UK; Vienna, Austria; and Montpellier, France. The 14th SDH will be a major event in the international community of GISc in 2010. It aims to bring together scholars and professionals from the international community of GISc to present latest achievements and to share experience in GISc research. The Symposium program will feature keynote speeches delivered by leading GISc scholars, technical sessions with reports of the latest research outcomes, student forum on meeting with GISc legends and commercial exhibitions showing the latest development of GISc technology. Paper selection is based on abstract and full paper peer review. Accepted papers will be published in the symposium proceedings as part of the International Archives of the Photogrammetry, Remote Sensing and Spatial Information Sciences. Selected papers will be published in a book of ISPRS book series.   
   
 Call for paper  
   
 Important date  
 2009-09-30   
 Abstract submission deadline   
   
 2009-11-30   
 Draft paper submission deadline   

 Submission Topics  
 一、Themes covered by the Symposium 1.Digital Cartography 2.Geospatial Data Integration 3.Geospatial Database and Data Infrastructures 4.Geospatial Data Modeling for Social Science 5.GISc for Sustainable Urbanization 6.GISc for Environmental and Urban Model   

 Submit Comment  

 Verify Code     Change Another   Submit    

 All Comments  

 Submission Template  
 ×    
  Paper Template  
  Paper Template  

 Home 
  Program 
  Timetable 
  Abstract List 
  Photo 
  Review 
  Management 
    
 Important Date  
   
 Conference Date | May 26  
 2010  
  to  May 28  
 2010 
  Sep 30  2009 | Abstract Submission Deadline 
  Nov 30  2009 | Draft paper submission deadline 
  May 28  2010 | Registration deadline 

 Sponsored By  
   
 The Hong Kong Polytechnic University   
   
 Organized By  
   
 Commission on Geographic Information Science of International Geographical Union  

 Contact Information  
   
  co******@polyu.edu.hk 
  Login to view full contact details    

 Website  
   
 http://www.meeting.edu.cn/meeting/notice/meetingAction-14497!detail.action    

 Contact Information  
 ×    

 OK    

 Tips  
 ×    
 Coming soon to a third-party domain  
 You are about to access a third-party domain, please be aware of the security of your account and property.   
 https://http://www.meeting.edu.cn/meeting/notice/meetingAction-14497!detail.action   

 Continue to visit    

 About Us  |  News  |  Blog  |  Feedback  |  Disclaimer  |  Privacy Policy  |  Terms of Service  |  Cancellation Policy  |  Contact   
 Copyright © 2013-2021 Aconf.org  - One-stop solutions for academic events   
 鄂ICP备09016152号-4   

  
Call for papers data: 
undefinedImportant dates data: 
undefined

33. Conference SCN_1:
Home  Log In  Contacts  FAQs  INSTICC Portal    
   
 Documents  Actions  On-line Registration  Registration Fees  Deadlines and Policies  Submit Paper  Submit Abstract  Guidelines  Preparing your Presentation  Templates  Glossary  Author's Login  Reviewer's Login  Ethics of Review  Information  Conference Details  Important Dates  Call for Papers  Program Committee  Event Chairs  Keynote Lectures  Best Paper Awards  Satellite Events  Workshops  Special Sessions  Tutorials  Demos  Panels  Doctoral Consortium  Travel and Accommodation  Conference Venue  About the Region  Reaching the City  Visa Information  Partners  Academic Partners  Industrial Partners  Institutional Partners  Media Partners  Partner Events  Publication Partners  Previous Conferences  Websites  Abstracts  Invited Speakers  Awards  Books Published    
  
 Sponsored by:    

 Locally Organized and Hosted by:    

 INSTICC is Member of:    

 Logistics:    

 SECRYPT 2025 will be held in conjunction with ICSOFT 2025    , DATA 2025    , SIMULTECH 2025    , DeLTA 2025    , ICSBT 2025    and IQSOFT 2025    .   
  Registration to SECRYPT allows free access to the ICSOFT, DATA, SIMULTECH, DeLTA, ICSBT and IQSOFT conferences (as a non-speaker).  

  Although the conference is back to the normal mode (i.e., in-person) speakers are allowed to present remotely if unable to travel to the venue (hybrid support).    

 Upcoming Submission Deadlines  
 Regular Paper Submission:  January 17, 2025    
 Position/Regular Paper Submission:  March 3, 2025    
  
  (See Important Dates for more information)    
 SECRYPT is an annual international conference covering research in information and communication security. The International Conference on Security and Cryptography (SECRYPT) is relevant to academia, industry, and government, as a venue for sharing novel research on all theoretical and practical aspects of data protection, privacy, security, and applied cryptography. The contributions to SECRYPT span all these areas, focusing on the application of security technology, the implementation of systems, and lessons learned.    

  Conference Chair    
 Pierangela Samarati  ,  Università degli Studi di Milano, Italy   

 PROGRAM CHAIR    
 Sabrina De Capitani Di Vimercati  ,  Università degli Studi di Milano, Italy   

 Publications:     
  All papers presented at the conference venue  
  will be available at the SCITEPRESS Digital Library   
  ( consult SCITEPRESS  Ethics of Publication  )  

  It is planned to publish a short list of revised and  
  extended versions of presented papers with  
  Springer in a CCIS Series book  (final approval pending)  

 Proceedings will be submitted for evaluation for indexing by:    

  Web of Science/Conference Proceedings Citation Index     

 © 2024  INSTICC    

   
Call for papers data: 
Server Error  
   
 404 - File or directory not found.  
 The resource you are looking for might have been removed, had its name changed, or is temporarily unavailable.  

  Important dates data: 
undefined

34. Conference SDH_1:
About  2024 Events  Past Editions  Get your ticket   

 Spatial  
  Data  
  Science  
  Conference  
   
 Sign up for 2024    

 The Spatial Data Science Conference brings together Geospatial, Analytics & Data Science professionals to discuss the latest & greatest advances in spatial analytics, focusing on relevant use cases and new types of location data being used. Bringing together the private and public sector, SDSC provides a unique experience to meet others in the industry, upskill in new methodologies and hear how the industry is evolving.  

 "The conference brought together geospatial engineers and scientists from across the globe to one place. It was a great opportunity to see the advances from others and discuss the hurdles faced in our own use-cases. The value from combining geography to the business world cannot be understated."  
  Kellen Waltman  
 Senior Data Engineer at Accelerant Holdings   

 Upcoming events  

 Register for the upcoming conferences & bootcamps happening across the globe in 2024.  
   
 2024 Bootcamps   
 Want to get more hands-on experience with spatial data science? Check out where our next bootcamps are happening  .   
   
 2025 conferences   
   
   London  
 The Royal Geographical Society  
 15th May 2025  
   
   New York  
 Columbia University  
 TBC, October 2025  

 2023 events   

 In 2024, we held multiple conferences & bootcamps across the globe.  
   
 conferences   
   
   New York  
 Columbia University  
 16th-17th October 2024  
   
   London  
 The Royal Geographical Society  
 15th-16th May 2024  

 Bootcamps   
 Take a closer look at this year's past bootcamps. Check them out.    

 Past Editions  

 2017   
  2018   
  2019   
  2020   
  2021   

 Spatial Data Science in Financial Services Summit   Spatial Data Science in CPG & Retail Summit   Spatial Data Science Conference 2021 Online    
   
 2022   

 Spatial Data Science Conference New York 2022   Spatial Data Science Conference London 2022    
   
 2023   

 Spatial Data Science Conference London   Spatial Data Science Conference New York     
 Bootcamps   
   
 Spatial Data Science Bootcamp Toronto 2023   Spatial Data Science Bootcamp New York 2023   Spatial Data Science Bootcamp Madrid 2023   Spatial Data Science Bootcamp Tokyo 2023   Spatial Data Science Bootcamp Paris 2023     

 Past Speakers  

  Arun Nandi  
 Arun Nandi   

  Denise Pearl  
 Denise Pearl   

  Thusal Bennet  
 Thusal Bennet   

  Kendra Lord  
 Kendra Lord   

  Michal Klis  
 Michal Klis   

  Yanyan Li  
 Yanyan Li   

  Bilal Lodhi  
 Bilal Lodhi   

  David González  
 David González   

  Natasha Patel  
 Natasha Patel   

 Past Topics  

 Vector and Raster Data Unification Through H3  
  by  
 Milos Colic   

 Last Night an H3 Saved my Life  
  by  
 Tim Rains, Matthew Garrod, Sachin Devarajappa   

 The Geospatial Data Cloud for Everybody  
  by  
 Javier de la Torre   

 Predicting Store Cannibalisation using Machine Learning  
  by  
 Emily Smith   

 Serverless Geospatial Analytics with AWS Data Exchange for Amazon Redshift  
  by  
 Devin Herd   

 Natural Language Processing for GIS  
  by  
 Thusal Bennet   

 Location Data and the Future of Media Buying  
  by  
 Edie Fisher & Andy Stevens   

 Improving Urban Mobility through Geospatial Analytics  
  by  
 Fawad A. Qureshi   

 How to Achieve Growth in a Complex Ad Landscape of Data Deprecation  
  by  
 Georgios Giasemidis   

 Driving Value with Geospatial Analytics in Consumer Goods in the Post-Pandemic World  
  by  
 Arun Nandi   

 A Scalable Methodology for Building POIs in Less than 6 Months  
  by  
 Thea Backlar   

 Driving Value with Geospatial Analytics in Consumer Goods in the Post-Pandemic World  
  by  
 Arun Nandi   

 Complex Spatial Data Science in the Boardroom  
  by  
 Katy Ashwin   

 Asset Inspection Optimisation  
  by  
 Evan Harwin   

 Calculating the Impact of a New Trucking Terminal: A Diversion Analysis  
  by  
 David Cavanaugh   

 Past Participants   

 Interested in sponsoring our future events?  
 Download sponsorship brochure    

   info@spatial-data-science-conference.com    

 2024 Events   
   
 Conferences   
    
 2024 London  2024 New York    
   
 Bootcamps   

 2024 New York  2024 San Francisco  2024 Madrid  2024 Toronto  2024 Tokyo  2024 Dallas  2024 London    

 Past Events   
   
 Conferences   
    
 2023 New York  2023 London  2023 Spatial App Development Summit  2022 New York  2022 London  2021  more....    
   
 Bootcamps   
    
 2023 New York  2023 Madrid  2023 Toronto  2023 Tokyo  2023 Paris  2023 Washington DC  2023 London    

    
Call for papers data: 
undefinedImportant dates data: 
undefined

35. Conference SCN_2:
What a lovely hat  
 Is it made out of tin foil  ?  
      
 International Association for Cryptologic Research  
 International Association  
  for Cryptologic Research  

     IACR    
 Events | All IACR events   Asiacrypt  Crypto  Eurocrypt   CHES  FSE  PKC  TCC  RWC   Cryptology Schools  In cooperation with IACR 
  Publications | All IACR Publications   Journal of Cryptology  Transactions on Symmetric Cryptology  Transactions on CHES  Communications in Cryptology   Cryptology ePrint Archive  Artifact Archive   Access IACR Publications   Museum of Historic Papers  Publication Statistics 
  News | All News  Awards  Elections  Petitions & Statements 
  Services | Jobs   CryptoDB  Calendar of Events  Videos 
  Members | How to Join  Update Membership Information  Access IACR Publications  Subscribe to News Updates 
  About | About IACR  Board of Directors  Committees  Documents  Privacy Policy 
  Suggestions from local search  as you type. Hit enter to search with Google.  
  Search 
    
   Suggestions from local search  as you type. Hit enter to search with Google.  

 Events in Cooperation with IACR  
 The events listed here are selected conferences and workshops that are not sponsored by the IACR, but take place in cooperation with the IACR. Events seeking this status find more information here  . See also the complete history  of IACR conferences and workshops and the calender of events in cryptography  .  
 2025  
 The 4th Annual FHE.org Conference on Fully Homomorphic Encryption (FHE.org 2025) | , March 25-, Sofia, Bulgaria. 
  ArcticCrypt 2025 | , July 6-11, 2025, Longyearbyen, Norge. 
  Selected Areas in Cryptography 2025 cycle 1 (SAC 2025) | , August 11-15, 2025, Toronto, Canada. 
  Selected Areas in Cryptography 2025 cycle 2 (SAC 2025) | , August 11-15, 2025, Toronto, Canada. 
  9th International Conference on Cryptology and Information Security in Latin America (LATINCRYPT 2025) | , October 1-3, 2025, Medellín, Colombia. 
  2024  
 2nd annual Real World Post Quantum Cryptography workshop (RWPQC 2024) | , March 24-24, 2024, Toronto, Canada. 
  Number-Theoretic Methods in Cryptology (NuTMiC 2024) | , June 24-26, 2024, Szczecin, Poland. 
  15th International Conference on Cryptology Africacrypt 2024 (Africacrypt 2024) | , July 10-12, 2024, Douala, Cameroon. 
  Summer School crypt@b-it 2024 (crypt@b-it 2024) | , August 26-30, 2024, Bochum, Deutschland. 
  31st International Conference on Selected Areas in Cryptography 2024 (SAC 2024) | , August 28-30, 2024, Montreal, Canada. 
  workshop on Fault Diagnosis and Tolerance in Cryptography 2024 (FDTC 2024) | , September 4-4, 2024, Halifax, Canada. 
  Fourteenth International Conference on Security and Cryptography for Networks (SCN '24) | , September 11-13, 2024, Amalfi, Italy. 
  20th International Conference on Information Security and Cryptology (Inscrypt 2024) | , December 14-16, 2024, Kunming, China. 
  Cyber Security, Cryptology, and Machine Learning (CSCML 24) | , December 19-20, 2024, Virtual event, Anywhere on Earth. 
  2023  
 Real World Post Quantum Cryptography (RWPQC 2023) | , March 26-26, 2023, Tokyo, Japan. 
  The Fourth International Workshop on Code-Based Cryptography (CBCrypto 2023) | , April 22-23, 2023, Lione, Francia. 
  Lattices Meet Hashes: Recent Advances in Post-Quantum Zero-Knowledge Proofs (Lattices Meet Hashes) | , May 1-3, 2023, Ecublens, Switzerland. 
  4th International Conference on Codes, Cryptology and Information Security (C2SI-2023) | , May 29-31, 2023, Rabat, Morocco. 
  Conference on Information-Theoretic Cryptography (ITC) | , June 6-8, 2023, Aarhus, Denmark. 
  The 7th International Symposium for Cyber Security, Cryptology and Machine Learning (CSCML 2023) | , June 29-30, 2023, Virtual event, Anywhere on Earth. 
  14th International Conference on Cryptology (Africacrypt 2023) | , July 19-21, 2023, Sousse, Tunisie. 
  Selected Areas in Cryptography 2023 (SAC 2023) | , August 16-18, 2023, Fredericton, Canada. 
  workshop on Fault Diagnosis and Tolerance in Cryptography 2023 (FDTC 2023) | , September 10-10, 2023, Prague, Czech Republic. 
  8th International Conference on Cryptology and Information Security in Latin America (Latincrypt 2023) | , October 2-6, 2023, Quito, Ecuador. 
  Advances in Financial Technologies (AFT 23) | , October 23-26, 2023, Princeton, USA. 
  22nd International Conference on Cryptology and Network Security (CANS 2023) | , October 31-November 2, 2023, Augusta, United States. 
  2022  
 International Symposium on Cyber Security Cryptology & Machine Learning (CSCML 2022) | , June 30-July 1, 2022, Beersheba, Israel. 
  Conference on Information-Theoretic Cryptography (ITC) | , July 5-7, 2022, Boston, USA. 
  International Conference on Cryptology, Coding Theory and Cyber Security 20 (I4CS22) | , July 14-16, 2022, Casablanca, Maroc. 
  12th International Conference on Cryptology - Africacrypt (Africacrypt 2022) | , July 18-20, 2022, Fez, Morocco. 
  Workshop on Foundations and Applications of Lattice-based Cryptography | , July 25-28, 2022, Edinburgh, United Kingdom. 
  Selected Areas in Cryptography (SAC 2022) | , August 24-26, 2022, Windsor, Canada. 
  crypt@b-it 2022 - Summer school on Cryptography (crypt@b-it 2022) | , September 12-16, 2022, Bonn, Deutschland. 
  13th Conference on Security and Cryptography for Networks (SCN 2022) | , September 12-14, 2022, Amalfi, Italy. 
  workshop on Fault Diagnosis and Tolerance in Cryptography 2022 (FDTC 2022) | , September 16-16, 2022, Virtual event, Anywhere on Earth. 
  International Conference on Cryptology, Coding Theory and Cyber Security 2022 (I4CS2022) | , October 26-28, 2022, Casablanca, Morocco. 
  International Conference on Cryptology, Coding Theory and Cyber Security 2022 (I4CS2022) | , October 26-28, 2022, Casablanca-Settat, Morocco. 
  21st International Conference on Cryptology and Network Security Abu Dhabi, UAE (CANS 2022) | , November 13-16, 2022, Nation Towers, Tower A, United Arab Emirates. 
  Quantum Cryptography Workshop 2022 (QCW 2022) | , December 5-, Taipei, Taiwan. 
  The 18th International Conference on Information Security and Cryptology (Inscrypt 2022) | , December 11-13, 2022, Beijing, China. 
  International Conference on Cryptology & Network Security with Machine Learning (ICCNSML 2022) | , December 16-18, 2022, Sachendi, India. 
  2021  
 Financial Cryptography and Data Security 2021 (FC21) | , March 1-5, 2021, Virtual, . 
  10th Workshop on Current Trends in Cryptology (CTCrypt'2021) | , June 1-3, 2021, Dorokhovo, Russia. 
  Number-Theoretic Methods in Cryptology (NuTMiC) | , June 14-17, 2021, Pozna?, Poland. 
  The 17th International Conference on Information Security and Cryptology (Inscrypt 2021) | , August 11-14, 2021, Qingdao, China. 
  workshop on Fault Diagnosis and Tolerance in Cryptography 2021 (FDTC 2021) | , September 16-16, 2021, Virtual event, Anywhere on Earth. 
  ACM conference on Advances in Financial Technologies (AFT) | , September 26-28, 2021, Arlinghton, United States. 
  Selected Areas in Cryptography (SAC 2021) | , September 29-October 1, 2021, Virtual event, Anywhere on Earth. 
  Latincrypt 2021 (Latincrypt 2021) | , October 6-8, 2021, Virtual event, Anywhere on Earth. 
  20th International Conference on Cryptology and Network Security (CANS 2021) | , December 13-15, 2021, Vienna, Austria. 
  2020  
 Financial Cryptography and Data Security 2020 (FC20) | , February 10-14, 2020, Kota Kinabalu, Malaysia. 
  41st IEEE Symposium on Security and Privacy (IEEE S&P) | , May 18-20, 2020, San Francisco, USA. 
  Conference on Information-Theoretic Cryptography (ITC) | , June 17-19, 2020, Boston, USA. 
  4th International Symposium on Cyber Security Cryptology and Machine Learni (CSCML 2020) | , July 2-3, 2020, Be'er Sheva, Israel. 
  12th International Conference on Cryptology, AFRICACRYPT 2020 (Africacrypt 2020) | , July 22-22, 2020, Cairo, Egypt. 
  Fault Diagnosis and Tolerance in Cryptography (FDTC) (FDTC) | , September 13-13, 2020, Virtual Event, Germany. 
  12th Conference on Security and Cryptography for Networks (SCN 2020) | , September 14-16, 2020, Amalfi, Italy. 
  9th Workshop on Current Trends in Cryptology (CTCrypt'2020 ) | , September 15-17, 2020, Saint-Petersburg, Russia. 
  Selected Areas in Cryptography (SAC) | , October 21-23, 2020, Halifax, Canada. 
  21st International Conference on Cryptology in India (Indocrypt 2020) | , December 13-16, 2020, Bengaluru, India. 
  19th International Conference on Cryptology and Network Security (CANS 2020) | , December 14-16, 2020, Vienna, Austria. 
  10th International Conference on Security, Privacy and Applied Cryptography (SPACE) | , December 17-21, 2020, Kolkata, India. 
  2019  
 Financial Cryptography and Data Security 2019 (FC19) | , February 18-22, 2019, Frigate Bay, St. Kitts. 
  Workshop on Constructive Side-Channel Analysis and Secure Design (COSADE '19) | , April 3-5, 2019, Darmstadt, Germany. 
  3rd International Conference on Codes, Cryptology and Information Security (C2SI-2019) | , April 22-24, 2019, Rabat, Morocco. 
  The Tenth International Conference on Post-Quantum Cryptography (PQCrypto 2019) | , May 8-10, 2019, Chongqing, China. 
  8th Workshop on Current Trends in Cryptology (CTCrypt'19) | , June 4-7, 2019, Svetlogorsk, Kaliningrad region, Russia. 
  International Conference on Historical Cryptology (histocrypt 2019) | , June 23-26, 2019, Mons, Belgium. 
  Number-Theoretic Methods in Cryptology 2019 (NutMiC 2019) | , June 24-27, 2019, Paris, France. 
  3rd International Symposium on Cyber Security Cryptology and Machine Learni (CSCML 2019) | , June 27-28, 2019, Be'er Sheva, Israel. 
  11th International Conference on Cryptology, AFRICACRYPT 19 (Africacrypt 2019) | , July 9-11, 2019, Rabat, Morocco. 
  Selected Areas in Cryptography (SAC 2019) | , August 14-16, 2019, Waterloo, Canada. 
  Workshop on Fault Diagnosis and Tolerance in Cryptography 2019 (FDTC 2019) | , August 24-24, 2019, Atlanta, USA. 
  The 9th International Conference on Quantum Cryptography (QCrypt 2019) | , August 26-30, 2019, Montreal, Canada. 
  CROSSING Summer School on Sustainable Security Privacy (CROSSING S4P) | , September 9-13, 2019, Darmstadt, Germany. 
  Sixth International Conference on Cryptology in Latin America (Latincrypt 2019) | , October 2-4, 2019, Santiago, Chile. 
  ACM Conference on Advances in Financial Technologies (AFT '19) | , October 21-23, 2019, Zurich, Switzerland. 
  The 18th International Conference on Cryptology And Network Security (CANS 2019) | , October 25-27, 2019, Fuzhou, China. 
  9th Conference on Security, Privacy and Applied Cryptographic Engineering (SPACE 2019) | , December 3-7, 2019, Gandhinagar, India. 
  The 15th International Conference on Information Security and Cryptology (Inscrypt 2019) | , December 6-8, 2019, Nanjing, China. 
  2018  
 Financial Cryptography and Data Security 2018 (FC18) | , February 26-March 2, 2018, Nieuwpoort, Curacao. 
  The sixth Code-Based Cryptography Workshop (CBC 2018) | , April 5-6, 2018, Davie, Florida, United Stated. 
  The Ninth International Conference on Post-Quantum Cryptography (PQCrypto 2018) | , April 9-11, 2018, Fort Lauderdale, FL, USA. 
  9th Int. Workshop on Constructive Side-Channel Analysis and Secure Design (COSADE '18) | , April 23-24, 2018, Singapore, Singapore. 
  Africacrypt 2018 | , May 7-9, 2018, Marrakesh, Morocco. 
  7th Workshop on Current Trends in Cryptology (CTCrypt'18) | , May 28-30, 2018, Suzdal, Russia. 
  2nd Int. Symposium on Cyber Security Cryptography & Machine Learning (CSCML 2018) | , June 21-22, 2018, Be'er Sheva, Israel. 
  1st Codes, Cryptology & Information Security Southeast Asia 2018 (C2IS-SEA 2018) | , July 9-11, 2018, Putrajaya, Malaysia. 
  Summer School crypt@b-it 2018 (crypt@b-it 2018) | , July 23-27, 2018, Bonn, Germany. 
  Conference on Selected Areas in Cryptography (SAC 2018) | , August 15-17, 2018, Calgary, Canada. 
  IFIP Summer School on Privacy and Identity Management (IFIP SC 2018) | , August 20-24, 2018, Vienna, Austria. 
  Eleventh Conference on Security and Cryptography for Networks (SCN '18) | , September 5-7, 2018, Amalfi, Italy. 
  International Workshop on Lightweight Cryptography for Security and Privacy (LightSec 2018) | , September 10-12, 2018, Cardiff, United Kingdom. 
  Workshop on Fault Diagnosis and Tolerance in Cryptography 2018 (FDTC 2018) | , September 13-13, 2018, Amsterdam, Netherlands. 
  Balkan CryptSec (BCS 18) | , September 20-21, 2018, Iasi, Romania. 
  Cryptology and Network Security 2018 (CANS 2018) | , September 30-October 3, 2018, Naples, Italy. 
  4th Conference on Security Standards Research 2018 (SSR18) | , November 26-27, 2018, Darmstadt, Germany. 
  19th International Conference on Cryptology in India (Indocrypt 2018) | , December 9-12, 2018, New Delhi, India. 
  The 14th International Conference on Information Security and Cryptology (Inscrypt 2018) | , December 14-16, 2018, Fuzhou, China. 
  Conference on Security, Privacy, and Applied Cryptography Engineering (SPACE 2018) | , December 17-19, 2018, Kanpur, India. 
  2017  
 Financial Cryptography and Data Security 2017 (FC '17) | , April 3-7, 2017, Sliema, Malta. 
  International Conference in "Codes, Cryptology and Information Security" (C2SI 2017) | , April 10-12, 2017, Rabat, Morocco. 
  9th International Conference on Cryptology and Information Security (AFRICACRYPT 2017) | , May 24-26, 2017, Dakar, Senegal. 
  6th Workshop on Current Trends in Cryptology (CTCrypt 2017) | , June 5-7, 2017, Saint Petersburg, Russia. 
  22nd Australasian Conference on Information Security and Privacy 2017 (ACISP2017) | , July 3-5, 2017, Auckland, New Zealand. 
  14th International Conference on Security and Cryptography (SECRYPT 2017) | , July 26-28, 2017, Madrid, Spain. 
  Conference on Selected Areas in Cryptography (SAC 2017) | , August 16-18, 2017, Ottawa, Canada. 
  The 6th Technion Summer School on Cyber and Computer Security | , September 10-14, 2017, Haifa, Israel. 
  Conference on Number Theory Methods in Cryptology (NuTMiC'2017) | , September 11-13, 2017, Warsaw, Poland. 
  5th Int. Conf. on Cryptology and Information Security (Latincrypt 2017) (Latincrypt 2017) | , September 20-22, 2017, Havana, Cuba. 
  Fourteenth Workshop on Fault Diagnosis and Tolerance in Cryptography (FDTC'17) | , September 25-25, 2015, Taipei, Taiwan. 
  The 13th International Conference on Information Security and Cryptology (INSCRYPT 2017) | , November 3-5, 2017, Xi'an, China. 
  10th International Conference on Information Theoretic Security (ICITS 2017) | , November 29-December 2, 2017, Hong Kong, China. 
  16th International Conference on Cryptology and Network Security (CANS 2017) | , November 30-December 2, 2017, Hong Kong, Hong Kong. 
  7th Asian Workshop on Symmetric Key Cryptography (ASK 2017) | , December 9-11, 2017, Changsha, China. 
  18th International Conference on Cryptology in India ( INDOCRYPT'17) | , December 10-13, 2017, Chennai, India. 
  16th IMA International Conference on Cryptography and Coding (IMA Cryptography & Coding (C&C)) | , December 12-14, 2017, Oxford, United Kingdom. 
  Seventh International Conference on Security, Privacy and Applied Crypto (SPACE 2017) | , December 15-17, 2017, Goa, India. 
  2016  
 School on Design for a Secure IoT | , January 25-29, 2016, Tenerife, Spain. 
  1st CROSSING Winter School on Quantum Security (CXQS16) | , January 25-29, 2016, Darmstadt, Germany. 
  Financial Cryptography and Data Security 2016 (FC '16) | , February 22-26, 2016, Rockley, Christ Church, Barbados. 
  The Seventh International Conference on Post-Quantum Cryptography (PQCrypto 2016) | , February 24-26, 2016, Fukuoka, Japan. 
  Spring School on Symmetric Cryptography | , March 17-19, 2016, Bochum, Germany. 
  International Conference on Cryptology, AFRICACRYPT 2016 (AFRICACRYPT 2016) | , April 13-15, 2016, Fes, Morocco. 
  ArcticCrypt 2016 | , July 17-22, 2016, Longyearbyen, Norway. 
  CrossFyre 2016 | , July 21-22, 2016, Darmstadt, Germany. 
  UbiCrypt Summer School crypt@b-it 2016, 25-29 July 2016, Bonn, Germany. | , July 25-29, 2016, Bonn, Germany. 
  13th International Conference on Security and Cryptography (SECRYPT'201) | , July 26-28, 2016, Lisbon, Portugal. 
  SAC Summer School (S3) | , August 8-9, 2016, St. John's, Canada. 
  9th International Conference on Information Theoretic Security (ICITS 2016) | , August 9-12, 2016, Tacoma, USA. 
  Conference on Selected Areas in Cryptography (SAC 2016) | , August 10-12, 2016, St. John's, Canada. 
  Workshop on Fault Diagnosis and Tolerance in Cryptography (FDTC'16) | , August 16-16, 2016, Santa Barbara, CA, USA. 
  11th IFIP Summer School on Privacy and Identity Management | , August 21-26, 2016, Karlstad, Sweden. 
  10th Conference on Security and Cryptography for Networks (SCN 2016) | , August 31-September 2, 2016, Amalfi, Italy. 
  International Workshop on Lightweight Cryptography for Security & Privacy (LightSec'16) | , September 21-22, 2016, Cappadocia, Turkey. 
  IEEE Cybersecurity Development Conference (IEEE SecDev) | , November 3-4, 2016, Boston, USA. 
  The 12th International Conference on Information Security and Cryptology (Inscrypt 2016) | , November 4-6, 2016, Beijing, China. 
  15th International Conference on Cryptology and Network Security (CANS 2016) | , November 14-16, 2016, Milano, Italy. 
  Int'l Conference on Cryptology & Malicious Security hosted in Malaysia (Mycrypt 2016) | , December 1-2, 2016, Kuala Lumpur, Malaysia. 
  17th International Conference on Cryptology in India (Indocrypt '16) | , December 11-14, 2016, Kolkata, India. 
  Sixth International Conference on Security, Privacy and Applied Cryptograph (SPACE 2016) | , December 16-18, 2016, Hyderabad, India. 
  2015  
 Financial Cryptography and Data Security 2015 (FC '15) | , January 26-30, 2015, San Juan, Puerto Rico. 
  5th Bar-Ilan Winter School on Cryptography: Advances in Practical MPC | , February 15-19, 2015, Tel Aviv, Israel. 
  8th International Conference on Information Theoretic Security (ICITS 2015) | , May 2-5, 2015, Lugano, Switzerland. 
  IEEE Symposium on Security and Privacy (IEEE S&P 2015) | , May 18-20, 2015, Oakland, USA. 
  International Conference in Codes, Cryptology and Information Security (C2SI-Berger2015) | , May 26-28, 2015, Rabat, Morocco. 
  CryptoBG*2015: Cryptology and Cyber Resilience (CryptoBG*2015) | , July 19-26, 2015, Oriahovitza, Bulgaria. 
  12th International Conference on Security and Cryptography (SECRYPT'15) | , July 20-22, 2015, Colmar, Alsace, France. 
  Selected Areas in Cryptography 2015 (SAC'15) | , August 12-14, 2015, Sackville, Canada. 
  Latincrypt 2015 | , August 23-26, 2015, Guadalajara, Mexico. 
  2nd Conference on Cryptography and Information Theory- BalkanCryptSec 2015 (BCS 2015) | , September 3-4, 2015, Koper, Slovenia. 
  Workshop on Fault Diagnosis and Tolerance in Cryptography (FDTC) | , September 13-13, 2015, Saint Malo, France. 
  Asian Workshop on Symmetric Key Cryptography 2015 (School) (ASK 2015) | , September 30-October 3, 2015, Singapore, Singapore. 
  Intl. Conf. on Security, Privacy, and Applied Cryptography Engineering (SPACE 2015) | , October 3-7, 2015, Jaipur, India. 
  11th International Conference on Information Security and Cryptology (Inscrypt 2015) | , November 1-3, 2015, Beijing, China. 
  The 14th International Conference on Cryptology and Network Security (CANS 2015) | , December 8-12, 2015, Marrakesh, Morocco. 
  Fifteenth IMA International Conference on Cryptography and Coding | , December 15-17, 2015, Oxford, United Kingdom. 
  2014  
 Africacrypt 2014 | , May 28-30, 2014, Marrakech, Morroco. 
  The 10th Workshop on RFID Security (RFIDSec'14) | , July 21-23, 2014, Oxford, United Kingdom. 
  Cryptography Summer School | , July 21-24, 2014, Bucharest, Romania. 
  UbiCrypt Summer School crypt@b-it 2014 | , July 28-August 1, 2014, Bochum, Germany. 
  Selected Areas in Cryptography (SAC'2014) | , August 14-15, 2014, Montreal, Quebec, Canada. 
  Third International Workshop on Lightweight Cryptography (LightSEC 2014) | , September 1-2, 2014, Istanbul, Turkey. 
  11th International Conference on Security and Cryptography (SECRYPT 2014) | , September 2-4, 2014, Vienna, Austria. 
  9th Conference on Security and Cryptography for Networks (SCN 2014) | , September 3-5, 2014, Amalfi, Italy. 
  Third International Conference on Cryptology and Information Security (LATINCRYPT 2014) | , September 17-19, 2014, Florianopolis, Brazil. 
  Workshop on Fault Diagnosis and Tolerance in Cryptography 2014 (FDTC'14) | , September 23-23, 2014, Busan, Korea. 
  6th International Conference on Post-Quantum Cryptography (PQCrypto 2014) | , October 1-3, 2014, Waterloo, Canada. 
  International Conference on Cryptography and Information Security (BalkanCryptSec) | , October 16-17, 2014, Istanbul, Turkey. 
  4th International Conference on Security, Privacy, and Applied Cryptography (SPACE 2014) | , October 18-22, 2014, Pune, India. 
  13rd International Conference on Cryptology and Network Security (CANS 2014) | , October 22-24, 2014, Heraklion, Crete, Greece. 
  The 10th International Conference on Information Security and Cryptology (Inscrypt 2014) | , December 13-15, 2014, Beijing, China. 
  2013  
 Africacrypt 2013 | , June 22-24, 2013, Cairo, Egypt. 
  Workshop on RFID Security (RFIDsec '13) | , July 9-11, 2013, Graz, Austria. 
  Selected Areas in Cryptography 2013 (SAC 2013) | , August 14-16, 2013, Burnaby, BC, Canada. 
  Workshop on Fault Diagnosis and Tolerance in Cryptography (FDTC) | , August 20-20, 2013, Santa Barbara, California, USA. 
  Conference on Security, Privacy, and Applied Cryptography Engineering (SPACE 2013) | , October 21-22, 2013, Kharagpur, India. 
  Sixteenth Information Security Conference (ISC 2013) | , November 13-15, 2013, Dallas, USA. 
  12th International Conference on Cryptology and Network Security (CANS 2013) | , November 20-22, 2013, Paraty, Brazil. 
  9th China International Conference on Information Security and Cryptology (Inscrypt'13) | , November 27-30, 2013, Guangzhou, China. 
   
 About   The International Association for Cryptologic Research (IACR)  is a non-profit scientific organization whose purpose is to further research in cryptology and related fields. Learn more...   

 Events   Asiacrypt | • | Crypto | • | Eurocrypt 
  CHES | • | FSE | • | PKC | • | TCC 
  Real World Crypto 
  Schools 
  Calendar of events 
    
 Publications   Access to Publications 
  Journal of Cryptology 
  Trans. on Symmetric Cryptology 
  Trans. on CHES 
  Communications in Cryptology 
  Cryptology ePrint Archive 
  Publication database 
    
 Services   News 
  Awards 
  Jobs 
  Update your information 
  How to join 
  About the IACR 

 Copyright © 2024  by the  IACR  International Association for Cryptologic Research   •   
  Privacy Policy     

  
Call for papers data: 
  

   Search this site   

 Skip to main content     

 Skip to navigation     

 ECR Research Workshop   Home 
  Registration 
  Schedule 
  Speakers 
  Organisers 
  Venue 
   
 ECR Research Workshop     
 Home 
  Registration 
  Schedule 
  Speakers 
  Organisers 
  Venue 
  More | Home 
  Registration 
  Schedule 
  Speakers 
  Organisers 
  Venue 

 25 to 28 July 2022  

 Workshop on Foundations and Applications of Lattice-based Cryptography  

 at ICMS, Edinburgh, UK    

 A four day workshop with talks, research discussions and practical lab sessions   

 Speakers     

 Prof Martin Albrecht   
  
 Royal Holloway, University of London  

 Dr Ilaria Chillotti   
  
 Zama  

 Dr  Anamaria  Costache   

 NTNU    

 Dr Luca De Feo   
  
 IBM Research Zurich  

 Dr Chloe Martindale   
  
 University of Bristol  

 Dr Alice Pellet--Mary   
  
 University of Bordeaux  

 Prof Damien Stehlé   
 ENS  Lyon    

 Venue   

 ICMS, Edinburgh UK    

 Bayes Centre, University of Edinburgh    

 Hosted by the  International Centre for Mathematical Sciences   , in Edinburgh UK.  
   Click to view the ICMS event website   .    

 Sponsors   

 We would like to thank the ICMS for hosting and funding the event, as well as our sponsors, Zama and PQShield.   

 ZAMA     

 PQShield     

 Please register for the event at the ICMS website   

 RSVP  

 Google Sites   

 Report abuse   

 Page details   

 Page updated     
   
 Google Sites   
   
 Report abuse   

  Important dates data: 
undefined

36. Conference SCOPES_3:
ICSE 2025   Sat 26 April - Sun 4 May 2025 Ottawa, Ontario, Canada    

 Toggle navigation        
 Attending | Venue: Rogers Centre, Ottawa (formerly Shaw Centre) 
  Registration 
  Hotels 
  Visa and Travel Authorization 
  Travelling to Ottawa 
  Getting Around Ottawa 
  Food at ICSE2025 
  Code of Conduct 
  Equity, Diversity, and Inclusion Plan 
  Fun Activities 
  Sponsorship 
  Program | Program Overview 
  Keynotes 
  Panels 
  Receptions and Banquet 
  Tutorials 
  Networking Events 
  Meetings and BOF events 
  Technical Briefings 
  Recreational Activities 
  Submitting to ICSE2025: Q&A 
  Tracks | ICSE 2025 
  Main Plenaries 
  Research Track 
  SE In Practice (SEIP) 
  SE in Society (SEIS) 
  New Ideas and Emerging Results (NIER) 
  Journal-first Papers 
  Demonstrations 
  Artifact Evaluation 
  Industry Challenge Track 
  Software Engineering Education 
  Posters 
  Doctoral Symposium 
  Shadow PC 
  Workshops 
  Tutorials and Technical Briefings 
  New Faculty Symposium 
  Symposium on Software Engineering in the Global South (SEiGS) 
  SRC - ACM Student Research Competition 
  Social And Networking 
  Meetings and BOFs 
  Student Mentoring Workshop (SMeW) 
  Student Volunteers 
   Co-hosted Conferences 
  AST 
  CAIN | CAIN 
  CAIN  Research and Experience Papers 
  CAIN  Doctoral Symposium 
  CAIN  Industry Talks 
  CAIN  Posters 
  CAIN  Scope 
  CHASE | CHASE 
  CHASE  Research Track 
  CHASE  Journal First and Journal Fast 
  CSEE&T  Software Engineering Education 
  FORGE | FORGE 
  FORGE  Research Papers 
  FORGE  Industry Papers 
  FORGE  Data and Benchmarking 
  FORGE  Tutorials 
  FormaliSE | FormaliSE  Research Track 
  FormaliSE  Artifact Track 
  ICPC | ICPC 
  ICPC  Early Research Achievements (ERA) 
  ICPC  Journal First 
  ICPC  Replications and Negative Results (RENE) 
  ICPC  Research Track 
  ICPC  Tool Demonstration 
  ICSR 
  MOBILESoft | MOBILESoft 
  MOBILESoft  Research Track 
  MOBILESoft  App Track 
  MSR | MSR 
  MSR  Data and Tool Showcase Track 
  MSR  FOSS Award 
  MSR  Industry Track 
  MSR  Junior PC 
  MSR  Awards 
  MSR  Mining Challenge 
  MSR  Registered Reports 
  MSR  Technical Papers 
  MSR  Vision and Reflection 
  SEAMS | SEAMS 
  SEAMS  Research Track 
  SEAMS  Artifact Track 
  TechDebt | TechDebt 
  TechDebt  Technical Papers 
  TechDebt  Journal First 
  TechDebt  Junior Program Committee 
  Workshops 
  AIOps  AI for Cloud Service 
  APR  Automated Program Repair 
  BotSE  Bots in SE 
  DeepTest  Deep Learning <-> Testing 
  Designing  Software Design 
  EnCyCriS  Cybersecurity of Critical Systems 
  FTW  Flaky Tests Workshop 
  FinanSE  SE Challenges in Financial Firms 
  GAS  Games and SE 
  GE@ICSE  Gender Equality 
  GI  Genetic Improvement 
  GREENS  Green and Sustainable Software 
  Gamify  Gamification in Development + V & V 
  IDE  Integrated Development Environments 
  IWSiB 
  LLM4Code  Large Language Models for Code 
  MO2RE  Multi-Discip. Requirements Engineering 
  NLBSE  Natural Language Based SE 
  NSE  Neuro-Symbolic SE 
  Q-SE  Quantum SE 
  RAIE  Responsible AI Engineering 
  RAISE  Requirements Engg. for AI-Powered SW 
  RoSE  Robotics Software Engineering 
  SATrends  Software Architecture Trends 
  SBFT  Search-Based and Fuzz testing 
  SE4ADS  SE for Autonomous Driving Systems 
  SERP4IoT  SE for the Internet of Things 
  SESoS  Systems of Systems and Ecosystems 
  STATIC  Advancing Static Analysis 
  SVM  Software Vulnerability Management 
  WETSEB  SE for Blockchain 
  WSESE  Empirical Studies in SE 
  Organization | ICSE 2025 Committees 
  Organizing Committee 
  Track Committees 
  Research Track 
  SE In Practice (SEIP) 
  SE in Society (SEIS) 
  New Ideas and Emerging Results (NIER) 
  Journal-first Papers 
  Demonstrations | Demonstrations 
  Program Committee 
  Artifact Evaluation 
  Industry Challenge Track 
  Posters 
  Doctoral Symposium | Doctoral Symposium 
  Program Committee 
  Shadow PC 
  Workshops 
  Tutorials and Technical Briefings 
  New Faculty Symposium 
  Symposium on Software Engineering in the Global South (SEiGS) | Organizing Committee 
  Program Committee 
  SRC - ACM Student Research Competition 
  Student Mentoring Workshop (SMeW) | Student Mentoring Workshop Organizing Committee 
  Student Mentoring Workshop Steering Committee 
  Student Volunteers 
  Contributors 
  People Index 
   Co-hosted Conferences 
  AST | Organizing Committee 
  Program Committee 
  Steering Committee 
  CAIN | Organizing Committee 
  Steering Committee 
  Research and Experience Papers 
  Doctoral Symposium 
  Industry Talks 
  Posters 
  CHASE | Organizing Committee 
  Program Committee 
  CSEE&T | Organizing Committee 
  Organization Committee 
  Program Committee 
  FORGE | Organization Committee 
  Research Papers 
  Industry Papers 
  Data and Benchmarking 
  Tutorials 
  FormaliSE | Research Track  Organization Committee 
  Research Track  Program Committee 
  Artifact Track 
  ICPC | Organizing Committee 
  Steering Committee 
  Early Research Achievements (ERA) 
  Journal First 
  Replications and Negative Results (RENE) 
  Research Track 
  Tool Demonstration 
  ICSR | Organizing Committee 
  Organization committee 
  Program Committee 
  MOBILESoft | Organizing Committee 
  Research Track 
  App Track  Organizing Committee 
  App Track  Program Committee 
  MSR | Organizing Committee 
  Data and Tool Showcase Track 
  FOSS Award 
  Industry Track 
  Junior PC 
  MSR Awards 
  Mining Challenge 
  Registered Reports 
  Technical Papers 
  Vision and Reflection 
  SEAMS | Organizing Committee 
  MIP Award Committee 
  Research Track 
  Artifact Track 
  TechDebt | Organizing Committee 
  Technical Papers 
  Junior Program Committee 
  Workshops 
  AIOps | N/A - check homepage 
  APR | Organizing Committee 
  Program Committee 
  BotSE | Organizing Committee 
  Publicity Chair 
  Web Chair 
  Program Committee 
  DeepTest | Organizing Committee 
  Program Committee 
  Designing | Organizing Committee 
  Program Committee 
  EnCyCriS | Organization Committee 
  Program Committee 
  FTW | Organizing Committee 
  Steering Committee 
  Program Committee 
  FinanSE | Organizing Committee 
  Program Committee 
  GAS | Co-organizers 
  GE@ICSE | Program Committee 
  GI | Organizing Committee 
  GREENS | N/A - check homepage 
  Gamify | Organizing Committee 
  Proceedings Chair 
  Publicity and Web Chair 
  IDE | Organizing Committee 
  Program Committee 
  IWSiB | Organizing committee 
  Program Committee 
  LLM4Code | N/A - check homepage 
  MO2RE | Organizing Committee 
  NLBSE | N/A - check homepage 
  NSE | Organising Committee 
  Program Committee 
  Q-SE | Organizing Committee 
  Program Committee 
  RAIE | Organizing Committee 
  Program Committee 
  Publicity and Web Chair 
  RAISE | Organizing Committee 
  Program Committee 
  RoSE | RoSE 2025 OC 
  RoSE 2025 PC 
  SATrends | Organising Committee 
  Program Committee 
  SBFT | N/A - check homepage 
  SE4ADS | Organizing Committee 
  Program Committee 
  Web & Publicity Chair 
  SERP4IoT | Program Committee 
  SESoS | Organizing Committee 
  Steering Committee 
  Proceedings Chair 
  Publicity Chairs 
  Program Committee 
  STATIC | Organizing Committee 
  Program Committee 
  SVM | Organizing Committee 
  Organizing Committee 
  Proceedings Chair 
  Program Committee 
  WETSEB | N/A - check homepage 
  WSESE | Organizing Committee 
  Web Chair 
  Proceedings Chair 
  Program Committee 
  Search 
  Series | Series 
    ICSE 2025 
  ICSE 2024 
  ICSE 2023 
  ICSE 2022 
  ICSE 2021 
  ICSE 2020 
  ICSE 2019 
  * ICSE 2018 * 
  Sign in 
  Sign up 

  ICSE 2025  ( series  ) /  Research Track ICSE 2025   
   
 Call for Papers 
  Accepted papers: First and Second Cycle 
  Call for Papers  
  
 The International Conference on Software Engineering (ICSE) is the premier forum for presenting and discussing the most recent and significant technical research contributions in the field of Software Engineering. In the research track, we invite high-quality submissions of technical research papers describing original and unpublished results of software engineering research.  
 ICSE 2025 will follow a dual deadline structure introduced in 2024. In other words, submissions will occur in two cycles. Please refer to the section on Dual Submission Cycles in the following for the information.  
 NEW THIS YEAR #1  : Due to the rapid growth of the area of “AI and Software Engineering”, it is now split into two: “AI for Software Engineering” and “Software Engineering for AI”. A new area “Architecture and Design” is introduced. The topics listed under each area have also been revised. Please see the “Research Areas” section below.  
 NEW THIS YEAR #2  : We add back opportunities for “Author Response” in addition to “Revision” so that some potential misunderstandings can be clarified in the review process for papers that otherwise would be rejected. Also, for a paper receiving a “Revision” outcome, authors will be given an additional page of text in the revised paper to accommodate the required changes specified in the reviews.  
 NEW THIS YEAR #3  : Submissions must follow the latest “ IEEE Submission and Peer Review Policy  ” and “ ACM Policy on Authorship  ” (with associated FAQ  , which includes a policy regarding the use of generative AI tools and technologies  , such as ChatGPT. After checking with the ICSE Steering Committee, we are piloting a human-in-the-loop automated process to identify AI-generated papers. A Review Process Co-Chair has volunteered to design and run this pilot process on submitted papers. To preserve confidentiality, when scanning submitted papers, the scripts will not make use of any third-party services.  
 NEW THIS YEAR #4  : IEEE Transactions on Software Engineering, ACM Transactions on Software Engineering and Methodology and ICSE 2025, have received approval from the ICSE Steering Committee to launch the Sustainable Community Review Effort (SCRE) program, aimed at reducing community effort in reviewing journal extensions of conference papers and allowing authors to get faster and more consistent feedback. More information is available at: http://tinyurl.com/icse25-scre   
 NEW THIS YEAR #5  : ICSE Steering Committee has recently approved a proposal for streamlining and enhancing the paper bidding and assignment process, aimed at reducing the workload of PC members and resulting in better assignments of papers. Two Review Process Co-Chairs have volunteered to help manage the updated bidding and assignment process. More information is available at: http://tinyurl.com/icse25-streamlining   
 NEW THIS YEAR #6  : ICSE Steering Committee has recently approved a proposal for Shadow PC. Shadow PC is a mentoring program to train early-career researchers (PhD students, postdocs, new faculty members, and industry practitioners) in the review process of the technical track. For Cycle 2, for the first time, authors of ICSE submissions can opt-in for their papers to be considered for review in the Shadow PC track. Shadow reviews for papers that are reviewed by the Shadow PC will be sent out to authors after the end of the actual review process; shadow reviews will not affect the official decision made by the regular PC. More detailed information about the program is available at: http://tinyurl.com/icse25-shadowpc   
  Research Areas   
 ICSE welcomes submissions addressing topics across the full spectrum of Software Engineering, being inclusive of quantitative, qualitative, and mixed-methods research. Topics of interest include the following and are grouped into the following nine research areas. Please note that these topics are by no means exhaustive.  
 Each submission will need to indicate one of these nine areas as the chosen area. Optionally, the authors can consider adding an additional area. A paper may be moved from the chosen area(s) to another focus area at the discretion of the program chairs. Program chairs will ultimately assign a paper to an area chair, considering the authors’ selection, the paper’s content, and other factors such as (if applicable) possible conflicts of interest.  
  AI for Software Engineering   
 AI-enabled recommender systems for automated SE (e.g., code generation, program repair, AIOps, software composition analysis, etc.) 
  Human-centered AI for SE (e.g., how software engineers can synergistically work with AI agents) 
  Trustworthy AI for SE (e.g., how to provide guarantees, characterize limits, and prevent misuse of AI for SE) 
  Sustainable AI for SE (e.g., how to reduce energy footprint for greener AI for SE) 
  Collaborative AI for SE (e.g., how AI agents collaborate for automating SE) 
  Automating SE tasks with LLM and other foundation models (e.g., large vision model) 
  Efficacy measurement beyond traditional metrics (e.g., accuracy, BLEU, etc.) 
  Prompt engineering for SE (e.g., novel prompt design) 
  AI-assisted software design and model driven engineering (e.g., specification mining, program synthesis, software architectural design) 
   Analytics   
 Mining software repositories, including version control systems, issue tracking systems, software ecosystems, configurations, app stores, communication platforms, and novel software engineering data sources, to generate insights through various research methods 
  Software visualization 
  Data-driven user experience understanding and improvement 
  Data driven decision making in software engineering 
  Software metrics (and measurements) 
   Architecture and Design   
 Architecture and design measurement and assessment 
  Software design methodologies, principles, and strategies 
  Theory building for/of software design 
  Architecture quality attributes, such as security, privacy, performance, reliability 
  Modularity and reusability 
  Design and architecture modeling and analysis 
  Architecture recovery 
  Dependency and complexity analysis 
  Distributed architectures, such as microservice, SOA, cloud computing 
  Patterns and anti-patterns 
  Technical debt in design and architecture 
  Architecture refactoring 
  Adaptive architectures 
  Architecture knowledge management 
   Dependability and Security   
 Formal methods and model checking (excluding solutions focusing solely on hardware) 
  Reliability, availability, and safety 
  Resilience and antifragility 
  Confidentiality, integrity, privacy, and fairness 
  Performance 
  Design for dependability and security 
  Vulnerability detection to enhance software security 
  Dependability and security for embedded and cyber-physical systems 
   Evolution   
 Evolution and maintenance 
  API design and evolution 
  Release engineering and DevOps 
  Software reuse 
  Refactoring and program differencing 
  Program comprehension 
  Reverse engineering 
  Environments and software development tools 
  Traceability to understand evolution 
   Human and Social Aspects   
 Focusing on individuals (from program comprehension, workplace stress to job satisfaction and career progression) 
  Focusing on teams (e.g., collocated, distributed, global, virtual; communication and collaboration within a team), communities (e.g., open source, communities of practice) and companies (organization, economics) 
  Focusing on society (e.g., sustainability; diversity and inclusion) 
  Focusing on programming languages, environments, and tools supporting individuals, teams, communities, and companies. 
  Focusing on software development processes 
   Requirements and Modeling   
 Requirements engineering (incl. non-functional requirements) 
  Theoretical requirement foundations 
  Requirements and architecture 
  Feedback, user and requirements management 
  Requirements traceability and dependencies 
  Modeling and model-driven engineering 
  Variability and product lines 
  Systems and software traceability 
  Modeling languages, techniques, and tools 
  Empirical studies on the application of model-based engineering 
  Model-based monitoring and analysis 
   Software Engineering for AI   
 SE for AI models 
  SE for systems with AI components 
  SE for AI code, libraries, and datasets 
  Engineering autonomic systems and self-healing systems 
  Automated repair of AI models 
  Testing and verification of AI-based systems 
  Validation and user-based evaluation of AI-based systems 
  Requirements engineering for AI-based systems 
   Testing and Analysis   
 Software testing 
  Automated test generation techniques such as fuzzing, search-based approaches, and symbolic execution 
  Testing and analysis of non-functional properties 
  GUI testing 
  Mobile application testing 
  Program analysis 
  Program synthesis (e.g., constraint based techniques) 
  Program repair 
  Debugging and fault localization 
  Runtime analysis and/or error recovery 
   Scope   
 Since the authors will choose an area for their submission, the scope of each area becomes important. Some submissions may relate to multiple areas. In such cases, the authors should choose the area for which their paper brings the maximum new insights. Moreover, authors also have the choice of indicating an alternate area for each paper.  
 Similarly, for certain papers. authors may have a question whether it belongs to any area, or is simply out of scope. For such cases, we recommend the authors to judge whether their paper brings new insights for software engineering. As an example, a formal methods paper with a focus on hardware verification may be deemed out of scope for ICSE. In general, papers that only peripherally concern software engineering and do not give new insights from the software engineering perspective would be less relevant to ICSE. Our goal is, however, to be descriptive, rather than prescriptive, to enable authors to make their own decisions about relevance.  
  Dual Submission Cycles   
 Similar to ICSE 2024, we will have two submission cycles as follows:  
 First submission cycle   
 (Mandatory) Abstract: | Mar 15, 2024 
  Submission: | Mar 22, 2024 
  Author response period (3 days): | Jun 10-13, 2024 
  Notification: | Jul 5, 2024 
  Revision due: | Aug 2, 2024 
  Camera-ready (of directly accepted papers): | Aug 16, 2024 
  Final decision (of revised papers): | Nov 1, 2024 
  Camera-ready (of accepted revised papers): | Dec 13, 2024 
  Second submission cycle   
 (Mandatory) Abstract: | Jul 26, 2024 
  Submission: | Aug 2, 2024 
  Author response period (3 days): | Oct 7-10, 2024 
  Notification: | Nov 1, 2024 
  Revision due: | Nov 29, 2024 
  Camera-ready (of directly accepted papers): | Dec 13, 2024 
  Final decision (of revised papers): | Jan 22, 2025 
  Camera-ready (of accepted revised papers): | Feb 12, 2025 
  All dates are 23:59:59 AoE (UTC-12h).  
  Review Criteria   
 Each paper submitted to the Research Track will be evaluated based on the following criteria:  
 i) Novelty  : The novelty and innovativeness of contributed solutions, problem formulations, methodologies, theories, and/or evaluations, i.e., the extent to which the paper is sufficiently original with respect to the state-of-the-art.  
 ii) Rigor  : The soundness, clarity, and depth of a technical or theoretical contribution, and the level of thoroughness and completeness of an evaluation.  
 iii) Relevance  : The significance and/or potential impact of the research on the field of software engineering.  
 iv) Verifiability and Transparency  : The extent to which the paper includes sufficient information to understand how an innovation works; to understand how data was obtained, analyzed, and interpreted; and how the paper supports independent verification or replication of the paper’s claimed contributions. Any artifacts attached to or linked from the paper will be checked by one reviewer.  
 v) Presentation  : The clarity of the exposition in the paper.  
 Reviewers will carefully consider all of the above criteria during the review process, and authors should take great care in clearly addressing them all. The paper should clearly explain and justify the claimed contributions. Each paper will be handled by an area chair who will ensure reviewing consistency among papers submitted within that area.  
 The outcome of each paper will be one of the following Accept, Revision, Reject. We now elaborate on the Revision outcome in the following.  
  Revisions   
 Papers submitted can go through revisions in response to specific revision requests made by the reviewers. Authors of papers receiving a Revision decision are expected to submit the revised papers, as well as the revised papers with changes marked in a different color, such as using LaTeXdiff. The authors also need to submit an “Author Response” document capturing the authors’ response to each reviewer’s comment and how those comments were addressed in the revision. This is similar to the “Summary of Changes and Response” document that is typically submitted by authors for a journal paper’s major revision. Authors may use the revision opportunity to revise and improve the paper, but should not use this to submit a substantially different paper. The reviewers will check the revised paper against the original paper and the suggested changes. Revised papers will be examined by the same set of reviewers. An unsatisfactory revised paper will be rejected. Authors are given 4 weeks  to submit the revised papers. This is 1 week less than prior year as we reallocate the time to (i) add authors’ rebuttal, and (ii) provide more time for PC members to complete their reviews (to reduce reviewing fatigue considering the high workload to review increasing number of submissions). Authors are given an additional page of text in a revised paper to accommodate the required changes specified in the reviews.  
  Re-submissions of Rejected Papers   
 Authors of papers which receive a REJECT decision in the first submission cycle are strongly discouraged from re-submitting it to the second submission cycle. However, in exceptional cases where the reviewers evidently misunderstood their paper, upon approval of PC Chairs, authors can re-submit their paper to the second submission cycle with a “Clarifications and Summary of Improvements” document stating how they have changed the paper. They should also include the past reviews as part of this document, for completeness. These papers will be treated as new submissions, which may or may not get the same set of reviewers at the discretion of the PC chairs. Authors who try to bypass this guideline (e.g., by changing the paper title without significantly changing paper content, or by making small changes to the paper content) will have their papers desk-rejected by the PC chairs without further consideration.  
  Submission Process   
 Submissions must conform to the IEEE conference proceedings template, specified in the IEEE Conference Proceedings Formatting Guidelines  (title in 24pt font and full text in 10pt type, LaTeX users must use \documentclass[10pt,conference]{IEEEtran} without including the compsoc or compsocconf options). Note that IEEE format is being used this year, whereas last year it was ACM format, hence the appearance will differ from year to year.  
 All submissions must not exceed 10 pages for the main text, inclusive of all figures, tables, appendices, etc. Two more pages containing only references are permitted. All submissions must be in PDF. Accepted papers will be allowed one extra page for the main text of the camera-ready version. 
  Submissions | must strictly conform to the IEEE conference proceedings formatting instructions specified above | . Alterations of spacing, font size, and other changes that deviate from the instructions may result in desk rejection without further review. 
  By submitting to the ICSE Technical Track, authors acknowledge that they are aware of and agree to be bound by the | ACM Policy and Procedures on Plagiarism | and the | IEEE Plagiarism FAQ | . In particular, papers submitted to ICSE 2025 | must not have been published elsewhere and must not be under review or submitted for review elsewhere whilst under consideration for ICSE 2025 | . Contravention of this concurrent submission policy will be deemed a serious breach of scientific ethics, and appropriate action will be taken in all such cases. To check for double submission and plagiarism issues, the chairs reserve the right to (1) share the list of submissions with the PC Chairs of other conferences with overlapping review periods and (2) use external plagiarism detection software, under contract to the ACM or IEEE, to detect violations of these policies. 
  If the research involves human participants/subjects, the authors must adhere to the | ACM Publications Policy on Research Involving Human Participants and Subjects | . Upon submitting, authors will declare their compliance with such a policy. Alleged violations of this policy or any ACM Publications Policy will be investigated by ACM and may result in a full retraction of your paper, in addition to other potential penalties, as per ACM Publications Policy. 
  Please ensure that you and your co-authors obtain an ORCID ID, so you can complete the publishing process for your accepted paper. ACM and IEEE have been involved in ORCID and may collect ORCID IDs from all published authors. We are committed to improve author discoverability, ensure proper attribution and contribute to ongoing community efforts around name normalization; your ORCID ID will help in these efforts. 
  The ICSE 2025 Research Track will employ a double-anonymous review process. Thus, no submission may reveal its authors’ identities. The authors must make every effort to honor the double-anonymous review process. In particular: | Authors’ names must be omitted from the submission. 
  All references to the author’s prior work should be in the third person. 
  While authors have the right to upload preprints on ArXiV or similar sites, they must avoid specifying that the manuscript was submitted to ICSE 2025. 
  All communication with the program committee must go through the program committee chairs. Do not contact individual program committee members regarding your submission. 
  Further advice, guidance, and explanation about the double-anonymous review process can be found on the Q&A page  . 
  By submitting to the ICSE Research Track, authors acknowledge that they conform to the | authorship policy of the IEEE | , | submission policy of the IEEE | , and the | authorship policy of the ACM | (and associated | FAQ | . This includes following these points related to the use of Generative AI: | “Generative AI tools and technologies, such as ChatGPT, may not be listed as authors of an ACM published Work. The use of generative AI tools and technologies to create content is permitted but must be fully disclosed in the Work. For example, the authors could include the following statement in the Acknowledgements section of the Work: ChatGPT was utilized to generate sections of this Work, including text, tables, graphs, code, data, citations, etc.). If you are uncertain ­about the need to disclose the use of a particular tool, err on the side of caution, and include a disclosure in the acknowledgements section of the Work.” - ACM 
  “The use of artificial intelligence (AI)–generated text in an article shall be disclosed in the acknowledgements section of any paper submitted to an IEEE Conference or Periodical. The sections of the paper that use AI-generated text shall have a citation to the AI system used to generate the text.” - IEEE 
  “If you are using generative AI software tools to edit and improve the quality of your existing text in much the same way you would use a typing assistant like Grammarly to improve spelling, grammar, punctuation, clarity, engagement or to use a basic word processing system to correct spelling or grammar, it is not necessary to disclose such usage of these tools in your Work.” - ACM 
  Submissions to the Technical Track that meet the above requirements can be made via the Research Track submission site by the submission deadline. Any submission that does not comply with these requirements may be desk rejected without further review.  
 Submission site: https://icse2025.hotcrp.com/   
 We encourage the authors to upload their paper info early (and can submit the PDF later) to properly enter conflicts for double-anonymous reviewing. It is the sole responsibility of the authors to ensure that the formatting guidelines, double anonymous guidelines, and any other submission guidelines are met at the time of paper submission.  
  Open Science Policy   
 The research track of ICSE 2025 is governed by the ICSE 2025 Open Science policies. The guiding principle is that all research results should be accessible to the public and, if possible, empirical studies should be reproducible. In particular, we actively support the adoption of open artifacts and open source principles. We encourage all contributing authors to disclose (anonymized and curated) data/artifacts to increase reproducibility and replicability. Note that sharing research artifacts is not mandatory for submission or acceptance. However, sharing is expected to be the default, and non-sharing needs to be justified. We recognize that reproducibility or replicability is not a goal in qualitative research and that, similar to industrial studies, qualitative studies often face challenges in sharing research data. For guidelines on how to report qualitative research to ensure the assessment of the reliability and credibility of research results, see this curated Q&A page  .  
 Upon submission to the research track, authors are asked  
 to make their artifact available to the program committee (via upload of supplemental material or a link to an anonymous repository) – and provide instructions on how to access this data in the paper; or 
  to include in the submission an explanation as to why this is not possible or desirable; and 
  to indicate in the submission why they do not intend to make their data or study materials publicly available upon acceptance, if that is the case. The default understanding is that the data and/or other artifacts will be publicly available upon acceptance of a paper. 
   Withdrawing a Paper   
 Authors can withdraw their paper at any moment until the final decision has been made, through the paper submission system. Resubmitting the paper to another venue before the final decision has been made without withdrawing from ICSE 2025 first is considered a violation of the concurrent submission policy, and will lead to automatic rejection from ICSE 2025 as well as any other venue adhering to this policy. Such violations may also be reported to appropriate organizations e.g. ACM and IEEE.  
  Conference Attendance Expectation   
 If a submission is accepted, at least one author of the paper is required to register for ICSE 2025 and present the paper. We are assuming that the conference will be in-person, and if it is virtual or hybrid, virtual presentations may be possible. These matters will be discussed with the authors closer to the date of the conference.  

 Accepted papers: First and Second Cycle  
   
 The following papers have been accepted so far in the ICSE 2025 Research Track first cycle. The papers are will be published by the IEEE and appear in the IEEE and ACM digital libraries, subject to an author submitting their camera-ready and copyright forms, and registering to attend the conference. (Authors are required to present the papers at the conference, otherwise they will be withdrawn).  
 Many additional papers will appear later from the first-cycle papers where major revisions were requested (if the revisions are approved), and from the second cycle.  

 From first cycle   
 Zhiyong Wu, Jie Liang, Jingzhou Fu, Mingzhe Wang, Yu Jiang, "Puppy: Finding Performance Degradation Bugs in DBMSs via Limited-Optimization Plan Construction"  
 Abstract:  Database management systems (DBMSs) consistently strive for enhanced performance. For a given query, the optimizer of a DBMS aims to construct an optimal execution plan that incorporates multiple optimization operations. However, the resulting plan may sometimes perform worse than even if no optimizations were applied. This occurs because the interactions between optimizations are complex and some situations might be overlooked in the implementation. We refer to these issues as Performance Degradation Bugs (PDBs). PDBs can result in significant consequences from decreased system efficiency and prolonged query processing times to potential disruptions in critical business operations. In this paper, we present Puppy, an automated approach for detecting PDBs in DBMSs using limited-optimization plan construction. The key idea is to compare the performance with the plan generated with all optimization operations enabled, against the plan generated with only a subset of optimization operations in the same DBMS. If the response time of the plan with the limited optimization set is shorter than that of the fully optimized plan, it indicates a potential PDB. Specifically, Puppy first generates queries that incorporate multiple optimization sequences, guided by optimization operation sequence coverage. Secondly, Puppy analyzes the query plan and selectively disables specific optimizations to construct the limited optimization plan. We evaluate Puppy on five widely-used DBMSs, namely MySQL, Percona, TiDB, PolarDB, and PostgreSQL against the state-of-the-art DBMS performance testing tools APOLLO and AMOEBA. Puppy detected 26 and 25 more performance anomalies, covered 151,201 and 173,798 more branches than APOLLO and AMOEBA in 48 hours, respectively. More importantly, Puppy reports 62 PDBs, with 54 anomalies confirmed as previously unknown bugs.  
  
  Chun Li, Hui Li, Zhong Li, Minxue Pan, Xuandong Li, "Enhancing Fault Localization in Industrial Software Systems via Contrastive Learning"  
 Abstract:  Engineers utilize logs as a primary resource for fault localization in large-scale software and system testing, a process that is notoriously time-consuming, costly, and labor-intensive. Despite considerable progress in automated fault localization approaches, their applicability remains limited in such settings, due to the unavailability of fine-grained features in logs essential for most existing fault localization methods. In response, we introduce FALCON, a novel log-based fault localization framework. FALCON organizes complex semantic log information into graphical representations and employs contrastive learning to capture the differences between passed and failed logs, enabling the identification of crucial fault-related features. It also incorporates a specifically designed transitive analysis-based adaptive graph augmentation to minimize the influence of fault-unrelated log information on contrastive learning. Through extensive evaluations against 34 spectrum-based and 4 learning-based fault localization methods, FALCON demonstrates superior performance by outperforming all the methods in comparison. In addition, FALCON demonstrated its practical value by successfully identifying 71 out of 90 faults with a file-level Top-1 accuracy rate during a one-month deployment within a global company’s testing system.  
  
  Wenqian Deng, Zhiyong Wu, Jie Liang, Jingzhou Fu, Mingzhe Wang, Yu Jiang, "Coni: Detecting Database Connector Bugs via State-Aware Test Case Generation"  
 Abstract:  Database connectors are widely used in many applications to facilitate flexible and convenient database interactions. Potential vulnerabilities in database connectors can lead to various abnormal behaviors within applications, such as returning incorrect results or experiencing unexpected connection interruption. However, existing fuzzing works cannot be directly applied to testing database connectors as they mainly focus on SQL generation and use a small subset of database connector interfaces to execute SQLs. Due to a lack of domain knowledge, automated test case generation also struggles to generate complex test cases that explore connectors' deep logic. The main challenge in testing database connectors is to generate semantically correct test cases that can trigger a wide range of connector state transitions. To address that, we propose CONI, a framework designed for detecting logic bugs of database connectors with state-aware test case generation. First, we define the database connector state model by analyzing the corresponding specification. Building upon this model, CONI generates interface call sequences within test cases to encompass more connector state transitions. After that, CONI generates suitable parameter values based on the parameter information and contextual information collected during runtime. Then the test cases are executed on a target and a reference database connector. Inconsistent results indicate potential logic bugs. We evaluate CONI on 5 widely-used JDBC database connectors, namely MySQL Connector/J, MariaDB Connector/J, AWS JDBC Driver for MySQL, PGJDBC NG, and PostgreSQL JDBC Driver. In total, CONI successfully detected 44 previously unknown bugs, of which 34 have been confirmed.  
  
  Gong Chen, Xiaoyuan Xie, Daniel Tang, Qi Xin, Wenjie Liu, "HedgeCode: A Multi-Task Hedging Contrastive Learning Framework for Code Search"  
 Abstract:  Code search is a vital activity in software engineering, focused on identifying and retrieving the correct code snippets based on a query provided in natural language. Approaches based on deep learning techniques have been increasingly adopted for this task, enhancing the initial representations of both code and its natural language descriptions. Despite this progress, there remains an unexplored gap in ensuring consistency between the representation spaces of code and its descriptions. Furthermore, existing methods have not fully leveraged the potential relevance between code snippets and their descriptions, presenting a challenge in discerning fine-grained semantic distinctions among similar code snippets. To address these challenges, we introduce a multi-task hedging contrastive Learning framework for Code Search, referred to as HedgeCode. HedgeCode is structured around two primary training phases. The first phase, known as the representation alignment stage, proposes a hedging contrastive learning approach. This method aims to detect subtle differences between code and natural language text, thereby aligning their representation spaces by identifying relevance. The subsequent phase involves multi-task joint learning, wherein the previously trained model serves as the encoder. This stage optimizes the model through a combination of supervised and self-supervised contrastive learning tasks. Our framework’s effectiveness is demonstrated through its performance on the CodeSearchNet benchmark, showcasing HedgeCode’s ability to address the mentioned limitations in code search tasks.  
  
  Jiashuo Zhang, Yiming Shen, Jiachi Chen, Jianzhong Su, Yanlin Wang, Ting Chen, Jianbo Gao, Zhong Chen, "Demystifying and Detecting Cryptographic Defects in Ethereum Smart Contracts"  
 Abstract:  To enhance smart contracts with cryptographic capabilities, Ethereum has officially provided a set of system-level cryptographic APIs, such as ecrecover. These APIs have been utilized in over 10% of Ethereum transactions, motivating developers to implement various on-chain cryptographic tasks, such as digital signatures. However, since developers may not always be cryptographic experts, their ad-hoc and potentially defective implementations could compromise the theoretical guarantees of cryptography, leading to real-world security issues. To mitigate this threat, we conducted the first study aimed at demystifying and detecting cryptographic defects in smart contracts. Through the analysis of 2,406 real-world security reports, we defined nine types of cryptographic defects in smart contracts with detailed descriptions and practical detection patterns. Based on this categorization, we proposed CrySol, a fuzzing-based tool to automate the detection of cryptographic defects in smart contracts. It combines transaction replaying and dynamic taint analysis to extract fine-grained crypto-related semantics and employs crypto-specific strategies to guide the test case generation process. urthermore, we collected a large-scale dataset containing 25,745 real-world crypto-related smart contracts and evaluated CrySol's effectiveness on it. The result demonstrated that CrySol achieves an overall precision of 95.4% and a recall of 91.2%. Notably, CrySol revealed that 5,847 (22.7%) out of 25,745 contracts contain at least one cryptographic defect, highlighting the prevalence of these defects.  
  
  Chijin Zhou, Quan Zhang, Bingzhou Qian, Yu Jiang, "Janus: Detecting Rendering Bugs in Web Browsers via Visual Delta Consistency"  
 Abstract:  Rendering lies at the heart of our modern web experience. However, the correctness of browser rendering is not always guaranteed, often leading to rendering bugs. Traditional differential testing, while successful in various domains, falls short when applied to rendering bug detection because an HTML file is likely yield different rendered outcomes across different browsers. This paper introduces Visual Delta Consistency, a test oracle to detect rendering bugs in web browsers, aiming to make rendered pages across browsers comparable. Our key insight is that any modifications made to an HTML file should uniformly influence rendering outcomes across browsers. Specifically, when presented with two HTML files that differ only by minor modifications, the reaction of all browsers should be consistent, i.e., either all browsers render them identically or all render them differently. Based on this insight, We implemented it as a practical fuzzer named Janus. It constructs pairs of slightly modified HTML files and observes the change statuses of the corresponding rendered pages across browsers for bug detection. We evaluated it on three widely-used browsers, i.e., Chrome, Safari, and Firefox. In total, Janus detected 34 rendering bugs, out of which 26 confirmed with 8 fixed by the developers.  
  
  Seongmin Lee, Shreyas Minocha, Marcel Böhme, "Accounting for Missing Events in Statistical Information Leakage Analysis"  
 Abstract:  The leakage of secret information via a public channel is a critical privacy flaw in software systems. The more information is leaked per observation, the less time an attacker needs to learn the secret. Due to the size and complexity of the modern software, and because some empirical facts are not available to a formal analysis of the source code, researchers started investigating statistical methods using program executions as samples. However, current statistical methods require a high sample coverage. Ideally, the sample is large enough to contain every possible combination of secret $\times$ observable value to accurately reflect the joint distribution of $\langle$secret, observable$\rangle$. Otherwise, the information leakage is severely underestimated, which is problematic as it can lead to overconfidence in the security of an otherwise vulnerable program. In this paper, we introduce an improved estimator for information leakage and propose to use methods from applied statistics to improve our estimate of the joint distribution when sample coverage is low. The key idea is to reconstruct the joint distribution by casting our problem as a multinomial estimation problem in the absence of samples for all classes. We suggest two approaches and demonstrate the effectiveness of each approach on a set of benchmark subjects. We also propose novel refinement heuristics, which help to adjust the joint distribution and gain better estimation accuracy. Compared to existing statistical methods for information leakage estimation, our method can safely overestimate the mutual information and provide a more accurate estimate from a limited number of program executions.  
  
  Claudio Spiess, David Gros, Kunal Suresh Pai, Michael Pradel, Md Rafiqul Islam Rabin, Amin Alipour, Susmit Jha, Premkumar Devanbu, Toufique Ahmed, "Calibration and Correctness of Language Models for Code"  
 Abstract:  Machine learning models are widely used but can also often be wrong. Users would benefit from a reliable indication of whether a given output from a given model should be trusted, so a rational decision can be made whether to use the output or not. For example, outputs can be associated with a \emph{confidence measure}; if this confidence measure is strongly associated with \emph{likelihood of correctness}, then the model is said to be \emph{well-calibrated}. In this case, the confidence measure can serve as a basis for rational graduated decision making on how much review and care is needed. \emph{Calibration} has so far been studied in mostly non-generative (\emph{e.g.}, classification) settings, especially in Software Engineering. However, generated code can quite often be wrong: Given generated code developers must decide whether to directly use, use after varying intensity of careful review, or discard model-generated code; thus calibration is vital in generative settings. In this paper we make several contributions. We develop a framework for evaluating the calibration of code-generating models. We consider several tasks, correctness criteria, datasets, and approaches, and find that by and large generative code models are \textbf{\textit{\underline{not}}} well-calibrated out of the box. We then show how calibration can be improved, using standard methods such as Platt scaling. Since Platt scaling relies on the prior availability of correctness data, we evaluate the applicability and generalizability of Platt scaling in Software Engineering, discuss settings where it has good potential for practical use, and settings where it does not. Our contributions will lead to better-calibrated decision-making in the current use of code generated by language models, and offers a framework for future research to further improve calibration methods for generative models in Software Engineering.  
  
  Pantazis Deligiannis, Akash Lal, Nikita Mehrotra, Rishi Poddar, Aseem Rastogi, "RustAssistant: Using LLMs to Fix Compilation Errors in Rust Code"  
 Abstract:  The Rust programming language, with its safety guarantees, has established itself as a viable choice for low-level systems programming language over the traditional, unsafe alternatives like C/C++. These guarantees come from a strong ownership-based type system, as well as primitive support for features like closures, pattern matching, etc., that make the code more concise and amenable to reasoning. These unique Rust features also pose a steep learning curve for programmers. This paper presents a tool called RustAssistant that leverages the emergent capabilities of Large Language Models (LLMs) to automatically suggest fixes for Rust compilation errors. RustAssistant uses a careful combination of prompting techniques as well as iteration between an LLM and the Rust compiler to deliver high accuracy of fixes. RustAssistant is able to achieve an impressive peak accuracy of roughly 74% on real-world compilation errors in popular open-source Rust repositories. We also contribute a dataset of Rust compilation errors to enable further research.  
  
  Guoping rong, Yongda Yu, Song Liu, Xin Tan, Tianyi Zhang, Haifeng Shen, Jidong Hu, "Code Comment Inconsistency Detection and Rectification Using a Large Language Model"  
 Abstract:  Comments are widely used in source code. If a comment is consistent with the code snippet it intends to annotate, it would aid code comprehension. Otherwise, Code Comment Inconsistency (CCI) is not only detrimental to the understanding of code, but more importantly, it would negatively impact the development, testing, and maintenance of software. To tackle this issue, existing research has been primarily focused on detecting inconsistencies with varied performance. It is evident that detection alone does not solve the problem; it merely paves the way for solving it. A complete solution requires detecting inconsistencies and, more importantly, rectifying them by amending comments. However, this type of work is scarce. In this paper, we contribute C4RLLaMA, a fine-tuned large language model based on the open-source CodeLLaMA. It not only has the ability to rectify inconsistencies by correcting relevant comment content but also outperforms state-of-the-art approaches in detecting inconsistencies. Experiments with various datasets confirm that C4RLLaMA consistently surpasses both Post Hoc and Just-in-time CCI detection approaches. More importantly, C4RLLaMA outperforms substantially the only known CCI rectification approach in terms of multiple performance metrics. To further examine C4RLLaMA's efficacy in rectifying inconsistencies, we conducted a manual evaluation, and the results showed that the percentage of correct comment updates by C4RLLaMA was 65.0\% and 55.9\% in Just-in-time and Post Hoc, respectively, implying C4RLLaMA's real potential in practical use.  
  
  Kai Huang, Jian Zhang, Xiangxin Meng, Yang Liu, "Template-Guided Program Repair in the Era of Large Language Models"  
 Abstract:  Recent advancements in automated program repair (APR) have been significantly driven by the application of Large Language Models (LLMs). In particular, the integration of LLMs with traditional template-based repair methods has demonstrated effective outcomes. Despite this, the synergy between the strengths of traditional methods and LLMs remains underexploited. This oversight originates from the indiscriminate use of templates and their insufficient coverage. Also, using small-scale LLMs within the zero-shot learning context proves to be suboptimal. To alleviate the limitations, we propose NTR (Neural Template Repair), a two-stage repair framework including template selection and patch generation, both of which are under the fine-tuning paradigm. In the template selection phase, we formulate it as a multiclass classification problem and fine-tune million-level LLMs for better selecting possible templates. During the patch generation phase, we leverage the chosen templates as probable directions (e.g., `Mutate Conditional Expression') to guide the fine-tuning process of LLMs at the billion-level scale for precise patch creation. Moreover, we incorporate a unique template to signify the absence of a suitable template and employ a probability-based prioritization of templates, thereby optimizing patch generation. This framework not only effectively addresses template mismatch issues, but also enables the billion-level LLMs to explore the patch space more efficiently, despite the GPU memory constraints. We evaluate NTR with different foundational models on Defects4J V1.2 and HumanEval-Java, the framework consistently demonstrates significant effectiveness. When utilizing StarCoder as the foundational model for patch generation, NTR fixes 128 and 129 bugs in Defects4J and HumanEval, outperforming the best baseline APR tool by 14 and 59 bugs. With the larger CodeLlama model, the fixed bugs rise to 139 and 136, respectively, exceeding the baseline by 25 and 66 bugs. Notably, the performance stems not only from the foundational models but also benefits greatly from our NTR framework. Specifically, NTR's implementation with StarCoder and CodeLlama leads to 22 and 23 additional fixes, which is beyond what the models achieve on their own. This emphasizes the success of our new perspective on utilizing templates to unlock the bug-fixing potential of LLMs.  
  
  Syed Fatiul Huq, Mahan Tafreshipour, Kate Kalcevich, Sam Malek, "Automated Generation of Accessibility Test Reports from Recorded User Transcripts"  
 Abstract:  Testing for accessibility is a significant step when developing software, as it ensures that all users, including those with disabilities, can effectively engage with web and mobile applications. While automated tools exist to detect accessibility issues in software, none are as comprehensive and effective as the process of user testing, where testers with various disabilities evaluate the application for accessibility and usability issues. However, user testing is not popular with software developers as it requires conducting lengthy interviews with users and later parsing through large recordings to derive the issues to fix. In this paper, we explore how large language models (LLMs) like GPT 4.0, which have shown promising results in context comprehension and semantic text generation, can mitigate this issue and streamline the user testing process. Our solution, called Reca11, takes in informal transcripts of test recordings and extracts the accessibility and usability issues mentioned by the tester. Our systematic prompt engineering determines the optimal configuration of input, instruction, context and demonstrations for best results. We evaluate Reca11's effectiveness on 36 user testing sessions across three applications. Based on the findings, we investigate the strengths and weaknesses of using LLMs in this space.  
  
  Xinyu Lian, Yinfang Chen, Runxiang Cheng, Jie Huang, Parth Thakkar, Minjia Zhang, Tianyin Xu, "Large Language Models as Configuration Validators"  
 Abstract:  Misconfigurations are major causes of software failures. Existing practices rely on developer-written rules or test cases to validate configurations, which are expensive. Machine learning (ML) for configuration validation is considered a promising direction, but has been facing challenges such as the need of large-scale field data and system-specific models. Recent advances in Large Language Models (LLMs) show promise in addressing some of the long-lasting limitations of ML-based configuration validation. We present a first analysis on the feasibility and effectiveness of using LLMs for configuration validation. We empirically evaluate LLMs as configuration validators by developing a generic LLM-based configuration validation framework, named Ciri. Ciri employs effective prompt engineering with few-shot learning based on both valid configuration and misconfiguration data. Ciri checks outputs from LLMs when producing results, addressing hallucination and nondeterminism of LLMs. We evaluate Ciri’s validation effectiveness on eight popular LLMs using configuration data of ten widely deployed open-source systems. Our analysis (1) confirms the potential of using LLMs for configuration validation, (2) explores design space of LLMbased validators like Ciri, and (3) reveals open challenges such as ineffectiveness in detecting certain types of misconfigurations and biases towards popular configuration parameters.  
  
  Wen Zhang, Botang Xiao, Qingchen Kong, Le Guan, Wenwen Wang, "BSan: A Powerful Identifier-Based Hardware-Independent Memory Error Detector for COTS Binaries"  
 Abstract:  This paper presents BSan, a practical software-only memory error detector for binary code. Different from state-of-the-art binary-level detectors, which rely on either the shadow memory-based approach or the hardware-specific feature and thus suffer from several fundamental limitations, BSan adopts an identifier-based approach, enabling it to detect deep memory errors missed by existing detectors. Also, BSan does not depend on any specific hardware features. To reduce the high performance overhead caused by identifier propagation, BSan creates a novel hybrid approach, static analysis+dynamic instrumentation, to improve the performance without inheriting the poor reliability of static binary rewriting, distinguishing it from existing detectors that simply refer to static binary rewriting for better performance. The comprehensive evaluation demonstrates that BSan can detect more memory errors than state-of-the-art binary-level detectors. Meanwhile, the performance and memory overheads of BSan are comparable to those of existing detectors.  
  
  Ying Fu, Zhiyong Wu, Yuanliang Zhang, Jie Liang, Jingzhou Fu, Yu Jiang, Shanshan Li, Xiangke Liao, "Thanos: DBMS Bug Detection via Storage Engine Rotation Based Differential Testing"  
 Abstract:  Differential testing is a prevalent strategy for establishing test oracles in automated DBMS testing. However, meticulously selecting equivalent DBMSs with diverse implementations and compatible input syntax requires huge manual efforts. In this paper, we propose Thanos, a framework that finds DBMS bugs via storage engine rotation based differential testing. Our key insight is that a DBMS with different storage engines must provide consistent basic storage functionalities. Therefore, it’s feasible to construct equivalent DBMSs based on storage engine rotation, ensuring that the same SQL test cases to these equivalent DBMSs yield consistent results. The framework involves four main steps: 1) select the appropriate storage engines; 2) extract equivalence information among the selected storage engines; 3) synthesize feature-orient test cases that ensure the DBMS equivalence; and 4) send test cases to the DBMSs with selected storage engines and compare the results. We evaluate Thanos on three widely used and extensively tested DBMSs, namely MySQL, MariaDB, and Percona against state-of-the-art fuzzers SQLancer, SQLsmith, and Squirrel. Thanos outperforms them on branch coverage by 24%–116%, and also finds many bugs missed by other fuzzers. More importantly, the vendors have confirmed 32 previously unknown bugs found by Thanos, with 29 verified as Critical.  
  
  Courtney Miller, Mahmoud Jahanshahi, Audris Mockus, Bogdan Vasilescu, Christian Kästner, "Understanding the Response to Open-Source Dependency Abandonment in the npm Ecosystem"  
 Abstract:  Many developers relying on open-source digital infrastructure expect continuous maintenance, but even the most critical packages can become unmaintained. Despite this, there is little understanding of the prevalence of abandonment of widely-used packages, of subsequent exposure, and of reactions to abandonment in practice, or the factors that influence them. We perform a large-scale quantitative analysis of all widely-used npm packages and find that abandonment is common among them, that abandonment exposes many projects which often do not respond, that responses correlate with other dependency management practices, and that removal is significantly faster when a projects end-of-life status is explicitly stated. We end with recommendations to both researchers and practitioners who are facing dependency abandonment or are sunsetting projects, such as opportunities for low-effort transparency mechanisms to help exposed projects make better, more informed decisions.  
  
  Yangruibo Ding, Yanjun Fu, Omniyyah Ibrahim, Chawin Sitawarin, Xinyun Chen, Basel Alomair, David Wagner, Baishakhi Ray, Yizheng Chen, "Vulnerability Detection with Code Language Models: How Far Are We?"  
 Abstract:  In the context of the rising interest in code language models (code LMs) and vulnerability detection, we study the effectiveness of code LMs for detecting vulnerabilities. Our analysis reveals significant shortcomings in existing vulnerability datasets, including poor data quality, low label accuracy, and high duplication rates, leading to unreliable model performance in realistic vulnerability detection scenarios. Additionally, the evaluation methods used with these datasets are not representative of real-world vulnerability detection. To address these challenges, we introduce PrimeVul, a new dataset for training and evaluating code LMs for vulnerability detection. PrimeVul incorporates a novel set of data labeling techniques that achieve comparable label accuracy to human-verified benchmarks while significantly expanding the dataset. It also implements a rigorous data de-duplication and chronological data splitting strategy to mitigate data leakage issues, alongside introducing more realistic evaluation metrics and settings. This comprehensive approach aims to provide a more accurate assessment of code LMs' performance in real-world conditions. Evaluating code LMs on PrimeVul reveals that existing benchmarks significantly overestimate the performance of these models. For instance, a state-of-the-art 7B model scored 68.26\% F1 on BigVul but only 3.09\% F1 on PrimeVul. Attempts to improve performance through advanced training techniques and larger models like GPT-3.5 and GPT-4 were unsuccessful, with results akin to random guessing in the most stringent settings. These findings underscore the considerable gap between current capabilities and the practical requirements for deploying code LMs in security roles, highlighting the need for more innovative research in this domain.  
  
  Deepak-George Thomas, Matteo Biagiola, Nargiz Humbatova, Mohammad Wardat, Gunel Jahangirova, Hridesh Rajan, Paolo Tonella, "µPRL: a Mutation Testing Pipeline for Deep Reinforcement Learning based on Real Faults"  
 Abstract:  Reinforcement Learning (RL) is increasingly adopted to train agents that can deal with complex sequential tasks, such as driving an autonomous vehicle or controlling a complex environment. Correspondingly, novel approaches are needed to ensure that RL agents have been tested adequately before going to production. Among them, mutation testing is quite promising, especially under the assumption that the injected faults (mutations) mimic the real ones. In this paper, we first describe a taxonomy of real RL faults obtained by repository mining. Then, we present the mutation operators derived from such real faults and implemented in the tool µPRL. Finally, we discuss the experimental results, which show that µPRL is extremely effective at discriminating strong from weak test generators, hence providing useful feedback to developers about the adequacy of the test scenarios generated and executed so far.  
  
  Nadia Nahar, Haoran Zhang, Grace Lewis, Shurui Zhou, Christian Kästner, "The Product Beyond the Model -- An Empirical Study of Repositories of Open-Source ML Products"  
 Abstract:  Machine learning (ML) components are increasingly incorporated into software products for end-users, but developers face challenges in transitioning from ML prototypes to products. Academics have limited access to the source of commercial ML products, challenging research progress. In this study, first, we contribute a novel process to identify 262 open-source ML products among more than half a million ML-related projects on GitHub. Then, we qualitatively and quantitatively analyze 30 open-source ML products to answer six broad research questions about development practices and system architecture. We find that the majority of the ML products in our sample represent startup-style development reported in past interview studies. We report 21 findings, including limited involvement of data scientists in many ML products, unusually low modularity between ML and non-ML code, diverse architectural choices on incorporating models into products, and limited prevalence of industry best practices such as model testing, pipeline automation, and monitoring. Additionally, we discuss 7 implications of this study on research, development, and education, including the need for tools to assist teams without data scientists, education opportunities, and open-source-specific research for privacy-preserving telemetry.  
  
  Sanan Hasanov, Stefan Nagy, Paul Gazzillo, "A Little Goes a Long Way: Tuning Configuration Selection for Continuous Kernel Fuzzing"  
 Abstract:  The Linux kernel is actively-developed and widely-used. It supports billions of devices of all classes, from high-performance computing to the Internet-of-Things, in part because of its sophisticated configuration system, which automatically tailors the source code according to thousands of user-provided configuration options. Fuzzing has been highly successful at finding kernel bugs, being among the top bug reporters. Since the kernel receives 100s of patches per day, fuzzers run continuously, stopping regularly to rebuild the kernel with the latest changes before restarting fuzzing. But kernel fuzzers currently use predefined configuration settings that, as we show, exclude the majority of new patches from the kernel binary, nullifying the benefits of continuous fuzzing. Unfortunately, state-of-the-art configuration testing techniques are generally ill-suited to the needs of continuous fuzzing, excluding necessary options or requiring too many configuration files to be tractible. We distill down the needs of continuous testing into six properties with the most impact, systematically analyze the space of configuration selection strategies, and provide actionable recommendations. Through our analysis, we discover that continuous fuzzers can improve configuration variety without sacrificing performance. We empirically evaluate our discovery by modifying the configuration selection strategy for syzkaller, the most popular Linux kernel fuzzer, which subsequently found more than twice as many new bugs (35 vs. 13) than with the original configuration file and 12x more (24 vs. 2) when considering only unique bugs---with one security vulnerability being assigned a CVE.  
  
  Alex Sanchez-Stern, Abhishek Varghese, Zhanna Kaufman, Dylan Zhang, Talia Ringer, Yuriy Brun, "QEDCartographer: Automating Formal Verification Using Reward-Free Reinforcement Learning"  
 Abstract:  Formal verification is a promising method for producing highly reliable software, but the difficulty of manually writing verification proofs severely limits its utility in practice. Recent methods have automated some proof synthesis by guiding a search through the proof space using machine learning and a theorem prover. Unfortunately, the theorem prover provides only the crudest estimate of progress, resulting in effectively undirected search. This makes proofs hard to find, and, when they are found, longer than necessary. Reinforcement learning could help estimate progress, but sparse rewards make this method ineffective. To address this problem, we create QEDCartographer, an novel automated proof-synthesis tool that combines supervised and reinforcement learning. QEDCartographer's key insight is that incorporating the branching structure of proofs into its learning enables reward-free search, mitigating the sparse reward challenge. We evaluate QEDCartographer on the CoqGym benchmark of 68,501 theorems from 124 open-source Coq projects. QEDCartographer proves 186 more theorems than Proverbot9001, a state-of-the-art proof synthesis tool, an increase of 8%. Further, the tools are complementary, together proving 12% more theorems than Proverbot9001 alone. For theorems both can prove QEDCartographer produces 26% shorter proofs 27% faster.  
  
  Ben Limpanukorn, Jiyuan Wang, Hong Jin Kang, Eric Zitong Zhou, Miryung Kim, "Fuzzing MLIR Compilers with Custom Mutation Synthesis"  
 Abstract:  A growing trend in compiler design is to enable modular extensions to intermediate representations (IRs). Multi- Level Intermediate Representation (MLIR) is a new effort to enable faster compiler development by providing an extensible framework for downstream developers to define custom IRs with MLIR dialects. Sets of MLIR dialects define new IRs that are tailored for specific domains. The diversity and rapid evolution of these IRs make it impractical to pre-define custom test generator logic for every available dialect. We design a new approach called SYNTHFUZZ that automatically infers and applies custom mutations from existing tests. The key essence of SYNTHFUZZ is that inferred custom mutations are parameterized and context-dependent such that they can be concretized differently depending on the target context. By doing this, we obviate the need to manually write custom mutations for newly introduced MLIR dialects. Further, SYNTHFUZZ increases the chance of finding effective edit locations and reduces the chance of inserting invalid edit content by performing k-ancestor- prefix and l-sibling-postfix matching. We compare SYNTHFUZZ to three baselines: Grammarinator—a grammar-based fuzzer without custom mutators, MLIRSmith—a custom test generator for MLIR, and NeuRI—a custom test generator with support for parameterized generation. We conduct this comprehensive comparison on 4 different MLIR projects where each project defines a new set of MLIR dialects that would take months of effort to manually write custom input generation and mutation logic. Our evaluation shows that SYNTHFUZZ on average improves input diversity by 1.51×, which increases branch coverage by 1.16×. Further, we show that our context dependent custom mutation increases the proportion of valid tests by up to 1.11×, indicating that SYNTHFUZZ correctly concretizes its parameterized mutations with respect to the target context. Parameterization of the mutations reduces the fraction of tests violating general MLIR constraints by 0.57×, increasing the time spent fuzzing dialect-specific code.  
  
  Forough Mehralian, Ziyao He, Sam Malek, "Automated Accessibility Analysis of Dynamic Content Changes on Mobile Apps"  
 Abstract:  With mobile apps playing an increasingly vital role in our daily lives, the importance of ensuring their accessibility for users with disabilities is also growing. Despite this, app developers often overlook the accessibility challenges encountered by users of assistive technologies, such as screen readers. Screen reader users typically navigate content sequentially, focusing on one element at a time, unaware of changes occurring elsewhere in the app. While dynamic changes to content displayed on an app’s user interface may be apparent to sighted users, they pose significant accessibility obstacles for screen reader users. Existing accessibility testing tools are unable to identify challenges faced by blind users resulting from dynamic content changes. In this work, we first conduct a formative user study on dynamic changes in Android apps and their accessibility barriers for screen reader users. We then present TIMESTUMP, an automated framework that leverages our findings in the formative study to detect accessibility issues regarding dynamic changes. Finally, we empirically evaluate TIMESTUMP on real-world apps to assess its effectiveness and efficiency in detecting such accessibility issues.  
  
  Yanlin Wang, Yanli Wang, Daya Guo, Jiachi Chen, Ruikai Zhang, Yuchi Ma, Zibin Zheng, "RLCoder: Reinforcement Learning for Repository-Level Code Completion"  
 Abstract:  Repository-level code completion aims to generate code for unfinished code snippets within the context of a specified repository. Existing approaches mainly rely on retrieval-augmented generation strategies due to limitations in input sequence length. However, traditional lexical-based retrieval methods like BM25 struggle to capture code semantics, while model-based retrieval methods face challenges due to the lack of labeled data for training. Therefore, we propose RLCoder, a novel reinforcement learning framework, which can enable the retriever to learn to retrieve useful content for code completion without the need for labeled data. Specifically, we iteratively evaluate the usefulness of retrieved content based on the perplexity of the target code when provided with the retrieved content as additional context, and provide feedback to update the retriever parameters. This iterative process enables the retriever to learn from its successes and failures, gradually improving its ability to retrieve relevant and high-quality content. Considering that not all situations require information beyond code files and not all retrieved context is helpful for generation, we also introduce a stop signal mechanism, allowing the retriever to decide when to retrieve and which candidates to retain autonomously. Extensive experimental results demonstrate that RLCoder consistently outperforms state-of-the-art methods on CrossCodeEval and RepoEval, achieving 12.2\% EM improvement over previous methods. Moreover, experiments show that our framework can generalize across different programming languages and further improve previous methods like RepoCoder.  
  
  Nausheen Mohammed, Akash lal, Aseem Rastogi, Subhajit Roy, Rahul Sharma, "LLM Assistance for Memory Safety"  
 Abstract:  Memory safety violations in low-level code, written in languages like C, continues to remain one of the major sources of software vulnerabilities. One method of removing such violations by construction is to port C code to a safe C dialect. Such dialects rely on programmer-supplied annotations to guarantee safety with minimal runtime overhead. This porting, however, is a manual process that imposes significant burden on the programmer and, hence, there has been limited adoption of this technique. The task of porting not only requires inferring annotations, but may also need refactoring/rewriting of the code to make it amenable to such annotations. In this paper, we use Large Language Models (LLMs) towards addressing both these concerns. We show how to harness LLM capabilities to do complex code reasoning as well as rewriting of large codebases. We also present a novel framework for whole-program transformations that leverages lightweight static analysis to break the transformation into smaller steps that can be carried out effectively by an LLM. We implement our ideas in a tool called MSA that targets the CheckedC dialect. We evaluate MSA on several micro-benchmarks, as well as real-world code ranging up to 20K lines of code. We showcase superior performance compared to a vanilla LLM baseline, as well as demonstrate improvement over a state-of-the-art symbolic (non-LLM) technique.  
  
  Chenkai Guo, Qianlu Wang, Naipeng Dong, Lingling Fan, Tianhong Wang, Weijie Zhang, EnBao Chen, Zheli Liu, Lu Yu, "EP-Detector: Automatic Detection of Error-prone Operation Anomalies in Android Applications"  
 Abstract:  Android applications are pervasively adopted and heavily relied on in our daily life, leading to the growing demand for enhanced user experiences, such as ease for operation and robustness. Nevertheless, developers continue to prioritize traditional functionality and performance, overlooking the pivotal role of user experience in real-world scenarios. For example, poorly designed page elements can lead to user confusion, resulting in unexpected outcomes, termed as the error-prone operation anomalies (EPAs). In this work, we undertake the first effort to uncover the underlying essence of the EPA problem. To achieve this objective, we investigated the root causes of EPAs from three dimensions, i.e., subject, object and environment. These causes were identified by multi-stage attribute capturing and precise similarity computation. In this process, the causes are categorized into fine-grained classes, namely confusing behaviours, unsuitable layout, and resource overload. Building upon these insights, we propose a dynamic GUI-based testing tool EP-Detector to facilitate detecting the EPAs in real-world apps. The EP-Detector is equipped with widget-exploration based target navigation and automatic test oracle, enabling it to detect error-prone page elements and simulate events with both comprehensiveness and precision. To systematically study the prevalence and severity of real-world EPAs, we conducted experiments on 53 popular Android apps with EP-Detector. The confirmed results not only validate the high precision and completeness of EP-Detector but also highlight that EPAs are prevalent in current apps, with at least one EPA existing in every two page widgets on average, and 28.3% of them may lead to security and functionality issues or risks. The EP-Detector is available at https://github.com/WordDealer/EP-Detector.  
  
  Shuzheng Gao, Cuiyun Gao, Wenchao Gu, Michael Lyu, "Search-Based LLMs for Code Optimization"  
 Abstract:  The code written by developers usually suffers from efficiency problems and contain various performance bugs. These inefficiencies necessitate the research of automated refactoring methods for code optimization. Early research in code optimization employs rule-based methods and focuses on specific inefficiency issues, which are labor-intensive and suffer from the low coverage issue. Recent work regards the task as a sequence generation problem, and resorts to deep learning (DL) techniques such as large language models (LLMs). These methods typically prompt LLMs to directly generate optimized code. Although these methods show state-of-the-art performance, such one-step generation paradigm is hard to achieve an optimal solution. First, complex optimization methods such as combinatorial ones are hard to be captured by LLMs. Second, the one-step generation paradigm poses challenge in precisely infusing the knowledge required for effective code optimization within LLMs, resulting in under-optimized code. To address these problems, we propose to model this task from the search perspective, and propose a search-based LLMs framework named SBLLM that enables iterative refinement and discovery of improved optimization methods. SBLLM synergistically integrate LLMs with evolutionary search and consists of three key components: 1) an execution-based representative sample selection part that evaluates the fitness of each existing optimized code and prioritizes promising ones to pilot the generation of improved code; 2) an adaptive optimization pattern retrieval part that infuses targeted optimization patterns into the model for guiding LLMs towards rectifying and progressively enhancing their optimization methods; and 3) a genetic operator-inspired chain-of-thought prompting part that aids LLMs in combining different optimization methods and generating improved optimization methods. Our evaluation of SBLLM on a dataset of Python and C++ code demonstrates its effectiveness in improving code efficiency. Specifically, the results indicate that SBLLM can improve program execution efficiency by up to 109.59% and consistently outperform all baseline methods by 8.72% ∼ 28.06% and 1.15% ∼ 9.56% with different LLMs in terms of top-5 speedup rate on Python and C++, respectively.  
  
  Qunhong Zeng, Yuxia Zhang, Zhiqing Qiu, Hui Liu, "A First Look at Conventional Commits Classification"  
 Abstract:  Modern distributed software development relies on commits to control system versions. Commit classification plays a vital role in both industry and academia. The widely-used commit classification framework was proposed in 1976 by Swanson and includes three base classes: perfective, corrective, and adaptive. With the increasing complexity of software development, the industry has shifted towards a more fine-grained commit category, i.e., adopting Conventional Commits Specification (CCS) for delicacy management. The new commit framework requires developers to classify commits into ten distinct categories, such as ``feat'', ``fix'', and ``docs''. However, existing studies mainly focus on the three-category classification, leaving the definition and application of the fine-grained commit categories as knowledge gaps. This paper reports a preliminary study on this mechanism from its application status and problems. We also explore ways to address these identified problems. We find that a growing number of projects on GitHub are adopting CCS. By analyzing 194 issues from GitHub and 100 questions from Stack Overflow about the CCS application, we qualitatively categorized 52 challenges developers encountered. The most common one is CCS-type confusion. To address these challenges, we propose a clear definition of CCS types based on existing variants. Further, we designed an approach to automatically classify commits into CCS types, and the evaluation results demonstrate a promising performance. Our work facilitates a deeper comprehension of the present fine-grained commit categorization and holds the potential to alleviate application challenges significantly.  
  
  Chong Wang, Jian Zhang, Yiling Lou, Mingwei Liu, Weisong Sun, Yang Liu, Xin Peng, "TIGER: A Generating-Then-Ranking Framework for Practical Python Type Inference"  
 Abstract:  Python’s dynamic typing system offers flexibility and expressiveness but can lead to type-related errors, prompting the need for automated type inference despite efforts like Python Enhancement Proposals (PEPs) to enhance type hinting. While existing learning-based approaches show promising inference accuracy, they struggle with practical challenges in comprehensively handling various types, including complex generics and (unseen) user/library-defined types. To address these challenges, we introduce TIGER, employing a two-stage generating-then-ranking (GTR) framework. By fine-tuning pre-trained code models, TIGER trains a generation model with a generative span masking objective and a similarity model with a contrastive training objective. This enables TIGER to execute the GTR inference, generating diverse candidates and then ranking them alongside user/library-defined types. Evaluation on the ManyTypes4Py dataset demonstrates TIGER’s effectiveness across different type categories, particularly excelling in (unseen) user-defined types (with improvements of 11.2% and 20.1% in Top-5 Exact Match). The evaluation results also confirm the robustness and efficiency of TIGER, highlighting the contributions of the employed two stages.  
  
  Qingchao Shen, Yongqiang Tian, Haoyang Ma, Junjie Chen, Lili Huang, Ruifeng Fu, Shing-Chi Cheung, Zan Wang, "A Tale of Two DL Cities: When Library Tests Meet Compiler"  
 Abstract:  Deep Learning (DL) compilers typically load a DL model and optimize it with intermediate representation. Existing DL compiler testing techniques mainly focus on model optimization stages, but rarely explore bug detection at the model loading stage. Effectively testing the model loading stage requires covering diverse usages of each DL operator from various DL libraries, which shares a common objective with DL library testing, indicating that the embedded knowledge in DL library tests could potentially be beneficial for testing the model loading stage of DL compilers. Thus, we conducted the first empirical study to investigate the effectiveness and efficiency of migrating the knowledge embedded in DL library tests to test the model loading stage. To support the conduct of this study, we develop a technique, called OPERA, consisting of test migration (regarding effectiveness investigation) and test prioritization (regarding efficiency investigation). We considered three sources of tests in DL libraries for migration and used eight frontends from three DL compilers (e.g., TVM, TensorRT, and OpenVINO) for evaluation. The migrated tests with the aid of OPERA detected 170 previously unknown bugs in total, 90 of which have been confirmed/fixed by developers demonstrating the effectiveness of such the migration-based idea. The test prioritization strategy in OPERA improves testing efficiency with migrated tests by 11.9%~47.4% on average compared to general test prioritization strategies. Finally, we obtained 7 major findings and provided a set of guidelines for future work from this study.  
  
  Rodrigo Pedro, Miguel E. Coimbra, Daniel Castro, Paulo Carreira, Nuno Santos, "Prompt-to-SQL Injections in LLM-Integrated Web Applications: Risks and Defenses"  
 Abstract:  Large Language Models (LLMs) have found widespread applications in various domains, including web applications with chatbot interfaces. Aided by an LLM-integration middleware such as LangChain, user prompts are translated into SQL queries used by the LLM to provide meaningful responses to users. However, unsanitized user prompts can lead to SQL injection attacks, potentially compromising the security of the database. In this paper, we present a comprehensive examination of prompt-to-SQL (P2SQL) injections targeting web applications based on frameworks such as LangChain and LlamaIndex. We characterize P2SQL injections, exploring their variants and impact on application security through multiple concrete examples. We evaluate seven state-of-the-art LLMs, demonstrating the risks of P2SQL attacks across language models. By employing both manual and automated methods, we discovered P2SQL vulnerabilities in five real-world applications. Our findings indicate that LLM-integrated applications are highly susceptible to P2SQL injection attacks, warranting the adoption of robust defenses. To counter these attacks, we propose four effective defense techniques that can be integrated as extensions to the LangChain framework.  
  
  Junkai Chen, Zhiyuan Pan, Xing Hu, Zhenhao Li, Ge Li, Xin Xia, "Reasoning Runtime Behavior of a Program with LLM: How Far Are We?"  
 Abstract:  Large language models for code (i.e., code LLMs) have shown strong code understanding and generation capabilities. To evaluate the capabilities of code LLMs in various aspects, many benchmarks have been proposed (e.g., HumanEval and ClassEval). Code reasoning is one of the most essential abilities of code LLMs, but existing benchmarks for code reasoning are not sufficient. Typically, they focus on predicting the input and output of a program, ignoring the evaluation of the intermediate behavior during program execution, as well as the logical consistency (e.g., the model should not give the correct output if the prediction of execution path is wrong) when performing the reasoning. To address these problems, in this paper, we propose a framework, namely REval, for evaluating code reasoning abilities and consistency of code LLMs with program execution. We utilize existing code benchmarks and adapt them to new benchmarks within our framework. A large-scale empirical study is conducted and most LLMs show unsatisfactory performance on both Runtime Behavior Reasoning (i.e., an average accuracy of 44.4\%) and Incremental Consistency Evaluation (i.e., an average IC score of 10.3). Evaluation results of current code LLMs reflect the urgent need for the community to strengthen the code reasoning capability of code LLMs.  
  
  Wei Ma, Daoyuan Wu, Yuqiang Sun, Tianwen Wang, Shangqing Liu, Jian Zhang, Yue Xue, Yang Liu, "Combining Fine-Tuning and LLM-based Agents for Intuitive Smart Contract Auditing with Justifications"  
 Abstract:  Smart contracts are decentralized applications built atop blockchains like Ethereum. Recent research has shown that large language models (LLMs) have potential in auditing smart contracts, but the state-of-the-art indicates that even GPT-4 can achieve only 30% precision (when both decision and justification are correct). This is likely because off-the-shelf LLMs were primarily pre-trained on a general text/code corpus and not fine- tuned on the specific domain of Solidity smart contract auditing. In this paper, we propose iAudit, a general framework that combines fine-tuning and LLM-based agents for intuitive smart contract auditing with justifications. Specifically, iAudit is inspired by the observation that expert human auditors first perceive what could be wrong and then perform a detailed analysis of the code to identify the cause. As such, iAudit employs a two-stage fine-tuning approach: it first tunes a Detector model to make decisions and then tunes a Reasoner model to generate causes of vulnerabilities. However, fine-tuning alone faces challenges in accurately identifying the optimal cause of a vulnerability. Therefore, we introduce two LLM-based agents, the Ranker and Critic, to iteratively select and debate the most suitable cause of vulnerability based on the output of the fine-tuned Reasoner model. To evaluate iAudit, we collected a balanced dataset with 1,734 positive and 1,810 negative samples to fine-tune iAudit. We then compared it with traditional fine-tuned models (CodeBERT, GraphCodeBERT, CodeT5, and UnixCoder) as well as prompt learning-based LLMs (GPT4, GPT-3.5, and CodeLlama-13b/34b). On a dataset of 263 real smart contract vulnerabilities, iAudit achieves an F1 score of 91.21% and an accuracy of 91.11%. The causes generated by iAudit achieved a consistency of about 38% compared to the ground truth causes.  
  
  Shuo Yang, Xingwei Lin, Jiachi Chen, Qingyuan Zhong, Lei Xiao, Renke Huang, Yanlin Wang, Zibin Zheng, "Hyperion: Unveiling DApp Inconsistencies using LLM and Dataflow-Guided Symbolic Execution"  
 Abstract:  The rapid advancement of blockchain platforms has significantly accelerated the growth of decentralized applications (DApps). Similar to traditional applications, DApps integrate front-end descriptions that showcase their features to attract users, and back-end smart contracts for executing their business logic. However, inconsistencies between the features promoted in front-end descriptions and those actually implemented in the contract can confuse users and undermine DApps's trustworthiness. In this paper, we first conducted an empirical study to identify seven types of inconsistencies, each exemplified by a real-world DApp. Furthermore, we introduce Hyperion, an approach designed to automatically identify inconsistencies between front-end descriptions and back-end code implementation in DApps. This method leverages a fine-tuned large language model LLaMA2 to analyze DApp descriptions and employs dataflow-guided symbolic execution for contract bytecode analysis. Finally, Hyperion reports the inconsistency based on predefined detection patterns. The experiment on our ground truth dataset consisting of 54 DApps shows that Hyperion reaches 84.06\% overall recall and 92.06\% overall precision in reporting DApp inconsistencies. We also implement Hyperion to analyze 835 real-world DApps. The experimental results show that Hyperion discovers 459 real-world DApps containing at least one inconsistency.  
  
  Zhiqing Zhong, Shilin He, Haoxuan Wang, Boxi Yu, Haowen Yang, Pinjia He, "An Empirical Study on Package-Level Deprecation in Python Ecosystem"  
 Abstract:  Open-source software (OSS) plays a crucial role in modern software development. Utilizing OSS code can greatly accelerate software development, reduce redundancy, and enhance reliability. Python, a widely adopted programming language, is particularly renowned for its extensive and diverse third-party package ecosystem. However, a significant number of OSS packages within the Python ecosystem are in poor maintenance, leading to potential risks in terms of functionality and security. Consequently, it is essential to establish a deprecation mechanism that assists package developers and users in effectively managing these packages. To facilitate the establishment of the package-level deprecation mechanism, this paper presents a mixed-method empirical study, including data analysis and surveys. We investigate the current practices of announcing, receiving, and handling package-level deprecation in the Python ecosystem. We also assess the benefits of having deprecation announcements for inactively maintained packages. Furthermore, we investigate the challenges faced by package developers and users and their expectations for future deprecation practices. Our findings reveal valuable insights. For instance 75.4\% of inactive package developers have no intention of releasing deprecation declarations for various reasons, while 89.5\% of users express a desire to be notified about the deprecation, highlighting a gap between developers and users; In many cases, no alternative solutions are available when deprecation occurs, emphasizing the need to explore practical approaches that enable seamless package handover and require less maintenance effort. We anticipate that our work will enhance the understanding of existing package-level deprecation patterns within the Python OSS realm and facilitate the development of deprecation practices for the Python community in the future.  
  
  Lizhi Liao, Simon Eismann, Heng Li, Cor-Paul Bezemer, Diego Elias Costa, André van Hoorn, Weiyi Shang, "Early Detection of Performance Regressions by Bridging Local Performance Data and Architectural Models"  
 Abstract:  During software development, developers often make numerous modifications to the software to address existing issues or implement new features. However, certain changes may inadvertently have a detrimental impact on the overall system performance. To ensure that the performance of new software releases does not degrade (i.e., absence of performance regressions), existing practices rely on system-level performance testing, such as load testing, or component-level performance testing, such as microbenchmarking, to detect performance regressions. However, performance testing for the entire system is often expensive and time-consuming, posing challenges to adapting to the rapid release cycles common in modern DevOps practices. In addition, system-level performance testing cannot be conducted until the system is fully built and deployed. On the other hand, component-level testing focuses on isolated components, neglecting overall system performance and the impact of system workloads. In this paper, we propose a novel approach to early detection of performance regressions by bridging the local performance data generated by component-level testing and the system-level architectural models. Our approach uses local performance data to identify deviations at the component level, and then propagate these deviations to the architectural model. We then use the architectural model to predict regressions in the performance of the overall system. In an evaluation of our approach on two representative open-source benchmark systems, we show that it can effectively detect end-to-end system performance regressions from local performance deviations with different intensities and under various system workloads. More importantly, our approach can detect regressions as early as in the development phase, in contrast to existing approaches that require the system to be fully built and deployed. Our approach is lightweight and can complement traditional system performance testing when testing resources are scarce.  
  
  Amirhossein Deljouyi, Roham Koohestani, Maliheh Izadi, Andy Zaidman, "Leveraging Large Language Models for Enhancing the Understandability of Generated Unit Tests"  
 Abstract:  Automated unit test generators, particularly search-based software testing tools like EvoSuite, are capable of generating tests with high coverage. Although these generators alleviate the burden of writing unit tests, they often pose challenges for software engineers in terms of understanding the generated tests. To address this, we introduce UTGen, which combines search-based software testing and large language models to enhance the understandability of automatically generated test cases. We achieve this enhancement through contextualizing test data, improving identifier naming, and adding descriptive comments. Through a controlled experiment with 32 participants, we investigate how the understandability of unit tests affects a software engineer's ability to perform bug-fixing tasks. We selected bug-fixing to simulate a real-world scenario that emphasizes the importance of understandable test cases. We observe that participants working on assignments with test cases fix up to 33% more bugs and use up to 20\% less time when compared to baseline test cases. From the post-test questionnaire, we gathered that participants found that enhanced test names, test data, and variable names improved their bug-fixing process.  
  
  Sebastian Uchitel, Francisco Cirelli, Dalal Alrajeh, "Unavoidable Boundary Conditions: A Control Perspective on Goal Conflicts"  
 Abstract:  Boundary Conditions (BCs) express situations under which requirements specifications conflict. They are used within a broader conflict management process to produce less idealized specifications. Several approaches have been proposed to identify BCs automatically. Some introduce a prioritization criteria to reduce the number of BCs presented to an engineer. However, identifying the few, relevant boundary conditions remains an open challenge. In this paper, we argue that one of the problems of the state of the art is with the definition of BC itself -- it is too weak. We propose a stronger definition for the few, relevant BCs, which we refer to as Unavoidable Boundary Conditions (UBCs), which utilizes the notion of realizability in reactive synthesis. We show experimentally that UBCs non-trivially reduce the number of conditions produced by existing BC identification techniques. We also relate UBCs to existing concepts in reactive synthesis used to provide feedback for unrealizable specifications (including counter-strategies and unrealizable cores). We then show that UBCs provide a targeted form of feedback for repairing unrealizable specifications.  
  
  Brian Hyeongseok Kim, Jingbo Wang, Chao Wang, "FairQuant: Certifying and Quantifying Fairness of Deep Neural Networks"  
 Abstract:  We propose a method for formally certifying and quantifying individual fairness of a deep neural network (DNN). Individual fairness guarantees that any two individuals who are identical except for some protected input attribute (e.g., gender or race) receive the same treatment. While there are existing techniques that provide such a guarantee, they suffer from lack of scalability or accuracy as the size and input dimension of the DNN increase. Our method overcomes this limitation by applying abstraction to a symbolic interval based analysis of the DNN followed by iterative refinement guided by the fairness property. Furthermore, our method lifts the interval based analysis from the conventional qualitative certification to quantitative certification, by computing the percentage of individuals whose classification outputs are provably fair, instead of merely deciding if the DNN is fair. We have implemented our method and evaluated it on deep neural networks trained on five popular fairness research datasets. The experimental results show that our method is not only more accurate than state-of-the-art techniques but also several orders-of-magnitude faster.  
  
  Mingyuan Wu, Jiahong Xiang, Kunqiu Chen, Peng DI, Shin Hwei Tan, Heming Cui, Yuqun Zhang, "Tumbling Down the Rabbit Hole: How do Assisting Exploration Strategies Facilitate Grey-box Fuzzing?"  
 Abstract:  Many assisting exploration strategies have been proposed to assist grey-box fuzzers in exploring program states guarded by tight and complex branch conditions such as equality constraints. Although they have shown promising results in their original papers, their evaluations seldom follow equivalent protocols, e.g., they are rarely evaluated on identical benchmarks. Moreover, there is a lack of sufficient investigations on the specifics of the program states explored by these strategies which can obfuscate the future application and development of such strategies. Consequently, there is a pressing need for a comprehensive study of assisting exploration strategies on their effectiveness, versatility, and limitations to enlighten their future development. To this end, we perform the first comprehensive study about the assisting exploration strategies for grey-box fuzzers. Specifically, we first collect nine recent fuzzers representing the mainstream assisting exploration strategies as our studied subjects and 21 real-world projects to form our benchmark suite. After evaluating the subjects on the benchmark suite, we then surprisingly find that the dictionary strategy is the most promising since it not only achieves similar or even slightly better performance over the other studied assisting exploration strategies in terms of exploring program states but also is more practical to be enhanced. Accordingly, we propose CDFUZZ, which generates a customized dictionary for each seed upon the baseline fuzzer AFL to improve over the original dictionary strategy. The evaluation results demonstrate that CDFUZZ increases the edge coverage by 16.1% on average for all benchmark projects over the best performer in our study (i.e., AFL++ with the dictionary strategy). CDFUZZ also successfully exposed 37 previously unknown bugs, with nine confirmed and seven fixed by the corresponding developers.  
  
  Saikat Chakraborty, Gabriel Ebner, Siddharth Bhat, Sarah Fakhoury, Sakina Fatima, Shuvendu Lahiri, Nikhil Swamy, "Towards Neural Synthesis for SMT-assisted Proof-Oriented Programming"  
 Abstract:  Proof-oriented programs mix computational content with proofs of program correctness. However, the human effort involved in programming and proving is still substantial, despite the use of Satisfiability Modulo Theories (SMT) solvers to automate proofs in languages such as F*. Seeking to spur research on using AI to automate the construction of proof-oriented programs, we curate a dataset of 600K lines of open-source F* programs and proofs, including software used in production systems ranging from Windows and Linux, to Python and Firefox. Our dataset includes around 32K top-level F* definitions, each representing a type-directed program and proof synthesis problem---producing a definition given a formal specification expressed as an F* type. We provide a program-fragment checker that queries F* to check the correctness of candidate solutions. We believe this is the largest corpus of SMT-assisted program proofs coupled with a reproducible program-fragment checker. Grounded in this dataset, we investigate the use of AI to synthesize programs and their proofs in F*, with promising results. Our main finding in that the performance of fine-tuned smaller language models (such as Phi-2 or StarCoder) compare favorably with large language models (such as GPT-4), at a much lower computational cost. We also identify various type-based retrieval augmentation techniques and find that they boost performance significantly. With detailed error analysis and case studies, we identify potential strengths and weaknesses of models and techniques and suggest directions for future improvements.  
  
  Kunpeng Zhang, Shuai Wang, Jitao Han, Xiaogang Zhu, Xian Li, Shaohua Wang, Sheng Wen, "Your Fix Is My Exploit: Enabling Comprehensive DL Library API Fuzzing with Large Language Models"  
 Abstract:  Deep learning (DL) libraries are widely used to form the basis of various AI applications in computer vision, natural language processing, and software engineering domains. Despite their popularity, DL libraries are known to have vulnerabilities, such as buffer overflows, use-after-free, and integer overflows, that can be exploited to compromise the security or effectiveness of the underlying libraries. While traditional fuzzing techniques have been used to find bugs in software, they are not well-suited for DL libraries. In general, the complexity of DL libraries and the diversity of their APIs make it challenging to test them thoroughly. To date, mainstream DL libraries like TensorFlow and PyTorch have featured over 1,000 APIs, and the number of APIs is still growing. Fuzzing all these APIs is a daunting task, especially when considering the complexity of the input data and the diversity of the API usage patterns. Recent advances in large language models (LLMs) have illustrated the high potential of LLMs in understanding and synthesizing human-like code. Despite their high potential, we find that emerging LLM-based fuzzers are less optimal for DL library API fuzzing, given their lack of in-depth knowledge on API input edge cases and inefficiency in generating test inputs. In this paper, we propose DFUZZ, a LLM-driven DL library fuzzing approach. We have two key insights: (1) With high reasoning ability, LLMs can replace human experts to reason edge cases (likely error-triggering inputs) from checks in an API's code, and transfer the extracted knowledge to test other (new or rarely-tested) APIs. (2) With high generation ability, LLMs can synthesize initial test programs with high accuracy that automates API testing. DFUZZ provides LLMs with a novel ''white-box view'' of DL library APIs, and therefore, can leverage LLMs' reasoning and generation abilities to achieve comprehensive fuzzing. Our experimental results on popular DL libraries demonstrate that DFUZZ is able to cover more APIs than SOTA (LLM-based) fuzzers on TensorFlow and PyTorch, respectively. Moreover, DFUZZ successfully detected 37 bugs, with 17 already confirmed as previously unknown bugs.  
  
  Yubo Mai, Zhipeng Gao, Haoye Wang, Tingting Bi, Xing Hu, Xin Xia, jianling Sun, "Towards Better Answers: Automated Stack Overflow Post Updating"  
 Abstract:  Utilizing code snippets on Stack Overflow (SO) is a common practice among developers for problem-solving. Although SO code snippets serve as valuable resources, it is important to acknowledge their imperfections, reusing problematic code snippets can lead to the introduction of suboptimal or buggy code into software projects. \textit{SO comments} often point out weaknesses of a post and provide valuable insights to improve the quality of answers, while SO comments are usually missed and/or ignored, leaving these problematic code snippets untouched. In this work, we first investigate the task of automatic SO posts updating based on their associated comments. We introduce a novel framework, named \textbf{Soup} (\textbf{\underline{S}}tack \textbf{\underline{O}}verflow \textbf{\underline{U}}pdator for \textbf{\underline{P}}ost) for this task. \textbf{Soup} addresses two key tasks: Valid Comment-Edit Prediction (VCP) and Automatic Post Updating (APU). We fine-tuned a large language model, CodeLlama, using low-rank adaptation techniques to complete the VCP task, and constructed a dataset containing 78k valid comment-edit pairs for the APU task. Subsequently, we tested the performance of multiple large language models on the APU task. Extensive experimental results show the promising performance of our model over a set of benchmarks. Moreover, we also perform an in-the-wild evaluation on Stack Overflow, we submitted 50 edits generated by our approach to Stack Overflow posts and 21 of them have been verified and accepted by SO maintainers, further proving the practical value of \textbf{Soup}.  
  
  Tianchang Gao, Junjie Chen, Dong Wang, Yile Guo, Yingquan Zhao, Zan Wang, "Selecting Initial Seeds for Better JVM Fuzzing"  
 Abstract:  JVM fuzzing techniques serve as a cornerstone for guaranteeing the quality of implementations. In typical fuzzing workflows, initial seeds are crucial as they form the basis of the process. Literature in traditional program fuzzing has confirmed that effectiveness is largely impacted by redundancy among initial seeds, thereby proposing a series of seed selection methods. JVM fuzzing, compared to traditional ones, presents unique characteristics, including large-scale and intricate code, and programs with both syntactic and semantic features. However, it remains unclear whether the existing initial seed selection methods are suitable for JVM fuzzing and whether utilizing program features can enhance effectiveness. To address this, we devised a total of 10 initial seed selection methods, comprising coverage-based, prefuzz-based, and program-feature-based methods. We then conducted an empirical study on three JVM implementations to extensively evaluate the performance of the initial seed selection methods within two state-of-the-art fuzzing techniques (JavaTailor and VECT). Specifically, we examine performance from three aspects: (i) effectiveness and efficiency using widely studied initial seeds, (ii) effectiveness using the programs in the wild, and (iii) the ability to detect new bugs. Evaluation results first show that the program-feature-based method that utilizes the control flow graph not only has a significantly lower time overhead (i.e., 30s), but also outperforms other methods, achieving 142% to 269% improvement compared to the full set of initial seeds. Second, results reveal that the initial seed selection greatly improves the quality of wild programs and exhibits complementary effectiveness by detecting new behaviors. Third, results demonstrate that given the same testing period, initial seed selection improves the JVM fuzzing techniques by detecting more unknown bugs. Particularly, 16 out of the 25 detected bugs have been confirmed or fixed by developers. This work takes the first look at initial seed selection in JVM fuzzing, confirming its importance in fuzzing effectiveness and efficiency.  
  
  Weisong Sun, Yun Miao, Yuekang Li, Hongyu Zhang, Chunrong Fang, Yi Liu, Gelei Deng, Yang Liu, Zhenyu Chen, "Source Code Summarization in the Era of Large Language Models"  
 Abstract:  To support software developers in understanding and maintaining programs, various automatic (source) code summarization techniques have been proposed to generate a concise natural language summary (i.e., comment) for a given code snippet. Recently, the emergence of large language models (LLMs) has led to a great boost in the performance of code-related tasks. In this paper, we undertake a systematic and comprehensive study on code summarization in the era of LLMs, which covers multiple aspects involved in the workflow of LLM-based code summarization. Specifically, we begin by examining prevalent automated evaluation methods for assessing the quality of summaries generated by LLMs and find that the results of the GPT-4 evaluation method are most closely aligned with human evaluation. Then, we explore the effectiveness of five prompting techniques (zero-shot, few-shot, chain-of-thought, critique, and expert) in adapting LLMs to code summarization tasks. Contrary to expectations, advanced prompting techniques may not outperform simple zero-shot prompting. Next, we investigate the impact of LLMs' model settings (including top\_p and temperature parameters) on the quality of generated summaries. We find the impact of the two parameters on summary quality varies by the base LLM and programming language, but their impacts are similar. Moreover, we canvass LLMs' abilities to summarize code snippets in distinct types of programming languages. The results reveal that LLMs perform suboptimally when summarizing code written in logic programming languages compared to other language types (e.g., procedural and object-oriented programming languages). Finally, we unexpectedly find that \codellama{} with 7B parameters can outperform advanced GPT-4 in generating summaries describing code implementation details and asserting code properties. We hope that our findings can provide a comprehensive understanding of code summarization in the era of LLMs.  
  
  Yuling Shi, Hongyu Zhang, Chengcheng Wan, Xiaodong Gu, "Between Lines of Code: Unraveling the Distinct Patterns of Machine and Human Programmers"  
 Abstract:  Large language models have catalyzed an unprecedented wave in code generation. While achieving significant advances, they blur the distinctions between machine- and human-authored source code, causing integrity and authenticity issues of software artifacts. Previous methods such as DetectGPT have proven effective in discerning machine-generated texts, but they do not identify and harness the unique patterns of machine-generated code. Thus, its applicability falters when applied to code. In this paper, we carefully study the specific patterns that characterize machine and human-authored code. Through a rigorous analysis of code attributes such as lexical diversity, conciseness, and naturalness, we expose unique patterns inherent to each source. We particularly notice that the syntactic segmentation of code is a critical factor in identifying its provenance. Based on our findings, we propose a novel machine-generated code detection method called DetectCodeGPT, which improves DetectGPT by capturing the distinct stylized patterns of code. Diverging from conventional techniques that depend on external LLMs for perturbations, DetectCodeGPT perturbs the code corpus by strategically inserting spaces and newlines, ensuring both efficacy and efficiency. Experiment results show that our approach significantly outperforms state-of-the-art techniques in detecting machine-generated code.  
  
  From Second cycle   
 Yue Wang, Chao Yang, Xiaodong Zhang, Yuwanqi Deng, "JianFeng Ma, ""DPFuzzer: Discovering Safety Critical Vulnerabilities for Drone Path Planners""  
 Abstract:  State-of-the-art drone path planners enable drones to autonomously navigate around obstacles in GPS-denied, uncharted and cluttered environments. However, our investigation shows that path planners fail to maneuver drones correctly in specific scenarios, leading to incidents such as collisions. To minimize such risks, drone path planners should be tested thoroughly against diverse scenarios before deployment. Existing research for testing drones to uncover safety-critical vulnerabilities is only focused on the flight control programs and is limited in the capability to generate diverse obstacle scenarios for testing drone path planners. In this work, we propose \textit{DPFuzzer}, an automated framework for testing drone path planners. \textit{DPFuzzer} is an evolutionary algorithm (EA) based testing framework. It aims to uncover vulnerabilities in drone path planners by generating diverse critical scenarios that can trigger vulnerabilities. To better guide the critical scenario generation, we introduce \textit{Environmental Risk Factor (ERF)}, a metric we propose, to abstract potential safety threats of scenarios. We evaluate \textit{DPFuzzer} on state-of-the-art drone path planners and the experimental result shows that \textit{DPFuzzer} can effectively find diverse vulnerabilities. Additionally, we demonstrate that these vulnerabilities are exploitable in the real world on commercial drones.  
  
  " Shiyu Zhang, Haoyang Song, Qixin Wang, Henghua Shen, "Yu Pei, ""A Test Oracle for Reinforcement Learning Software based on Lyapunov Stability Control Theory""  
 Abstract:  Reinforcement Learning (RL) has gained significant attention in recent years. As RL software becomes more complex and infiltrates critical application domains, ensuring its quality and correctness becomes increasingly important. An indispensable aspect of software quality/correctness insurance is testing. However, testing RL software faces unique challenges compared to testing traditional software, due to the difficulty on defining the outputs’ correctness. This leads to the RL test oracle problem. Current approaches to testing RL software often rely on human oracles, i.e. convening human experts to judge the correctness of RL software outputs. This heavily depends on the availability and quality (including the experiences, subjective states, etc.) of the human experts, and cannot be fully automated. In this paper, we propose a novel approach to design test oracles for RL software by leveraging the Lyapunov stability control theory. By incorporating Lyapunov stability concepts to guide RL training, we hypothesize that a correctly implemented RL software shall output an agent that respects Lyapunov stability control theories. Based on this heuristics, we propose a Lyapunov stability control theory based oracle, LPEA(ϑ, θ), for testing RL software. We conduct extensive experiments over representative RL algorithms and RL software bugs to evaluate our proposed oracle. The results show that our proposed oracle can outperform the human oracle in most metrics. Particularly, LPEA(ϑ = 100%, θ = 75%) outperforms the human oracle by 53.6%, 50%, 18.4%, 34.8%, 18.4%, 127.8%, 60.5%, 38.9%, and 31.7% respectively on accuracy, precision, recall, F1 score, true positive rate, true negative rate, false positive rate, false negative rate, and ROC curve’s AUC; and LPEA(ϑ = 100%, θ = 50%) outperforms the human oracle by 48.2%, 47.4%, 10.5%, 29.1%, 10.5%, 127.8%, 60.5%, 22.2%, and 26.0% respectively on these metrics.  
  
  " Yisong Xiao, Aishan Liu, Xinwei Zhang, Tianyuan Zhang, Tianlin Li, Siyuan Liang, Xianglong Liu, Yang Liu, "Dacheng Tao, ""BDefects4NN: A Backdoor Defect Database for Controlled Localization Studies in Neural Networks""  
 Abstract:  Pre-trained large deep learning models are now serving as the dominant component for downstream middleware users and have revolutionized the learning paradigm, replacing the traditional approach of training from scratch locally. To reduce development costs, developers often integrate third-party pre-trained deep neural networks (DNNs) into their intelligent software systems. However, utilizing untrusted DNNs presents significant security risks, as these models may contain intentional backdoor defects resulting from the black-box training process. These backdoor defects can be activated by hidden triggers, allowing attackers to maliciously control the model and compromise the overall reliability of the intelligent software. To ensure the safe adoption of DNNs in critical software systems, it is crucial to establish a backdoor defect database for localization studies. This paper addresses this research gap by introducing \emph{BDefects4NN}, the first backdoor defect database, which provides labeled backdoor-defected DNNs at the neuron granularity and enables controlled localization studies of defect root causes. In \emph{BDefects4NN}, we define three defect injection rules and employ four representative backdoor attacks across four popular network architectures and three widely adopted datasets, yielding a comprehensive database of 1,654 backdoor-defected DNNs with four defect quantities and varying infected neurons. Based on \emph{BDefects4NN}, we conduct extensive experiments on evaluating six fault localization criteria and two defect repair techniques, which show limited effectiveness for backdoor defects. Additionally, we investigate backdoor-defected models in practical scenarios, specifically in lane detection for autonomous driving and large language models (LLMs), revealing potential threats and highlighting current limitations in precise defect localization. This paper aims to raise awareness of the threats brought by backdoor defects in our community and inspire future advancements in fault localization methods.  
  
  " Ian McCormack, Joshua Sunshine, Jonathan Aldrich, "A Study of Undefined Behavior Across Foreign Function Boundaries in Rust Libraries"  
 Abstract:  Developers rely on the Rust programming language's static safety guarantees to write secure and performant applications. However, Rust is frequently used to interoperate with other languages which allow design patterns that conflict with Rust's aliasing models. Miri is the only dynamic analysis tool capable of validating applications against these models, but it does not support foreign functions, indicating that there may be a critical correctness gap at the heart of the Rust ecosystem. We conducted a large-scale evaluation of multi-language Rust libraries to determine whether Miri's dynamic analyses remain useful in this context. We used Miri and an LLVM interpreter to jointly execute multi-language applications, where we found 48 instances of undefined or undesired behavior. These include three bugs from libraries that had over 10,000 daily downloads on average during our observation period, and one from a library maintained by the Rust Project. Many of the errors we found involved incompatible aliasing patterns, but Rust's latest Tree Borrows aliasing model was significantly more permissive than the earlier Stacked Borrows model. The Rust community must invest in new, production-ready tooling for multi-language applications to ensure that developers can detect these errors.  
  
  Qikang Liu, Yang He, Yanwen Cai, Byeongguk Kwak, Yuepeng Wang, "Synthesizing Document Database Queries using Collection Abstractions"  
 Abstract:  Document databases are increasingly popular in various applications, but their queries are challenging to write due to the flexible and complex data model underlying document databases. This paper presents a synthesis technique that aims to generate document database queries from input-output examples automatically. A new domain-specific language is designed to express a representative set of document database queries in an algebraic style. Furthermore, the synthesis technique leverages a novel abstraction of collections for deduction to efficiently prune the search space and quickly generate the target query. An evaluation of 110 benchmarks from various sources shows that the proposed technique can synthesize 108 benchmarks successfully. On average, the synthesizer can generate document database queries from a small number of input-output examples within tens of seconds.  
  
  Yesugen Baatartogtokh, Kaitlyn Cook, "Alicia M. Grubb, ""Exploring the Robustness of the Effect of EVO on Intention Valuation through Replication""  
 Abstract:  The development of high-quality software depends on precise and comprehensive requirements that meet the objectives of stakeholders. Goal modeling techniques have been developed to fill this gap by capturing and analyzing stakeholders' needs and allowing them to make trade-off decisions; yet, goal modeling analysis is often difficult for stakeholders to interpret. Recent work found that when subjects are given minimal training on goal modeling and access to a color visualization, called EVO, they are able to use EVO to make goal modeling decisions faster without compromising quality. In this paper, we evaluate the robustness of the empirical evidence for EVO and question the underlying color choices made by the initial designers of EVO. We conduct a pseudo-exact replication ($n = 60$) of the original EVO study, varying the experimental site and the study population. Even in our heterogeneous sample with less a priori familiarity with requirements and goal modeling, we find that individuals using EVO answered the goal-modeling questions significantly faster than those using the control, expanding the external validity of the original results. However, we find some evidence that the chosen color scheme is not intuitive and make recommendations for the goal modeling community.  
  
  " Yanick Fratantonio, Luca Invernizzi, Loua Farah, Kurt Thomas, Marina Zhang, Ange Albertini, Francois Galilee, Giancarlo Metitieri, Julien Cretin, Alex Petit-Bianco, David Tao, "Elie Bursztein, ""Magika: AI-Powered Content-Type Detection""  
 Abstract:  The task of content-type detection---which entails identifying the data encoded in an arbitrary byte sequence---is critical for operating systems, development, reverse engineering environments, and a variety of security applications. In this paper, we introduce Magika, a novel AI-powered content-type detection tool. Under the hood, Magika employs a deep learning model that can execute on a single CPU with just 1MB of memory to store the model's weights. We show that Magika achieves an average F1 score of 99% across over a hundred content types and a test set of more than 1M files, outperforming all existing content-type detection tools today. In order to foster adoption and improvements, we open source Magika under an Apache 2 license on GitHub and make our model and training pipeline publicly available. Our tool has already seen adoption by a major email provider for attachment scanning, and it has been integrated with VirusTotal to aid malware analysis.  
  
  " Xiafa Wu, "Brian Demsky, ""GenC2Rust: Towards Generating Generic Rust Code from C""  
 Abstract:  Rust provides an exciting combination of strong safety guarantees and high performance. Many new systems are being implemented in Rust. Nevertheless, there is a large body of existing C code that could greatly benefit from Rust's safety guarantees. Unfortunately, the manual effort required to rewrite C code into Rust is often prohibitively expensive. Researchers have explored tools to assist developers in translating legacy C code into Rust code. However, the mismatch between C abstractions and idiomatic Rust abstractions makes it challenging to automatically utilize Rust's language features, resulting in non-idiomatic Rust code that requires extensive manual effort to further refactor. For example, existing tools often fail to map polymorphic uses of void pointers in C to Rust's more idiomatic generic pointers. In this paper, we present a translation tool, GenC2Rust, that translates non-generic C code into generic Rust code. GenC2Rust statically analyzes the use of void pointers in the C program to compute the typing constraints and then retypes the void pointers into generic pointers. We conducted an evaluation of GenC2Rust across 42 C programs that vary in size and span multiple domains to demonstrate its scalability as well as correctness. We also present a detailed analysis of the limiting factors encountered in the translation process.  
  
  " Hongyan Gao, Yibiao Yang, Maolin Sun, Jiangchang Wu, Yuming Zhou, Baowen Xu, "ClozeMaster: Fuzzing Rust Compiler by Harnessing LLMs for Infilling Masked Real Programs"  
 Abstract:  Ensuring the reliability of the Rust compiler is of paramount importance, as the Rust language is increasingly being adopted for developing critical systems due to its emphasis on memory and thread safety. However, due to Rust’s complex syntax and strict requirements, generating valid test programs for the Rust compiler poses significant challenges. Currently, with the growing popularity of large language models (LLMs), much research in software testing has explored the use of LLMs to generate test cases. Despite this, directly using LLMs to generate Rust programs often results in a large number of invalid test cases. Existing studies have indicated that test cases triggering historical compiler bugs can assist in software testing. Our investigation into Rust compiler bug issues further supports this observation. Inspired by existing work and our empirical research, we introduce a bracket-based masking and filling strategy called clozeMask. The clozeMask strategy involves extracting test code from historical issue reports, identifying and masking code snippets with specific structures, and utilizing an LLM to fill in the masked portions for synthesizing new test programs. This approach harnesses the generative capabilities of LLMs while retaining the ability to trigger Rust compiler bugs. Ultimately, it enables comprehensive testing of the compiler’s behavior, particularly in exploring corner cases. We implemented our approach as a prototype CLOZEMASTER. CLOZEMASTER has identified 27 confirmed bugs for rustc and mrustc, of which 10 have been fixed by developers. Furthermore, our experimental results indicate that CLOZEMASTER outperforms existing generative fuzzers in terms of code coverage and effectiveness.  
  
  Xingyu Wang, MingSen Wang, Wenbo Shen, "Rui Chang, ""Understanding and Detecting Peer Dependency Resolving Loop in npm Ecosystem""  
 Abstract:  As the default package manager for Node.js, npm has become one of the largest package management systems in the world. To facilitate dependency management for developers, npm supports a special type of dependency, Peer Dependency, whose installation and usage differ from regular dependencies. However, conflicts between peer dependencies can trap the npm client into infinite loops, leading to resource exhaustion and system crashes. We name this problem PeerSpin. Although PeerSpin poses a severe risk to ecosystems, it was overlooked by previous studies, and its impacts have not been explored. To bridge this gap, this paper conducts the first in-depth study to understand and detect PeerSpin in the npm ecosystem. First, by systematically analyzing the npm dependency resolution, we identify the root cause of PeerSpin and characterize two peer dependency patterns to guide detection. Second, we propose a novel technique called Node-Replacement-Conflict based PeerSpin Detection, which leverages the state of the directory tree during dependency resolution to achieve accurate and efficient PeerSpin detection. Based on this technique, we developed a tool called PeerChecker to detect PeerSpin. Finally, we apply PeerChecker to the entire NPM ecosystem and find that 5,662 packages, totaling 72,968 versions, suffer from PeerSpin. Up until now, we confirmed 28 real PeerSpin problems by reporting them to the package maintainer. We also open source all PeerSpin analysis implementations, tools, and data sets to the public to help the community detect PeerSpin issues and enhance the reliability of the npm ecosystem.  
  
  " Jiashuo Zhang, Jiachi Chen, John Grundy, Jianbo Gao, Yanlin Wang, Ting Chen, Zhi Guan, Zhong Chen, "Automated Test Generation For Smart Contracts via On-Chain Test Case Augmentation and Migration"  
 Abstract:  Pre-deployment testing has become essential to ensure the functional correctness of smart contracts. However, since smart contracts are stateful programs integrating many different functionalities, manually writing test cases to cover all potential usages requires significant effort from developers, leading to insufficient testing and increasing risks in practice. Although several testing techniques for smart contracts have been proposed, they primarily focus on detecting common low-level vulnerabilities such as re-entrancy, rather than generating expressive and function-relevant test cases that can reduce manual testing efforts. To bridge the gap, we propose SolMigrator, an automated technique designed to generate expressive and representative test cases for smart contracts. To our knowledge, SolMigrator is the first migration-based test generation technique for smart contracts, which extracts test cases from real-world usages of on-chain contracts and migrates them to test newly developed smart contracts with similar functionalities. Given a target smart contract to be tested and an on-chain similar source smart contract, SolMigrator first transforms the on-chain usage of the source contract into off-chain executable test cases based on on-chain transaction replay and dependency analysis. It then employs fine-grained static analysis to migrate the augmented test cases from the source to the target smart contract. We built a prototype of SolMigrator and have evaluated it on real-world smart contracts within the two most popular categories, ERC20 and ERC721. Our evaluation results demonstrate that SolMigrator effectively extracts test cases from existing on-chain smart contracts and accurately migrates them across different smart contracts, achieving an average precision of 96.3% and accuracy of 93.6%. Furthermore, the results indicate that these migrated test cases effectively cover common key functionalities of the target smart contracts. This provides promising evidence that real-world usages of existing smart contracts can be transformed into effective test cases for other newly developed smart contracts.  
  
  Mengxiao Zhang, Zhenyang Xu, Yongqiang Tian, Xinru Cheng, "Chengnian Sun, ""Toward a Better Understanding of Probabilistic Delta Debugging""  
 Abstract:  Given a list L of elements and a property ψ that L exhibits, ddmin is a classic test input minimization algorithm that aims to automatically remove ψ-irrelevant elements from L. This algorithm has been widely adopted in domains such as test input minimization and software debloating. Recently, ProbDD a variant of ddmin, has been proposed and achieved stateof- the-art performance. By employing Bayesian optimization ProbDD estimates the probability of each element in L being relevant to ψ, and statistically decides which and how many elements should be deleted together each time. However, the theoretical probabilistic model of ProbDD is rather intricate, and the underlying details for the superior performance of ProbDD have not been adequately explored. In this paper, we conduct the first in-depth theoretical analysis of ProbDD, clarifying the trends in probability and subset size changes and simplifying the probability model. We complement this analysis with empirical experiments, including success rate analysis, ablation studies, and examinations of trade-offs and limitations, to further comprehend and demystify this state-of- the-art algorithm. Our success rate analysis reveals how ProbDD effectively addresses bottlenecks that slow down ddmin by skipping inefficient queries that attempt to delete complements of subsets and previously tried subsets. The ablation study illustrates that randomness in ProbDD has no significant impact on efficiency. These findings provide valuable insights for future research and applications of test input minimization algorithms. Based on the findings above, we propose CDD, a simplified version of ProbDD, reducing the complexity in both theory and implementation. CDD assists in 1 validating the correctness of our key findings, e.g., that probabilities in ProbDD essentially serve as monotonically increasing counters for each element, and 2 identifying the main factors that truly contribute to ProbDD’s superior performance. Our comprehensive evaluations across 76 benchmarks in test input minimization and software debloating demonstrate that CDD can achieve the same performance as ProbDD, despite being much simplified.  
  
  " Benjamin Steenhoek, Siva Sivaraman, Renata Saldivar Gonzalez, Yevhen Mohylevskyy, Roshanak Zilouchian Moghaddam, "Wei Le, ""Closing the Gap: A User Study on the Real-world Usefulness of AI-powered Vulnerability Detection & Repair in the IDE""  
 Abstract:  Security vulnerabilities impose significant costs on users and organizations. Detecting and addressing these vulnera bilities early is crucial to avoid exploits and reduce development costs. Recent studies have shown that deep learning models can effectively detect security vulnerabilities. Yet, little research explores how to adapt these models from benchmark tests to practical applications, and whether they can be useful in practice. This paper presents the first empirical study of a vulnerability detection and fix tool with professional software developers on real projects that they own. We implemented DEEPVULGUARD, an IDE-integrated tool based on state-of-the-art detection and fix models, and show that it has promising performance on bench marks of historic vulnerability data. DEEPVULGUARD scans code for vulnerabilities (including identifying the vulnerability type and vulnerable region of code), suggests fixes, provides natural- language explanations for alerts and fixes, leveraging chat inter faces. We recruited 17 professional software developers, observed their usage of the tool on their code, and conducted interviews to assess the tool’s usefulness, speed, trust, relevance, and workflow integration. We also gathered detailed qualitative feedback on users’ perceptions and their desired features. Study participants scanned a total of 24 projects, 6.9k files, and over 1.7 million lines of source code, and generated 170 alerts and 50 fix suggestions. We find that although state-of-the-art AI-powered detection and fix tools show promise, they are not yet practical for real-world use due to a high rate of false positives and non-applicable fixes. User feedback reveals several actionable pain points, ranging from incomplete context to lack of customization for the user’s codebase. Additionally, we explore how AI features, including confidence scores, explanations, and chat interaction, can apply to vulnerability detection and fixing. Based on these insights, we offer practical recommendations for evaluating and deploying AI detection and fix models. Our code and data are available at this link: https://figshare.com/s/77992badb1e37c09e4eb. We plan to release our tool as open-source to support further user studies for other AI based tools.  
  
  " Soneya Binta Hossain, "Matthew Dwyer, ""TOGLL: Correct and Strong Test Oracle Generation with LLMs""  
 Abstract:  Test oracles play a crucial role in software testing enabling effective bug detection. Despite initial promise, neural methods for automated test oracle generation often result in a large number of false positives and weaker test oracles. While LLMs have shown impressive effectiveness in various software engineering tasks, including code generation, test case creation and bug fixing, there remains a notable absence of large-scale studies exploring their effectiveness in test oracle generation. The question of whether LLMs can address the challenges in effective oracle generation is both compelling and requires thorough investigation. In this research, we present the first comprehensive study to investigate the capabilities of LLMs in generating correct diverse, and strong test oracles capable of effectively identifying a large number of unique bugs. To this end, we fine-tuned seven code LLMs using six distinct prompts on a large dataset consisting of 110 Java projects. Utilizing the most effective fine- tuned LLM and prompt pair, we introduce TOGLL, a novel LLM-based method for test oracle generation. To investigate the generalizability of TOGLL, we conduct studies on 25 unseen large-scale Java projects. Besides assessing the correctness, we also assess the diversity and strength of the generated oracles. We compare the results against EvoSuite and the state-of-the-art neural method, TOGA. Our findings reveal that TOGLL can produce 3.8 times more correct assertion oracles and 4.9 times more exception oracles. Regarding bug detection effectiveness, TOGLL can detect 1,023 unique mutants that EvoSuite cannot, which is ten times more than what the previous SOTA neural-based method, TOGA, can detect. Additionally, TOGLL significantly outperforms TOGA in detecting real bugs from the Defects4J dataset.  
  
  " Parsa Alian, Noor Nashid, Mobina Shahbandeh, Taha Shabani, Ali Mesbah, "Feature-Driven End-To-End Test Generation"  
 Abstract:  End-to-end (E2E) testing is essential for ensuring web application quality. However, manual test creation is time-consuming and current test generation techniques produce random tests. In this paper, we present AUTOE2E, a novel approach that leverages Large Language Models (LLMs) to automate the generation of semantically meaningful feature-driven E2E test cases for web applications. AUTOE2E intelligently infers potential features within a web application and translates them into executable test scenarios. Furthermore, we address a critical gap in the research community by introducing E2EBENCH, a new benchmark for automatically assessing the feature coverage of E2E test suites. Our evaluation on E2EBENCH demonstrates that AUTOE2E achieves an average feature coverage of 79%, outperforming the best baseline by 558%, highlighting its effectiveness in generating high-quality, comprehensive test cases.  
  
  Aaron Imani, Iftekhar Ahmed, Mohammad Moshirpour, "Context Conquers Parameters: Outperforming Proprietary LLM in Commit Message Generation"  
 Abstract:  Commit messages provide descriptions of the modifications made in a commit using natural language, making them crucial for software maintenance and evolution. Recent developments in Large Language Models (LLMs) have led to their use in generating high-quality commit messages, such as the Omniscient Message Generator (OMG). This method employs GPT-4 to produce state-of-the-art commit messages. However, the use of proprietary LLMs like GPT-4 in coding tasks raises privacy and sustainability concerns, which may hinder their industrial adoption. Considering that open-source LLMs have achieved competitive performance in developer tasks such as compiler validation, this study investigates whether they can be used to generate commit messages that are comparable with OMG. Our experiments show that an open-source LLM can generate commit messages that are comparable to those produced by OMG. In addition, through a series of contextual refinements, we propose lOcal MessagE GenerAtor (OMEGA) , a CMG approach that uses a 4-bit quantized 8B open-source LLM. OMEGA produces state-of-the-art commit messages, surpassing the performance of GPT-4 in practitioners' preference.  
  
  Yuanliang Zhang, Yifan Xie, Shanshan Li, Ke Liu, Chong Wang, Zhouyang Jia, Xiangbing Huang, Jie Song, Chaopeng Luo, Zhizheng Zheng, Rulin Xu, Yitong Liu, Si Zheng, "Xiangke Liao, ""Unseen Horizons: Unveiling the Real Capability of LLM Code Generation Beyond the Familiar""  
 Abstract:  Recently, large language models (LLMs) have shown strong potential in code generation tasks. However, there are still gaps before they can be fully applied in actual software development processes. Accurately assessing the code generation capabilities of large language models has become an important basis for evaluating and improving the models. Some existing works have constructed datasets to evaluate the capabilities of these models. However, there are three main gaps to objectively evaluate the real capability of LLMs: the exposure of target code, case timeliness, and dependency availability. The fundamental reason for these gaps is that the code in current datasets may have been exposed during the training phase of LLM, and due to the continuous training and development of LLM, their timeliness has been severely compromised. The key to solve the problem is to, as much as possible, evaluate the LLMs using code that they have not encountered before. Thus, the fundamental idea using in this paper is to draw on the concept of code obfuscation, changing code at different levels while ensuring the functionality and output. To this end, we build a code-obfuscation based benchmark OBFUSEVAL. We first collect 1,354 raw cases from five real-world projects, including function description and code. Then we use three-level strategy (symbol, structure and semantic) to obfuscate descriptions, code and context dependencies. We evaluate four LLMs on OBFUSEVAL and compared the effectiveness of different obfuscation strategy. We use official test suites of these projects to evaluate the generated code. The results show that after obfuscation, the average decrease ratio of test pass rate can up to 62.5\%.  
  
  " Baoquan Cui, rong qu, Zhen Tang, "Jian Zhang, ""Static Analysis of Remote Procedure Call in Java Programs""  
 Abstract:  The Remote Procedure Call (RPC) is commonly used for inter-process communications over network, allowing a program to invoke a procedure in another address space even another machine as if it were a local call within the same address space. Its convenience comes from encapsulating network communication. However, for the same reason, it cannot be penetrated by current static analyzers. Since the RPC programs/frameworks play a more important role in various domains, the static analysis of RPC is significant and cannot be ignored. We have observed that many of the existing RPC frameworks/programs written in Java are based on explicit protocols, which makes them possible to be modelled for static analysis. The challenges are how to identify RPC operations in different frameworks/programs and how to automatically establish relationships between clients and servers. In this paper, we propose a novel approach, RPCBridge, which uses an adapter to unify the most basic operations during the RPC process. It models the RPC with logic rules in a straightforward and precise way based on its semantics, performs points-to analysis and constructs RPC edges in the call graph, making it more complete. The evaluation on real-world large-scale Java programs based on 5 common RPC frameworks shows that our approach can effectively capture the operations of the RPC (263 matched protocols and 1,098 RPCs), and construct critical links (2,578 edges in the call graph) between clients and servers, in which 60.1% are the true caller-callee pairs after execution. Our approach is expected to bring significant benefits (+24.3% leakage paths for the taint analyzer) for previously incompletely modelled code with a very little memory and time overhead, and connect the modules in a system, so that it can be statically analyzed more holistically.  
  
  " Shihao Zhu, Yuqi Guo, Yan Cai, Bin Liang, Long Zhang, Rui Chen, "Tingting Yu, ""Reduce Dependence for Sound Concurrency Bug Prediction""  
 Abstract:  Recently, dynamic concurrency bug predictions have kept making notable progress in improving concurrency coverage while ensuring soundness. Most of them rely solely on dynamic information in traces and overlook the static semantics of the program when predicting bugs. To ensure soundness, they assume that \textbf{any (memory) read can fully affect subsequent program execution via control-flow and data-flow}. However, the assumption over-approximates constraints among (memory) writes and reads and hence limits reordering space over thread interleaving, ultimately leading to false negatives. From program semantics, only a subset of reads actually affect their subsequent executions. Therefore, by refining dependencies between reads and subsequent executions based on static program semantics one can refine the assumption and eliminate unnecessary constraints while still guaranteeing soundness. This can bring a chance to explore more thread interleaving space and uncover more concurrency bugs. However, refining dependencies can compromise soundness and bring heavy overhead. To tackle these challenges, this paper introduces the concept of Necessary Consistent Read Event (NRE) and a hybrid analysis algorithm. NRE refines dependencies between reads and their subsequent events and is used to identify necessary constraints where a read probably affects the execution of its subsequent events. Next, we design an efficient and accurate hybrid analysis algorithm to calculate NREs for each event in the trace. The hybrid analysis algorithm maps events to program SSA instructions and simulates executions based on the original trace. We focused on data race and developed NRE and the algorithm as a prototype tool ReconP on top of a recent work M2. We conducted a set of comparative experiments on MySQL with M2 and SeqCheck. The results show that ReconP can detect 46.9\% and 22.4\% more data races than M2 and SeqCheck, respectively. And the hybrid algorithm only accounts for 34\% of the total time cost.  
  
  " Huaijin Wang, Zhibo Liu, Yanbo Dai, Shuai Wang, Qiyi Tang, Sen Nie, "Shi Wu, ""Preserving Privacy in Software Composition Analysis: A Study of Technical Solutions and Enhancements""  
 Abstract:  Software composition analysis (SCA) denotes the process of identifying open-source software components in an input software application. SCA has been extensively developed and adopted by academia and industry. However, we notice that the modern SCA techniques in industry scenarios still need to be improved due to privacy concerns. Overall, SCA requires the users to upload their applications’ source code to a remote SCA server, which then deeply inspects the applications and reports the component usage to users. This process is privacy-sensitive since the applications may contain sensitive information, such as proprietary algorithms, trade secrets, and user data. Moreover applications' source code is generally deemed proprietary, and users do not want to share it with the SCA vendor. To protect customers' privacy, contemporary SCA vendors often propose to deploy a "lite" version of SCA service on the customer side. To avoid the leakage of SCA vendors' valuable assets (e.g., code model, and data), the "lite" SCA usually only performs a shallow analysis with limited accuracy. Privacy concerns have prevented the SCA technology from being used in real-world scenarios. Therefore, academia and the industry demand privacy-preserving SCA solutions. For the first time, we analyze the privacy requirements of SCA and provide a landscape depicting possible technical solutions with varying privacy gains and overheads. In particular, given that de facto SCA frameworks are primarily driven by code similarity-based techniques, we explore combining several privacy-preserving protocols to encapsulate the similarity-based SCA framework. Among all viable solutions, we find that multi-party computation (MPC) offers the strongest privacy guarantee and plausible accuracy; it, however, incurs high overhead ($184\times$). We optimize the MPC-based SCA framework by reducing the amount of crypto protocol transactions using program analysis techniques. The evaluation results show that our proposed optimizations can reduce the MPC-based SCA overhead to only 8.5% without sacrificing SCA’s privacy guarantee or accuracy.  
  
  " Jintao Huang, Kai Yang, Gaosheng Wang, Zhiqiang Shi, Zhiwen Pan, Shichao Lv, Limin Sun, "Moye: A Wallbreaker for Monolithic Firmware"  
 Abstract:  As embedded devices become increasingly popular, monolithic firmware, known for its execution efficiency and simplicity, is widely used in resource-constrained devices. Different from ordinary firmware, the monolithic firmware image is packed without the file that indicates its format, which challenges the reverse engineering of monolithic firmware. Function identification is the prerequisite of monolithic firmware's analysis. Prior works on function identification are less effectiveness when applied to monolithic firmware due to their heavy reliance on file formats. In this paper, we propose Moye, a novel method to identify functions in monolithic firmware. We leverage the important insight that the use of registers must conform to some constraints. In particular, our approach segments the firmware, locate code sections and output the instructions. We uses a masked language model to learn hiding relationships among the instructions to identify the function boundaries. We evaluate Moye using 1,318 monolithic firmware images, including 48 samples collected from widely used devices. The evaluation demonstrates that our approach significantly outperforms current works, achieving a precision greater than 98% and a recall rate greater than 97% across most datasets, showing robustness to complicated compilation options.  
  
  Haifeng Ruan, Yuntong Zhang, Abhik Roychoudhury, "SpecRover: Code Intent Extraction via LLMs"  
 Abstract:  Autonomous program improvement typically involves automatically producing bug fixes and feature additions. Such program improvement can be accomplished by a combination of large language model (LLM) and program analysis capabilities, in the form of an LLM agent. Since program repair or program improvement typically requires a specification of intended behavior - specification inference can be useful for producing high quality program patches. In this work, we examine efficient and low-cost workflows for iterative specification inference within an LLM agent. Given a GitHub issue to be resolved in a software project, our goal is to conduct iterative code search accompanied by specification inference - thereby inferring intent from both the project structure and behavior. The intent thus captured is examined by a reviewer agent with the goal of vetting the patches as well as providing a measure of confidence in the vetted patches. Our approach SpecRover is built on the open-source LLM agent AutoCodeRover. In an evaluation on the full SWE-Bench consisting of 2294 GitHub issues, it shows more than 50% improvement in efficacy over AutoCodeRover. Compared to the open-source agents available, our work shows modest cost ($0.65 per issue) in resolving an average GitHub issue in SWE-Bench lite. The production of explanation by SpecRover allows for a better "signal" to be given to the developer, on when the suggested patches can be accepted with confidence. SpecRover also seeks to demonstrate the continued importance of specification inference in automated program repair, even as program repair technologies enter the LLM era.  
  
  Zhiyuan Li, Jingzheng Wu, Xiang Ling, Tianyue Luo, Zhiqing Rui, Yanjun Wu, "The Seeds of the FUTURE Sprout from History: Fuzzing for Unveiling Vulnerabilities in Prospective Deep-Learning Libraries"  
 Abstract:  The widespread application of Large Language Models (LLMs) underscores the importance of Deep Learning (DL) technologies that rely on foundational DL libraries such as PyTorch and TensorFlow. Despite their robust features, these libraries face challenges with scalability and adaptation to rapid advancements in the LLM community. In response, tech giants like Apple and Huawei are developing their own DL libraries to enhance performance, increase scalability, and safeguard intellectual property. Ensuring the security of these libraries is crucial, with fuzzing being a vital solution. However, existing fuzzing frameworks struggle with target flexibility, effectively testing bug-prone API sequences, and leveraging the limited available information in new libraries. To address these limitations, we propose FUTURE, the first universal DL library fuzzing framework tailored for newly introduced and prospective DL libraries. FUTURE leverages historical bug information from existing libraries and fine-tunes LLMs for specialized code generation. This strategy helps identify vulnerabilities in new libraries and uses insights from these libraries to enhance security in existing ones, creating a cycle from history to future and back. To evaluate FUTURE's effectiveness, we conduct comprehensive evaluations on three newly introduced DL libraries. Results demonstrate that FUTURE significantly outperforms existing fuzzers in bug detection, success rate of bug reproduction, validity rate of code generation, and API coverage. Notably, FUTURE has detected 148 bugs across 452 targeted APIs, including 142 previously unknown bugs. Among these, 10 have been assigned CVE IDs. Additionally, FUTURE detects 7 bugs in PyTorch, demonstrating its ability to enhance security in existing libraries in reverse.  
  
  Rudrajit Choudhuri, Bianca Trinkenreich, Rahul Pandita, Eirini Kalliamvakou, Igor Steinmacher, Marco Gerosa, Christopher Sanchez, "Anita Sarma, ""What Guides Our Choices? Modeling Developers' Trust and Behavioral Intentions Towards GenAI""  
 Abstract:  Generative AI (genAI) tools, such as ChatGPT or Copilot, are advertised to improve developer productivity and are being integrated into software development. However, misaligned trust, skepticism, and usability concerns can impede the adoption of such tools. Research also indicates that AI can be exclusionary, failing to support diverse users adequately. One such aspect of diversity is cognitive diversity—variations in users’ cognitive styles—that leads to divergence in perspectives and interaction styles. When an individual’s cognitive style is unsupported, it creates barriers to technology adoption. Therefore, to understand how to effectively integrate genAI tools into software development, it is first important to model what factors affect developers’ trust and intentions to adopt genAI tools in practice? We developed a theoretical model to (1) identify factors that influence developers’ trust in genAI tools and (2) examine the relationship between developers’ trust, cognitive styles, and their intentions to use these tools. We surveyed software developers (N=238) at two major global tech organizations and employed Partial Least Squares-Structural Equation Modeling (PLS-SEM) to evaluate our model. Our findings reveal that genAI’s system/output quality, functional value, and goal maintenance significantly influence developers’ trust in these tools. Furthermore, developers’ trust and cognitive styles influence their intentions to use these tools. We offer practical suggestions for designing genAI tools for effective use and inclusive user experience.  
  
  " " Hao Zhong, ""Understanding Compiler Bugs in Real Development""  
 Abstract:  Compilers are critical in development, but compiler bugs can cause hidden and serious bugs in their compiled code. To deepen the understanding of compiler bugs, in the prior empirical studies, researchers read the bug reports and patches of compilers, and analyze their causes, locations, and patterns. Although they derive many interesting findings, their studies are limited. First, as bug reports seldom explain which projects encounter compiler bugs, it is infeasible to understand the outreaching impact. Second, before compiler bugs are fixed, programmers can bypass such bugs. The bug reports of compilers do not introduce such workarounds. Finally, the distribution of compiler bugs can be distorted, since researchers and compiler developers also file bug reports. In this paper, we propose a novel angle to analyze compiler bugs. Instead of compiler bug reports, we collect compiler bugs that are mentioned in real development. When programmers encounter compiler bugs in real development, they can leave traces in their commit messages. By searching such messages, we collected 644 unique commits whose messages explicitly mention the urls of compiler bugs. From this angle, in this paper, we conduct the first empirical study to analyze compiler bugs in the wild. We summarize our results into seven useful findings for users, compiler developers, and researchers. For example, for researchers, we find that some large workarounds of compiler bugs involve repetitive and systematic changes, which indicates a new research opportunity for code migration tools. Furthermore, we attempt to apply our findings in real development, and we obtain positive feedback.  
  
  " Rosalia Tufano, Alberto Martin-Lopez, Ahmad Tayeb, Ozren Dabic, Sonia Haiduc, Gabriele Bavota, "Deep Learning-based Code Reviews: A Paradigm Shift or a Double-Edged Sword?"  
 Abstract:  Several techniques have been proposed to (partially) automate code review. Early support consisted in recommending the most suited reviewer for a given change or in prioritizing the review tasks. With the advent of deep learning in software engineering, the level of automation has been pushed to new heights, with approaches able to provide feedback on source code in natural language as a human reviewer would do. Also, recent work documented open source projects adopting Large Language Models (LLMs) as co-reviewers. Although the research in this field is very active, little is known about the actual impact of including automatically generated code reviews in the code review process. While there are many aspects worth investigating (e.g., is knowledge transfer between developers affected?), in this work we focus on three of them: (i) review quality, i.e., the reviewer's ability to identify issues in the code; (ii) review cost, i.e., the time spent reviewing the code; and (iii) reviewer’s confidence, i.e., how confident is the reviewer about the provided feedback. We run a controlled experiment with 29 professional developers who reviewed different programs with/without the support of an automatically generated code review. During the experiment we monitored the reviewers’ activities, for over 50 hours of recorded code reviews. We show that reviewers consider valid most of the issues automatically identified by the LLM and that the availability of an automated review as a starting point strongly influences their behavior: Reviewers tend to focus on the code locations indicated by the LLM rather than searching for additional issues in other parts of the code. The reviewers who started from an automated review identified a higher number of low-severity issues while, however, not identifying more high- severity issues as compared to a completely manual process. Finally, the automated support did not result in saved time and did not increase the reviewers’ confidence.  
  
  Weiwei Xu, Kai Gao, Hao He, "Minghui Zhou, ""LiCoEval: Evaluating LLMs on License Compliance in Code Generation""  
 Abstract:  Recent advances in Large Language Models (LLMs) have revolutionized code generation, leading to widespread adoption of AI coding tools by developers. However, LLMs can generate license-protected code without providing the necessary license information, leading to potential intellectual property violations during software production. This paper addresses the critical, yet underexplored, issue of license compliance in LLM-generated code by establishing a benchmark to evaluate the ability of LLMs to provide accurate license information for their generated code. To establish this benchmark, we conduct an empirical study to identify a reasonable standard for ""striking similarity"" that excludes the possibility of independent creation, indicating a copy relationship between the LLM output and certain open-source code. Based on this standard, we propose an evaluation benchmark LiCoEval, to evaluate the license compliance capabilities of LLMs. Using LiCoEval, we evaluate 14 popular LLMs, finding that even top-performing LLMs produce a non-negligible proportion (0.88% to 2.01%) of code strikingly similar to existing open-source implementations. Notably, most LLMs fail to provide accurate license information, particularly for code under copyleft licenses. These findings underscore the urgent need to enhance LLM compliance capabilities in code generation tasks. Our study provides a foundation for future research and development to improve license compliance in AI-assisted software development, contributing to both the protection of open-source software copyrights and the mitigation of legal risks for LLM users.  
  
  " Dehai Zhao, Zhenchang Xing, Qinghua Lu, Sherry Xiwei Xu, Liming Zhu, "SeeAction: Towards Reverse Engineering How-What-Where of HCI Actions from Screencasts for UI Automation"  
 Abstract:  UI automation is a useful technique for UI testing, bug reproduction and robotic process automation. Recording the user actions with an application assists rapid development of UI automation scripts, but existing recording techniques are intrusive, rely on OS or GUI framework accessibility support or assume specific app implementations. Reversing-engineering user actions from screencasts is non-intrusive, but a key reverse-engineering step is currently missing - recognize human-understandable structured user actions ([command] [widget][location]) from action screencasts. To fill the gap, we propose a deep learning-based computer vision model which can recognize 11 commands and 11 widgets, and generate location phrases from action screencasts, through joint learning and multi-task learning. We label a large dataset with 7260 video-action pairs, which record the user interactions with Word, Zoom, Firefox, Photoshop, and Window 10 Settings. Through extensive experiments, we confirm the effectiveness and generality of our model, and demonstrate the usefulness of a screencast-to-action-script tool built upon our model for bug reproduction.  
  
  Zeyang Ma, Dong Jae Kim, Tse-Hsun (Peter) Chen, "LibreLog: Accurate and Efficient Unsupervised Log Parsing Using Open-Source Large Language Models"  
 Abstract:  Log parsing is a critical step that transforms unstructured log data into structured formats, facilitating subsequent log-based analysis. Traditional syntax-based log parsers are efficient and effective, but they often experience decreased accuracy when processing logs that deviate from the predefined rules. Recently, large language models (LLM) based log parsers have shown superior parsing accuracy. However, existing LLM-based parsers face three main challenges: 1) time-consuming and labor-intensive manual labeling for fine-tuning or in-context learning, 2) increased parsing costs due to the vast volume of log data and limited context size of LLMs, and 3) privacy risks from using commercial models like ChatGPT with sensitive log information. To overcome these limitations, this paper introduces LibreLog, an unsupervised log parsing approach that leverages open-source LLMs (i.e., Llama3-8B) to enhance privacy and reduce operational costs while achieving state-of-the-art parsing accuracy. LibreLog first groups logs with similar static text but varying dynamic variables using a fixed-depth grouping tree. It then parses logs within these groups using three components: i) similarity scoring-based retrieval augmented generation: selects diverse logs within each group based on Jaccard similarity, helping the LLM distinguish between static text and dynamic variables; ii) self-reflection: iteratively query LLMs to refine log templates to improve parsing accuracy; and iii) log template memory: stores parsed templates to reduce LLM queries for improved parsing efficiency. Our evaluation on LogHub-2.0 shows that LibreLog achieves 25% higher parsing accuracy and processes logs 2.7 times faster compared to state-of-the-art LLM-based parsers. In short, LibreLog addresses privacy and cost concerns of using commercial LLMs while achieving state-of- the-arts parsing efficiency and accuracy.  
  
  Yi Sun, Zhuo Zhang, "Xiangyu Zhang, ""FairChecker: Detecting Fund-stealing Bugs in DeFi Protocols via Fairness Validation""  
 Abstract:  Decentralized Finance (DeFi) is an emerging paradigm within the blockchain space that aims to revolutionize conventional financial systems through the application of blockchain technology. The substantial value of digital assets managed by DeFi protocols makes it a lucrative target for attacks. Despite the human resources and the application of automated tools, frequent attacks still cause significant fund losses to DeFi participants. Existing tools primarily rely on oracles similar to those used in traditional software analysis, making it challenging for them to detect functional bugs specific to the DeFi domain. Since blockchain functions as a distributed ledger system, the foundation of any DeFi protocol is the accurate maintenance of key state variables representing user funds. If these variables are not properly updated or designed to reflect the intended flow of funds, attackers can exploit these flaws to steal assets. From the study of popular DeFi protocols, we observe that, in DeFi systems, to ensure a transaction does not misappropriate someone's fund, the direction of changes (increase or decrease) of values associated with the amount of asset or debt of a user has to adhere to some fairness properties. We propose a concept called fairness bug which allows attackers to gain profit without cost. We propose an inter-procedural and inter-contract static analysis technique that utilizes symbolic execution and an SMT solver to automatically detect fairness bugs in DeFi smart contracts. We have implemented our fairness-checking approach in our tool, named FairChecker. We evaluate our tool on a benchmark of 113 real-world DeFi protocols with 34 fairness bugs. The results show that our tool can detect 32 bugs with a recall of 94.1\% and a precision of 46.4\%, demonstrating its effectiveness.  
  
  " Li Huang, Weifeng Sun, Meng Yan, "Iterative Generation of Adversarial Example for Deep Code Models"  
 Abstract:  Deep code models are vulnerable to adversarial attacks, making it possible for semantically identical inputs to trigger different responses. Current black-box attack methods typically prioritize the impact of identifiers on the model based on custom importance scores or program context and incrementally replace identifiers to generate adversarial examples. However, these methods often fail to fully leverage feedback from failed attacks to guide subsequent attacks, resulting in problems such as local optima bias and efficiency dilemmas. In this paper, we introduce ITGen, a novel black-box adversarial example generation method that iteratively utilizes feedback from failed attacks to refine the generation process. It employs a bitvector-based representation of code variants to mitigate local optima bias. By integrating these bit vectors with feedback from failed attacks, ITGen uses an enhanced Bayesian optimization framework to efficiently predict the most promising code variants, significantly reducing the search space and thus addressing the efficiency dilemma. We conducted experiments on a total of nine deep code models for both understanding and generation tasks, demonstrating ITGen's effectiveness and efficiency, as well as its ability to enhance model robustness through adversarial fine-tuning. For example, on average, ITGen improves the attack success rate by 47.98% and 69.70% over the state-of-the-art techniques (i.e., ALERT and BeamAttack), respectively.  
  
  Chenxi Zhang, Yufei Liang, Tian Tan, Chang Xu, Shuangxiang Kan, Yue Li, "Interactive Cross-Language Pointer Analysis for Resolving Native Code in Java Programs"  
 Abstract:  Java offers the Java Native Interface (JNI), which allows programs running in the Java Virtual Machine to invoke and be manipulated by native applications and libraries written in other languages, typically C. While JNI mechanism significantly enhances the Java platform's capabilities, it also presents challenges for static analysis of Java programs due to the complex behaviors introduced by native code. Therefore, effectively resolving the interactions between Java and native code is crucial for static analysis. In this paper, we introduce JNIFER, the first interactive cross-language pointer analysis for resolving native code in Java programs. JNIFER integrates both Java and C pointer analyses, equipped with advanced native call and JNI function analyses, enabling the simultaneous analysis of both Java and native code. During the analysis of cross-language interactions, the two analyzers interact with each other, constructing cross-language points-to relations and call graphs, thereby approximating the runtime behavior at the interaction sites. Our evaluation shows that JNIFER outperforms state-of-the-art approaches in terms of soundness while maintaining high precision and comparable efficiency, as evidenced by extensive experiments on OpenJDK and real-world Java applications.  
  
  Chiming Duan, Yong Yang, Tong Jia, Guiyang Liu, Jinbu Liu, Huxing Zhang, Qi Zhou, Ying Li, Gang Huang, "FAMOS: Fault diagnosis for Microservice Systems through Effective Multi-modal Data Fusion"  
 Abstract:  Accurately diagnosing the fault that causes the failure is crucial for maintaining the reliability of a microservice system after a failure occurs. Mainstream fault diagnosis approaches are data-driven and mainly rely on three modalities of runtime data: traces, logs, and metrics. Diagnosing faults with multiple modalities of data in microservice systems has been an clear trend in recent years because different types of faults and corresponding failures tend to manifest in data of various modalities. Accurately diagnosing faults by fully leveraging multiple modalities of data is confronted with two challenges: 1)how to minimize information loss when extracting features for data of each modality; 2)how to correctly capture andutilize the relationships among data of different modalities. To address these challenges, we propose FAMOS, a Fault diagnosis Approach for MicrOservice Systems through effective multi-modal data fusion. On the one hand, FAMOS employs independent feature extractors to preserve the intrinc features for each modality. On the other hand, FAMOS introduces a new Gaussian-attention mechanism to accurately correlate data of different modalities and then captures the inter-modality relationship with a cross-attention mechanism. We evaluated FAMOS on two datasets constructed by injecting comprehensive and abundant faults into an open-source microservice system and a real-world industrial microservice system. Experimental results demonstrate the FAMOS’s effectiveness in fault diagnosis, achieving significant improvements in F1 scores compared to state-of-the-art (SOTA) methods, with an increase of 20.33%.  
  
  Van-Hoang Le, yi xiao, Hongyu Zhang, "Unleashing the True Potential of Semantic-based Log Parsing with Pre-trained Language Models"  
 Abstract:  Software-intensive systems often produce console logs for troubleshooting purpose. Log parsing, which aims at parsing a log message into a specific log template, typically serves as the first step toward automated log analytics. To better comprehend semantic information of log messages, many semantic-based log parsers have been proposed. These log parsers fine-tune a small pretrained language model (PLM) such as RoBERTa on a few labelled log samples. With the increasing popularity of large language models (LLMs), some recent studies also propose to leverage LLMs such as ChatGPT through in-context learning for automated log parsing, and obtain better results than previous semantic-based log parsers with small PLMs. In this paper, we show that semantic-based log parsers with small PLMs can actually achieve better or comparable performance to state-of-the-art LLM-based log parsing models while being more efficient and cost-effective. We propose UNLEASH, a novel semantic-based log parsing approach, which incorporates three enhancement methods to boost the performance of PLMs for log parsing, including (1) an entropy-based ranking method to select the most informative log samples; (2) a contrastive learning method to enhance the fine-tuning process; and (3) an inference optimization method to improve the log parsing performance. We evaluate UNLEASH on a set of large log datasets and the experimental results show that UNLEASH is effective and efficient, when compared to state-of-the-art log parsers.  
  
  Yiteng Peng, Daoyuan Wu, Zhibo Liu, Dongwei Xiao, Zhenlan Ji, Juergen Rahmel, "Shuai Wang, ""Testing and Understanding Deviation Behaviors in FHE-hardened Machine Learning Models""  
 Abstract:  Fully homomorphic encryption (FHE) is a promising cryptographic primitive that enables secure computation over encrypted data. A primary use of FHE is to support privacy-preserving machine learning (ML) on public cloud infrastructures. Despite the rapid development of FHE-based ML (or HE-ML) in recent years, the community still lacks a systematic understanding of their robustness. In this paper, we aim to systematically test and understand the deviation behaviors of HE-ML models, where the same input causes deviant outputs between FHE-hardened models and their plaintext versions, leading to completely incorrect model predictions. To effectively uncover deviation-triggering inputs under the constraints of expensive FHE computation, we design a novel differential testing tool called HEDiff, which leverages the margin metric on the plaintext model as guidance to drive targeted testing on FHE models. For the identified deviation inputs, we further analyze them to determine whether they exhibit general noise patterns that are transferable. We evaluate HEDiff using three popular HE-ML frameworks, covering 12 different combinations of models and datasets. HEDiff successfully detected hundreds of deviation inputs across almost every tested FHE framework and model. We also quantitatively show that the identified deviation inputs are (visually) meaningful in comparison to regular inputs. Further schematic analysis reveals the root cause of these deviant inputs and allows us to generalize their noise patterns for more directed testing.  
  
  " Chuan Luo, Shuangyu Lyu, Wei Wu, Hongyu Zhang, Dianhui Chu, Chunming Hu, "Towards High-strength Combinatorial Interaction Testing for Highly Configurable Software Systems"  
 Abstract:  Highly configurable software systems are crucial in practice to satisfy the rising demand for software customization, and combinatorial interaction testing (CIT) is an important methodology for testing such systems. Constrained covering array generation (CCAG), as the core problem in CIT, is to construct a t-wise covering array (CA) of minimum size, where t represents the testing strength. Extensive studies have demonstrated that high-strength CIT (e.g., 4-wise and 5-wise CIT) has stronger fault detection capability than low-strength CIT (i.e., 2-wise and 3-wise CIT), and there exist certain critical faults that can be disclosed through high-strength CIT. Although existing CCAG algorithm has exhibited effectiveness in solving the low-strength CCAG problem, they suffer the severe high-strength challenge when solving 4-wise and 5-wise CCAG, which urgently calls for effective solutions to solving 4-wise and 5-wise CCAG problems. To alleviate the high-strength challenge, we propose a novel and effective local search algorithm dubbed HSCA. Particularly, HSCA incorporates three new and powerful techniques, i.e., multi-round CA generation mechanism, dynamic priority assigning technique, and variable grouping strategy, to improve its performance. Extensive experiments on 35 real-world and synthetic instances demonstrate that HSCA can generate significantly smaller 4-wise and 5-wise CAs than existing state-of-the-art CCAG algorithms. More encouragingly, out of all 35 instances, HSCA successfully constructs 4-wise and 5-wise CAs for 11 and 15 instances, respectively, where existing CCAG algorithms fail. Our results indicate that HSCA can effectively mitigate the high-strength challenge.  
  
  Mengying Wu, Geng Hong, Wuyuao Mai, Xinyi Wu, Lei Zhang, Yingyuan Pu, Huajun Chai, Lingyun Ying, Haixin Duan, "Min Yang, ""Exposing the Hidden Layer: Software Repositories in the Service of SEO Manipulation""  
 Abstract:  Distinct from traditional malicious packages, this paper uncovers a novel attack vector named “blackhat Search Engine Optimization through REPositories (RepSEO)”. In this approach, attackers carefully craft packages to manipulate search engine results, exploiting the credibility of software repositories to promote illicit websites. Our research presents a systematic analysis of the underground ecosystem of RepSEO, identifying key players such as account providers, advertisers, and publishers. We developed an effective detection tool, applied to a ten-year large-scale dataset of npm, Docker Hub, and NuGet software repositories. This investigation led to the startling discovery of 3,801,682 abusive packages, highlighting the widespread nature of this attack. Our study also delves into the supply chain tactics of these attacks, revealing strategies like the use of self-hosted email services for account registration, redirection methods to obscure landing pages, and rapid deployment techniques by aggressive attackers. Additionally, we explore the profit motives behind these attacks, identifying two primary types of advertisers: survey-based advertisers and malware distribution advertisers. We reported npm, NuGet, and Docker Hub about the RepSEO packages and the related supply chain vulnerabilities of Google, and received their acknowledgments. Software repositories have started removing the abusive packages as of this paper’s submission. We also open-source our code and data to facilitate future research.  
  
  " Hanmo You, Zan Wang, Bin Lin, Junjie Chen, "Navigating the Testing of Evolving Deep Learning Systems: An Exploratory Interview Study"  
 Abstract:  Deep Learning (DL) systems have been widely adopted across various industrial domains such as autonomous driving and intelligent healthcare. As with traditional software, DL systems also need to constantly evolve to meet ever-changing user requirements. However, ensuring the quality of these continuously evolving systems presents significant challenges, especially in the context of testing. Understanding how industry developers address these challenges and what extra obstacles they are facing could provide valuable insights for further safeguarding the quality of DL systems. To reach this goal, we conducted semi-structured interviews with 22 DL developers from diverse domains and backgrounds. More specifically, our study focuses on exploring the challenges developers encounter in testing evolving DL systems, the practical solutions they employ, and their expectations for extra support. Our results highlight the difficulties in testing evolving DL systems and identify the best practices for DL developers to address them. Additionally, we pinpoint potential future research directions to enhance testing effectiveness in evolving DL systems.  
  
  Chenxing Zhong, Daniel Feitosa, Paris Avgeriou, Huang Huang, Yue Li, "He Zhang, ""PairSmell: A Novel Perspective Inspecting Software Modular Structure""  
 Abstract:  Enhancing the modular structure of existing systems has attracted substantial research interest, focusing on two main methods: (1) software modularization and (2) identifying design issues (e.g., smells) as refactoring opportunities. However, re-modularization solutions often require extensive modifications to the original modules, and the design issues identified are generally too coarse to guide refactoring strategies. Combining the above two methods, this paper introduces a novel concept, \emph{PairSmell}, which exploits modularization to pinpoint design issues necessitating refactoring. We concentrate on a granular but fundamental aspect of modularity principles---\emph{modular relation (MR)}, i.e., \emph{whether a pair of entities are separated or collocated}. The main assumption is that, if the actual MR of a pair violates its `apt MR', i.e., an MR agreed on by multiple modularization tools (as raters), it can be deemed likely a flawed architectural decision that necessitates further examination. To quantify and evaluate \emph{PairSmell}, we conduct an empirical study on 20 C/C++ and Java projects, using 4 established modularization tools to identify two forms of \emph{PairSmell}: inapt separated pairs $\mathit{InSep}$ and inapt collocated pairs $\mathit{InCol}$. Our study on 260,003 instances reveals that their architectural impacts are substantial: (1) on average, 14.60\% and 20.44\% of software entities are involved in $\mathit{InSep}$ and $\mathit{InCol}$ MRs respectively; (2) $\mathit{InSep}$ pairs are associated with 190\% more co-changes than properly separated pairs, while $\mathit{InCol}$ pairs are associated with 35\% fewer co-changes than properly collocated pairs, both indicating a successful identification of modular structures detrimental to software quality; and (3) both forms of \emph{PairSmell} persist across software evolution. This evidence strongly suggests that \emph{PairSmell} can provide meaningful insights for inspecting modular structure, with the identified issues being both granular and fundamental, making the enhancement of modular design more efficient.  
  
  " Fraol Batole, David OBrien, Tien Nguyen, Robert Dyer, Hridesh Rajan, "An LLM-Based Agent-Oriented Approach for Automated Code Design Issue Localization"  
 Abstract:  Maintaining software design quality is crucial for the long-term maintainability and evolution of systems. However, design issues such as poor modularity and excessive complexity often emerge as codebases grow. Developers rely on external tools, such as program analysis techniques, to identify such issues. This work investigates an automated approach for analyzing and localizing design issues using Large Language Models (LLMs). Large language models have demonstrated significant performance on coding tasks, but directly leveraging them for design issue localization is challenging. Large codebases exceed typical LLM context windows, and program analysis tool outputs in non-textual modalities (e.g., graphs or interactive visualizations) are incompatible with LLMs’ natural language inputs. To address these challenges, we propose LOCALIZEAGENT, a novel multi-agent framework for effective design issue localization. LOCALIZEAGENT integrates specialized agents that (1) analyze code to identify potential code design issues, (2) transform program analysis outputs into abstraction-aware LLM-friendly natural language summaries, (3) generate context-aware prompts tailored to specific refactoring types, and (4) leverage LLMs to locate and rank the localized issues based on their relevance. Our evaluation using diverse real-world codebases demonstrates significant improvements over baseline approaches, with LOCALIZEAGENT achieving 138%, 166%, and 206% relative improvements in exact match accuracy for localizing information hiding, complexity, and modularity issues, respectively.  
  
  Qingkai Shi, Xiaoheng Xie, Xianjin Fu, Peng Di, Huawei Li, Ang Zhou, "Gang Fan, ""Datalog-Based Language-Agnostic Change Impact Analysis for Microservices""  
 Abstract:  The shift-left principle in the industry requires us to test a software application as early as possible. Particularly, when code changes in a microservice application are committed to the code repository we have to efficiently identify all public microservice interfaces impacted by the changes such that the impacted interfaces can be tested as soon as possible. However, developing an efficient change impact analysis is extremely challenging in microservices because of the multilingual problem: microservice applications are often implemented using varying programming languages and involve diverse frameworks and configuration files. To address this issue this paper presents Microscope, a language-agnostic change impact analysis that uniformly represents the code, configuration files, frameworks, and code changes by relational Datalog rules. Microscope then benefits from an efficient Datalog solver to identify impacted interfaces. Experiments based on the use of Microscope in a leading software company demonstrate that Microscope is both effective and fast as it successfully identifies interfaces impacted by 112 code commits, with moderate time overhead, and could reduce 97% of interfaces to test and save 73% of testing time after code changes.  
  
  " Robert Thompson, Nuno Saavedra, Pedro Carrott, Kevin Fisher, Alex Sanchez-Stern, Yuriy Brun, João F. Ferreira, Sorin Lerner, Emily First, "Rango: Adaptive Retrieval-Augmented Proving for Automated Software Verification"  
 Abstract:  Formal verification using proof assistants, such as Coq, allows for high-quality software. However, the verification process is expensive, requiring significant expertise and manual effort to write proofs. Recent work has explored automating proof synthesis using machine learning, and even more recently, large language models (LLMs), showing that retrieving relevant premises (such as lemmas and definitions) is helpful for these models. We present Rango, a fully automated proof synthesis tool for Coq that uses, not only relevant premises but also similar proofs from the current project. Rango uses retrieval augmentation at every step of the proof to automatically determine which proofs and premises to include in the context of its fine-tuned LLM. In this way, Rango adapts to the project _and_ to the evolving state of the proof. We create a new dataset, CoqStoq, of 2,205 open-source Coq projects from GitHub, which includes both training data and a curated evaluation benchmark of well-maintained projects. On this benchmark, Rango synthesizes 27.7% of the proofs, which is 10% more proofs than prior state-of-the-art tool Tactician. Our evaluation also shows that adding relevant proofs to the context in Rango leads to a 45% increase in the number of theorems proven.  
  
  Miao Miao, Austin Mordahl, Dakota Soles, Alice Beideck, "Shiyi Wei, ""An Extensive Empirical Study of Nondeterministic Behavior in Static Analysis Tools""  
 Abstract:  Recent research has studied the importance and identified causes of nondeterminism in software. Static analysis tools exhibit many risk factors for nondeterministic behavior, but no work has analyzed the occurrence of such behavior in these tools. To bridge this gap, we perform an extensive empirical study aiming to understand past and ongoing nondeterminism in 12 popular, open-source static analysis tools that target 5 types of projects. We first conduct a qualitative study to understand the extent to which nondeterministic behavior has been found and addressed within the tools under study, and find results in 7 tool repositories. After classifying the issues and commits by root cause, we find that the majority of nondeterminisms are caused by concurrency issues, incorrect analysis logic, or assumed orderings of unordered data structures, which have shared patterns. We also perform a quantitative analysis, where we use two strategies and diverse input programs and configurations to detect yet-unknown nondeterministic behaviors. We discover such behavior in 8 out of the 12 tools, including 3 which had no results from the qualitative analysis. We find that nondeterminism often appears in multiple configurations on a variety of input programs. We communicated all identified nondeterminism to the developers and received confirmation of five tools. Finally, we detail a case study of fixing FlowDroid's nondeterministic behavior.  
  
  " Xintong Zhou, Zhenyang Xu, Mengxiao Zhang, Yongqiang Tian, "Chengnian Sun, ""WDD: Weighted Delta Debugging""  
 Abstract:  Delta Debugging is a widely used family of algorithms (e.g., ddmin and ProbDD) to automatically minimize bug-triggering test inputs, thus to facilitate debugging. It takes a list of elements with each element representing a fragment of the test input, systematically partitions the list at different granularities, identifies and deletes bug-irrelevant partitions. Prior delta debugging algorithms assume there are no differences among the elements in the list, and thus treat them uniformly during partitioning. However, in practice, this assumption usually does not hold, because the size (referred to as weight) of the fragment represented by each element can vary significantly. For example, a single element representing 50% of the test input is much more likely to be bug-relevant than elements representing only 1%. This assumption inevitably impairs the efficiency or even effectiveness of these delta debugging algorithms. This paper proposes Weighted Delta Debugging (WDD), a novel concept to help prior delta debugging algorithms overcome the limitation mentioned above. The key insight of WDD is to assign each element in the list a weight according to its size, and distinguish different elements based on their weights during partitioning. We designed two new minimization algorithms Wddmin and WProbDD, by applying WDD to ddmin and ProbDD respectively. We extensively evaluated Wddmin and WProbDD in two representative applications, HDD and Perses, on 62 benchmarks across two languages. On average, with Wddmin, HDD and Perses took 51.31% and 7.47% less time to generate 9.12% and 0.96% smaller results than with ddmin, respectively. With WProbDD, HDD and Perses used 11.98% and 9.72% less time to generate 13.40% and 2.20% smaller results than with ProbDD, respectively. The results strongly demonstrate the value of WDD. We firmly believe that WDD opens up a new dimension to improve test input minimization techniques.  
  
  " Faridah Akinotcho, Lili Wei, Julia Rubin, "Mobile Application Coverage: The 30% Curse and Ways Forward"  
 Abstract:  Testing, security analysis, and other dynamic quality assurance approaches rely on mechanisms that invoke software under test, aiming to achieve high code coverage. A large number of invocation mechanisms proposed in the literature, in particular for Android mobile applications, employ GUI-driven application exploration. However, studies show that even the most advanced GUI exploration techniques can cover only around 30% of a real- world application. This paper aims to investigate “the remaining 70%”. By conducting a large-scale experiment involving two human experts, who thoroughly explored 61 benchmark and 42 popular apps from Google Play, we show that achieving a substantially larger coverage for real-world applications is impractical even if we factor out known GUI-based exploration issues, such as the inability to provide semantic inputs and the right order of events. The main reasons preventing humans from covering the entire application include application dependencies on device configurations and external resources. Thus, future investment into GUI-based exploration strategies is unlikely to lead to substantial improvements in coverage. To chart possible ways forward and explore approaches to satisfy/bypass these dependencies, we thoroughly analyze code-level properties guarding them. Our analysis shows that a large fraction of the dependencies could actually be successfully bypassed with relatively simple beyond- GUI exploration techniques. We hope our study can inspire future work in this area and also provide a realistic benchmark for evaluating this work.  
  
  Hao Song, Teng Li, Jiachi Chen, Ting Chen, Beibei Li, Zhangyan Lin, Yi Lu, Pan Li, "Xihan Zhou, ""Enhancing The Open Network: Definition and Automated Detection of Smart Contract Defects""  
 Abstract:  The Open Network (TON), designed to support Telegram's extensive user base of hundreds of millions, has garnered considerable attention since its launch in 2022. \textit{FunC} is the most popular programming language for writing smart contracts on TON. It is distinguished by a unique syntax compared to other smart contract languages. Despite growing interest, research on the practical defects of TON smart contracts is still in its early stages. In this paper, we summarize eight smart contract defects identified from TON's official blogs and audit reports, each with detailed definitions and code examples. Furthermore, we propose a static analysis framework called TONScanner to facilitate the detection of these defects. Specifically, TONScanner reuses \textit{FunC} compiler's frontend code to transform the \textit{FunC} contract code into \textit{FunC} intermediate representation (IR) in the form of a directed acyclic graph (DAG). Based on this IR, TONScanner constructs a control flow graph (CFG), then transforms it into a static single assignment (SSA) form to simplify further analysis. TONScanner also integrates Data Dependency, Call Graph, Taint Analysis, and Cell Construct, which are specifically tailored for TON blockchain's unique data structures. These components finally facilitate the identification of the eight defects. We evaluate the effectiveness of TONScanner by applying it to 1,640 smart contracts and find a total of 14,995 defects. Through random sampling and manual labeling, we find that TONScanner achieves an overall precision of 97.49%. The results reveal that current TON contracts contain numerous defects, indicating that developers are prone to making errors. TONScanner has proven its ability to accurately identify these defects, thereby aiding in their correction.  
  
  " Kevin Guan, "Owolabi Legunsen, ""Instrumentation-Driven Evolution-Aware Runtime Verification""  
 Abstract:  Runtime verification (RV) found hundreds of bugs by monitoring passing tests against formal specifications (specs). RV first instruments a program to obtain relevant events, e.g., method calls, to monitor. A hindrance to RV adoption, especially in continuous integration, is its high overhead. So, prior work proposed spec-driven evolution-aware techniques to speed up RV. They use complex analysis to re-monitor a subset of specs related to code impacted by changes. But, these techniques assume that RV overhead is dominated by monitoring time, and their designs often sacrifice safety (ability to find all new violations) for speed. We present iMOP, the first instrumentation-driven evolution-aware RV framework. iMOP leverages a recent observation that RV overhead during testing is often dominated by instrumentation, not monitoring. iMOP embodies a family of 14 techniques that aim to safely speed up RV by simply re-instrumenting only changed code. Instrumentation from the old revision is re-used for unchanged code, and all specs are re-monitored in the new revision. We implement iMOP as a Maven plugin and evaluate it on 1,627 revisions of 48 projects, using 160 specs of correct JDK API usage. iMOP is safe by design. It is up to 29.6x faster than re-running RV from scratch after each change, and 17.8x and 6.7x faster than safe and unsafe spec-driven techniques, respectively. iMOP is faster than just applying regression test selection to RV.  
  
  " Xiaopeng Li, Shangwen Wang, Shasha Li, Jun Ma, Jie Yu, Xiaodong Liu, Jing Wang, Bin Ji, "Weimin Zhang, ""Model Editing for LLMs4Code: How Far are We?""  
 Abstract:  Large Language Models for Code (LLMs4Code) have been found to exhibit outstanding performance in the software engineering domain, especially the remarkable performance in coding tasks. However, even the most advanced LLMs4Code can inevitably contain incorrect or outdated code knowledge. Due to the high cost of training LLMs4Code, it is impractical to re-train the models for fixing these problematic code knowledge. Model editing is a new technical field for effectively and efficiently correcting erroneous knowledge in LLMs, where various model editing techniques and benchmarks have been proposed recently. Despite that, a comprehensive study that thoroughly compares and analyzes the effectiveness of all state-of-the-art model editing techniques for adapting the knowledge within LLMs4Code models across various code-related tasks is notably absent. To bridge this gap, we perform the first systematic study on applying state-of-the-art model editing approaches to repair the inaccuracy of LLMs4Code. To that end, we introduce a benchmark named CLMEEval, which consists of two datasets, i.e., CoNaLa-Edit (CNLE) with 21K+ code generation samples and CodeSearchNet-Edit (CSNE) with 16K+ code summarization samples. With the help of CLMEEval, we evaluate six advanced model editing techniques on three LLMs4Code: CodeLlama (7B), CodeQwen1.5 (7B), and Stable-Code (3B). Our findings include that the external memorization-based GRACE approach achieves the best knowledge editing effectiveness and specificity (the editing does not influence untargeted knowledge), while generalization (whether the editing can generalize to other semantically-identical inputs) is a universal challenge for existing techniques. Furthermore, building on in-depth case analysis, we introduce an enhanced version of GRACE called A-GRACE, which incorporates contrastive learning to better capture the semantics of the inputs. Results demonstrate that A-GRACE notably enhances generalization while maintaining similar levels of effectiveness and specificity compared to the vanilla GRACE.  
  
  " TianChen Yu, Li Yuan, Liannan Lin, Hongkui He, "A Multiple Representation Transformer with Optimized Abstract Syntax Tree for Efficient Code Clone Detection"  
 Abstract:  Over the past decade, the application of deep learning in code clone detection has produced remarkable results. However, the current approaches have two limitations: (a) code representation approaches with low information utilization, such as vanilla Abstract Syntax Tree (AST), leading to information redundancy which results in performance degradation; (b) low efficiency of clone detection on evaluation, resulting in excessive time costs during practical use. In this paper, we propose a Multiple Representation Transformer with Optimized Abstract Syntax Tree (MRT-OAST) to introduce an efficient code representation method while achieving competitive performance. Specifically, MRT-OAST strategically prunes and enhances the AST, utilizing both pre-order and post-order traversals to represent two different representations. To speed up the evaluation process, MRT-OAST utilizes a pure Siamese network and employs cosine similarity to compare the similarity between codes. Our approach effectively reduces AST sequences to 40% and 39% of their original length in Java and C/C++ while preserving structural information. In code clone detection tasks, our model surpasses state-of-the-art approaches on OJClone and Google Code Jam. During the evaluation of BigCloneBench, our model has a 5x speed improvement compared to the state-of-the-art lightweight model and a 563x speed improvement compared to the BERT-based model, with only a 0.3% and 0.9% decrease in $F_1$-score.  
  
  Tanghaoran Zhang, Yue Yu, Xinjun Mao, Shangwen Wang, Kang Yang, Yao Lu, Zhang Zhang, "Yuxin Zhao, ""Instruct or Interact? Exploring and Eliciting LLMs’ Capability in Code Snippet Adaptation Through Prompt Engineering""  
 Abstract:  Code snippet adaptation is a fundamental activity in the software development process. Unlike code generation, code snippet adaptation is not a ``free creation'', which requires developers to tailor a given code snippet in order to fit specific requirements and the code context. Recently, large language models (LLMs) have confirmed their effectiveness in the code generation task with promising results. However, their performance on code snippet adaptation, a reuse-oriented and context-dependent code change prediction task, is still unclear. To bridge this gap, we conduct an empirical study to investigate the performance and issues of LLMs on the adaptation task. We first evaluate the adaptation performances of three popular LLMs and compare them to the code generation task. Our result indicates that their adaptation ability is weaker than generation, with a nearly 15\% decrease on pass@1 and more context-related errors. By manually inspecting 200 cases, we further investigate the causes of LLMs’ sub-optimal performance, which can be classified into three categories, \emph{i.e.,} \textit{Unclear Requirement}, \textit{Requirement Misalignment} and \textit{Context Misapplication}. Based on the above empirical research, we propose an interactive prompting approach to eliciting LLMs' ability on the adaptation task. Specifically, we enhance the prompt by enriching the context and decomposing the task, which alleviates context misapplication and improves requirement understanding. Besides, we enable LLMs' reflection by requiring them to interact with a human or a LLM counselor, compensating for unclear requirement. Our experimental result reveals that our approach greatly improve LLMs' adaptation performance. The best-performing Human-LLM interaction successfully solves 159 out of the 202 identified defects and improves the pass@1 and pass@5 by over 40\% compared to the initial instruction-based prompt. Considering human efforts, we suggest multi-agent interaction as a trade-off, which can achieve comparable performance with excellent generalization ability. We deem that our approach could provide methodological assistance for autonomous code snippet reuse and adaptation with LLMs.  
  
  " Enrique Barba Roque, Luís Cruz, Thomas Durieux, "Unveiling the Energy Vampires: A Methodology for Debugging Software Energy Consumption"  
 Abstract:  Energy consumption in software systems is becoming increasingly important, especially in large-scale deployments. However, debugging energy-related issues remains challenging due to the lack of specialized tools. This paper presents an energy debugging methodology for identifying and isolating energy consumption hotspots in software systems. We demonstrate the methodology's effectiveness through a case study of Redis, a popular in-memory database. Our analysis reveals significant energy consumption differences between Alpine and Ubuntu distributions, with Alpine consuming up to 20.2% more power in certain operations. We trace this difference to the implementation of the `memcpy` function in different C standard libraries (musl vs. glibc). By isolating and benchmarking `memcpy`, we confirm it as the primary cause of the energy discrepancy. Our findings highlight the importance of considering energy efficiency in software dependencies and demonstrate the capability to assist developers in identifying and addressing energy-related issues. This work contributes to the growing field of sustainable software engineering by providing a systematic approach to energy debugging.  
  
  Cedric Richter, Marek Chalupa, Marie-Christine Jakobs, "Heike Wehrheim, ""Cooperative Software Verification via Dynamic Program Splitting""  
 Abstract:  Cooperative software verification divides the task of software verification among several verification tools in order to increase efficiency and effectiveness. The basic approach is to let verifiers work on different parts of a program and at the end join verification results. While this idea is intuitively appealing, cooperative verification is usually hindered by the facts that program decomposition (1) is often static, disregarding strengths and weaknesses of employed verifiers, and (2) often represents the decomposed program parts in a specific proprietary format, thereby making the use of off-the-shelf verifiers in cooperative verification difficult. In this paper, we propose a novel cooperative verification scheme that we call dynamic program splitting (DPS). Splitting decomposes programs into (smaller) programs, and thus directly enables the use of off-the-shelf tools. In DPS, splitting is dynamically applied on demand: Verification starts by giving a verification task (a program plus a correctness specification) to a verifier V1. Whenever V1 finds the current task to be hard to verify, it splits the task (i.e., the program) and restarts verification on subtasks. DPS continues until (1) a violation is found, (2) all subtasks are completed or (3) some user-defined stopping criterion is met. In the latter case, the remaining uncompleted subtasks are merged into a single one and given to a next verifier V2, repeating the same procedure on the still unverified program parts. This way, the decomposition is steered by what is hard to verify for particular verifiers, leveraging their complementary strengths. We have implemented dynamic program splitting and evaluated it on benchmarks of the annual software verification competition SV-COMP. The evaluation shows that cooperative verification with DPS is able to solve verification tasks that none of the constituent verifiers can solve, without any significant overhead.  
  
  " Yiwei Li, Liangze Yin, Wei Dong, Jiaxin Liu, Yanfeng Hu, Shanshan Li, "Hetrify: Efficient Verification of Heterogeneous Programs on RISC-V"  
 Abstract:  The heterogeneous nature of contemporary software, comprising components like closed-source libraries, embedded assembly snippets, and modules written in multiple programming languages, leads to significant verification challenges. Currently, There are no mature and available methods to effectively address such problems. To bridge this gap, we propose a verification approach capable of effectively verifying heterogeneous programs. This approach is universally applicable. It theoretically supports the verification of any heterogeneous program that can be compiled into binary code, without being constrained by any specific programming language. The approach begins by compiling the entire program or its unverifiable segments into binary format. Under guarantees of semantic equivalence, these binaries are converted into verifiable C code, which can then be verified using existing C verification tools. Based on the RISC-V architecture, we developed the Hetrify tool to implement this verification approach. The tool is supported by rigorous mathematical proofs to ensure operational semantic equivalence between the converted C programs and their original counterparts. To validate our approach, we conducted verification experiments on 130 programs, including 100 assembly programs and 30 large heterogeneous programs with missing critical function source code, demonstrating the effectiveness of our approach.  
  
  Xue Jiang, Yihong Dong, Yongding Tao, Huanyu Liu, Zhi Jin, "Ge Li, ""ROCODE: Integrating Backtracking Mechanism and Program Analysis in Large Language Models for Code Generation""  
 Abstract:  Large language models (LLMs) have achieved impressive performance in code generation recently, offering programmers revolutionary assistance in software development. However, due to the auto-regressive nature of LLMs, they are susceptible to error accumulation during code generation. Once an error is produced, LLMs can merely continue to generate the subsequent code conditioned on it, given their inability to adjust previous outputs. This generation process differs from the common practice in human coding, which involves review and adjustment during the coding process according to quality and requirements. Existing LLM-based approaches that typically consider post-revising after code generation fail to resolve errors in time, leading to the challenging resolution of accumulated errors and the significant wastage of resources. Ideally, LLMs should rollback and resolve the occurred error immediately during code generation, rather than proceed on the basis of the error and wait for post-revising after generation. In this paper, we propose \ourapproachbf, which integrates the backtracking mechanism and program analysis into LLMs for code generation. Specifically, we employ program analysis to perform incremental error detection during the generation process. When an error is detected, the backtracking mechanism is triggered to priming rollback strategies and constraint regeneration, thereby avoiding the recurrence of the same error. Experiments on multiple code generation benchmarks show that \ourapproachbf can significantly reduce the errors generated by LLMs, with a compilation pass rate of over 98.9\%. The test pass rate is improved by up to 23.8\% compared to the best baseline approach. Compared to the post-revising baseline, the cost is reduced by 19.3\%. Moreover, our approach is model-agnostic and achieves consistent improvements across six LLMs.  
  
  " Christof Tinnes, Alisa Welter, Sven Apel, "Software Model Evolution with Large Language Models: Experiments on Simulated, Public, and Industrial Datasets"  
 Abstract:  Modeling structure and behavior of software systems plays a crucial role in the industrial practice of software engineering. As with other software engineering artifacts, software models are subject to evolution. Supporting modelers in evolving software models with recommendations for model completions is still an open problem, though. In this paper, we explore the potential of large language models for this task. In particular, we propose an approach, \textsc{RaMc}, leveraging large language models, model histories of software systems, and retrieval-augmented generation for model completion. Through experiments on three datasets, including an industrial application, one public open-source community dataset, and one controlled collection of simulated model repositories, we evaluate the potential of large language models for model completion. We found that large language models are indeed a promising technology for supporting software model evolution (62.30% semantically correct completions on real-world industrial data and up to 86.19% type-correct completions). Furthermroe, we found that the general inference capabilities of large language models are useful, for example, when dealing with concepts for which there are few, noisy, or no examples at all.  
  
  Ran Mo, Haopeng Song, Wei Ding, "Chaochao Wu, ""Code Cloning in Solidity Smart Contracts: Prevalence, Evolution, and Impact on Development""  
 Abstract:  In recent years, the development of Solidity smart contracts has been increasing rapidly in popularity. Code cloning is a common coding practice, and many prior studies have revealed that code clones could negatively impact software maintenance and quality. However, there is little work systematically analyzing the nature and impacts of code clones in solidity smart contracts. To bridge this gap, we investigate the prevalence evolution, and bug-proneness of code clones in solidity smart contracts, and further identify the possible reasons for these clones’ occurrences. With our evaluation of 26,294 smart contracts with 97,877 functions, we have found that code clones are highly prevalent in smart contracts. Additionally, on average, 32.01% of clones co-evolve, indicating the need for careful management to avoid consistency issues. Surprisingly, unlike in traditional software development, code clones in smart contracts are rarely involved in bug fixes. Finally, we identify three main factors that affect the occurrences of clones. We believe our study can provide valuable insights for developers to understand and manage code clones in solidity smart contracts.  
  
  " Trey Woodlief, Carl Hildebrandt, "Sebastian Elbaum, ""A Differential Testing Framework to Identify Critical AV Failures Leveraging Arbitrary Inputs""  
 Abstract:  The proliferation of autonomous vehicles (AVs) has made their failures increasingly evident. Testing efforts aimed at identifying the inputs leading to those failures are challenged by the input's long-tail distribution, whose area under the curve is dominated by rare scenarios. We hypothesize that leveraging emerging open-access datasets can accelerate the exploration of long-tail inputs. Having access to diverse inputs, however, is not sufficient to expose failures; an effective test also requires an oracle to distinguish between correct and incorrect behaviors. Current datasets lack such oracles and developing them is notoriously difficult. In response, we propose DiffTest4AV, a differential testing framework designed to address the unique challenges of testing AV systems: 1) for any given input, many outputs may be considered acceptable, 2) the long-tail contains an insurmountable number of inputs to explore, and 3) the AV's continuous execution loop requires for failures to persist in order to affect the system. DiffTest4AV integrates statistical analysis to identify meaningful behavioral variations, judges their importance in terms of the severity of these differences, and incorporates sequential analysis to detect persistent errors indicative of potential system-level failures. Our study on 5 versions of the commercially-available, road-deployed comma.ai OpenPilot system, using 3 available image datasets, demonstrates the capabilities of the framework to detect high-severity, high-confidence, long-running test failures.  
  
  " Giacomo Benedetti, Oreofe Solarin, Courtney Miller, Greg Tystahl, William Enck, Christian Kästner, Alexandros Kapravelos, Alessio Merlo, "Luca Verderame, ""An Empirical Study on Reproducible Packaging in Open-Source Ecosystems""  
 Abstract:  The integrity of software builds is fundamental to the security of the software supply chain. While Thompson first raised the potential for attacks on build infrastructure in 1984, limited attention has been given to build integrity in the past 40 years, enabling recent attacks on SolarWinds, event-stream, and xz. The best-known defense against build system attacks is creating \emph{reproducible builds}; however, achieving them can be complex for both technical and social reasons and thus is often viewed as impractical to obtain. In this paper, we analyze reproducibility of builds in a novel context: reusable \emph{components} distributed as \emph{packages} in six popular software ecosystems (npm, Maven, PyPI, Go, RubyGems, and Cargo). Our quantitative study on a representative sample of 4000 packages in each ecosystem raises concerns: Rates of reproducible builds vary widely between ecosystems, with some ecosystems having all packages reproducible whereas others have \issues in nearly every package. However, upon deeper investigation, we identified that with relatively straightforward infrastructure configuration and patching of build tools, we can achieve very high rates of reproducible builds in all studied ecosystems. We conclude that if the ecosystems adopt our suggestions, the build process of published packages can be independently confirmed for nearly all packages without individual developer actions, and doing so will prevent significant future software supply chain attacks.  
  
  " Nusrat Zahan, Philipp Burckhardt, Mikola Lysenko, Feross Aboukhadijeh, Laurie Williams, "Leveraging Large Language Models to Detect npm Malicious Packages"  
 Abstract:  Existing malicious code detection techniques can aid the manual review process by predicting which packages are likely to be malicious. However, these techniques often suffer from high misclassification rates. Therefore, malicious code detection techniques could be enhanced by adopting advanced, more automated approaches to achieve high accuracy and a low misclassification rate. The goal of this study is to assist security analysts in detecting malicious packages through the empirical study of using Large Language Models (LLMs) to detect malicious code in the npm ecosystem. We present SecurityAI, a malicious code review workflow to detect malicious code using ChatGPT. We leverage a benchmark dataset of 5,115 npm packages, of which 2,180 packages have malicious code. We conducted a baseline comparison of GPT-3 and GPT-4 models with the state-of-the-art CodeQL static analysis tool, using 39 custom CodeQL rules developed in prior research to detect malicious Javascript code. We compare the effectiveness of static analysis as a pre-screener with SecurityAI workflow, measuring the number of files that need to be analyzed and the associated costs. Additionally, we performed a qualitative study to understand the types of malicious packages detected or missed by our workflow. Our baseline comparison demonstrates a 16% and 9% improvement over static analysis in precision and F1 scores, respectively. We attained precision and F1 scores of 91% and 94% for GPT-3, and 99% & 97% for GPT-4, respectively, with GPT-3 offering a cost-effective balance. Pre-screening files with a static analyzer reduces the number of files requiring LLM analysis by 77.9% and decreases costs by 60.9% for GPT-3 and 76.1% for GPT-4. Our qualitative analysis identified data theft, hidden backdoors, and suspicious domain connection categories as the top detected malicious packages. The lack of diversity in model-generated responses led to hallucinations, resulting in misclassification cases, with GPT-3 hallucinating more frequently.  
  
  Xin-Cheng Wen, Zirui Lin, Cuiyun Gao, Hongyu Zhang, Yong Wang, "Qing Liao, ""Repository-Level Graph Representation Learning for Enhanced Security Patch Detection""  
 Abstract:  Software vendors often silently release security patches without providing sufficient advisories (e.g., Common Vulnerabilities and Exposures) or delayed updates via resources (e.g., National Vulnerability Database). Therefore, it has become crucial to detect these security patches to ensure secure software maintenance. However, existing methods face the following challenges: (1) They primarily focus on the information within the patches themselves, overlooking the complex dependencies in the repository. (2) Security patches typically involve multiple functions and files, increasing the difficulty in well learning the representations. To alleviate the above challenges, this paper proposes a \textit{Repo}sitory-level Security Patch Detection framework named \textit{RepoSPD}, which comprises three key components: 1) a repository-level graph construction, RepoCPG, which represents software patches by merging pre-patch and post-patch source code at the repository level; 2) a structure-aware patch representation, which fuses the graph and sequence branch and aims at comprehending the relationship among multiple code changes; 3) progressive learning, which facilitates the model in balancing semantic and structural information. To evaluate RepoSPD, we employ two widely-used datasets in security patch detection: SPI-DB and PatchDB. We further extend these datasets to the repository level, incorporating a total of 20,238 and 28,781 versions of repository in C/C++ programming languages, respectively, denoted as SPI-DB* and PatchDB*. We compare RepoSPD with six existing security patch detection methods and five static tools. Our experimental results demonstrate that RepoSPD outperforms the state-of-the-art baseline, with improvements of 11.90\%, and 3.10\% in terms of accuracy on the two datasets, respectively. These results underscore the effectiveness of RepoSPD in detecting security patches. Furthermore, RepoSPD can detect 151 security patches, which outperforms the best-performing baseline by 21.36\% with respect to accuracy.  
  
  " Tajkia Rahman Toma, Balreet Grewal, Cor-Paul Bezemer, "Answering User Questions about Machine Learning Models through Standardized Model Cards"  
 Abstract:  Reusing pre-trained machine learning models is becoming very popular due to model hubs such as Hugging Face (HF). However, similar to when reusing software, many issues may arise when reusing an ML model. In many cases, users resort to asking questions on discussion forums such as the HF community forum. In this paper, we study how we can reduce the community's workload in answering these questions and increase the likelihood that questions receive a quick answer. We analyze 11,278 discussions from the HF model community that contain user questions about ML models. We focus on the effort spent handling questions, the high-level topics of discussions, and the potential for standardizing responses in model cards based on a model card template. Our findings indicate that there is not much effort involved in responding to user questions, however, 40.1% of the questions remain open without any response. A topic analysis shows that discussions are more centered around technical details on model development and troubleshooting, indicating that more input from model providers is required. We show that 42.5% of the questions could have been answered if the model provider followed a standard model card template for the model card. Based on our analysis, we recommend that model providers add more development-related details on the model's architecture, algorithm, data preprocessing and training code in existing documentation (sub)sections and add new (sub)sections to the template to address common questions about model usage and hardware requirements.  
  
  Cho-Ting Lee, Andrew Neeser, Shengzhe Xu, Jay Katyan, Patrick Cross, Sharanya Pathakota, Marigold Norman, John C. Simeone, Jaganmohan Chandrasekaran, Naren Ramakrishnan, "Can an LLM find its way around a Spreadsheet?"  
 Abstract:  Spreadsheets are routinely used in business and scientific contexts, and one of the most vexing challenges is performing data cleaning prior to analysis and evaluation. The ad-hoc and arbitrary nature of data cleaning problems, such as typos, inconsistent formatting, missing values, and a lack of standardization, often creates the need for highly specialized pipelines. We ask whether an LLM can find its way around a spreadsheet and how to support end-users in taking their free-form data processing requests to fruition. Just like RAG retrieves context to answer users’ queries, we demonstrate how we can retrieve elements from a code library to compose data preprocessing pipelines. Through comprehensive experiments, we demonstrate the quality of our system and how it is able to continuously augment its vocabulary by saving new codes and pipelines back to the code library for future retrieval.  
  
  Madeline Janecek, Naser Ezzati-Jivan, Abdelwahab Hamou-Lhadj, "Execution Trace Reconstruction Using Diffusion-Based Generative Models"  
 Abstract:  Execution tracing is essential for understanding system and software behaviour, yet lost trace events can significantly compromise data integrity and analysis. Existing solutions for trace reconstruction often fail to fully leverage available data, particularly in complex and high-dimensional contexts. Recent advancements in generative artificial intelligence, particularly diffusion models, have set new benchmarks in image, audio, and natural language generation. This study conducts the first comprehensive evaluation of diffusion models for reconstructing incomplete trace event sequences. Using nine distinct datasets generated from the Phoronix Test Suite, we rigorously test these models on sequences of varying lengths and missing data ratios. Our results indicate that the SSSD$^{S4}$ model, in particular, achieves superior performance, in terms of accuracy, perfect rate, and ROUGE-L score across diverse imputation scenarios. These findings underscore the potential of diffusion-based models to accurately reconstruct missing events, thereby maintaining data integrity and enhancing system monitoring and analysis.  
  
  Joseph Romeo, Marco Raglianti, Csaba Nagy, "Michele Lanza, ""UML is Back. Or is it? Investigating the Past, Present, and Future of UML in Open Source Software""  
 Abstract:  Since its inception, UML, the Unified Modeling Language, has been touted as the way to go when it comes to designing and documenting software systems. While being an integral part of many university software engineering programs, UML has found little consideration among developers, especially in open source software. Reasons for this include that UML shares some shortcomings with other forms of documentation (e.g., limited availability, outdatedness, inadequate level of detail). We present a study to investigate the evolution and the current situation regarding the use of UML in open source projects. We mined and analyzed ~13k GitHub projects, developing strategies and heuristics to identify UML files through their extensions and contents, for a quantitative analysis of two decades of evolution of the usage of UML. We explored the popularity of UML, derived characteristics of projects leveraging UML, and analyzed the authors, creators and maintainers, of UML artifacts. Our study confirms that UML is indeed still under-utilized. At the same time we found evidence of a resurgence coinciding with the popularity of human-readable text-based formats, defined and used by tools like PlantUML and Mermaid. We discuss how identifying and addressing the new challenges implied by this resurgence could impact the future of UML.  
  
  " Abdul Haddi Amjad, Muhammad Danish, Bless Jah, Muhammad Ali Gulzar, "Accessibility Issues in Ad-Driven Web Applications"  
 Abstract:  Website accessibility is essential for inclusiveness and regulatory compliance. Although third-party advertisements (ads) are a vital revenue source for free web services, they introduce significant accessibility challenges. Leasing a website’s space to ad-serving technologies like DoubleClick results in developers losing control over ad content accessibility. Even on highly accessible websites, third-party ads can undermine adherence to Web Content Accessibility Guidelines (WCAG). We conduct the first-of-its-kind large-scale investigation of 430K website elements, including nearly 100K ad elements, to understand the accessibility of ads on websites. We seek to understand the prevalence of inaccessible ads and their overall impact on the accessibility of websites. Our findings show that 67% of websites experience increased accessibility violations due to ads, with common violations including Focus Visible (WCAG 2.4.7) and On Input (WCAG 3.2.2). Popular ad-serving technologies like Taboola, DoubleClick, and RevContent often serve ads that fail to comply with WCAG standards. Even when ads are WCAG compliant, 27% of them have alternative text in ad images that misrepresents information, potentially deceiving users. Manual inspection of a sample of these misleading ads revealed that user-identifiable data is collected on 94% of websites through interactions, such as hovering or pressing enter. Since users with disabilities often rely on tools like screen readers that require hover events to access website content, they have no choice but to compromise their privacy in order to navigate website ads. Based on our findings, we further dissect the root cause of these violations and provide design guidelines to both website developers and ad-serving technologies to achieve WCAG-compliant ad integration.  
  
  Myeongsoo Kim, Tyler Stennett, Saurabh Sinha, Alessandro Orso, "A Multi-Agent Approach for REST API Testing with Semantic Graphs and LLM-Driven Inputs"  
 Abstract:  As modern web services increasingly rely on REST APIs, their thorough testing has become crucial. Furthermore, the advent of REST API specifications such as OpenAPI ones has led to the emergence of many black-box REST API testing tools. However, these tools often focus on individual test elements in isolation (e.g., APIs, parameters, values), resulting in lower coverage and less effectiveness in detecting faults (i.e., 500 response codes). To address these limitations, we present AutoRestTest, the first black-box framework to adopt a dependency-embedded multi-agent approach for REST API testing, integrating Multi-Agent Reinforcement Learning (MARL) with a Semantic Property Dependency Graph (SPDG) and Large Language Models (LLMs). Our approach treats REST API testing as a separable problem, where four agents---API, dependency, parameter, and value---collaborate to optimize API exploration. LLMs handle domain-specific value restrictions, the SPDG model simplifies the search space for dependencies using a similarity score between API operations, and MARL dynamically optimizes the agents' behavior. Evaluated on 12 real-world REST services, AutoRestTest outperforms the four leading black-box REST API testing tools, including those assisted by RESTGPT (which augments realistic test inputs using LLMs), in terms of code coverage, operation coverage, and fault detection. Notably, AutoRestTest is the only tool able to identify an internal server error in Spotify. Our ablation study underscores the significant contributions of the agent learning, SPDG, and LLM components.  
  
  Geraldine Galindo-Gutierrez, Juan Pablo Sandoval Alcocer, Nicolas Jimenez-Fuentes, Alexandre Bergel, "Gordon Fraser, ""Increasing the Effectiveness of Automatically Generated Tests by Improving Class Observability""  
 Abstract:  Automated unit test generation consists of two complementary challenges: Finding sequences of API calls that exercise the code of a class under test, and finding assertion statements that validate the behaviour of the class during execution. The former challenge is often addressed using meta-heuristic search algorithms optimising tests for code coverage, which are then annotated with regression assertions to address the latter challenge, i.e., assertions that capture the states observed during test generation. While the resulting tests tend to achieve high coverage, their fault finding potential is often inhibited by poor or difficult observability of the codebase. That is, relevant attributes and properties may either not be exposed adequately at all, or only in ways that the test generator is unable to handle. In this paper, we investigate the influence of observability in the context of the EvoSuite search-based Java test generator, which we extend in two complementary ways to study and improve observability: First, we apply a transformation to code under test to expose encapsulated attributes to the test generator; second, we address EvoSuite's limited capability of asserting the state of complex objects. Our evaluation demonstrates that together these observability improvements lead to significantly increased mutation scores, underscoring the importance of considering the class observability in the test generation process.  
  
  " Nabson Silva, Unknown, Tayana Conte, "A Catalog of Micro Frontends Anti-patterns"  
 Abstract:  Micro frontend (MFE) architectures have gained significant popularity for promoting independence and modularity in development. Despite their widespread adoption, the field remains relatively unexplored, especially concerning identifying problems and documenting best practices. Drawing on both established microservice (MS) anti-patterns and the analysis of real problems faced by software development teams that adopt MFE, this paper presents a catalog of 12 MFE anti-patterns. We composed an initial version of the catalog by recognizing parallels between MS anti-patterns and recurring issues in MFE projects to map and adapt MS anti-patterns to the context of MFE. To validate the identified problems and proposed solutions, we conducted a survey with industry practitioners, collecting valuable feedback to refine the anti-patterns. Additionally, we asked participants if they had encountered these problems in practice and to rate their harmfulness on a 10-point Likert scale. The survey results revealed that participants had encountered all the proposed anti-patterns in real-world MFE architectures, with only one reported by less than 50% of participants. They stated that the catalog can serve as a valuable guide for both new and experienced developers, with the potential to enhance MFE development quality. The collected feedback led to the development of a improved version of the anti-patterns catalog. Furthermore, we developed a web application designed to not only showcase the anti-patterns but also to actively foster collaboration and engagement within the MFE community. The proposed catalog is a valuable resource for identifying and mitigating potential pitfalls in MFE development. It empowers developers of all experience levels to create more robust, maintainable, and well-designed MFE applications.  
  
  Georgios Sakkas, Pratyush Sahu, Kyeling Ong, "Ranjit Jhala, ""Neurosymbolic Modular Refinement Type Inference""  
 Abstract:  Refinement types -- a type-based generalization of Floyd-Hoare logics -- are an expressive and modular means of statically ensuring a wide variety of correctness, safety, and security properties of software. However, their expressiveness and modularity means that to use them, a developer must laboriously \emph{annotate} all the functions in their code with potentially complex type specifications that specify the contract for that function. We present XO, a neurosymbolic agent that uses LLMs to automatically generate refinement type annotations for all the functions in an entire package or module, using the refinement type checker LiquidHaskell as an oracle to verify the correctness of the generated specifications. We curate a dataset of three Haskell packages where refinement types are used to enforce a variety of correctness properties from data structure invariants to low-level memory safety and use this dataset to evaluate XO. Previously these packages required expert users several days to weeks to annotate with refinement types. Our evaluation shows that when even using models with relatively smaller models like the 3 billion parameter StarCoder LLM, by using fine-tuning, carefully chosen contexts, our neurosymbolic agent generates refinement types for up to 94\% of the functions across entire libraries automatically in just a few hours, thereby showing that LLMs can drastically shrink the human effort needed to use formal verification.  
  
  " Luís F. Gomes, Vincent Hellendoorn, Jonathan Aldrich, "Rui Abreu, ""An Exploratory Study of ML Sketches and Visual Code Assistants""  
 Abstract:  This paper explores the integration of Visual Code Assistants in Integrated Development Environments (IDEs). In Software Engineering, whiteboard sketching is often the initial step before coding, serving as a crucial collaboration tool for developers. Previous studies have investigated patterns in SE sketches and how they are used in practice, yet methods for directly using these sketches for code generation remain limited. The emergence of visually-equipped large language models presents an opportunity to bridge this gap, which is the focus of our research. In this paper, we built a first prototype of a Visual Code Assistant to get user feedback regarding in-IDE sketch-to-code tools. We conduct an experiment with 19 data scientists, most of whom regularly sketch as part of their job. We investigate developers' mental models by analyzing patterns commonly observed in their sketches when developing an ML workflow. Analysis indicates that diagrams were the preferred organizational component (52.6\%), often accompanied by lists (42.1\%) and numbered points (36.8\%). Our tool converts their sketches into a Python notebook by querying an LLM. We use an LLM-as-judge setup to score the quality of the generated code, finding that even brief sketching can effectively generate useful code outlines. We also find a significant, positive correlation between sketch time and the quality of the generated code. We conclude the study by conducting extensive interviews to assess the tool's usefulness, explore potential use cases, and understand developers' needs. As noted by participants, promising applications for these assistants include education, prototyping, and collaborative settings. Our findings signal promise for the next generation of Code Assistants to integrate visual information, both to improve code generation and to better leverage developers' existing sketching practices.  
  
  " Waris Gill, Ali Anwar, "Muhammad Ali Gulzar, ""TraceFL: Interpretability-Driven Debugging in Federated Learning via Neuron Provenance""  
 Abstract:  In Federated Learning, clients train models on local data and send updates to a central server, which aggregates them into a global model using a fusion algorithm. This collaborative yet privacy-preserving training comes at a cost—FL developers face significant challenges in attributing global model predictions to specific clients. Localizing responsible clients is a crucial step towards (a) excluding clients primarily responsible for incorrect predictions and (b) encouraging clients who contributed high-quality models to continue participating in the future. Existing ML explainability approaches are inherently inapplicable as they are designed for single-model, centralized training. We introduce TraceFL, a fine-grained neuron provenance capturing mechanism that identifies clients responsible for the global model’s prediction by tracking the flow of information from individual clients to the global model. Since inference on different inputs activates a different set of neurons of the global model, TraceFL dynamically quantifies the significance of the global model’s neurons in a given prediction. It then selectively picks a slice of the most crucial neurons in the global model and maps them to the corresponding neurons in every participating client to determine each client’s contribution, ultimately localizing the responsible client. We evaluate TraceFL on six datasets, including two real-world medical imaging datasets and four neural networks, including advanced models such as GPT. TraceFL achieves 99% accuracy in localizing the responsible client in FL tasks spanning both image and text classification tasks. At a time when state-of-the-art ML debugging approaches are mostly domain-specific (e.g., image classification only), TraceFL is the first technique to enable highly accurate automated reasoning across a wide range of FL applications.  
  
  " Yuanfang Cai, Lanting He, Yony Kochinski, Jun Qian, Ciera Jaspan, Nan Zhang, Antonio Bianco, "Understanding Architectural Complexity, Maintenance Burden, and Developer Sentiment---a Large-Scale Study"  
 Abstract:  Intuitively, the more complex a software system is, the harder it is to maintain. Statistically, it is not clear which complexity metrics correlate with maintenance effort; in fact, it is not even clear how to objectively measure maintenance burden, so that developers' sentiment and intuition can be supported by numbers. Without effective complexity and maintenance metrics, it remains difficult to objectively monitor maintenance, control complexity, or justify refactoring. In this paper, we report a large-scale study of 1252 projects written in C++ and Java from Company_X. We collected three categories of metrics: (1) architectural complexity, measured using propagation cost (PC), decoupling level (DL), and structural anti-patterns; (2) maintenance activity, measured using the number of changes, lines of code (LOC) written, and active coding time (ACT) spent on feature-addition vs. bug-fixing, and (3) developer sentiment on complexity and productivity, collected from 7200 survey responses. We statistically analyzed the correlations among these metrics and obtained significant evidence of the following findings: 1) the more complex the architecture is (higher propagation cost, more instances of anti-patterns), the more LOC is spent on bug-fixing, rather than adding new features; 2) developers who commit more changes for features, spend more lines of code on features, or spend more time on features also feel that they are less hindered by technical debt and complexity. To the best of our knowledge, this is the first large-scale empirical study establishing the statistical correlation among architectural complexity, maintenance activity, and developer sentiment. The implication is that, instead of solely relying upon developer sentiment and intuition to detect degraded structure or increased burden to evolve, it is possible to objectively and continuously measure and monitor architectural complexity and maintenance difficulty, increasing feature delivery efficiency by reducing architectural complexity and anti-patterns.  
  
  Aleks Chakarov, Jaco Geldenhuys, Matthew Heck, Michael Hicks, Samuel Huang, Georges-Axel Jaloyan, Anjali Joshi, K. Rustan M. Leino, Mikael Mayer, Sean McLaughlin, Akhilesh Mritunjai, Clement Pit-Claudel, Sorawee Porncharoenwase, Florian Rabe, Marianna Rapoport, Giles Reger, Cody Roux, Neha Rungta, Robin Salkeld, Matthias Schlaipfer, Daniel Schoepe, Johanna Schwartzentruber, Serdar Tasiran, Aaron Tomb, Emina Torlak, Jean-Baptiste Tristan, Lucas Wagner, Michael W. Whalen, Remy Willems, Tongtong Xiang, Tae Joon Byun, Joshua Cohen, Ruijie Fang, Junyoung Jang, Jakob Rath, Hira Taqdees Syeda, Dominik Wagner, Yongwei Yuan, "Formally Verified Cloud-Scale Authorization"  
 Abstract:   
  
  Shazibul Islam Shamim, Hanyang Hu, "Akond Rahman, ""On Prescription or Off Prescription? An Empirical Study of Community-prescribed Security Configurations for Kubernetes""  
 Abstract:  Despite being beneficial for rapid delivery of software, Kubernetes deployments can be susceptible to security attacks, which can cause serious consequences. A systematic characterization of how community-prescribed security configurations, i.e., security configurations that are recommended by security experts, can aid practitioners to secure their Kubernetes deployments. To that end, we conduct an empirical study with 53 security configurations recommended by the Center for Internet Security (CIS), 20 survey respondents, and 356 configuration files obtained from open source software (OSS) repositories and 188 configuration files used by Company-A. From our empirical study, we observe: (i) practitioners can be unaware of prescribed security configurations as 5%~40% of the survey respondents are unfamiliar with 16 prescribed configurations; and (ii) for Company-A and OSS respectively, 18.0% and 17.9% of the configuration files include at least one violation of prescribed configurations. From our evaluation with 5 static application security testing (SAST) tools we find (i) only Kubescape to support all of the prescribed security configurations; (ii) the highest observed precision to be 0.48 and 0.43 respectively, for the Company-A and OSS datasets; and (iii) the highest observed recall to be respectively, 0.53 and 0.65 for the Company-A and OSS datasets. We conclude the paper by providing recommendations for practitioners on how they can use existing SAST tools to secure their Kubernetes deployments.  
  
  " Jaehyeok Lee, Sooyoung Cha, "TopSeed: Learning Seed Selection Strategies for Symbolic Execution from Scratch"  
 Abstract:  We present TopSeed, a new approach that automatically selects optimal seeds to enhance symbolic execution. Recently, the performance of symbolic execution has significantly improved through various state-of-the-art techniques, including search strategies and state-pruning heuristics. However, these techniques have typically demonstrated their effectiveness without considering “seeding”, which efficiently initializes program states for exploration. This paper aims to select valuable seeds from candidate inputs generated during interactions with any symbolic execution technique, without the need for a predefined seed corpus, thereby maximizing the technique’s effectiveness. One major challenge is the vast number of candidates, making it difficult to identify promising seeds. To address this, we introduce a customized online learning algorithm that iteratively groups candidate inputs, ranks each group, and selects a seed from the top-ranked group based on data accumulated during symbolic execution. Experimental results on 17 open-source C programs show that TopSeed significantly enhances four distinct cutting-edge techniques, implemented on top of two symbolic executors, in terms of branch coverage and bug-finding abilities.  
  
  Ali Ebrahimi Pourasad, "Walid Maalej, ""Does GenAI Make Usability Testing Obsolete?""  
 Abstract:  Ensuring usability is crucial for the success of mobile apps. Usability issues can compromise user experience and negatively impact the perceived app quality. This paper presents UX-LLM, a novel tool powered by a Large Vision-Language Model that predicts usability issues in iOS apps. To evaluate the performance of UX-LLM we predicted usability issues in two open-source apps of a medium complexity and asked usability experts to assess the predictions. We also performed traditional usability testing and expert review for both apps and compared the results to those of UX-LLM. UX-LLM demonstrated precision ranging from 0.61 and 0.66 and recall between 0.35 and 0.38, indicating its ability to identify valid usability issues, yet failing to capture the majority of issues. Finally, we conducted a focus group with an app development team of a capstone project developing a transit app for visually impaired persons. The focus group expressed positive perceptions of UX-LLM as it identified unknown usability issues in their app. However, they also raised concerns about its integration into the development workflow, suggesting potential improvements. Our results show that UX-LLM cannot fully replace traditional usability evaluation methods but serves as a valuable supplement particularly for small teams with limited resources, to identify issues in less common user paths, due to its ability to inspect the source code.  
  
  " Zhao Tian, Junjie Chen, "Xiangyu Zhang, ""Fixing Large Language Models' Specification Misunderstanding for Better Code Generation""  
 Abstract:  Code generation is to automatically generate source code conforming to a given programming specification, which has received extensive attention especially with the development of large language models (LLMs). Due to the inherent difficulty of code generation, the code generated by LLMs may not be aligned with the specification. Although thought-eliciting prompting techniques have been proposed to enhance the code generation performance of LLMs, producing correct understanding for complicated programming problems remains challenging, resulting in unsatisfactory performance. Also, some feedback-based prompting techniques have been proposed to fix incorrect code using error messages produced by test execution. However, when the generated code deviates significantly from the ground truth, they encounter difficulties in improving performance based on such coarse-grained information. In this work, we propose a novel prompting technique, called μFiX, to improve the code generation performance of LLMs by devising both sophisticated thought-eliciting prompting and feedback-based prompting and making the first exploration on their synergy. It first exploits test case analysis to obtain specification understanding and enables a self-improvement process to identify and refine the misunderstanding in the thought-eliciting prompting phase. μFiX further fixes the specification understanding towards the direction reducing the gap between the provided understanding (from the first phase) and the actual understanding implicitly utilized by LLMs for code generation in the feedback-based prompting phase. By improving the understanding with μFiX, the code generation performance of LLMs can be largely improved. Our evaluation on two advanced LLMs (ChatGPT and DeepSeek-Coder) with six widely-used benchmarks by comparing with 15 baselines, demonstrates the effectiveness of μFiX. For example, μFiX outperforms the most effective baseline with an average improvement of 35.62% in terms of Pass@1 across all subjects.  
  
  " Jingwen Zhang, Zibin Zheng, Yuhong Nan, Mingxi Ye, Kaiwen Ning, Yu Zhang, "Weizhe Zhang, ""SmartReco: Detecting Read-Only Reentrancy via Fine-Grained Cross-DApp Analysis""  
 Abstract:  Despite the increasing popularity of Decentralized Applications (DApps), they are suffering from various vulnerabilities that can be exploited by adversaries for profits. Among such vulnerabilities, Read-Only Reentrancy (called ROR in this paper), is an emerging type of vulnerability that arises from the complex interactions between DApps. In recent three years, attack incidents of ROR have already caused around 30M USD losses to the DApp ecosystem. Existing techniques for vulnerability detection in smart contracts can hardly detect Read-Only Reentrancy attacks, due to the lack of tracking and analyzing the complex interactions between multiple DApps. In this paper, we propose SmartReco, a new framework for detecting Read-Only Reentrancy vulnerability in DApps through a novel combination of static and dynamic analysis (i.e., fuzzing) over smart contracts. The key design behind SmartReco is threefold: (1) SmartReco identifies the boundary between different DApps from the heavy-coupled cross-contract interactions. (2) SmartReco performs fine-grained static analysis to locate points of interest (i.e., entry functions) that may lead to ROR. (3) SmartReco utilizes the on-chain transaction data and performs multi-function fuzzing (i.e., the entry function and victim function) across different DApps to verify the existence of ROR. Our evaluation of a manual-labeled dataset with 45 RORs shows that SmartReco achieves an accuracy of 88.63% and a recall of 86.36%. In addition, SmartReco successfully detects 43 new RORs from 123 popular DApps. The total assets affected by such RORs reach around 520,000 USD.  
  
  " Mengya Zhang, Preksha Shukla, Wuqi Zhang, Zhuo Zhang, Pranav Agrawal, Zhiqiang Lin, Xiangyu Zhang, "Xiaokuan Zhang, ""An Empirical Study of Proxy Smart Contracts at the Ethereum Ecosystem Scale""  
 Abstract:  Proxy has been introduced as a design pattern to separate data and code in an application to two different types of smart contracts, namely proxy and logic contracts, respectively. Data is stored in the proxy contracts, while the code to be executed is fetched from the logic contracts. Proxy patterns facilitate the flexibility of smart contract development by enabling upgradeability, extensibility, code reuse, etc. Despite its popularity and importance, there is currently no systematic study to understand the prevalence, use scenarios, and development pitfalls of proxies. In this work, we conduct the first comprehensive study on Ethereum proxies. To collect a comprehensive dataset of proxies, we propose ProxyEx, the first framework designed to detect proxy directly from bytecode. Our evaluation shows that ProxyEx achieves over 99% accuracy. With ProxyEx, we collect a large-scale dataset of 2,031,422 proxies from all contracts in Ethereum and conduct the first systematic empirical study. We first measure the total number of proxies and their transaction traffic, to obtain an overall understanding of the status quo of proxies on Ethereum. Then, we categorize the design pattern and use scenarios of proxies into four types: upgradeability, extensibility, code-sharing, and code-hiding. We further identify three types of common pitfalls in proxies: proxy-logic storage collision, logic-logic storage collision, and uninitialized contracts. We also design three checkers for these common pitfalls in proxies by replaying historical transactions. Our study leads to many interesting findings. For instance, we find that upgradeability is not the only reason that developers adopt the proxy pattern in developing Decentralized Applications (DApps). We also find that many proxies suffer from bugs such as storage collision and uninitialized contracts. Our study sheds light on the proxies landscape, and provides valuable insights to future smart contract research on the development, usage, quality assurance, and bug detection of proxies.  
  
  " Yifan Wu, Yunpeng Wang, Ying Li, Wei Tao, Siyu Yu, Haowen Yang, Wei Jiang, "Jianguo Li, ""An Empirical Study on Commit Message Generation using LLMs via In-Context Learning""  
 Abstract:  Commit messages concisely describe code changes in natural language and are important for software maintenance. Several approaches have been proposed to automatically generate commit messages, but they still suffer from critical limitations, such as time-consuming training and poor generalization ability. To tackle these limitations, we propose to borrow the weapon of large language models (LLMs) and in-context learning (ICL). Our intuition is based on the fact that the training corpora of LLMs contain extensive code changes and their pairwise commit messages, which makes LLMs capture the knowledge about commits, while ICL can exploit the knowledge hidden in the LLMs and enable them to perform downstream tasks without model tuning. However, it remains unclear how well LLMs perform on commit message generation via ICL. Therefore, in this paper, we conduct a comprehensive empirical study to investigate the capability of LLMs to generate commit messages via ICL. Specifically, we first explore the impact of different settings on the performance of ICL-based commit message generation. We then compare ICL-based commit message generation with state-of-the-art approaches on a popular multilingual dataset and a new dataset we created to mitigate potential data leakage. The results show that ICL-based commit message generation significantly outperforms state-of-the-art approaches on subjective evaluation and achieves better generalization ability. We further analyze the root causes for LLM’s underperformance and propose several implications, which shed light on future research directions for using LLMs to generate commit messages.  
  
  " Octavio Galland, "Marcel Böhme, ""Invivo Fuzzing by Amplifying Actual Executions""  
 Abstract:  A major bottleneck that remains when fuzzing software libraries is the need for _fuzz drivers_, i.e., the glue code between the fuzzer and the library. Despite years of fuzzing, critical security flaws are still found, e.g., by manual auditing, because the fuzz drivers do not cover the complex interactions between the library and the host programs using it. In this work we propose an alternative approach to library fuzzing, which leverages a valid execution context that is set up by a given program using the library (the _host_), and _amplify_ its execution. More specifically, we execute the host until a designated function from a list of _target_ functions has been reached, and then perform coverage-guided function-level fuzzing on it. Once the fuzzing quota is exhausted, we move on to fuzzing the next target from the list. In this way we not only reduce the amount of manual work needed by a developer to incorporate fuzzing into their workflow, but we also allow the fuzzer to explore parts of the library as they are used in real-world programs that may otherwise not have been tested due to the simplicity of most fuzz drivers.  
  
  " Wenwei Gu, Jiazhen Gu, Jinyang Liu, Zhuangbin Chen, Jianping Zhang, Jinxi Kuang, Cong Feng, Yongqiang Yang, Michael Lyu, "ADAMAS: Adaptive Domain-Aware Performance Anomaly Detection in Cloud Service Systems"  
 Abstract:  A common practice in the reliability engineering of cloud services involves the collection of monitoring metrics, followed by comprehensive analysis to identify performance issues. However, existing methods often fall short of detecting diverse and evolving anomalies across different services. Moreover, there exists a significant gap between the technical and business interpretation of anomalies, i.e., a detected anomaly may not have an actual impact on system performance or user experience. To address these challenges, we propose ADAMAS, an adaptive AutoML-based anomaly detection framework aiming to achieve practical anomaly detection in production cloud systems. To improve the ability of detecting cross-service anomalies, we design a novel unsupervised evaluation function to facilitate the automatic searching of the optimal model structure and parameters. ADAMAS also contains a lightweight human-in-the-loop design, which can efficiently incorporate expert knowledge to adapt to the evolving anomaly patterns and bridge the gap between predicted anomalies and actual business exceptions. Furthermore, through monitoring the rate of mispredicted anomalies, ADAMAS proactively re-configures the optimal model, forming a continuous loop of system improvement. Extensive evaluation on one public and two industrial datasets shows that ADAMAS outperforms all baseline models with a 0.891 F1-score. The ablation study also proves the effectiveness of the evaluation function design and the incorporation of expert knowledge.  
  
  Zewei Lin, Jiachi Chen, Jiajing Wu, Weizhe Zhang, Zibin Zheng, "Definition and Detection of Centralization Defects in Smart Contracts"  
 Abstract:  In recent years, security incidents stemming from centralization defects in smart contracts have led to substantial financial losses. A centralization defect refers to any error, flaw, or fault in a smart contract’s design or development stage that introduces a single point of failure. Such defects allow a specific account or user to disrupt the normal operations of smart contracts, potentially causing malfunctions or even complete project shutdowns. Despite the significance of this issue, most current smart contract analyses overlook centralization defects, focusing primarily on other types of defects. To address this gap, our paper introduces six types of centralization defects in smart contracts by manually analyzing 597 Stack Exchange posts and 117 audit reports. For each defect, we provide a detailed description and code examples to illustrate its characteristics and potential impacts. Additionally, we introduce a tool named CDRipper (Centralization Defects Ripper) designed to identify the defined centralization defects. Specifically, CDRipper constructs a permission dependency graph (PDG) and extracts the permission dependencies of functions from the source code of smart contracts. It then detects the sensitive operations in functions and identifies centralization defects based on predefined patterns. We conduct a large-scale experiment using CDRipper on 244,424 real-world smart contracts and evaluate the results based on a manually labeled dataset. Our findings reveal that 82,446 contracts contain at least one of the six centralization defects, with our tool achieving an overall precision of 93.7%.  
  
  Changjian Zhang, Parv Kapoor, Ian Dardik, Leyi Cui, Romulo Meira-Goes, David Garlan, Eunsuk Kang, "Constrained LTL Specification Learning from Examples"  
 Abstract:  Temporal logic specifications play an important role in a wide range of software analysis tasks, such as model checking, automated synthesis, program comprehension, and runtime monitoring. Given a set of positive and negative examples, specified as traces, \emph{LTL learning} is the problem of synthesizing a specification, in \emph{linear temporal logic (LTL)}, that evaluates to true over the positive traces and false over the negative ones. In this paper, we propose a new type of LTL learning problem called \emph{constrained LTL learning}, where the user, in addition to positive and negative examples, is given an option to specify one or more \emph{constraints} over the properties of the LTL formula to be learned. We demonstrate that the ability to specify these additional constraints significantly increases the range of applications for LTL learning, and also allows efficient generation of LTL formulas that satisfy certain desirable properties (such as minimality). We propose an approach for solving the constrained LTL learning problem through an encoding in a first-order relational logic and reduction to an instance of the \emph{maximal satisfiability (MaxSAT)} problem. An experimental evaluation demonstrates that ATLAS, an implementation of our proposed approach, is able to solve new types of learning problems while performing better than or competitively with the state-of-the-art tools in LTL learning.  
  
  Nikhil Parasaram, Huijie Yan, Boyu Yang, Zineb Flahy, Abriele Qudsi, Damian Ziaber, Earl T. Barr, "Sergey Mechtaev, ""The Fact Selection Problem in LLM-Based Program Repair""  
 Abstract:  Recent research has shown that incorporating bug- related facts, such as stack traces and GitHub issues, into prompts enhances the bug-fixing capabilities of large language models (LLMs). Considering the ever-increasing context window of these models, a critical question arises: what and how many facts should be included in prompts to maximise the chance of correctly fixing bugs? To answer this question, we conducted a large-scale study employing over 19K prompts featuring various combinations of seven diverse facts to rectify 314 bugs from open-source Python projects within the BugsInPy benchmark. Our findings revealed that each fact, ranging from simple syntactic details like code context to semantic information previously unexplored in the context of LLMs such as angelic values, is beneficial. Specifically each fact aids in fixing some bugs that would remain unresolved or only be fixed with a low success rate without it. Importantly we discovered that the effectiveness of program repair prompts is non-monotonic over the number of used facts; using too many facts leads to subpar outcomes. These insights led us to define the fact selection problem: determining the optimal set of facts for inclusion in a prompt to maximise LLM’s performance on a given task instance. We found that there is no one-size- fits-all set of facts for bug repair. Therefore, we developed a basic statistical model, named MANIPLE, which selects facts specific to a given bug to include in the prompt. This model significantly surpasses the performance of the best generic fact set. To underscore the significance of the fact selection problem, we benchmarked MANIPLE against the state-of-the-art zero-shot, non- conversational LLM-based bug repair methods. On our testing dataset of 157 bugs, MANIPLE repairs 88 bugs, 17% above the best configuration.  
  
  " Anna Mazhar, Saad Sher Alam, William Zheng, Yinfang Chen, Suman Nath, "Tianyin Xu, ""Fidelity of Cloud Emulators: The Imitation Game of Testing Cloud-based Software""  
 Abstract:  Modern software projects have been increasingly using cloud services as important components. The cloud-based programming practice greatly simplifies software development by harvesting cloud benefits (e.g., high availability and elasticity). However, it imposes new challenges for software testing and analysis, due to opaqueness of cloud backends and monetary cost of invoking cloud services for continuous integration and deployment. As a result, cloud emulators are developed for offline development and testing, before online testing and deployment. This paper presents a systematic analysis of cloud emulators from the perspective of cloud-based software testing. Our goal is to (1) understand the discrepancies introduced by cloud emula- tion with regard to software quality assurance and deployment safety and (2) address inevitable gaps between emulated and real cloud services. The analysis results are concerning. Among 255 APIs of five cloud services from Azure and Amazon Web Services (AWS), we detected discrepant behavior between the emulated and real services in 94 (37%) of the APIs. These discrepancies lead to inconsistent testing results, threatening deployment safety, introducing false alarms, and creating debuggability issues. The root causes are diverse, including accidental implementation defects and essential emulation challenges. We discuss potential solutions and develop a practical mitigation technique to address discrepancies of cloud emulators for software testing.  
  
  " Yuxin Zhang, Sen Chen, Xiaofei Xie, Zibo Liu, "Lingling Fan, ""Scenario-Driven and Context-Aware Automated Accessibility Testing for Android Apps""  
 Abstract:  Mobile accessibility is increasingly important nowadays as it enables people with disabilities to use mobile applications to perform daily tasks. Ensuring mobile accessibility not only benefits those with disabilities but also enhances the user experience for all users, making applications more intuitive and user-friendly. Although numerous tools are available for testing and detecting accessibility issues in Android applications, a large number of false negatives and false positives persist due to limitations in the existing approaches, i.e., low coverage of UI scenarios and lack of consideration of runtime context. To address these problems, in this paper, we propose a scenario-driven exploration method for improving the coverage of UI scenarios, thereby detecting accessibility issues within the application, and ultimately reducing false negatives. Furthermore, to reduce false positives caused by not considering the runtime context, we propose a context-aware detection method that provides a more fine-grained detection capability. Our experimental results reveal that A11yScan can detect 1.7X more issues surpassing current state-of-the-art approaches like Xbot (3,991 vs. 2,321), thereby reducing the false negative rate by 41.84\%. Additionally, it outperforms established UI exploration techniques such as SceneDroid (952 vs. 661 UI scenarios), while achieving comparable activity coverage to recent leading GUI testing tools like GPTDroid on the available dataset (73\% vs. 71\%). Meanwhile, with the context-aware detection method, A11yScan effectively reduces the false positive rate by 21\%, validated with a 90.56\% accuracy rate through a user study.  
  
  " Hyunjae Suh, Mahan Tafreshipour, Jiawei Li, Adithya Bhattiprolu, Iftekhar Ahmed, "An Empirical Study on Automatically Detecting AI-Generated Source Code: How Far Are We?"  
 Abstract:  Artificial Intelligence (AI) techniques, especially Large Language Models (LLMs), have started gaining popularity among researchers and software developers for generating source code. However, LLMs have been shown to generate code with quality issues and also incurred copyright/licensing infringements. Therefore, detecting whether a piece of source code is written by humans or AI has become necessary. This study first presents an empirical analysis to investigate the effectiveness of the existing AI detection tools in detecting AI-generated code. The results show that they all perform poorly and lack sufficient generalizability to be practically deployed. Then, to improve the performance of AI-generated code detection, we propose a range of approaches, including fine-tuning the LLMs and machine learning-based classification with static code metrics or code embedding generated from Abstract Syntax Tree (AST). Our best model outperforms state-of-the-art AI-generated code detector (GPTSniffer) and achieves an F1 score of 82.55. We also conduct an ablation study on our best-performing model to investigate the impact of different source code features on its performance.  
  
  Yuyang Rong, Zhanghan Yu, Zhenkai Weng, Stephen Neuendorffer, "Hao Chen, ""IRFuzzer: Specialized Fuzzing for LLVM Backend Code Generation""  
 Abstract:  Modern compilers, such as LLVM, are complex. Due to their complexity, manual testing is unlikely to suffice, yet formal verification is difficult to scale. End-to-end fuzzing can be used, but it has difficulties in discovering LLVM backend problems for two reasons. First, frontend preprocessing and middle optimization shield the backend from seeing diverse inputs. Besides, edge coverages cannot provide an effective feedback as LLVM backend contains much reusable code. In this paper, we implement IRFuzzer to investigate the need of specialized fuzzing of the LLVM compiler backend. We focus on two approaches to improve the fuzzer: guaranteed input validity using constrained mutations to improve input diversity and new metrics to improve feedback quality. The mutator in IRFuzzer is capable of generating a wide range of LLVM IR inputs, including structured control flow, vector types, and function definitions. The system instruments coding patterns in the compiler to monitor the execution status of instruction selection. The instrumentation not only provides a new coverage feedback called matcher table coverage, but also provides an architecture specific guidance to the mutator. We show that IRFuzzer is more effective than existing fuzzers by fuzzing on 29 mature LLVM backend targets. In the process, we reported 78 confirmed new bugs in LLVM upstream, out of which 57 have been fixed, five have been back ported to LLVM 15, showing that specialized fuzzing provides useful and actionable insights to LLVM developers.  
  
  " Wuxia Jin, Jiaowei Shang, Jianguo Zheng, Mengjie Sun, Zhenyu Huang, Ming Fan, Ting Liu, "The Design Smells Breaking the Boundary between Android Variants and AOSP"  
 Abstract:  Phone vendors customize their Android variants to enhance system functionalities based on the Android Open Source Project (AOSP). While independent development, Android variants have to periodically evolve with the upstream AOSP and merge code changes from AOSP. Vendors have invested great effort to maintain their variants and resolve merging conflicts. In this paper, we characterize the design smells with recurring patterns that break the design boundary between Android variants and AOSP. These smells are manifested as problematic dependencies across the boundary, hindering Android variants' maintainability and co-evolution with AOSP. We propose the DroidDS for automatically detecting design smells. We collect 22 Android variant versions and 22 corresponding AOSP versions, involving 4 open-source projects and 1 industrial project. Our results demonstrate that: files involved in design smells consume higher maintenance costs than other files; these infected files are not merely the files with large code size, increased complexity, and object-oriented smells; the infected files have been involved in more than half of code conflicts induced by re-applying AOSP's changes to Android variants; a substantial portion of design issues could be mitigable. Practitioners can utilize our DroidDS to pinpoint and prioritize design problems for Android variants. Refactoring these problems will help keep a healthy coupling between diverse variants and AOSP, potentially improving maintainability and reducing conflict risks.  
  
  Mingfei Cheng, Xiaofei Xie, Yuan Zhou, Junjie Wang, Guozhu Meng, Kairui Yang, "Decictor: Towards Evaluating the Robustness of Decision-Making in Autonomous Driving Systems"  
 Abstract:  Autonomous Driving System (ADS) testing is crucial in ADS development, with the current primary focus being on safety. However, the evaluation of non-safety-critical performance, particularly the ADS’s ability to make optimal decisions and produce optimal paths for autonomous vehicles (AVs), is also vital to ensure the intelligence and reduce risks of AVs. Currently, there is little work dedicated to assessing the robustness of ADSs’ path-planning decisions (PPDs), i.e., whether an ADS can maintain the optimal PPD after an insignificant change in the environment. The key challenges include the lack of clear oracles for assessing PPD optimality and the difficulty in searching for scenarios that lead to non-optimal PPDs. To fill this gap, in this paper, we focus on evaluating the robustness of ADSs’ PPDs and propose the first method, Decictor, for generating non-optimal decision scenarios (NoDSs), where the ADS does not plan optimal paths for AVs. Decictor comprises three main components: Non-invasive Mutation, Consistency Check, and Feedback. To overcome the oracle challenge, Non-invasive Mutation is devised to implement conservative modifications, ensuring the preservation of the original optimal path in the mutated scenarios. Subsequently, the Consistency Check is applied to determine the presence of non-optimal PPDs by comparing the driving paths in the original and mutated scenarios. To deal with the challenge of large environment space, we design Feedback metrics that integrate spatial and temporal dimensions of the AV’s movement. These metrics are crucial for effectively steering the generation of NoDSs. Therefore, Decictor can generate NoDSs by generating new scenarios and then identifying NoDSs in the new scenarios. We evaluate Decictor on Baidu Apollo, an open-source and production-grade ADS. The experimental results validate the effectiveness of Decictor in detecting non-optimal PPDs of ADSs. It generates 63.9 NoDSs in total, while the best-performing baseline only detects 35.4 NoDSs.  
  
  Mingyue Yuan, Jieshan Chen, Zhenchang Xing, Aaron Quigley, Yuyu Luo, Tianqi Luo, Gelareh Mohammadi, Qinghua Lu, Liming Zhu, "DesignRepair: Dual-Stream Design Guideline-Aware Frontend Repair with Large Language Models"  
 Abstract:  The rise of Large Language Models (LLMs) has streamlined frontend interface creation through tools like Vercel's V0, yet surfaced challenges in design quality (e.g., accessibility, and usability). Current solutions, often limited by their focus, generalisability, or data dependency, fall short in addressing these complexities comprehensively. Moreover, none of them examine the quality of LLM-generated UI design. In this work, we introduce DesignRepair, a novel dual-stream design guideline-aware system to examine and repair the UI design quality issues from both code aspect and rendered page aspect. We utilised the mature and popular Material Design as our knowledge base to guide this process. Specifically, we first constructed a comprehensive knowledge base encoding Google's Material Design principles into low-level component knowledge base and high-level system design knowledge base. After that, DesignRepair employs a LLM for the extraction of key components and utilizes the Playwright tool for precise page analysis, aligning these with the established knowledge bases. Finally, we integrate Retrieval-Augmented Generation with state-of-the-art LLMs like GPT-4 to holistically refine and repair frontend code through a strategic divide and conquer approach. Our extensive evaluations validated the efficacy and utility of our approach, demonstrating significant enhancements in adherence to design guidelines, accessibility, and user experience metrics.  
  
  Houda Naji, Marco Gutfleisch, Alena Naiakshina, "Relationship Status: “It’s complicated” Developer-Security Expert Dynamics in Scrum"  
 Abstract:  The high number of cyber threats poses significant challenges, with impactful software exploits ranging from data theft to ransomware deployment. Unfortunately, past research highlighted limited security expertise within development teams. Collaboration between developers and security experts, therefore, emerges as one of the few workable means to address this gap. In this paper, we explore the complex interplay between developers and security experts within Scrum, one of the most widely adopted frameworks which actively promotes collaboration, to shed light on their working relationship, challenges, and potential avenues for improvement. To this end, we conducted a qualitative interview study with 14 developers and 13 security experts. Our qualitative results reveal three communication patterns and five shared challenges between the groups affecting the develop-security expert collaboration. Top challenges include consistent interaction difficulties and the lack of workable means to balance business and security needs. As a result, we found that three core Scrum values (openness, respect, courage) are missing from this relationship. Based on our results, we propose recommendations for fostering a healthy collaboration between developers and security experts, both within and beyond Scrum.  
  
  Bianca Trinkenreich, Zixuan Feng, Rudrajit Choudhuri, Marco Gerosa, Anita Sarma, "Igor Steinmacher, ""Investigating the Impact of Interpersonal Challenges on Feeling Welcome in OSS""  
 Abstract:  The sustainability of open source software (OSS) projects hinges on contributor retention. Interpersonal challenges can inhibit a feeling of welcomeness among contributors, particularly from underrepresented groups, which impacts their decision to continue with the project. How much this impact is, varies among individuals, underlining the importance of a thorough understanding of their effects. Here, we investigate the effects of interpersonal challenges on the sense of welcomeness among diverse populations within OSS, through the diversity lenses of gender, race, and (dis)ability. We analyzed the large-scale Linux Foundation Diversity and Inclusion survey (n = 706) to model a theoretical framework linking interpersonal challenges with the sense of welcomeness through Structural Equation Models Partial Least Squares (PLS-SEM). We then examine the model to identify the impact of these challenges on different demographics through Multi-Group Analysis (MGA). Finally, we conducted a regression analysis to investigate how differently people from different demographics experience different types of interpersonal challenges. Our findings confirm the negative association between interpersonal challenges and the feeling of welcomeness in OSS, with this relationship being more pronounced among gender minorities and people with disabilities. We found that different challenges have unique impacts on how people feel welcomed, with variations across gender, race, and disability groups. We also provide evidence that people from gender minorities and with disabilities are more likely to experience interpersonal challenges than their counterparts, especially when we analyze stalking, sexual harassment, and gender. Our insights benefit OSS communities, informing potential strategies to improve the landscape of interpersonal relationships, ultimately fostering more inclusive and welcoming communities.  
  
  " Feng Lin, Dong Jae Kim, Tse-Hsun (Peter) Chen, "SOEN-101: Code Generation by Emulating Software Process Models Using Large Language Model Agents"  
 Abstract:  Software process models are essential to facilitate collaboration and communication among software teams to solve complex development tasks. Inspired by these software engineering practices, we present FlowGen – a code generation framework that emulates software process models based on multiple Large Language Model (LLM) agents. We emulate three process models, FlowGen$_{Waterfall}$, FlowGen$_{TDD}$, and FlowGen$_{Scrum}$, by assigning LLM agents to embody roles (i.e., requirement engineer, architect, developer, tester, and scrum master) that correspond to everyday development activities and organize their communication patterns. The agents work collaboratively using chain-of-thought and prompt composition with continuous self-refinement to improve the code quality. We use GPT-3.5 as our underlying LLM and several baselines (RawGPT, CodeT, Reflexion) to evaluate code generation on four benchmarks: HumanEval, HumanEval-ET, MBPP, and MBPP-ET. Our findings show that FlowGen$_{Scrum}$ excels compared to other process models, achieving a Pass@1 of 75.2, 65.5, 82.5, and 56.7 in HumanEval, HumanEval-ET, MBPP, and MBPP-ET, respectively (an average of 15% improvement over RawGPT). Compared with other state-of-the-art techniques, FlowGen$_{Scrum}$ achieves a higher Pass@1 in MBPP compared to CodeT, with both outperforming Reflexion. Notably, integrating CodeT into FlowGen$_{Scrum}$ resulted in statistically significant improvements, achieving the highest Pass@1 scores. Our analysis also reveals that the development activities impacted code smell and exception handling differently, with design and code review adding more exception handling and reducing code smells. Finally, FlowGen models maintain stable Pass@1 scores across GPT-3.5 versions and temperature values, highlighting the effectiveness of software process models in enhancing the quality and stability of LLM-generated code.  
  
  Linfeng Liang, Yao Deng, Kye Morton, Valtteri Kallinen, Alice James, Avishkar Seth, Endrowednes Kuantama, Subhas Mukhopadhyay, Richard Han, Xi Zheng, "GARL: Genetic Algorithm-Augmented Reinforcement Learning to Detect Violations in Marker-Based Autonomous Landing Systems"  
 Abstract:  Automated Uncrewed Aerial Vehicle (UAV) landing is crucial for autonomous UAV services such as monitoring, surveying, and package delivery. It involves detecting landing targets, perceiving obstacles, planning collision-free paths, and controlling UAV movements for safe landing. Failures can lead to significant losses, necessitating rigorous simulation-based testing for safety. Traditional offline testing methods, limited to static environments and predefined trajectories, may miss violation cases caused by dynamic objects like people and animals. Conversely, online testing methods require extensive training time, which is impractical with limited budgets. To address these issues, we introduce GARL, a framework combining a genetic algorithm (GA) and reinforcement learning (RL) for efficient generation of diverse and real landing system failures within a practical budget. GARL employs GA for exploring various environment setups offline, reducing the complexity of RL's online testing in simulating challenging landing scenarios. Our approach outperforms existing methods by up to 18.35% in violation rate and 58% in diversity metric. We validate most discovered violation types with real-world UAV tests, pioneering the integration of offline and online testing strategies for autonomous systems. This method opens new research directions for online testing, with our code available at https://anonymous.4open.science/r/drone_testing-5CF0/.  
  
  Siyuan Li, Yuekang Li, Zuxin Chen, Chaopeng Dong, Yongpan Wang, Hong Li, Yongle Chen, "Hongsong Zhu, ""TransferFuzz: Fuzzing with Historical Trace for Verifying Propagated Vulnerability Code""  
 Abstract:  Code reuse in software development frequently facilitates the spread of vulnerabilities, making the scope of affected software in CVE reports imprecise. Traditional methods primarily focus on identifying reused vulnerability code within target software, yet they cannot verify if these vulnerabilities can be triggered in new software contexts. This limitation often results in false positives. In this paper, we introduce TransferFuzz, a novel vulnerability verification framework, to verify whether vulnerabilities propagated through code reuse can be triggered in new software. Innovatively, we collected runtime information during the execution or fuzzing of the basic binary (the vulnerable binary detailed in CVE reports). This process allowed us to extract historical traces, which proved instrumental in guiding the fuzzing process for the target binary (the new binary that reused the vulnerable function). TransferFuzz introduces a unique Key Bytes Guided Mutation strategy and a Nested Simulated Annealing algorithm, which transfers these historical traces to implement trace-guided fuzzing on the target binary, facilitating the accurate and efficient verification of the propagated vulnerability. Our evaluation, conducted on widely recognized datasets, shows that TransferFuzz can quickly validate vulnerabilities previously unverifiable with existing techniques. Its verification speed is 2.5 to 26.2 times faster than existing methods. Moreover, TransferFuzz has proven its effectiveness by expanding the impacted software scope for 15 vulnerabilities listed in CVE reports, increasing the number of affected binaries from 15 to 53. The datasets and source code used in this article are available at https://anonymous.4open.science/r/TransferFuzz-E9B3.  
  
  " Chong Wang, Jianan Liu, Xin Peng, Yang Liu, "Yiling Lou, ""Boosting Static Resource Leak Detection via LLM-based Resource-Oriented Intention Inference""  
 Abstract:  Resource leaks, caused by resources not being released after acquisition, often lead to performance issues and system crashes. Existing static detection techniques rely on mechanical matching of predefined resource acquisition/release APIs and null-checking conditions to find unreleased resources, suffering from both (1) false negatives caused by the incompleteness of predefined resource acquisition/release APIs and (2) false positives caused by the incompleteness of resource reachability validation identification. To overcome these challenges, we propose InferROI, a novel approach that leverages the exceptional code comprehension capability of large language models (LLMs) to directly infer resource-oriented intentions (acquisition, release, and reachability validation) in code. InferROI first prompts the LLM to infer involved intentions for a given code snippet, and then incorporates a two-stage static analysis approach to check control-flow paths for resource leak detection based on the inferred intentions. We evaluate the effectiveness of InferROI in both resource-oriented intention inference and resource leak detection. Experimental results on the DroidLeaks and JLeaks datasets demonstrate InferROI achieves promising bug detection rate (59.3% and 62.5%) and false alarm rate (18.6% and 19.5%). Compared to three industrial static detectors, InferROI detects 14~45 and 149~485 more bugs in DroidLeaks and JLeaks, respectively. When applied to real-world open-source projects, InferROI identifies 29 unknown resource leak bugs (verified by authors), with 7 of them being confirmed by developers. In addition, the results of an ablation study underscores the importance of combining LLM-based inference with static analysis. Finally, manual annotation indicated that InferROI achieved a precision of 74.6% and a recall of 81.8% in intention inference, covering more than 60% resource types involved in the datasets.  
  
  " Wonhoi Kim, Hocheol Nam, Muoi Tran, Amin Jalilov, Zhenkai Liang, Sang Kil Cha, Min Suk Kang, "Fork State-Aware Differential Fuzzing for Blockchain Consensus Implementations"  
 Abstract:  Blockchain networks allow multiple client implementations of the same consensus algorithm by different developers to coexist in the same system. Ensuring correct implementations among these heterogeneous clients is crucial, as even slight semantic discrepancies in their implementations can lead to safety failures. While existing fuzzing frameworks have discovered implementation flaws in blockchain, they suffer from several challenges in testing them with sequences of conflicting blocks, called forks. Existing tools fail to adequately assess the fork-handling processes in blockchain implementations when relying on traditional code coverage feedback, which lacks the granularity needed to navigate the diverse and complex fork-handling scenarios. This paper introduces Forky, a fork state-aware differential fuzzing framework designed to detect implementation discrepancies within the critical fork-handling process with its novel fork-aware mutation and fork-diversifying feedback mechanisms. We test Forky on the two most influential blockchain projects: Bitcoin and Ethereum, which are the representatives of the two major blockchain consensus algorithm families, Proofof-Work (PoW) and Proof-of-Stake (PoS) consensus algorithms.  
  
  Yueke Zhang, Anda Liang, Xiaohan Wang, Pamela J. Wisniewski, Fengwei Zhang, Kevin Leach, "Yu Huang, ""Who’s Pushing the Code: An Exploration of GitHub Impersonation""  
 Abstract:  GitHub is one of the largest open-source software (OSS) communities for software development and collaboration. Impersonation in the OSS communities refers to the malicious act of assuming another user's identity, often aiming to gain unauthorized access to code, manipulate project outcomes, or spread misinformation. With several recent real-world attacks resulting from impersonation, this issue is becoming and increasingly problematic concern within the OSS community. We present the first exploration of the impact of impersonation in GitHub. Specifically, we conduct structured interviews with 17 real-world OSS contributors about their perception of impersonation and corresponding mitigations. Our study reveals that, in general, GitHub users lack awareness of impersonation and underestimate the severity of its implications. After witnessing the impersonation, they show significant concern for the OSS community. Meanwhile, we also demonstrate that the current best practices (i.e., commit signing) that might mitigate impersonation must be improved to increase widespread acceptance and adoption. We also present and discuss participant perceptions of potential ways to mitigate GitHub impersonation. We collect a dataset comprising 12.5 million commits to investigate the current status of impersonation. Interestingly, we also find out that impersonation is not currently detected. We observe that existing commit histories treat impersonation behavior identically to pull request events, resulting in a lack of detection methods for impersonation.  
  
  " Zhenpeng Chen, Xinyue Li, Jie M. Zhang, Federica Sarro, Yang Liu, "Diversity Drives Fairness: Ensemble of Higher Order Mutants for Intersectional Fairness of Machine Learning Software"  
 Abstract:  Intersectional fairness is a critical requirement for Machine Learning (ML) software, demanding fairness across subgroups defined by multiple protected attributes. This paper introduces FairHOME, a novel ensemble approach using higher order mutation of inputs to enhance intersectional fairness of ML software during the inference phase. Inspired by social science theories highlighting the benefits of diversity, FairHOME generates mutants representing diverse subgroups for each input instance, thus broadening the array of perspectives to foster a fairer decision-making process. Unlike conventional ensemble methods that combine predictions made by different models, FairHOME combines predictions for the original input and its mutants, all generated by the same ML model, to reach a final decision. Notably, FairHOME is even applicable to deployed ML software as it bypasses the need for training new models. We extensively evaluate FairHOME against six state-of-the-art fairness improvement methods across 24 decision-making tasks using widely adopted metrics. FairHOME consistently outperforms existing methods across all metrics considered. On average, it enhances intersectional fairness by 47.3%, surpassing the currently best-performing method by 10.1 percentage points.  
  
  Junjielong Xu, Ying Fu, Shin Hwei Tan, "Pinjia He, ""Aligning the Objective of LLM-based Program Repair""  
 Abstract:  Large language models (LLMs) have achieved decent results on automated program repair (APR). However, the next token prediction training objective of decoder-only LLMs (e.g., GPT-4) is misaligned with the masked span prediction objective of current infilling-style methods, which impedes LLMs from fully leveraging pre-trained knowledge for program repair. In addition, while some LLMs can locate and repair bugs in certain functions using the related artifacts (e.g., test cases), existing methods still depend on statement-level fault localization methods to provide a list of buggy hunks for repair. This restriction hinders LLMs from exploring potential patches beyond the given locations. In this paper, we investigate a new approach to adapt LLMs to program repair. Our core insight is that LLM’s APR capability can be greatly improved by simply aligning the output to their training objective and allowing them to refine the whole program without first identifying faulty statements. Based on this insight, we designed D4C, a straightforward prompting framework for APR. D4C can repair 180 bugs correctly in Defects4J, with each patch being sampled only 10 times. This surpasses the SOTA APR methods with perfect fault localization by 10% and reduces the patch sampling number by 90%. Our findings reveal that (1) objective alignment is crucial for fully exploiting LLM’s pre-trained capability, and (2) replacing the traditional localize-buggy-hunks-then-repair workflow with direct debugging is more effective for LLM-based APR methods. Thus, we believe this paper introduces a new mindset for harnessing LLMs in APR.  
  
  " Aidan Z.H. Yang, Sophia Kolak, Vincent Hellendoorn, Ruben Martins, Claire Le Goues, "Revisiting Unnaturalness for Automated Program Repair in the Era of Large Language Models"  
 Abstract:  Language models have improved by orders of magnitude with the recent emergence of Transformer-based Large Language Models (LLMs). LLMs have demonstrated their ability to generate "natural" code that is highly similar to code written by professional developers. One intermediate value an LLM can emit is entropy, which measures the naturalness of a token of code. We hypothesize that entropy can be used to improve the performance of Automated Program Repair (APR) tasks. While much progress has been made in Automated Program Repair (APR), fault localization techniques suffer from a lack of diversity in ranking scores, patch generation tools tend to be inefficient as all tests need to run before determining if a patch is likely to be correct, and patch ranking often suffers from the test-suite over-fitting problem. However, using an LLM directly for APR introduces concerns for training data leakage. In this work, we introduce a novel way of using the entropy of LLMs in combination with prior APR tools to improve all stages of APR. By using only the prefix and suffix context of a line or block of code to describe naturalness, we can use LLMs to localize faults and rank patches all while eliminating the dependency for test-suites. We show that entropy is highly complementary with prior fault localization tools. Our proposed method achieves a 108% top-1 score improvement over SBFL. When using entropy for patch ranking and classification, our proposed method can rank correct patches more effectively than state-of-the-art machine learning tools with an 49% improvement in top-1. Our work suggests that LLMs can be an effective addition to compliment prior APR tasks while minimizing both the test-suite over-fitting problem and the LLM data leakage problem.  
  
  Boqi Chen, José Antonio Hernández López, Gunter Mussbacher, "Dániel Varró, ""The Power of Types: Exploring the Impact of Type Checking on Neural Bug Detection in Dynamically Typed Languages""  
 Abstract:  [Motivation] Automated bug detection in dynamically typed languages such as Python is essential for maintaining code quality. The lack of mandatory type annotations in such languages can lead to errors that are challenging to identify early with traditional static analysis tools. Recent progress in deep neural networks has led to increased use of neural bug detectors. In statically typed languages, a type checker is integrated into the compiler and thus taken into consideration when the neural bug detector is designed for these languages. [Problem] However, prior studies overlook this aspect during the training and testing of neural bug detectors for dynamically typed languages. When an optional type checker is used, assessing existing neural bug detectors on bugs easily detectable by type checkers may impact their performance estimation. Moreover, including these bugs in the training set of neural bug detectors can shift their detection focus toward the wrong type of bugs. [Contribution] We explore the impact of type checking on various neural bug detectors for variable misuse bugs, a common type targeted by neural bug detectors. Existing synthetic and real-world datasets are type-checked to evaluate the prevalence of type-related bugs. Then, we investigate how type-related bugs influence the training and testing of the neural bug detectors. [Findings] Our findings indicate that existing bug detection datasets contain a significant proportion of type-related bugs. Building on this insight, we discover integrating the neural bug detector with a type checker can be beneficial, especially when the code is annotated with types. Further investigation reveals neural bug detectors perform better on type-related bugs than other bugs. Moreover, removing type-related bugs from the training data helps improve neural bug detectors’ ability to identify bugs beyond the scope of type checkers.  
  
  " Verya Monjezi, Ashutosh Trivedi, Vladik Kreinovich, Saeid Tizpaz-Niari, "Fairness Testing through Extreme Value Theory"  
 Abstract:  Data-driven software is increasingly being used as a critical component of automated decision-support systems. Since this class of software learns its logic from historical data, it can encode or amplify discriminatory practices. Previous research on algorithmic fairness has focused on improving “average-case” fairness. On the other hand, fairness at the extreme ends of the spectrum, which often signifies lasting and impactful shifts in societal attitudes, has received significantly less emphasis. Leveraging the statistics of extreme value theory (EVT), we propose a novel fairness criterion called extreme counterfactual discrimination (ECD). This criterion estimates the worst-case amounts of disadvantage in outcomes for individuals solely based on their memberships in a protected group. Utilizing tools from search-based software engineering and generative AI, we present a randomized algorithm that samples a statistically significant set of points from the tail of ML outcome distributions even if the input dataset lacks a sufficient number of relevant samples. We conducted several experiments on four ML models (deep neural networks, logistic regression, and random forests) over 10 socially relevant tasks from the literature on algorithmic fairness. First, we evaluate the generative AI methods and find that they generate sufficient samples to infer valid EVT distribution in 95% of cases. Remarkably, we found that the prevalent bias mitigators reduce the average-case discrimination but increase the worst-case discrimination significantly in 35% of cases. We also observed that even the tail-aware mitigation algorithm MiniMax-Fairness—increased the worst-case discrimination in 30% of cases. We propose a novel ECD-based mitigator that improves fairness in the tail in 90% of cases with no degradation of the average-case discrimination. We hope that the EVT framework serves as a robust tool for evaluating fairness in both average-case and worst-case discrimination.  
  
  Jiageng Li, Zhen Dong, Chong Wang, Haozhen You, Cen Zhang, Yang Liu, "Xin Peng, ""LLM Based Input Space Partitioning Testing for Library APIs""  
 Abstract:  Automated library APIs testing is difficult as it requires exploring a vast space of parameter inputs that may involve objects with complex data types. Existing search based approaches, with limited knowledge of relations between object states and program branches, often suffer from the low efficiency issue, i.e., tending to generate invalid inputs. Symbolic execution based approaches can effectively identify such relations, but fail to scale to large programs. In this work, we present an LLM-based input space partitioning testing approach, LISP, for library APIs. The approach leverages LLMs to understand the code of a library API under test and perform input space partitioning based on its understanding and rich common knowledge. Specifically, we provide the signature and code of the API under test to LLMs, with the expectation of obtaining a text description of each input space partition of the API under test. Then, the generated text description is employed to guide the input generation process for each partition, ultimately resulting in test suites that systematically explore the program behavior of the API. We evaluate LISP on 10 popular open-source Java libraries (e.g., apache/commons-lang with 2.6k stars, guava with 48.8k stars on GitHub). Our experiment results show that LISP is effective in library API testing. It significantly outperforms state-of-the-art tool EvoSuite in terms of branch coverage. On average, LISP achieves 67.82% branch coverage, surpassing EvoSuite by 1.21 times. In total, LISP triggers 404 exceptions or errors in the experiments, and discovers 13 previously unknown vulnerabilities during evaluation, which have been assigned CVE IDs.  
  
  " Qiaolin Qin, Heng Li, Ettore Merlo, "Maxime Lamothe, ""Automated, Unsupervised, and Auto-parameterized Inference of Data Patterns and Anomaly Detection""  
 Abstract:  With the advent of data-centric and machine learning (ML) systems, data quality is playing an increasingly critical role for ensuring the overall quality of software systems. Alas, data preparation, an essential step towards high data quality, is known to be a highly effort-intensive process. Although prior studies have dealt with one of the most impacting issues, data pattern violations, we observe that these studies usually require data-specific configurations (i.e., parameterized) or a certain set of fully curated data as learning examples (i.e., supervised). Both approaches require domain knowledge and depend on users' deep understanding of their data, and are often effort-intensive. In this paper, we introduce RIOLU: Regex Inferencer autO-parameterized Learning with Uncleaned data. RIOLU is fully automated, is automatically parameterized, and does not need labeled samples. We observe that RIOLU can generate precise patterns from datasets in various domains, with a high F1 score of 97.2%, exceeding the state-of-the-art baseline. In addition, according to our experiment on five datasets with anomalies, RIOLU can automatically estimate a data column's error rate, draw normal patterns, and predict anomalies from unlabeled data with higher performance (up to 800.4% improvement in terms of F1) than the state-of-the-art baseline. Furthermore, RIOLU can even outperform ChatGPT in terms of both accuracy (12.3% higher F1) and efficiency (10% less inference time). With user involvement, a variation (a guided version) of RIOLU can further boost its precision (up to 37.4% improvement in terms of F1). Our evaluation in an industrial setting further demonstrates the practical benefits of RIOLU.  
  
  " Bimpe Ayoola, Miikka Kuutilla, Rina Wehbe, "Paul Ralph, ""User Personas Improve Social Sustainability by Encouraging Software Developers to Deprioritize Antisocial Features""  
 Abstract:  \textit{Background}: Sustainable software development involves creating software in a manner that meets present goals without undermining our ability to meet future goals. In a software engineering context, sustainability has at least four dimensions: ecological, economic, social, and technical. No interventions for improving social sustainability in software engineering have been tested in rigorous lab-based experiments, and little evidence-based guidance is available. \textit{Objective}: The purpose of this study is to evaluate the effectiveness of two interventions---stakeholder maps and persona models---for improving social sustainability by improving software feature prioritization. \textit{Method}: We conducted a randomized controlled factorial experiment with 79 undergraduate computer science students. Participants were randomly assigned to one of four groups and asked to prioritize a backlog of prosocial, neutral, and antisocial user stories for a shopping mall's digital screen display and facial recognition software. Participants received either persona models, a stakeholder map, both, or neither. We compared the differences in prioritization levels assigned to prosocial and antisocial user stories using Cumulative Link Mixed Model regression. \textit{Results}: Participants who received persona models gave significantly lower priorities to anti-social user stories but no significant difference was evident for pro-social user stories. The effects of the stakeholder map were not significant. The interaction effects were not significant. \textit{Conclusion}: Providing aspiring software professionals with well-crafted persona models causes them to de-prioritize anti-social software features. The impact of persona modelling on sustainable software development therefore warrants further study with more experience professionals. Moreover, the novel methodological strategy of assessing social sustainability behavior through backlog prioritization appears feasible in lab-based settings.  
  
  " Daniel Erhabor, Sreeharsha Udayashankar, Meiyappan Nagappan, Samer Al-Kiswany, "Measuring the Runtime Performance of C++ Code Written by Humans using GitHub Copilot"  
 Abstract:  GitHub Copilot is an artificially intelligent program- ming assistant used by many developers. While a few studies have evaluated the security risks of using Copilot, there has not been any study to show if it aids developers in producing code with better runtime performance. We evaluate the runtime performance of C++ code produced when developers use GitHub Copilot versus when they do not. To this end, we conducted a user study with 32 participants where each participant solved two C++ programming problems, one with Copilot and the other without it and measured the runtime performance of the participants’ solutions on our test data. Our results suggest that using Copilot may produce C++ code with a statistically significantly slower runtime performance.  
  
  Yulong Ye, Tao Chen, "Miqing Li, ""Distilled Lifelong Self-Adaptation for Configurable Systems""  
 Abstract:  Modern configurable systems provide tremendous opportunities for engineering future intelligent software systems. A key difficulty thereof is how to effectively self-adapt the configuration of a running system such that its performance (e.g., runtime and throughput) can be optimized under time-varying workloads. This unfortunately remains unaddressed in existing approaches as they either overlook the available past knowledge or rely on static exploitation of past knowledge without reasoning the usefulness of information when planning for self-adaptation. In this paper, we tackle this challenging problem by proposing DLiSA, a framework that self-adapts configurable systems. DLiSA comes with two properties: firstly, it supports lifelong planning, and thereby the planning process runs continuously throughout the lifetime of the system, allowing dynamic exploitation of the accumulated knowledge for rapid adaptation. Secondly, the planning for a newly emerged workload is boosted via distilled knowledge seeding, in which the knowledge is dynamically purified such that only useful past configurations are seeded when necessary, mitigating misleading information. Extensive experiments suggest that the proposed DLiSA significantly outperforms state-of-the-art approaches, demonstrating a performance improvement of up to 255\% and a resource acceleration of up to 2.22$\times$ on generating promising adaptation configurations. All data and sources can be found at our anonymous site: https://github.com/Anonymous-DLiSA/DLiSA.  
  
  " Zachary Karas, Benjamin Gold, Violet Zhou, Noah Reardon, Thad Polk, Catie Chang, Yu Huang, "Studying Programmers Without Programming: Investigating Expertise Using Resting State fMRI"  
 Abstract:  Expert programmers are more effective at coding activities, but the reasons for this remain elusive. Accordingly, recent research has used neuroimaging such as fMRI to analyze how expert programmers might think as they perform coding activities. Those experiments have all involved specific programming tasks (i.e., comprehension), but have been unable to detect systematic differences based on coding experience. By using tasks, however, those studies may limit the number and type of brain networks involved. In Cognitive Neuroscience, researchers commonly analyze resting-state data, in which participants’ brain activity is recorded as they lay idle in the scanner. The brain’s functional organization is plastic, and can change with experience. These changes can be measured at rest, making this a suitable data type for studying how programming activities affect neural organization over time. In this paper, we analyzed the resting state scans from 150 participants, 96 of whom were programmers. We found increased connectivity in programmers between brain regions involved in language, math, and the temporal attention. Non-programmers demonstrated more connectivity with regions involved in social and emotional cognition. We found that as years of programming experience increases, connectivity decreases between two regions associated with visual processing during reading and articulation, respectively.  
  
  Setu Kumar Basak, K. Virgil English, Ken Ogura, Vitesh Kambara, Bradley Reaves, Laurie Williams, "AssetHarvester: A Static Analysis Tool for Detecting Secret-Asset Pairs in Software Artifacts"  
 Abstract:  GitGuardian monitored secrets exposure in public GitHub repositories and reported that developers leaked over 12 million secrets (database and other credentials) in 2023, indicating a 113\% surge from 2021. Despite the availability of secret detection tools, developers ignore the tools' reported warnings because of false positives (25\%-99\%). However, each secret protects assets of different values accessible through asset identifiers (a DNS name and a public or private IP address). The asset information for a secret can aid developers in filtering false positives and prioritizing secret removal from the source code. However, existing secret detection tools do not provide the asset information, thus presenting difficulty to developers in filtering secrets only by looking at the secret value or finding the assets manually for each reported secret. \textit{The goal of our study is to aid software practitioners in prioritizing secrets removal by providing the assets information protected by the secrets through our novel static analysis tool.} We present AssetHarvester, a static analysis tool to detect secret-asset pairs in a repository. Since the location of the asset can be distant from where the secret is defined, we investigated secret-asset co-location patterns and found four patterns. To identify the secret-asset pairs of the four patterns, we utilized three approaches (pattern matching, data flow analysis, and fast-approximation heuristics). We curated a benchmark of 1,791 secret-asset pairs of four database types extracted from 188 public GitHub repositories to evaluate the performance of AssetHarvester. AssetHarvester demonstrates precision of (97\%), recall (90\%), and F1-score (94\%) in detecting secret-asset pairs. Our findings indicate that data flow analysis employed in AssetHarvester detects secret-asset pairs with 0\% false positives and aids in improving the recall of secret detection tools. Additionally, AssetHarvester shows 43\% increase in precision for database secret detection compared to existing detection tools through the detection of assets, thus reducing developer's alert fatigue.  
  
  Yining She, Sumon Biswas, Christian Kästner, Eunsuk Kang, "FairSense: Long-Term Fairness Analysis of ML-Enabled Systems"  
 Abstract:  Algorithmic fairness of machine learning (ML) models has raised significant concern in the recent years. Many testing, verification, and bias mitigation techniques have been proposed to identify and reduce fairness issues in ML models. The existing methods are *model-centric* and designed to detect fairness issues under *static settings*. However, many ML-enabled systems operate in a dynamic environment where the predictive decisions made by the system *impact* the environment, which in turn affects future decision-making. Such a self-reinforcing *feedback loop* can cause fairness violations in the long term, even if the immediate outcomes are fair. In this paper, we propose a simulation-based framework called FairSense to detect and analyze long-term unfairness in ML-enabled systems. In particular, the framework targets systems with an ML model that is trained over tabular data using supervised learning. Given a fairness requirement, FairSense performs *Monte-Carlo simulation* to enumerate evolution traces for each system configuration. Then, FairSense performs *sensitivity analysis* on the space of system parameters to understand the impact of configuration decisions on long-term fairness of the system. We demonstrate FairSense's potential utility through three real-world case studies: Loan lending, opioids risk scoring, and predictive policing.  
  
  Islem BOUZENIA, Premkumar Devanbu, Michael Pradel, "RepairAgent: An Autonomous, LLM-Based Agent for Program Repair"  
 Abstract:  Automated program repair has emerged as a powerful technique to mitigate the impact of software bugs on system reliability and user experience. This paper introduces RepairAgent, the first work to address the program repair challenge through an autonomous agent based on a large language model (LLM). Unlike existing deep learning-based approaches, which prompt a model with a fixed prompt or in a fixed feedback loop, our work treats the LLM as an agent capable of autonomously planning and executing actions to fix bugs by invoking suitable tools. RepairAgent freely interleaves gathering information about the bug, gathering repair ingredients, and validating fixes, while deciding which tools to invoke based on the gathered information and feedback from previous fix attempts. Key contributions that enable RepairAgent include a set of tools that are useful for program repair, a dynamically updated prompt format that allows the LLM to interact with these tools, and a finite state machine that guides the agent in invoking the tools. Our evaluation on the popular Defects4J dataset demonstrates RepairAgent’s effectiveness in autonomously repairing 164 bugs, including 39 bugs not fixed by prior techniques. Interacting with the LLM imposes an average cost of 270,000 tokens per bug, which, under the current pricing of OpenAI’s GPT-3.5 model, translates to 14 cents per bug. To the best of our knowledge, this work is the first to present an autonomous, LLM-based agent for program repair, paving the way for future agent-based techniques in software engineering.  
  
  Sarah Fakhoury, Markus Kuppe, Shuvendu Lahiri, Tahina Ramananandro, "Nikhil Swamy, ""3DGen: AI-Assisted Generation of Provably Correct Binary Format Parsers""  
 Abstract:  Improper parsing of attacker-controlled input is a leading source of software security vulnerabilities, especially when programmers transcribe informal format descriptions into efficient parsing logic in low-level, memory unsafe languages. Several researchers have proposed formal specification languages for data formats from which efficient code can be extracted. However, distilling informal requirements into formal specifications is challenging and, despite their benefits, new, formal languages are hard for people to learn and use. In this work, we present 3DGen, a framework that makes use of AI agents to transform mixed informal input, including natural language documents and example inputs into format specifications in a language called 3D. To support humans in understanding and trusting the generated specifications, 3DGen uses symbolic methods to also synthesize test inputs that can be validated against an external oracle. Symbolic test generation also helps in distinguishing multiple plausible solutions. Through a process of repeated refinement, 3DGen produces a 3D specification that conforms to a test suite, and which yields safe, efficient, provably correct, parsing code in C. We have evaluated 3DGen on 20 Internet standard formats, demonstrating the potential for AI-agents to produce formally verified C code at a non-trivial scale. A key enabler is the use of a domain-specific language to limit AI outputs to a class for which automated, symbolic analysis is tractable.  
  
  " Paschal Amusuo, Kyle A. Robinson, Tanmay Singla, Huiyun Peng, Aravind Machiry, Santiago Torres-Arias, Laurent Simon, "James C Davis, ""$ZTD_{JAVA}$: Mitigating Software Supply Chain Vulnerabilities via Zero-Trust Dependencies""  
 Abstract:  Third-party libraries like Log4j accelerate software application development but introduce substantial risk. Vulnerabilities in these libraries have led to Software Supply Chain (SSC) attacks that compromised resources within the host system. These attacks benefit from current application permissions approaches: third-party libraries are implicitly trusted in the application runtime. An application runtime designed with Zero-Trust Architecture (ZTA) principles — secure access to resources, continuous monitoring, and least-privilege enforcement — could mitigate SSC attacks, as it would give zero implicit trust to these libraries. However, no individual security defense incorporates these principles at a low runtime cost. This paper proposes Zero-Trust Dependencies (ZTD) to mitigate SSC vulnerabilities: we apply the NIST ZTA to software applications. First, we assess the expected effectiveness and configuration cost of Zero-Trust Dependencies using a study of third-party software libraries and their vulnerabilities. Then, we present a system design, $ZTD_{sys}$, that enables the application of Zero-Trust Dependencies to software applications and a prototype, $ZTD_{JAVA}$, for Java applications. Finally, with evaluations on recreated vulnerabilities and realistic applications, we show that $ZTD_{JAVA}$ can defend against prevalent vulnerability classes, introduces negligible cost, and is easy to configure and use.  
  
  " Salma Begum Tamanna, Gias Uddin, Song Wang, Lan Xia, "Longyu Zhang, ""ChatGPT Inaccuracy Mitigation during Technical Report Understanding: Are We There Yet?""  
 Abstract:  Hallucinations, the tendency to produce irrelevant/incorrect responses, are prevalent concerns in generative AI-based tools like ChatGPT. Although hallucinations in ChatGPT are studied for textual responses, it is unknown how ChatGPT hallucinates for technical texts that contain both textual and technical terms. We surveyed 47 software engineers and produced a benchmark of 412 Q&A pairs from the bug reports of two OSS projects. We find that a RAG-based ChatGPT (i.e., ChatGPT tuned with the benchmark issue reports) is 36.4% correct when producing answers to the questions, due to two reasons 1) limitations to understand complex technical contents in code snippets like stack traces, and 2) limitations to integrate contexts denoted in the technical terms and texts. We present CHIME (ChatGPT Inaccuracy Mitigation Engine) whose underlying principle is that if we can preprocess the technical reports better and guide the query validation process in ChatGPT, we can address the observed limitations. CHIME uses context-free grammar (CFG) to parse stack traces in technical reports. CHIME then verifies and fixes ChatGPT responses by applying metamorphic testing and query transformation. In our benchmark, CHIME shows 30.3% more correction over ChatGPT responses. In a user study, we find that the improved responses with CHIME are considered more useful than those generated from ChatGPT without CHIME  
  
  " Xin Yin, Chao Ni, Xiaodan Xu, "Xiaohu Yang, ""What You See Is What You Get: Attention-based Self-guided Automatic Unit Test Generation""  
 Abstract:  Software defects heavily affect software's functionalities and may cause huge losses. Recently, many AI-based approaches have been proposed to detect defects, which can be divided into two categories: software defect prediction and automatic unit test generation. While these approaches have made great progress in software defect detection, they still have several limitations in practical application, including the low confidence of prediction models and the inefficiency of unit testing models. To address these limitations, we propose a WYSIWYG (i.e., What You See Is What You Get) approach: \textbf{A}ttention-based Self-guided Automatic \textbf{U}nit Test \textbf{G}en\textbf{ER}ation (AUGER), which contains two stages: defect detection and error triggering. In the former stage, \toolname first detects the proneness of defects. Then, in the latter stage, it guides to generate unit tests for triggering such an error with the help of critical information obtained by the former stage. To evaluate the effectiveness of \toolname, we conduct a large-scale experiment by comparing with the state-of-the-art (SOTA) approaches on the widely used datasets (i.e., Bears, Bugs.jar, and Defects4J). AUGER makes great improvements by 4.7\% to 35.3\% and 17.7\% to 40.4\% in terms of F1-score and Precision in defect detection, and can trigger 23 to 84 more errors than SOTAs in unit test generation. Besides, we also conduct a further study to verify the generalization in practical usage by collecting a new dataset from real-world projects.  
  
  " Yizhou Chen, Zeyu Sun, Guoqing Wang, "Dan Hao, ""Gpass: a Goal-adaptive Neural Theorem Prover based on Coq for Automated Formal Verification""  
 Abstract:  Formal verification is a crucial means to assure software quality. Regrettably, the manual composition of verification scripts proves to be both laborious and time-consuming. In response, researchers have put forth automated theorem prover approaches; however, these approaches still grapple with several limitations. These limitations encompass insufficient handling of lengthy proof steps, difficulty in aligning the various components of a Coq program with the requirements and constraints of the proof goal, and inefficiencies. To surmount these limitations, we present Gpass, a goal-adaptive neural theorem prover based on deep learning technology. Firstly, we design a unique sequence encoder for Gpass that completely scans previous proof tactics through multiple sliding windows and provides information related to the current proof step. Secondly, Gpass incorporates a goal-adaptive feature integration module to align the reasoning process with the requirements of the proof goal. Finally, we devise a parameter selection method based on loss values and loss slopes to procure parameter sets with diverse distributions, thereby facilitating the exploration of various proof tactics. Experimental results demonstrate that Gpass attains better performance on the extensive CoqGym benchmark and proves 11.03\%-96.37\% more theorems than the prior work most closely related to ours. We find that the orthogonality between Gpass and CoqHammer proves their complementary capabilities, and together they prove a total of 3,774 theorems, which is state-of-the-art performance. In addition, we propose an efficiency optimisation approach that allows Gpass to achieve performance beyond Diva at one-sixth of the parameter sets.  
  
  " Yanchen Lu, Hongyu Lin, Zehua He, Haitao Xu, Zhao Li, Shuai Hao, Liu Wang, Haoyu Wang, "Kui Ren, ""TacDroid: Detection of Illicit Apps through Hybrid Analysis of UI-based Transition Graphs""  
 Abstract:  Illicit apps have emerged as a thriving underground industry, driven by their substantial profitability. These apps either offer users restricted services (e.g., porn and gambling) or engage in fraudulent activities like scams. Despite the widespread presence of illicit apps, scant attention has been directed towards this issue, with several existing detection methods predominantly relying on static analysis alone. However, given the burgeoning trend wherein an increasing number of mobile apps achieve their core functionality through dynamic resource loading, depending solely on static analysis proves inadequate. To address this challenge, in this paper, we introduce TacDroid, a novel approach that integrates dynamic analysis for dynamic content retrieval with static analysis to mitigate the limitations inherent in both methods, i.e., the low coverage of dynamic analysis and the low accuracy of static analysis. Specifically, TacDroid conducts both dynamic and static analyses on an Android app to construct dynamic and static User Interface Transition Graphs (UTGs), respectively. These two UTGs are then correlated to create an intermediate UTG. Subsequently, TacDroid embeds graph structure and utilizes an enhanced Graph Autoencoder (GAE) model to predict transitions between nodes. Through link prediction, TacDroid effectively eliminates false positive transition edges stemming from misjudgments in static analysis and supplements false negative transition edges overlooked in the intermediate UTG, thereby generating a comprehensive and accurate UTG. Finally, TacDroid determines the legitimacy of an app and identifies its category based on the app's UTG. Our evaluation results highlight the outstanding accuracy of TacDroid in detecting illicit apps. It significantly surpasses the state-of-the-art work, achieving an F1-score of 96.73%. This work represents a notable advancement in the identification and categorization of illicit apps.  
  
  " Ravishka Rathnasuriya, Zijie Zhao, Wei Yang, "CodeImprove: Program Adaptation for Deep Code Models"  
 Abstract:  Leveraging deep learning (DL)-based code analysis tools to solve software engineering tasks is becoming increasingly popular. Code models often suffer performance degradation due to various reasons (e.g., code data shifts). Retraining is often required to address these issues, but frequent model updates are costly in labeling and deployment. In this paper, we explore an alternative solution: Adapting the program inputs to the code models. This can be achieved by two steps: 1) input validation that focuses on identifying whether an input is an out-of-scope input program that are beyond a model’s handling capability, and 2) input adaptation that adapts out-of-scope inputs to become in-scope inputs. Validating program input is challenging, as current techniques focus on continuous inputs such as image data and fail with discrete inputs like code data, which have unique characteristics and are processed differently by deep learning models. Adapting out-of-scope programs is also challenging due to their vast search spaces. Therefore, in this paper, we propose CodeImprove, which distinguishes out-of-scope from normal inputs and converts such out-of-scope inputs back to in-scope inputs through program transformation. In particular, we propose a validity score metric to identify out-of-scope inputs and leverage genetics algorithms to apply semantic preserving program transformation to convert out-of-scope inputs to in-scope inputs. Our experimental results show CodeImprove can enhance upto 8.78% of accuracy, and 51.28% of relative improvements in three code models on two SE tasks. Additionally, our input validation is promising in detecting outof-scope inputs (AUC score of 0.924).  
  
  Yanfu Yan, Viet Duong, Huajie Shao, "Denys Poshyvanyk, ""Towards More Trustworthy Deep Code Models by Enabling Out-of-Distribution Detection""  
 Abstract:  Numerous machine learning (ML) models have been developed, including those for software engineering (SE) tasks, under the assumption that training and testing data come from the same distribution. However, train and test distributions often differ, as training datasets rarely encompass the entire distribution, while test distribution tends to shift over time. Hence, when confronted with out-of-distribution (OOD) instances that differ from the training data, a reliable and trustworthy SE ML model must be capable of detecting them to either abstain from making predictions, or potentially forward these OODs to appropriate models handling other categories or tasks. In this paper, we develop two types of SE-specific OOD detection models, unsupervised and weakly-supervised OOD detection for code. The unsupervised OOD detection approach is trained solely on in-distribution samples while the weakly-supervised approach utilizes a tiny number of OOD samples to further enhance the detection performance in various OOD scenarios. Extensive experimental results demonstrate that our proposed methods significantly outperform the baselines in detecting OOD samples from four different scenarios simultaneously and also positively impact a main code understanding task.  
  
  " Jiyang Zhang, Yu Liu, Pengyu Nie, Junyi Jessy Li, Milos Gligoric, "exLong: Generating Exceptional Behavior Tests with Large Language Models"  
 Abstract:  Many popular programming languages, including C#, Java, and Python, support exceptions. Exceptions are thrown during program execution if an unwanted event happens, e.g., a method is invoked with an illegal argument value. Software developers write exceptional behavior tests (EBTs) to check that their code detects unwanted events and throws appropriate exceptions. Prior research studies have shown the importance of EBTs, but those studies also highlighted that developers put most of their efforts on “happy paths”, e.g., paths without unwanted events. To help developers fill the gap, we present the first framework, dubbed EXLÓNG, that automatically generates EBTs. EXLÓNG is a large language model instruction-tuned from CodeLlama and embeds reasoning about traces that lead to throw statements, conditional expressions that guard throw statements, and non-exceptional behavior tests that execute similar traces. We compare EX LÓNG with the state-of-the-art models for test generation (CAT-LM) and one of the strongest foundation models (GPT3.5), as well as with analysis-based tools for test generation (Randoop and EvoSuite). Our results show that EXLÓNG outperforms existing models and tools. Furthermore, we contributed several pull requests to open-source projects and 23 EBTs generated by EXLÓNG were already accepted.  
  
  Jake Zappin, Trevor Stalnaker, Oscar Chaparro, Denys Poshyvanyk, "When Quantum Meets Classical: Characterizing Hybrid Quantum-Classical Issues Discussed in Developer Forums"  
 Abstract:  Recent advances in quantum computing have sparked excitement that this new computing paradigm could solve previously intractable problems. However, due to the faulty nature of current quantum hardware and quantum-intrinsic noise, the full potential of quantum computing is still years away. Hybrid quantum-classical computing has emerged as a possible compromise that achieves the best of both worlds. In this paper, we look at hybrid quantum-classical computing from a software engineering perspective and present the first empirical study focused on characterizing and evaluating recurrent issues faced by developers of hybrid quantum-classical applications. The study comprised a thorough analysis of 531 real-world issues faced by developers -- including software faults, hardware failures, quantum library errors, and developer mistakes -- documented in discussion threads from forums dedicated to quantum computing. By qualitatively analyzing such forum threads, we derive a comprehensive taxonomy of recurring issues in hybrid quantum-classical applications that can be used by both application and platform developers to improve the reliability of hybrid applications. The study considered how these recurring issues manifest and their causes, determining that hybrid applications are crash-dominant (74% of studied issues) and that errors were predominantly introduced by application developers (70% of issues). We conclude by identifying recurring obstacles for developers of hybrid applications and actionable recommendations to overcome them.  
  
  Xiang Cheng, Fan Sang, Yizhuo Zhai, Xiaokuan Zhang, "Taesoo Kim, ""RUG: Turbo LLM for Rust Unit Test Generation""  
 Abstract:  Unit testing improves software quality by evaluating isolated sections of the program. This approach alleviates the need for comprehensive program-wide testing and confines the potential error scope within the software. However, unit test development is time-consuming, requiring developers to create appropriate test contexts and determine input values to cover different code regions. This problem is particularly pronounced in Rust due to its intricate type system, making traditional unit test generation tools ineffective in Rust projects. Recently, LLM have demonstrated their proficiency in understanding programming language and completing software engineering tasks. However, merely prompting LLM with a basic prompt like ""generate unit test for the following source code"" often results in code with compilation errors. In addition, LLM-generated unit tests often have limited test coverage. To bridge this gap and harness the capabilities of LLM, we design and implement RUG, an end-to-end solution to automatically generate the unit test for Rust projects. To help LLM's generated test pass Rust strict compilation checks, RUG designs a semantic-aware bottom-up approach to divide the context construction problem into dependent sub-problems. It solves these sub-problems sequentially using an LLM and merges them to a complete context. To increase test coverage, RUG integrates coverage-guided fuzzing with LLM to prepare fuzzing harnesses. Applying RUG on 17 real-world Rust programs (average 24,937 LoC), we show that RUG can achieve a high code coverage, up to 71.37%, closely comparable to human effort (73.18%). We submitted 113 unit tests generated by RUG covering the new code: 53 of them have been accepted, 17 were rejected, and 43 are pending for review.  
  
  " Smit Soneshbhai Patel, Aashish Yadavally, Hridya Dhulipala, Tien N. Nguyen, "Planning a Large Language Model for Static Detection of Runtime Errors in Code Snippets"  
 Abstract:  Large Language Models (LLMs) have been excellent in generating and reasoning about source code and the textual descriptions. They can recognize patterns, syntax, and semantics in code, making them effective in several software engineering tasks. However, they exhibit weaknesses in reasoning about the program execution. They primarily operate on static code representations, failing to capture the dynamic behavior and state changes that occur during program execution. In this paper, we advance the capabilities of LLMs in reasoning about program execution. We propose ORCA, a novel approach that instructs an LLM to autonomously formulate a plan to navigate through a control flow graph (CFG) for predictive execution of (in)complete code snippets. It acts as a predictive interpreter to ``execute'' the code. As a downstream task, we use ORCA to statically identify any runtime errors for online code snippets. Early detection of runtime errors and defects in these snippets is crucial to prevent costly fixes later in the development cycle after they were adapted into a codebase. In our novel technique, we guide the LLM to pause at the branching point, focusing on the state of the symbol tables for variables' values, thus minimizing error propagation in the LLM's computation. We also instruct the LLM not to stop at each step in its execution plan, resulting the use of only one prompt to the LLM, thus much cost-saving. Our empirical evaluation showed that ORCA is effective and improves over the state-of-the-art approaches in predicting the execution traces and in runtime error detection.  
  
  Lezhi Ma, Shangqing Liu, Yi Li, Xiaofei Xie, "Lei Bu, ""SpecGen: Automated Generation of Formal Program Specifications via Large Language Models""  
 Abstract:  In the software development process, formal program specifications play a crucial role in various stages, including requirement analysis, software testing, and verification. However, manually crafting formal program specifications is rather difficult, making the job time-consuming and labor-intensive. Moreover, it is even more challenging to write specifications that correctly and comprehensively describe the semantics of complex programs. To reduce the burden on software developers, automated specification generation methods have emerged. However, existing methods usually rely on predefined templates or grammar, making them struggle to accurately describe the behavior and functionality of complex real-world programs. To tackle this challenge, we introduce SpecGen, a novel technique for formal program specification generation based on Large Language Models (LLMs). Our key insight is to overcome the limitations of existing methods by leveraging the code comprehension capability of LLMs. The process of SpecGen consists of two phases. The first phase employs a conversational approach that guides the LLM to generate appropriate specifications for a given program, aiming to utilize the ability of LLM to generate high-quality specifications. The second phase, designed for where the LLM fails to generate correct specifications, applies four mutation operators to the model-generated specifications and selects verifiable specifications from the mutated ones through a novel heuristic selection strategy by assigning different weights of variants in an efficient manner. We evaluate SpecGen on two datasets, including the SV-COMP Java category benchmark and a manually constructed dataset containing 120 programs. Experimental results demonstrate that SpecGen succeeds in generating verifiable specifications for 279 out of 385 programs, outperforming the existing LLM-based approaches and conventional specification generation tools like Houdini and Daikon. Further investigations on the quality of generated specifications indicate that SpecGen can comprehensively articulate the behaviors of the input program.  
  
  " Yifeng Di, Tianyi Zhang, "Enhancing Code Generation via Bidirectional Comment-Level Mutual Grounding"  
 Abstract:  Large Language Models (LLMs) have demonstrated unprecedented capability in code generation. However, LLM-generated code is still plagued with a wide range of functional errors, especially for complex programming tasks that LLMs have not seen before. Recent studies have shown that developers often struggle with inspecting and fixing incorrect code generated by LLMs, diminishing their productivity and trust in LLM-based code generation. Inspired by the mutual grounding theory in communication, we propose an interactive approach that leverages code comments as a medium for developers and LLMs to establish a shared understanding. Our approach facilitates iterative grounding by interleaving code generation, inline comment generation, and contextualized user feedback through editable comments to align generated code with developer intent. We evaluated our approach on two popular benchmarks and demonstrated that our approach significantly improved multiple state-of-the-art LLMs, e.g., 16.9\% Pass@1 improvement for code-davinci-002 on HumanEval. Furthermore, we conducted a user study with 12 participants in comparison to two baselines: (1) interacting with GitHub Copilot, and (2) interacting with a multi-step code generation paradigm called Multi-Turn Program Synthesis. Participants completed the given programming tasks 16.7\% faster and with 10.5\% improvement in task success rate when using our approach. Both results show that interactively refining code comments enables the collaborative establishment of mutual grounding, leading to more accurate code generation and higher developer confidence.  
  
  Zixuan Tan, Jiayuan Zhou, Xing Hu, Shengyi Pan, Kui Liu, "Xin Xia, ""Similar but Patched Code Considered Harmful -- The Impact of Similar but Patched Code on Recurring Vulnerability Detection and How to Remove Them""  
 Abstract:  Identifying recurring vulnerabilities is crucial for ensuring software security. Clone-based techniques, while widely used, often generate many false alarms due to the existence of similar but patched (SBP) code, which is similar to vulnerable code but is not vulnerable due to having been patched. Although the SBP code poses a great challenge to the effectiveness of existing approaches, it has not yet been well explored. In this paper, we propose a programming language agnostic framework, Fixed Vulnerability Filter (FVF), to identify and filter such SBP instances in vulnerability detection. Different from existing studies that leverage function signatures, our approach analyzes code change histories to precisely pinpoint SBPs and consequently reduce false alarms. Evaluation under practical scenarios confirms the effectiveness and precision of our approach. Remarkably, FVF identifies and filters 65.1% of false alarms from four vulnerability detection tools (i.e., ReDeBug, VUDDY, MVP, and an elementary hash-based approach) without yielding false positives. We further apply FVF to 1,081 real-world software projects and construct a real-world SBP dataset containing 6,827 SBP functions. Due to the SBP nature, the dataset can act as a strict benchmark to test the sensitivity of the vulnerability detection approach in distinguishing real vulnerabilities and SBPs. Using this dataset, we demonstrate the ineffectiveness of four state-of-the-art deep learning-based vulnerability detection approaches. Our dataset can help developers make a more realistic evaluation of vulnerability detection approaches and also paves the way for further exploration of real-world SBP scenarios.  
  
  " Wenchao Gu, Ensheng Shi, Yanlin Wang, Lun Du, Shi Han, Hongyu Zhang, Dongmei Zhang, Michael Lyu, "SECRET: Towards Scalable and Efficient Code Retrieval via Segmented Deep Hashing"  
 Abstract:  Code retrieval, which retrieves code snippets based on users’ natural language descriptions, is widely used by developers and plays a pivotal role in real-world software development. The advent of deep learning has shifted the retrieval paradigm from lexical-based matching towards leveraging deep learning models to encode source code and queries into vector representations, facilitating code retrieval according to vector similarity. Despite the effectiveness of these models, managing large-scale code bases presents significant challenges. Previous research propose deep hashing-based methods, which generate hash codes for queries and code snippets and use Hamming distance for rapid recall of code candidates. However, this approach’s reliance on linear scanning of the entire code base limits its scalability. To further improve the efficiency of large scale code retrieval, we propose a novel approach SECRET (Scalable and Efficient Code Retrieval via SegmEnTed deep hashing). SECRET converts long hash codes calculated by existing deep hashing approaches into several short hash code segments through an iterative training strategy. After training, SECRET recalls code candidates by looking up the hash tables for each segment, the time complexity of recall can thus be greatly reduced. Extensive experimental results demonstrate that SECRET can drastically reduce the retrieval time by at least 95% while achieving comparable or even higher performance of existing deep hashing approaches. Besides, SECRET also exhibits superior performance and efficiency compared to the classical hash table-based approach known as LSH under the same number of hash tables.  
  
  Shanto Rahman, Bala Naren Chanumolu, Suzzana Rafi, August Shi, "Wing Lam, ""Ranking Relevant Tests for Order-Dependent Flaky Tests""  
 Abstract:  One major challenge of regression testing is the presence of flaky tests, i.e., tests that may pass in one run but fail in another run for the same version of code. One prominent category of flaky tests are order-dependent (OD) flaky tests, which are tests that can pass or fail depending on the test-order in which the tests are run. To help developers debug and fix OD tests, prior work has attempted to automatically find OD-relevant tests, i.e., tests that will determine whether an OD test passes or fails depending on whether the OD-relevant tests are run before or after the OD test in the test-order. Prior work finds OD-relevant tests by running tests before the OD test, without regards to the tests’ likelihood of being OD-relevant tests. We propose RankF to rank tests in order of likelihood of being OD-relevant tests, so a developer can find the first OD-relevant test more quickly, without running tests as often. We propose two ranking approaches, each requiring different information. Our first approach, RankFL, relies on training a large-language model that analyzes test code. Our second approach, RankFO, relies on the analysis of prior test-order execution information. We evaluate our approaches on 155 OD tests from 34 modules across 24 open-source projects. We compare RankF against prior work baselines in terms of the time for finding the first OD-relevant test for an OD test. RankF on average finds the first OD-relevant test faster than the best of the baselines, providing speedups of 1.9X, 1.7X, and 2.6X for the three different types of OD-relevant tests we evaluate.  
  
  " Hang Du, Vijay Krishna Palepu, James A. Jones, "Leveraging Propagated Infection to Crossfire Mutants"  
 Abstract:  Mutation testing was proposed to identify weaknesses in test suites by repeatedly generating artificially faulty versions of the software (i.e., *mutants*) and determining if the test suite is sufficient to detect them (i.e., *kill* them). When the tests are insufficient, each surviving mutant provides an opportunity to improve the test suite. We conducted a study and found that many such surviving mutants (up to 84% for the subjects of our study) are detectable by simply augmenting existing tests with additional assertions, or *assertion amplification*. Moreover, we find that many of these mutants are detectable by multiple existing tests, giving developers options for how to detect them. To help with these challenges, we created a technique that performs memory-state analysis to identify candidate assertions that developers can use to detect the surviving mutants. Additionally, we build upon prior research that identifies "crossfiring" opportunities -- tests that coincidentally kill multiple mutants. To this end, we developed a theoretical model that describes the varying granularities that crossfiring can occur in the existing test suite, which provide opportunities and options for how to kill surviving mutants. We operationalize this model to an accompanying technique that optimizes the assertion amplification of the existing tests to crossfire multiple mutants with fewer added assertions, optionally concentrated within fewer tests. Our experiments show that we can kill *all* surviving mutants that are detectable with existing test data with only 1.1% of the identified assertion candidates, and increasing by a factor of 6x, on average, the number of killed mutants from amplified tests, over tests that do not crossfire.  

 Important Dates   AoE (UTC-12h)     

 Fri 13 Dec 2024  
  First Cycle: Camera-ready (of accepted revised papers) 
 Fri 13 Dec 2024  
  Second Cycle: Camera-ready (of directly accepted papers) 
 Wed 22 Jan 2025  
  Second Cycle: Final decision (of revised papers) 
 Wed 12 Feb 2025  
  Second Cycle: Camera-ready (of accepted revised papers) 
 Fri 29 Nov 2024  
  Second Cycle: Revision due 
 Fri 1 Nov 2024  
  Second Cycle: Notification 
 Fri 1 Nov 2024  
  First Cycle: Final decision (of revised papers) 
 Mon 7 - Thu 10 Oct 2024  
  Second Cycle: Author response period (3 days) 
 Fri 16 Aug 2024  
  First Cycle: Camera-ready (of directly accepted papers) 
 Fri 2 Aug 2024  
  First Cycle: Revision due 
 Fri 2 Aug 2024  
  Second Cycle: Submission 
 Fri 26 Jul 2024   
  Second Cycle: (Mandatory) Abstract 
 Fri 5 Jul 2024  
  First Cycle: Notification 
 Mon 10 - Thu 13 Jun 2024  
  First Cycle: Author response period (3 days) 
 Fri 22 Mar 2024  
  First Cycle: Submission 
 Fri 15 Mar 2024  
  First Cycle: (Mandatory) Abstract 

 Submission Link   
   
   https://icse2025.hotcrp.com/     
   
 Research Track    
   
 David Lo Program Co-Chair    
 Singapore Management University   
 Singapore 
  Corina S. Pasareanu Program Co-Chair    
 Carnegie Mellon University Silicon Valley, NASA Ames Research Center 
  Christian Bird Area Co-Chair for AI for Software Engineering    
 Microsoft Research   
 United States 
  Lin Tan Area Co-Chair for AI for Software Engineering    
 Purdue University   
 United States 
  Xin Xia Area Co-Chair for AI for Software Engineering    
 Huawei   
 China 
  Tegawendé F. Bissyandé Area Co-Chair for Analytics    
 University of Luxembourg   
 Luxembourg 
  Sarah Nadi Area Co-Chair for Analytics    
 New York University Abu Dhabi, University of Alberta   
 United Arab Emirates 
  Yuanfang Cai Area Co-Chair for Architecture and Design + Requirements and Modeling    
 Drexel University   
 United States 
  Raffaela Mirandola Area Co-Chair for Dependability and Security    
 Karlsruhe Institute of Technology (KIT)   
 Germany 
  Xin Peng Area Co-Chair for Evolution    
 Fudan University   
 China 
  Alexander Serebrenik Area Co-Chair for Human and Social Aspects    
 Eindhoven University of Technology   
 Netherlands 
  Yuriy Brun Area Co-Chair for Software Engineering for AI    
 University of Massachusetts   
 United States 
  Wei Le Area Co-Chair for Software Engineering for AI    
 Iowa State University   
 United States 
  Gordon Fraser Area Co-Chair for Testing and Analysis    
 University of Passau 
  Lars Grunske Area Co-Chair for Testing and Analysis    
 Humboldt-Universität zu Berlin   
 Germany 
  Sarfraz Khurshid Area Co-Chair for Testing and Analysis    
 University of Texas at Austin   
 United States 
  Rory Lipkis Review Process Co-Chairs    
 NASA Ames Research Center 
  Alex Potanin Review Process Co-Chairs    
 Australian National University   
 Australia 
  Bowen Xu Review Process Co-Chairs    
 North Carolina State University   
 United States 
  Silvia Abrahão    
 Universitat Politècnica de València   
 Spain 
  Nazareno Aguirre    
 University of Rio Cuarto and CONICET   
 Argentina 
  Iftekhar Ahmed    
 University of California at Irvine   
 United States 
  Eman Abdullah AlOmar    
 Stevens Institute of Technology   
 United States 
  Aldeida Aleti    
 Monash University   
 Australia 
  Saba Alimadadi    
 Simon Fraser University   
 Canada 
  Dalal Alrajeh    
 Imperial College London   
 United Kingdom 
  Gabin An    
 Korea Advanced Institute of Science and Technology   
 South Korea 
  Alberto Bacchelli    
 University of Zurich   
 Switzerland 
  Guangdong Bai    
 University of Queensland   
 Australia 
  Maria Teresa Baldassarre    
 Department of Computer Science, University of Bari   
 Italy 
  Sebastian Baltes    
 University of Bayreuth   
 Germany 
  Luciano Baresi    
 Politecnico di Milano   
 Italy 
  Earl T. Barr    
 University College London   
 United Kingdom 
  Gabriele Bavota    
 Software Institute @ Università della Svizzera Italiana   
 Switzerland 
  Andrew Begel    
 Carnegie Mellon University   
 United States 
  Jonathan Bell    
 Northeastern University   
 United States 
  Amel Bennaceur    
 The Open University, UK   
 United Kingdom 
  Thorsten Berger    
 Ruhr University Bochum 
  Dirk Beyer    
 LMU Munich   
 Germany 
  Cor-Paul Bezemer    
 University of Alberta   
 Canada 
  Tingting Bi    
 University of Western Australia & CSIRO's data61   
 Australia 
  Sumon Biswas    
 Case Western Reserve University   
 United States 
  Kelly Blincoe    
 University of Auckland   
 New Zealand 
  Amiangshu Bosu    
 Wayne State University 
  Chris Brown    
 Virginia Tech   
 United States 
  Timofey Bryksin    
 JetBrains Research   
 Cyprus 
  Tevfik Bultan    
 University of California at Santa Barbara   
 United States 
  Marcel Böhme    
 MPI-SP, Bochum   
 Germany 
  Joanna C. S. Santos    
 University of Notre Dame   
 United States 
  Haipeng Cai    
 University at Buffalo, SUNY   
 United States 
  Yan Cai    
 Institute of Software at Chinese Academy of Sciences   
 China 
  Gül Calikli    
 University of Glasgow   
 United Kingdom 
  Radu Calinescu    
 University of York, UK   
 United Kingdom 
  Matteo Camilli    
 Politecnico di Milano   
 Italy 
  Jialun Cao    
 Hong Kong University of Science and Technology   
 China 
  Manuel I. Capel    
 University of Granada   
 Spain 
  Gemma Catolino    
 University of Salerno   
 Italy 
  Sang Kil Cha    
 KAIST   
 South Korea 
  Saikat Chakraborty    
 Microsoft Research   
 United States 
  Wing-Kwong Chan    
 City University of Hong Kong   
 China 
  Satish Chandra    
 Google, Inc   
 United States 
  Preetha Chatterjee    
 Drexel University, USA   
 United States 
  Sudipta Chattopadhyay    
 Singapore University of Technology and Design 
  Chunyang Chen    
 TU Munich   
 Germany 
  Jiachi Chen    
 Sun Yat-sen University   
 China 
  Jieshan Chen    
 CSIRO's Data61   
 Australia 
  Junjie Chen    
 Tianjin University   
 China 
  Tao Chen    
 University of Birmingham   
 United Kingdom 
  Zhenpeng Chen    
 Nanyang Technological University   
 Singapore 
  Zhenyu Chen    
 Nanjing University   
 China 
  Shing-Chi Cheung    
 Hong Kong University of Science and Technology   
 China 
  Jürgen Cito    
 TU Wien   
 Austria 
  Jane Cleland-Huang    
 University of Notre Dame   
 United States 
  Michael Coblenz    
 UC San Diego 
  Zadia Codabux    
 University of Saskatchewan   
 Canada 
  Diego Costa    
 Concordia University, Canada   
 Canada 
  Andreea Costea    
 National University of Singapore   
 Singapore 
  Xuan Bach D. Le    
 The University of Melbourne   
 Australia 
  Kostadin Damevski    
 Virginia Commonwealth University 
  James C. Davis    
 Purdue University   
 United States 
  Giovanni Denaro    
 University of Milano - Bicocca 
  Tapajit Dey    
 Carnegie Mellon University Software Engineering Institute   
 United States 
  Massimiliano Di Penta    
 University of Sannio, Italy   
 Italy 
  Davide Di Ruscio    
 University of L'Aquila   
 Italy 
  Andrea Di Sorbo    
 University of Sannio   
 Italy 
  Stephan Diehl    
 Computer Science, University Trier, Germany   
 Germany 
  Oscar Dieste    
 Universidad Politécnica de Madrid   
 Spain 
  Danny Dig    
 University of Colorado Boulder, JetBrains Research   
 United States 
  Hyunsook Do    
 University of North Texas   
 United States 
  Alastair F. Donaldson    
 Imperial College London   
 United Kingdom 
  Zhen Dong    
 Fudan University   
 China 
  Xiaoning Du    
 Monash University   
 Australia 
  Neil Ernst    
 University of Victoria   
 Canada 
  Sarah Fakhoury    
 Microsoft Research   
 United States 
  Davide Falessi    
 University of Rome Tor Vergata, Italy   
 Italy 
  Mattia Fazzini    
 University of Minnesota   
 United States 
  Alessio Ferrari    
 CNR-ISTI   
 Italy 
  Eduardo Figueiredo    
 Federal University of Minas Gerais   
 Brazil 
  Antonio Filieri    
 AWS and Imperial College London   
 United States 
  Emily First    
 University of California, San Diego   
 United States 
  Bernd Fischer    
 Stellenbosch University   
 South Africa 
  Thomas Fritz    
 University of Zurich   
 Switzerland 
  Davide Fucci    
 Blekinge Institute of Technology   
 Sweden 
  Cuiyun Gao    
 Harbin Institute of Technology   
 China 
  Xiang Gao    
 Beihang University   
 China 
  Joshua Garcia    
 University of California, Irvine   
 United States 
  Christopher Gerking    
 Karlsruhe Institute of Technology (KIT)   
 Germany 
  Sepideh Ghanavati    
 University of Maine   
 United States 
  Jesus M. Gonzalez-Barahona    
 Universidad Rey Juan Carlos   
 Spain 
  Divya Gopinath    
 NASA Ames (KBR Inc.) 
  Alex Groce    
 Northern Arizona University   
 United States 
  John Grundy    
 Monash University   
 Australia 
  Muhammad Ali Gulzar    
 Virginia Tech   
 United States 
  Dan Hao    
 Peking University   
 China 
  Mark Harman    
 Meta Platforms, Inc. and UCL   
 United Kingdom 
  Hideaki Hata    
 Shinshu University   
 Japan 
  Fei He    
 Tsinghua University   
 China 
  Pinjia He    
 Chinese University of Hong Kong, Shenzhen   
 China 
  Hadi Hemmati    
 York University   
 Canada 
  Kihong Heo    
 KAIST   
 South Korea 
  Abram Hindle    
 University of Alberta   
 Canada 
  Thong Hoang    
 CSIRO's Data61 
  Jennifer Horkoff    
 Chalmers and the University of Gothenburg   
 Sweden 
  Xing Hu    
 Zhejiang University   
 China 
  Yu Huang    
 Vanderbilt University   
 United States 
  Yintong Huo    
 The Chinese University of Hong Kong   
 Hong Kong SAR China 
  Paola Inverardi    
 Gran Sasso Science Institute (GSSI)   
 Italy 
  Maliheh Izadi    
 Delft University of Technology   
 Netherlands 
  Gunel Jahangirova    
 King's College London   
 United Kingdom 
  Jiajun Jiang    
 Tianjin University   
 China 
  Lingxiao Jiang    
 Singapore Management University   
 Singapore 
  Yanjie Jiang    
 Peking University   
 China 
  Yu Jiang    
 Tsinghua University   
 China 
  Zhi Jin    
 Peking University   
 China 
  Christine Julien    
 University of Texas at Austin   
 United States 
  René Just    
 University of Washington   
 United States 
  Jean-Marc Jézéquel    
 Univ Rennes - IRISA   
 France 
  Gail Kaiser    
 Columbia University   
 United States 
  Marcos Kalinowski    
 Pontifical Catholic University of Rio de Janeiro (PUC-Rio)   
 Brazil 
  Yasutaka Kamei    
 Kyushu University   
 Japan 
  Eunsuk Kang    
 Carnegie Mellon University   
 United States 
  Hong Jin Kang    
 University of Sydney   
 Australia 
  Gregory Kapfhammer    
 Allegheny College   
 United States 
  Rick Kazman    
 University of Hawai‘i at Mānoa 
  Maria Kechagia    
 University College London   
 United Kingdom 
  Timo Kehrer    
 University of Bern   
 Switzerland 
  Jacky Keung    
 City University of Hong Kong   
 Hong Kong SAR China 
  Raffi Khatchadourian    
 City University of New York (CUNY) Hunter College   
 United States 
  Lwin Khin Shar    
 Singapore Management University   
 Singapore 
  Foutse Khomh    
 Polytechnique Montréal   
 Canada 
  Dongsun Kim    
 Korea University   
 South Korea 
  Mijung Kim    
 UNIST 
  Moonzoo Kim    
 KAIST / VPlusLab Inc.   
 South Korea 
  Jacques Klein    
 University of Luxembourg   
 Luxembourg 
  Raghavan Komondoor    
 Indian Institute of Science, India   
 India 
  Vladimir Kovalenko    
 JetBrains Research   
 Netherlands 
  Anil Koyuncu    
 Bilkent University   
 Turkey 
  Anne Koziolek    
 Karlsruhe Institute of Technology   
 Germany 
  Raula Gaikovina Kula    
 Osaka University   
 Japan 
  Wing Lam    
 George Mason University   
 United States 
  Yves Le Traon    
 University of Luxembourg, Luxembourg   
 Luxembourg 
  Owolabi Legunsen    
 Cornell University   
 United States 
  Grace Lewis    
 Carnegie Mellon Software Engineering Institute   
 United States 
  Chuanyi Li    
 Nanjing University   
 China 
  Li Li    
 Beihang University   
 China 
  Ming Li    
 Nanjing University   
 China 
  Shanshan Li    
 National University of Defense Technology   
 China 
  Yi Li    
 Nanyang Technological University   
 Singapore 
  Ying Li    
 School of Software and Microelectronics, Peking University, Beijing, China 
  Bin Lin    
 Radboud University   
 Netherlands 
  Yun Lin    
 Shanghai Jiao Tong University   
 China 
  Lingfeng Bao    
 Zhejiang University   
 China 
  Anna Liu    
 Amazon Web Services   
 United States 
  Kui Liu    
 Huawei   
 China 
  Yang Liu    
 Nanyang Technological University   
 Singapore 
  Yepang Liu    
 Southern University of Science and Technology   
 China 
  Zhongxin Liu    
 Zhejiang University   
 China 
  Yiling Lou    
 Fudan University   
 China 
  Qinghua Lu    
 Data61, CSIRO   
 Australia 
  Linghui Luo    
 Amazon Web Services   
 Germany 
  Thibaud Lutellier    
 University of Alberta   
 Canada 
  Michael Lyu    
 The Chinese University of Hong Kong 
  Jie M. Zhang    
 King's College London   
 United Kingdom 
  Lei Ma    
 The University of Tokyo & University of Alberta   
 Japan 
  Ivano Malavolta    
 Vrije Universiteit Amsterdam   
 Netherlands 
  Ravi Mangal    
 Colorado State University   
 United States 
  Shahar Maoz    
 Tel Aviv University   
 Israel 
  Lina Marsso    
 University of Toronto   
 Canada 
  Zainab Masood    
 Prince Sultan University   
 Saudi Arabia 
  Patrícia G. F. Matsubara    
 Federal University of Mato Grosso do Sul (UFMS)   
 Brazil 
  Anastasia Mavridou    
 KBR / NASA Ames Research Center   
 United States 
  Shane McIntosh    
 University of Waterloo   
 Canada 
  Sergey Mechtaev    
 Peking University   
 China 
  Tim Menzies    
 North Carolina State University   
 United States 
  Jose Merseguer    
 Universidad de Zaragoza, Spain   
 Spain 
  Ali Mesbah    
 University of British Columbia   
 Canada 
  Ana Milanova    
 Rensselaer Polytechnic Institute 
  Leandro Minku    
 University of Birmingham, UK   
 United Kingdom 
  Ran Mo    
 Central China Normal University   
 China 
  Kevin Moran    
 University of Central Florida   
 United States 
  Rajdeep Mukherjee    
 Amazon 
  Emerson Murphy-Hill    
 Google   
 United States 
  Maleknaz Nayebi    
 York University   
 Canada 
  Shiva Nejati    
 University of Ottawa   
 Canada 
  Tien N. Nguyen    
 University of Texas at Dallas   
 United States 
  Nan Niu    
 University of Cincinnati   
 United States 
  Yannic Noller    
 Ruhr University Bochum   
 Germany 
  Alexander Nolte    
 Eindhoven University of Technology   
 Netherlands 
  Nicole Novielli    
 University of Bari   
 Italy 
  Hakjoo Oh    
 Korea University   
 South Korea 
  Rocco Oliveto    
 University of Molise 
  Ipek Ozkaya    
 Carnegie Mellon University   
 United States 
  Ana Paiva    
 INESC TEC, Faculty of Engineering, University of Porto   
 Portugal 
  Fabio Palomba    
 University of Salerno   
 Italy 
  Rangeet Pan    
 IBM Research   
 United States 
  Mike Papadakis    
 University of Luxembourg   
 Luxembourg 
  Liliana Pasquale    
 University College Dublin & Lero   
 Ireland 
  Patrizio Pelliccione    
 Gran Sasso Science Institute, L'Aquila, Italy   
 Italy 
  Dietmar Pfahl    
 University of Tartu   
 Estonia 
  Hung Viet Pham    
 York University   
 Canada 
  Thuan Pham    
 University of Melbourne   
 Australia 
  Roberto Pietrantuono    
 Università di Napoli Federico II 
  Martin Pinzger    
 Universität Klagenfurt   
 Austria 
  Denys Poshyvanyk    
 William & Mary   
 United States 
  Chris Poskitt    
 Singapore Management University   
 Singapore 
  Michael Pradel    
 University of Stuttgart   
 Germany 
  Mukul Prasad    
 Amazon Web Services   
 United States 
  Rafael Prikladnicki    
 School of Technology at PUCRS University   
 Brazil 
  Sebastian Proksch    
 Delft University of Technology   
 Netherlands 
  Rahul Purandare    
 University of Nebraska-Lincoln   
 United States 
  Shengchao Qin    
 Fermat Labs, Huawei   
 China 
  Chaiyong Ragkhitwetsagul    
 Mahidol University, Thailand   
 Thailand 
  Azzurra Ragone    
 University of Bari   
 Italy 
  Akond Rahman    
 Auburn University, USA   
 United States 
  Hridesh Rajan    
 Iowa State University   
 United States 
  Moeketsi Raselimo    
 Humboldt-Universität zu Berlin   
 Germany 
  Awais Rashid    
 University of Bristol, UK   
 United Kingdom 
  Xiaoxue Ren    
 Zhejiang University   
 China 
  Filippo Ricca    
 DIBRIS, Università di Genova   
 Italy 
  Manuel Rigger    
 National University of Singapore   
 Singapore 
  Romain Robbes    
 CNRS, LaBRI, University of Bordeaux   
 France 
  Gregorio Robles    
 Universidad Rey Juan Carlos   
 Spain 
  Paige Rodeghero    
 Clemson University   
 United States 
  José Miguel Rojas    
 The University of Sheffield   
 United Kingdom 
  Nico Rosner    
 Amazon Web Services   
 United States 
  Cindy Rubio-González    
 University of California at Davis   
 United States 
  Barbara Russo    
 Free University of Bolzano   
 Italy 
  Jordan Samhi    
 University of Luxembourg, Luxembourg   
 Luxembourg 
  Simone Scalabrino    
 University of Molise   
 Italy 
  Patrizia Scandurra    
 University of Bergamo, Italy   
 Italy 
  Giuseppe Scanniello    
 University of Salerno   
 Italy 
  Weiyi Shang    
 University of Waterloo 
  Ridwan Salihin Shariffdeen    
 National University of Singapore   
 Singapore 
  Tushar Sharma    
 Dalhousie University   
 Canada 
  Elena Sherman    
 Boise State University   
 United States 
  Lin Shi    
 Beihang University, China   
 China 
  David Shriver    
 Software Engineering Institute   
 United States 
  Pavneet Singh Kochhar 
  Ezekiel Soremekun    
 Royal Holloway, University of London   
 United Kingdom 
  Romina Spalazzese    
 Malmö University   
 Sweden 
  Maria Spichkova    
 RMIT University, Australia   
 Australia 
  Paola Spoletini    
 Kennesaw State University   
 United States 
  Igor Steinmacher    
 Northern Arizona University   
 United States 
  Clay Stevens    
 Iowa State University 
  Daniel Strüber    
 Chalmers | University of Gothenburg / Radboud University   
 Sweden 
  Yulei Sui    
 UNSW   
 Australia 
  Allison Sullivan    
 University of Texas at Arlington   
 United States 
  Chengnian Sun    
 University of Waterloo   
 Canada 
  Jun Sun    
 Singapore Management University   
 Singapore 
  Xiaobing Sun    
 Yangzhou University   
 China 
  Xiaoyu Sun    
 Australian National University, Australia   
 Australia 
  Amjed Tahir    
 Massey University   
 New Zealand 
  Ladan Tahvildari    
 University of Waterloo   
 Canada 
  Shin Hwei Tan    
 Concordia University   
 Canada 
  Xin Tan    
 Beihang University   
 China 
  Yiming Tang    
 Rochester Institute of Technology   
 United States 
  Yutian Tang    
 University of Glasgow   
 United Kingdom 
  Leopoldo Teixeira    
 Federal University of Pernambuco   
 Brazil 
  Haoye Tian    
 University of Melbourne   
 Australia 
  Yuan Tian    
 Queen's University, Kingston, Ontario   
 Canada 
  Ayse Tosun    
 Istanbul Technical University   
 Turkey 
  Christoph Treude    
 Singapore Management University   
 Singapore 
  Bianca Trinkenreich    
 Colorado State University   
 United States 
  Rosalia Tufano    
 Università della Svizzera Italiana   
 Switzerland 
  Rachel Tzoref-Brill    
 IBM Research   
 Israel 
  Bogdan Vasilescu    
 Carnegie Mellon University   
 United States 
  Mandana Vaziri    
 IBM Research 
  Sira Vegas    
 Universidad Politecnica de Madrid   
 Spain 
  Michael Vierhauser    
 University of Innsbruck   
 Austria 
  Andreas Vogelsang    
 University of Cologne   
 Germany 
  Zhiyuan Wan    
 Zhejiang University   
 China 
  Chao Wang    
 University of Southern California   
 United States 
  Huiyan Wang    
 Nanjing University   
 China 
  Jingbo Wang    
 The University of Texas at Austin 
  Jingyi Wang    
 Zhejiang University   
 China 
  Junjie Wang    
 Institute of Software at Chinese Academy of Sciences   
 China 
  Qing Wang    
 Institute of Software at Chinese Academy of Sciences   
 China 
  Shangwen Wang    
 National University of Defense Technology   
 China 
  Shaohua Wang    
 Central University of Finance and Economics   
 China 
  Song Wang    
 York University   
 Canada 
  Xiaoyin Wang    
 University of Texas at San Antonio 
  Ying Wang    
 Northeastern University   
 China 
  Lili Wei    
 McGill University   
 Canada 
  Shiyi Wei    
 University of Texas at Dallas   
 United States 
  Mairieli Wessel    
 Radboud University   
 Netherlands 
  Michael Whalen    
 Amazon Web Services and the University of Minnesota   
 United States 
  Franz Wotawa    
 Graz University of Technology   
 Austria 
  Daoyuan Wu    
 The Hong Kong University of Science and Technology   
 Hong Kong SAR China 
  Andrzej Wąsowski    
 IT University of Copenhagen, Denmark   
 Denmark 
  Lu Xiao    
 Stevens Institute of Technology   
 United States 
  Xusheng Xiao    
 Arizona State University   
 United States 
  Yan Xiao    
 Sun Yat-sen University   
 China 
  Tao Xie    
 Peking University   
 China 
  Xiaofei Xie    
 Singapore Management University   
 Singapore 
  Xiaoyuan Xie    
 Wuhan University   
 China 
  Zhenchang Xing    
 CSIRO’s Data61; Australian National University   
 Australia 
  Chang Xu    
 Nanjing University   
 China 
  Xiwei (Sherry) Xu    
 Data61, CSIRO   
 Australia 
  Meng Yan    
 Chongqing University   
 China 
  Guowei Yang    
 University of Queensland   
 Australia 
  Jinqiu Yang    
 Concordia University   
 Canada 
  Wei Yang    
 University of Texas at Dallas   
 United States 
  Tuba Yavuz    
 University of Florida   
 United States 
  He Ye    
 Carnegie Mellon University 
  Jooyong Yi    
 UNIST   
 South Korea 
  Shin Yoo    
 Korea Advanced Institute of Science and Technology   
 South Korea 
  Tingting Yu    
 University of Connecticut   
 United States 
  Tao Yue    
 Beihang University   
 China 
  Andy Zaidman    
 Delft University of Technology   
 Netherlands 
  Fiorella Zampetti    
 University of Sannio, Italy   
 Italy 
  Andreas Zeller    
 CISPA Helmholtz Center for Information Security   
 Germany 
  Juan Zhai    
 University of Massachusetts at Amherst   
 United States 
  Hongyu Zhang    
 Chongqing University   
 China 
  Lingming Zhang    
 University of Illinois at Urbana-Champaign   
 United States 
  Mingxue Zhang    
 Chinese University of Hong Kong   
 China 
  Tao Zhang    
 Macau University of Science and Technology   
 China 
  Tianyi Zhang    
 Purdue University   
 United States 
  Ting Zhang    
 Singapore Management University   
 Singapore 
  Yuqun Zhang    
 Southern University of Science and Technology   
 China 
  Zhuo Zhang    
 Purdue University   
 United States 
  Jianjun Zhao    
 Kyushu University   
 Japan 
  Hao Zhong    
 Shanghai Jiao Tong University   
 China 
  Chenguang Zhu    
 Meta AI   
 United States 
  Thomas Zimmermann    
 Microsoft Research 
  Andrea Zisman    
 The Open University 
  Ying Zou    
 Queen's University, Kingston, Ontario 
  Marcelo d'Amorim    
 North Carolina State University   
 United States 
  Ronnie de Souza Santos    
 University of Calgary   
 Canada 
  Arie van Deursen    
 Delft University of Technology   
 Netherlands 
  Christina von Flach    
 Federal University of Bahia   
 Brazil 

 x  Thu 5 Dec 12:37    

  ICSE 2025   
  contact form    
  using conf.researchr.org  ( v1.67.1  )  
   Support page    
     
 Tracks  
 Main Plenaries   
  Research Track   
  SE In Practice (SEIP)   
  SE in Society (SEIS)   
  New Ideas and Emerging Results (NIER)   
  Journal-first Papers   
  Demonstrations   
  Artifact Evaluation   
  Industry Challenge Track   
  Software Engineering Education   
  Posters   
  Doctoral Symposium   
  Shadow PC   
  Workshops   
  Tutorials and Technical Briefings   
  New Faculty Symposium   
  Symposium on Software Engineering in the Global South (SEiGS)   
  SRC - ACM Student Research Competition   
  Social And Networking   
  Meetings and BOFs   
  Student Mentoring Workshop (SMeW)   
  Student Volunteers    
 Co-hosted Conferences  
 AST 2025   
  CAIN 2025   
  CHASE 2025   
  CSEE&T 2025   
  FORGE 2025   
  FormaliSE 2025   
  ICPC 2025   
  ICSR 2025   
  MOBILESoft 2025   
  MSR 2025   
  SEAMS 2025   
  TechDebt 2025   
  Workshops  
 AIOps 2025   
  APR 2025   
  BotSE 2025   
  DeepTest 2025   
  Designing 2025   
  EnCyCriS 2025   
  FTW 2025   
  FinanSE 2025   
  GAS 2025   
  GE@ICSE 2025   
  GI 2025   
  GREENS 2025   
  Gamify 2025   
  IDE 2025   
  IWSiB 2025   
  LLM4Code 2025   
  MO2RE 2025   
  NLBSE 2025   
  NSE 2025   
  Q-SE 2025   
  RAIE 2025   
  RAISE 2025   
  RoSE 2025   
  SATrends 2025   
  SBFT 2025   
  SE4ADS 2025   
  SERP4IoT 2025   
  SESoS   
  STATIC 2025   
  SVM 2025   
  WETSEB 2025   
  WSESE 2025    

 Attending  
 Venue: Rogers Centre, Ottawa (formerly Shaw Centre)   
  Registration   
  Hotels   
  Visa and Travel Authorization Information for ICSE 2025 and its Co-Located Events   
  Travelling to Ottawa   
  Getting Around Ottawa   
  Food at ICSE2025   
  Code of Conduct for ICSE 2025 and its Co-Located Events   
  Equity, Diversity, and Inclusion Plan for ICSE 2025   
  Fun Activities    
  ICSE on Facebook   
   
   ICSE on X   

  
Call for papers data: 
ICSE 2025   Sat 26 April - Sun 4 May 2025 Ottawa, Ontario, Canada    

 Toggle navigation        
 Attending | Venue: Rogers Centre, Ottawa (formerly Shaw Centre) 
  Registration 
  Hotels 
  Visa and Travel Authorization 
  Travelling to Ottawa 
  Getting Around Ottawa 
  Food at ICSE2025 
  Code of Conduct 
  Equity, Diversity, and Inclusion Plan 
  Fun Activities 
  Sponsorship 
  Program | Program Overview 
  Keynotes 
  Panels 
  Receptions and Banquet 
  Tutorials 
  Networking Events 
  Meetings and BOF events 
  Technical Briefings 
  Recreational Activities 
  Submitting to ICSE2025: Q&A 
  Tracks | ICSE 2025 
  Main Plenaries 
  Research Track 
  SE In Practice (SEIP) 
  SE in Society (SEIS) 
  New Ideas and Emerging Results (NIER) 
  Journal-first Papers 
  Demonstrations 
  Artifact Evaluation 
  Industry Challenge Track 
  Software Engineering Education 
  Posters 
  Doctoral Symposium 
  Shadow PC 
  Workshops 
  Tutorials and Technical Briefings 
  New Faculty Symposium 
  Symposium on Software Engineering in the Global South (SEiGS) 
  SRC - ACM Student Research Competition 
  Social And Networking 
  Meetings and BOFs 
  Student Mentoring Workshop (SMeW) 
  Student Volunteers 
   Co-hosted Conferences 
  AST 
  CAIN | CAIN 
  CAIN  Research and Experience Papers 
  CAIN  Doctoral Symposium 
  CAIN  Industry Talks 
  CAIN  Posters 
  CAIN  Scope 
  CHASE | CHASE 
  CHASE  Research Track 
  CHASE  Journal First and Journal Fast 
  CSEE&T  Software Engineering Education 
  FORGE | FORGE 
  FORGE  Research Papers 
  FORGE  Industry Papers 
  FORGE  Data and Benchmarking 
  FORGE  Tutorials 
  FormaliSE | FormaliSE  Research Track 
  FormaliSE  Artifact Track 
  ICPC | ICPC 
  ICPC  Early Research Achievements (ERA) 
  ICPC  Journal First 
  ICPC  Replications and Negative Results (RENE) 
  ICPC  Research Track 
  ICPC  Tool Demonstration 
  ICSR 
  MOBILESoft | MOBILESoft 
  MOBILESoft  Research Track 
  MOBILESoft  App Track 
  MSR | MSR 
  MSR  Data and Tool Showcase Track 
  MSR  FOSS Award 
  MSR  Industry Track 
  MSR  Junior PC 
  MSR  Awards 
  MSR  Mining Challenge 
  MSR  Registered Reports 
  MSR  Technical Papers 
  MSR  Vision and Reflection 
  SEAMS | SEAMS 
  SEAMS  Research Track 
  SEAMS  Artifact Track 
  TechDebt | TechDebt 
  TechDebt  Technical Papers 
  TechDebt  Journal First 
  TechDebt  Junior Program Committee 
  Workshops 
  AIOps  AI for Cloud Service 
  APR  Automated Program Repair 
  BotSE  Bots in SE 
  DeepTest  Deep Learning <-> Testing 
  Designing  Software Design 
  EnCyCriS  Cybersecurity of Critical Systems 
  FTW  Flaky Tests Workshop 
  FinanSE  SE Challenges in Financial Firms 
  GAS  Games and SE 
  GE@ICSE  Gender Equality 
  GI  Genetic Improvement 
  GREENS  Green and Sustainable Software 
  Gamify  Gamification in Development + V & V 
  IDE  Integrated Development Environments 
  IWSiB 
  LLM4Code  Large Language Models for Code 
  MO2RE  Multi-Discip. Requirements Engineering 
  NLBSE  Natural Language Based SE 
  NSE  Neuro-Symbolic SE 
  Q-SE  Quantum SE 
  RAIE  Responsible AI Engineering 
  RAISE  Requirements Engg. for AI-Powered SW 
  RoSE  Robotics Software Engineering 
  SATrends  Software Architecture Trends 
  SBFT  Search-Based and Fuzz testing 
  SE4ADS  SE for Autonomous Driving Systems 
  SERP4IoT  SE for the Internet of Things 
  SESoS  Systems of Systems and Ecosystems 
  STATIC  Advancing Static Analysis 
  SVM  Software Vulnerability Management 
  WETSEB  SE for Blockchain 
  WSESE  Empirical Studies in SE 
  Organization | ICSE 2025 Committees 
  Organizing Committee 
  Track Committees 
  Research Track 
  SE In Practice (SEIP) 
  SE in Society (SEIS) 
  New Ideas and Emerging Results (NIER) 
  Journal-first Papers 
  Demonstrations | Demonstrations 
  Program Committee 
  Artifact Evaluation 
  Industry Challenge Track 
  Posters 
  Doctoral Symposium | Doctoral Symposium 
  Program Committee 
  Shadow PC 
  Workshops 
  Tutorials and Technical Briefings 
  New Faculty Symposium 
  Symposium on Software Engineering in the Global South (SEiGS) | Organizing Committee 
  Program Committee 
  SRC - ACM Student Research Competition 
  Student Mentoring Workshop (SMeW) | Student Mentoring Workshop Organizing Committee 
  Student Mentoring Workshop Steering Committee 
  Student Volunteers 
  Contributors 
  People Index 
   Co-hosted Conferences 
  AST | Organizing Committee 
  Program Committee 
  Steering Committee 
  CAIN | Organizing Committee 
  Steering Committee 
  Research and Experience Papers 
  Doctoral Symposium 
  Industry Talks 
  Posters 
  CHASE | Organizing Committee 
  Program Committee 
  CSEE&T | Organizing Committee 
  Organization Committee 
  Program Committee 
  FORGE | Organization Committee 
  Research Papers 
  Industry Papers 
  Data and Benchmarking 
  Tutorials 
  FormaliSE | Research Track  Organization Committee 
  Research Track  Program Committee 
  Artifact Track 
  ICPC | Organizing Committee 
  Steering Committee 
  Early Research Achievements (ERA) 
  Journal First 
  Replications and Negative Results (RENE) 
  Research Track 
  Tool Demonstration 
  ICSR | Organizing Committee 
  Organization committee 
  Program Committee 
  MOBILESoft | Organizing Committee 
  Research Track 
  App Track  Organizing Committee 
  App Track  Program Committee 
  MSR | Organizing Committee 
  Data and Tool Showcase Track 
  FOSS Award 
  Industry Track 
  Junior PC 
  MSR Awards 
  Mining Challenge 
  Registered Reports 
  Technical Papers 
  Vision and Reflection 
  SEAMS | Organizing Committee 
  MIP Award Committee 
  Research Track 
  Artifact Track 
  TechDebt | Organizing Committee 
  Technical Papers 
  Junior Program Committee 
  Workshops 
  AIOps | N/A - check homepage 
  APR | Organizing Committee 
  Program Committee 
  BotSE | Organizing Committee 
  Publicity Chair 
  Web Chair 
  Program Committee 
  DeepTest | Organizing Committee 
  Program Committee 
  Designing | Organizing Committee 
  Program Committee 
  EnCyCriS | Organization Committee 
  Program Committee 
  FTW | Organizing Committee 
  Steering Committee 
  Program Committee 
  FinanSE | Organizing Committee 
  Program Committee 
  GAS | Co-organizers 
  GE@ICSE | Program Committee 
  GI | Organizing Committee 
  GREENS | N/A - check homepage 
  Gamify | Organizing Committee 
  Proceedings Chair 
  Publicity and Web Chair 
  IDE | Organizing Committee 
  Program Committee 
  IWSiB | Organizing committee 
  Program Committee 
  LLM4Code | N/A - check homepage 
  MO2RE | Organizing Committee 
  NLBSE | N/A - check homepage 
  NSE | Organising Committee 
  Program Committee 
  Q-SE | Organizing Committee 
  Program Committee 
  RAIE | Organizing Committee 
  Program Committee 
  Publicity and Web Chair 
  RAISE | Organizing Committee 
  Program Committee 
  RoSE | RoSE 2025 OC 
  RoSE 2025 PC 
  SATrends | Organising Committee 
  Program Committee 
  SBFT | N/A - check homepage 
  SE4ADS | Organizing Committee 
  Program Committee 
  Web & Publicity Chair 
  SERP4IoT | Program Committee 
  SESoS | Organizing Committee 
  Steering Committee 
  Proceedings Chair 
  Publicity Chairs 
  Program Committee 
  STATIC | Organizing Committee 
  Program Committee 
  SVM | Organizing Committee 
  Organizing Committee 
  Proceedings Chair 
  Program Committee 
  WETSEB | N/A - check homepage 
  WSESE | Organizing Committee 
  Web Chair 
  Proceedings Chair 
  Program Committee 
  Search 
  Series | Series 
    ICSE 2025 
  ICSE 2024 
  ICSE 2023 
  ICSE 2022 
  ICSE 2021 
  ICSE 2020 
  ICSE 2019 
  * ICSE 2018 * 
  Sign in 
  Sign up 

  ICSE 2025  ( series  ) /  Journal-first Papers ICSE 2025   
   
 Call for Contributions  
  
 ICSE has formed partnerships with prestigious software engineering journals to incorporate journal-first papers into the ICSE program. Through this initiative, authors of journal-first papers accepted in the partnering journals will be invited to present their work at ICSE, thus providing an opportunity for the authors to engage directly with the community and offering the ICSE attendees an additional dimension to the research track program.  
 The journals that support the journal-first model as partners with ICSE are:  
 IEEE Transaction on Software Engineering (IEEE TSE), 
  ACM Transactions on Software Engineering and Methodology (ACM TOSEM), 
  Empirical Software Engineering (EMSE). 
  Scope   
 A submission to the ICSE 2025 call for journal-first paper presentations must adhere to the following criteria:  
 The associated journal paper needs to have been accepted to a journal from the above list no earlier than November 1st, 2023 and no later than October 10th, 2024. 
  The paper is in the scope of the conference. 
  The paper does not exclusively report a secondary study, e.g., systematic reviews, mapping studies, surveys. 
  The paper reports completely new research results and/or presents novel contributions that significantly extend and were not previously reported in prior work. | The paper does not extend prior work solely with additional proofs or algorithms (or other such details presented for completeness), additional empirical results, or minor enhancements or variants of the results presented in the prior work. 
  As a rough guide, a journal-first paper should have at least 70% new content over and above the content of previous publications. As such, the expectation is that an extension of a full 8-10 pages conference or workshop paper would not be deemed a journal-first paper. 
  The paper has not been presented at, and is not under consideration for, journal-first programs of other conferences. 
  How to Submit   
 The authors of any paper that meets the above criteria are invited to submit a (maximum) one-page presentation proposal consisting of the paper’s title, the paper’s authors, an extended abstract, and a pointer to the original journal paper at the journal’s Web site. If the journal paper is related to or builds on a previously published work (such as a tool demo or a poster), then the proposal must clearly and explicitly justify why the paper should be considered a journal first paper.  
 The template to use is the IEEE conference proceedings template, specified in the IEEE Conference Proceedings Formatting Guidelines  (title in 24pt font and full text in 10pt type, LaTeX users must use \documentclass[10pt,conference]{IEEEtran} without including the compsoc or compsocconf options). It is important to note that these submissions will not  be published. The specified format is so that all the submissions have a consistent look to facilitate the selection process.  
 By submitting your article to an IEEE Publication, you are hereby acknowledging that you and your co-authors are subject to all IEEE Publications Policies.  
 Submission site: https://icse2025-jf.hotcrp.com/   
 Submissions must not exceed 1 page.  
 Evaluation and Selection   
 Authors will be invited to present their paper at ICSE 2025 after a check that the paper satisfies the above listed criteria. As the papers have already been reviewed and accepted by the journals, they will not be reviewed again for technical content. In the case that an exceptionally high number of submissions is received, not all papers will be selected. Priority will be given to the papers that:  
 Increase opportunities for authors to attend ICSE, who might not otherwise attend. In particular, priority will be given to papers whose specified presenter is not presenting other journal first or main research track papers. 
  Best fit the technical program, offering a balance across the conference topics: preference will be given to topics that are under-represented in the other tracks. 
  Would be ineligible as a journal-first presentation at the next SE3 conference (ICSE/FSE/ASE) – because its acceptance date precedes the next conference’s window of journal acceptance dates for JF presentations. 
  If there is further need to select from papers with the same priority, then they will be randomly selected. However, we will do our best to avoid this situation.  
 Important Dates   
 Journal First Submissions Deadline: 21 October 2024 
  Journal First Acceptance Notification: 10 December, 2024 
  Submissions close at 23:59 AoE (Anywhere on Earth, UTC-12) 
  Conference Attendance Expectation   
 If a submission is accepted for the journal-first program, the specified presenter must register for and attend the full 3-day technical conference and present the paper. The presentation is expected to be delivered in person, unless this is impossible due to travel limitations (related to, e.g., health, visa, or COVID-19 prevention). Each journal-first presentation will be scheduled in a session with topically-related Technical Track, NIER, SEIP, and/or SEIS papers. The journal-first manuscripts are published through the journals and will not be part of the ICSE proceedings. The journal-first papers will be listed in the conference program.  

 Important Dates   AoE (UTC-12h)     

 Tue 10 Dec 2024  
  Acceptance Notification 

 Journal-first Papers    
   
 Arnon Sturm Journal First Co-Chair    
 Ben-Gurion University of the Negev   
 Israel 
  Haipeng Cai Journal First Co-Chair    
 University at Buffalo, SUNY   
 United States 

 x  Thu 5 Dec 12:37    

  ICSE 2025   
  contact form    
  using conf.researchr.org  ( v1.67.1  )  
   Support page    
     
 Tracks  
 Main Plenaries   
  Research Track   
  SE In Practice (SEIP)   
  SE in Society (SEIS)   
  New Ideas and Emerging Results (NIER)   
  Journal-first Papers   
  Demonstrations   
  Artifact Evaluation   
  Industry Challenge Track   
  Software Engineering Education   
  Posters   
  Doctoral Symposium   
  Shadow PC   
  Workshops   
  Tutorials and Technical Briefings   
  New Faculty Symposium   
  Symposium on Software Engineering in the Global South (SEiGS)   
  SRC - ACM Student Research Competition   
  Social And Networking   
  Meetings and BOFs   
  Student Mentoring Workshop (SMeW)   
  Student Volunteers    
 Co-hosted Conferences  
 AST 2025   
  CAIN 2025   
  CHASE 2025   
  CSEE&T 2025   
  FORGE 2025   
  FormaliSE 2025   
  ICPC 2025   
  ICSR 2025   
  MOBILESoft 2025   
  MSR 2025   
  SEAMS 2025   
  TechDebt 2025   
  Workshops  
 AIOps 2025   
  APR 2025   
  BotSE 2025   
  DeepTest 2025   
  Designing 2025   
  EnCyCriS 2025   
  FTW 2025   
  FinanSE 2025   
  GAS 2025   
  GE@ICSE 2025   
  GI 2025   
  GREENS 2025   
  Gamify 2025   
  IDE 2025   
  IWSiB 2025   
  LLM4Code 2025   
  MO2RE 2025   
  NLBSE 2025   
  NSE 2025   
  Q-SE 2025   
  RAIE 2025   
  RAISE 2025   
  RoSE 2025   
  SATrends 2025   
  SBFT 2025   
  SE4ADS 2025   
  SERP4IoT 2025   
  SESoS   
  STATIC 2025   
  SVM 2025   
  WETSEB 2025   
  WSESE 2025    

 Attending  
 Venue: Rogers Centre, Ottawa (formerly Shaw Centre)   
  Registration   
  Hotels   
  Visa and Travel Authorization Information for ICSE 2025 and its Co-Located Events   
  Travelling to Ottawa   
  Getting Around Ottawa   
  Food at ICSE2025   
  Code of Conduct for ICSE 2025 and its Co-Located Events   
  Equity, Diversity, and Inclusion Plan for ICSE 2025   
  Fun Activities    
  ICSE on Facebook   
   
   ICSE on X   

  Important dates data: 
ICSE 2025   Sat 26 April - Sun 4 May 2025 Ottawa, Ontario, Canada    

 Toggle navigation        
 Attending | Venue: Rogers Centre, Ottawa (formerly Shaw Centre) 
  Registration 
  Hotels 
  Visa and Travel Authorization 
  Travelling to Ottawa 
  Getting Around Ottawa 
  Food at ICSE2025 
  Code of Conduct 
  Equity, Diversity, and Inclusion Plan 
  Fun Activities 
  Sponsorship 
  Program | Program Overview 
  Keynotes 
  Panels 
  Receptions and Banquet 
  Tutorials 
  Networking Events 
  Meetings and BOF events 
  Technical Briefings 
  Recreational Activities 
  Submitting to ICSE2025: Q&A 
  Tracks | ICSE 2025 
  Main Plenaries 
  Research Track 
  SE In Practice (SEIP) 
  SE in Society (SEIS) 
  New Ideas and Emerging Results (NIER) 
  Journal-first Papers 
  Demonstrations 
  Artifact Evaluation 
  Industry Challenge Track 
  Software Engineering Education 
  Posters 
  Doctoral Symposium 
  Shadow PC 
  Workshops 
  Tutorials and Technical Briefings 
  New Faculty Symposium 
  Symposium on Software Engineering in the Global South (SEiGS) 
  SRC - ACM Student Research Competition 
  Social And Networking 
  Meetings and BOFs 
  Student Mentoring Workshop (SMeW) 
  Student Volunteers 
   Co-hosted Conferences 
  AST 
  CAIN | CAIN 
  CAIN  Research and Experience Papers 
  CAIN  Doctoral Symposium 
  CAIN  Industry Talks 
  CAIN  Posters 
  CAIN  Scope 
  CHASE | CHASE 
  CHASE  Research Track 
  CHASE  Journal First and Journal Fast 
  CSEE&T  Software Engineering Education 
  FORGE | FORGE 
  FORGE  Research Papers 
  FORGE  Industry Papers 
  FORGE  Data and Benchmarking 
  FORGE  Tutorials 
  FormaliSE | FormaliSE  Research Track 
  FormaliSE  Artifact Track 
  ICPC | ICPC 
  ICPC  Early Research Achievements (ERA) 
  ICPC  Journal First 
  ICPC  Replications and Negative Results (RENE) 
  ICPC  Research Track 
  ICPC  Tool Demonstration 
  ICSR 
  MOBILESoft | MOBILESoft 
  MOBILESoft  Research Track 
  MOBILESoft  App Track 
  MSR | MSR 
  MSR  Data and Tool Showcase Track 
  MSR  FOSS Award 
  MSR  Industry Track 
  MSR  Junior PC 
  MSR  Awards 
  MSR  Mining Challenge 
  MSR  Registered Reports 
  MSR  Technical Papers 
  MSR  Vision and Reflection 
  SEAMS | SEAMS 
  SEAMS  Research Track 
  SEAMS  Artifact Track 
  TechDebt | TechDebt 
  TechDebt  Technical Papers 
  TechDebt  Journal First 
  TechDebt  Junior Program Committee 
  Workshops 
  AIOps  AI for Cloud Service 
  APR  Automated Program Repair 
  BotSE  Bots in SE 
  DeepTest  Deep Learning <-> Testing 
  Designing  Software Design 
  EnCyCriS  Cybersecurity of Critical Systems 
  FTW  Flaky Tests Workshop 
  FinanSE  SE Challenges in Financial Firms 
  GAS  Games and SE 
  GE@ICSE  Gender Equality 
  GI  Genetic Improvement 
  GREENS  Green and Sustainable Software 
  Gamify  Gamification in Development + V & V 
  IDE  Integrated Development Environments 
  IWSiB 
  LLM4Code  Large Language Models for Code 
  MO2RE  Multi-Discip. Requirements Engineering 
  NLBSE  Natural Language Based SE 
  NSE  Neuro-Symbolic SE 
  Q-SE  Quantum SE 
  RAIE  Responsible AI Engineering 
  RAISE  Requirements Engg. for AI-Powered SW 
  RoSE  Robotics Software Engineering 
  SATrends  Software Architecture Trends 
  SBFT  Search-Based and Fuzz testing 
  SE4ADS  SE for Autonomous Driving Systems 
  SERP4IoT  SE for the Internet of Things 
  SESoS  Systems of Systems and Ecosystems 
  STATIC  Advancing Static Analysis 
  SVM  Software Vulnerability Management 
  WETSEB  SE for Blockchain 
  WSESE  Empirical Studies in SE 
  Organization | ICSE 2025 Committees 
  Organizing Committee 
  Track Committees 
  Research Track 
  SE In Practice (SEIP) 
  SE in Society (SEIS) 
  New Ideas and Emerging Results (NIER) 
  Journal-first Papers 
  Demonstrations | Demonstrations 
  Program Committee 
  Artifact Evaluation 
  Industry Challenge Track 
  Posters 
  Doctoral Symposium | Doctoral Symposium 
  Program Committee 
  Shadow PC 
  Workshops 
  Tutorials and Technical Briefings 
  New Faculty Symposium 
  Symposium on Software Engineering in the Global South (SEiGS) | Organizing Committee 
  Program Committee 
  SRC - ACM Student Research Competition 
  Student Mentoring Workshop (SMeW) | Student Mentoring Workshop Organizing Committee 
  Student Mentoring Workshop Steering Committee 
  Student Volunteers 
  Contributors 
  People Index 
   Co-hosted Conferences 
  AST | Organizing Committee 
  Program Committee 
  Steering Committee 
  CAIN | Organizing Committee 
  Steering Committee 
  Research and Experience Papers 
  Doctoral Symposium 
  Industry Talks 
  Posters 
  CHASE | Organizing Committee 
  Program Committee 
  CSEE&T | Organizing Committee 
  Organization Committee 
  Program Committee 
  FORGE | Organization Committee 
  Research Papers 
  Industry Papers 
  Data and Benchmarking 
  Tutorials 
  FormaliSE | Research Track  Organization Committee 
  Research Track  Program Committee 
  Artifact Track 
  ICPC | Organizing Committee 
  Steering Committee 
  Early Research Achievements (ERA) 
  Journal First 
  Replications and Negative Results (RENE) 
  Research Track 
  Tool Demonstration 
  ICSR | Organizing Committee 
  Organization committee 
  Program Committee 
  MOBILESoft | Organizing Committee 
  Research Track 
  App Track  Organizing Committee 
  App Track  Program Committee 
  MSR | Organizing Committee 
  Data and Tool Showcase Track 
  FOSS Award 
  Industry Track 
  Junior PC 
  MSR Awards 
  Mining Challenge 
  Registered Reports 
  Technical Papers 
  Vision and Reflection 
  SEAMS | Organizing Committee 
  MIP Award Committee 
  Research Track 
  Artifact Track 
  TechDebt | Organizing Committee 
  Technical Papers 
  Junior Program Committee 
  Workshops 
  AIOps | N/A - check homepage 
  APR | Organizing Committee 
  Program Committee 
  BotSE | Organizing Committee 
  Publicity Chair 
  Web Chair 
  Program Committee 
  DeepTest | Organizing Committee 
  Program Committee 
  Designing | Organizing Committee 
  Program Committee 
  EnCyCriS | Organization Committee 
  Program Committee 
  FTW | Organizing Committee 
  Steering Committee 
  Program Committee 
  FinanSE | Organizing Committee 
  Program Committee 
  GAS | Co-organizers 
  GE@ICSE | Program Committee 
  GI | Organizing Committee 
  GREENS | N/A - check homepage 
  Gamify | Organizing Committee 
  Proceedings Chair 
  Publicity and Web Chair 
  IDE | Organizing Committee 
  Program Committee 
  IWSiB | Organizing committee 
  Program Committee 
  LLM4Code | N/A - check homepage 
  MO2RE | Organizing Committee 
  NLBSE | N/A - check homepage 
  NSE | Organising Committee 
  Program Committee 
  Q-SE | Organizing Committee 
  Program Committee 
  RAIE | Organizing Committee 
  Program Committee 
  Publicity and Web Chair 
  RAISE | Organizing Committee 
  Program Committee 
  RoSE | RoSE 2025 OC 
  RoSE 2025 PC 
  SATrends | Organising Committee 
  Program Committee 
  SBFT | N/A - check homepage 
  SE4ADS | Organizing Committee 
  Program Committee 
  Web & Publicity Chair 
  SERP4IoT | Program Committee 
  SESoS | Organizing Committee 
  Steering Committee 
  Proceedings Chair 
  Publicity Chairs 
  Program Committee 
  STATIC | Organizing Committee 
  Program Committee 
  SVM | Organizing Committee 
  Organizing Committee 
  Proceedings Chair 
  Program Committee 
  WETSEB | N/A - check homepage 
  WSESE | Organizing Committee 
  Web Chair 
  Proceedings Chair 
  Program Committee 
  Search 
  Series | Series 
    ICSE 2025 
  ICSE 2024 
  ICSE 2023 
  ICSE 2022 
  ICSE 2021 
  ICSE 2020 
  ICSE 2019 
  * ICSE 2018 * 
  Sign in 
  Sign up 

  ICSE 2025  ( series  ) /  Journal-first Papers ICSE 2025   
   
 Call for Contributions  
  
 ICSE has formed partnerships with prestigious software engineering journals to incorporate journal-first papers into the ICSE program. Through this initiative, authors of journal-first papers accepted in the partnering journals will be invited to present their work at ICSE, thus providing an opportunity for the authors to engage directly with the community and offering the ICSE attendees an additional dimension to the research track program.  
 The journals that support the journal-first model as partners with ICSE are:  
 IEEE Transaction on Software Engineering (IEEE TSE), 
  ACM Transactions on Software Engineering and Methodology (ACM TOSEM), 
  Empirical Software Engineering (EMSE). 
  Scope   
 A submission to the ICSE 2025 call for journal-first paper presentations must adhere to the following criteria:  
 The associated journal paper needs to have been accepted to a journal from the above list no earlier than November 1st, 2023 and no later than October 10th, 2024. 
  The paper is in the scope of the conference. 
  The paper does not exclusively report a secondary study, e.g., systematic reviews, mapping studies, surveys. 
  The paper reports completely new research results and/or presents novel contributions that significantly extend and were not previously reported in prior work. | The paper does not extend prior work solely with additional proofs or algorithms (or other such details presented for completeness), additional empirical results, or minor enhancements or variants of the results presented in the prior work. 
  As a rough guide, a journal-first paper should have at least 70% new content over and above the content of previous publications. As such, the expectation is that an extension of a full 8-10 pages conference or workshop paper would not be deemed a journal-first paper. 
  The paper has not been presented at, and is not under consideration for, journal-first programs of other conferences. 
  How to Submit   
 The authors of any paper that meets the above criteria are invited to submit a (maximum) one-page presentation proposal consisting of the paper’s title, the paper’s authors, an extended abstract, and a pointer to the original journal paper at the journal’s Web site. If the journal paper is related to or builds on a previously published work (such as a tool demo or a poster), then the proposal must clearly and explicitly justify why the paper should be considered a journal first paper.  
 The template to use is the IEEE conference proceedings template, specified in the IEEE Conference Proceedings Formatting Guidelines  (title in 24pt font and full text in 10pt type, LaTeX users must use \documentclass[10pt,conference]{IEEEtran} without including the compsoc or compsocconf options). It is important to note that these submissions will not  be published. The specified format is so that all the submissions have a consistent look to facilitate the selection process.  
 By submitting your article to an IEEE Publication, you are hereby acknowledging that you and your co-authors are subject to all IEEE Publications Policies.  
 Submission site: https://icse2025-jf.hotcrp.com/   
 Submissions must not exceed 1 page.  
 Evaluation and Selection   
 Authors will be invited to present their paper at ICSE 2025 after a check that the paper satisfies the above listed criteria. As the papers have already been reviewed and accepted by the journals, they will not be reviewed again for technical content. In the case that an exceptionally high number of submissions is received, not all papers will be selected. Priority will be given to the papers that:  
 Increase opportunities for authors to attend ICSE, who might not otherwise attend. In particular, priority will be given to papers whose specified presenter is not presenting other journal first or main research track papers. 
  Best fit the technical program, offering a balance across the conference topics: preference will be given to topics that are under-represented in the other tracks. 
  Would be ineligible as a journal-first presentation at the next SE3 conference (ICSE/FSE/ASE) – because its acceptance date precedes the next conference’s window of journal acceptance dates for JF presentations. 
  If there is further need to select from papers with the same priority, then they will be randomly selected. However, we will do our best to avoid this situation.  
 Important Dates   
 Journal First Submissions Deadline: 21 October 2024 
  Journal First Acceptance Notification: 10 December, 2024 
  Submissions close at 23:59 AoE (Anywhere on Earth, UTC-12) 
  Conference Attendance Expectation   
 If a submission is accepted for the journal-first program, the specified presenter must register for and attend the full 3-day technical conference and present the paper. The presentation is expected to be delivered in person, unless this is impossible due to travel limitations (related to, e.g., health, visa, or COVID-19 prevention). Each journal-first presentation will be scheduled in a session with topically-related Technical Track, NIER, SEIP, and/or SEIS papers. The journal-first manuscripts are published through the journals and will not be part of the ICSE proceedings. The journal-first papers will be listed in the conference program.  

 Important Dates   AoE (UTC-12h)     

 Tue 10 Dec 2024  
  Acceptance Notification 

 Journal-first Papers    
   
 Arnon Sturm Journal First Co-Chair    
 Ben-Gurion University of the Negev   
 Israel 
  Haipeng Cai Journal First Co-Chair    
 University at Buffalo, SUNY   
 United States 

 x  Thu 5 Dec 12:37    

  ICSE 2025   
  contact form    
  using conf.researchr.org  ( v1.67.1  )  
   Support page    
     
 Tracks  
 Main Plenaries   
  Research Track   
  SE In Practice (SEIP)   
  SE in Society (SEIS)   
  New Ideas and Emerging Results (NIER)   
  Journal-first Papers   
  Demonstrations   
  Artifact Evaluation   
  Industry Challenge Track   
  Software Engineering Education   
  Posters   
  Doctoral Symposium   
  Shadow PC   
  Workshops   
  Tutorials and Technical Briefings   
  New Faculty Symposium   
  Symposium on Software Engineering in the Global South (SEiGS)   
  SRC - ACM Student Research Competition   
  Social And Networking   
  Meetings and BOFs   
  Student Mentoring Workshop (SMeW)   
  Student Volunteers    
 Co-hosted Conferences  
 AST 2025   
  CAIN 2025   
  CHASE 2025   
  CSEE&T 2025   
  FORGE 2025   
  FormaliSE 2025   
  ICPC 2025   
  ICSR 2025   
  MOBILESoft 2025   
  MSR 2025   
  SEAMS 2025   
  TechDebt 2025   
  Workshops  
 AIOps 2025   
  APR 2025   
  BotSE 2025   
  DeepTest 2025   
  Designing 2025   
  EnCyCriS 2025   
  FTW 2025   
  FinanSE 2025   
  GAS 2025   
  GE@ICSE 2025   
  GI 2025   
  GREENS 2025   
  Gamify 2025   
  IDE 2025   
  IWSiB 2025   
  LLM4Code 2025   
  MO2RE 2025   
  NLBSE 2025   
  NSE 2025   
  Q-SE 2025   
  RAIE 2025   
  RAISE 2025   
  RoSE 2025   
  SATrends 2025   
  SBFT 2025   
  SE4ADS 2025   
  SERP4IoT 2025   
  SESoS   
  STATIC 2025   
  SVM 2025   
  WETSEB 2025   
  WSESE 2025    

 Attending  
 Venue: Rogers Centre, Ottawa (formerly Shaw Centre)   
  Registration   
  Hotels   
  Visa and Travel Authorization Information for ICSE 2025 and its Co-Located Events   
  Travelling to Ottawa   
  Getting Around Ottawa   
  Food at ICSE2025   
  Code of Conduct for ICSE 2025 and its Co-Located Events   
  Equity, Diversity, and Inclusion Plan for ICSE 2025   
  Fun Activities    
  ICSE on Facebook   
   
   ICSE on X

37. Conference SDH_3:
Navigation         Navigation            
 Julklappar    
         
  Julklappar    
 Hitta rätt julklapp    
 Kom i julstämning    
 Barnens jul    
 Redaktionens julklappstips    
 Författarnas julklappstips    
 Julleveranser    
 Presentkort    
 Julklappsinslagning    

 Kategorier    
         
  Skönlitteratur    
 Barn & tonår    
 Deckare    
 Psykologi & pedagogik    
 Mat & dryck    
   
 Alla kategorier A-Ö          
   
  Barn & tonår    
 Biografier    
 Data & IT    
 Deckare    
 Djur & natur    
 Ekonomi & ledarskap    
 Familj & hälsa    
 Film, radio & TV    
 Filosofi & religion    
 Hem & trädgård    
 Historia & arkeologi    
 Juridik    
 Kultur    
 Läromedel    
 Mat & dryck    
 Medicin    
 Naturvetenskap & teknik    
 Psykologi & pedagogik    
 Resor    
 Samhälle & politik    
 Skrivböcker & kalendrar    
 Skönlitteratur    
 Sport, fritid & hobby    
 Språk & ordböcker    
 Tecknade serier    
 Trend & livsstil    
 Uppslagsverk & referenser    

 Topplistor    
         
  Bokustoppen    
 Pockettoppen    
 Deckare    
 Skönlitteratur    
 Skönlitteratur på engelska    
   
 Topplistor per kategori          
   
  Barn & tonår    
 Biografier    
 Data & IT    
 Deckare    
 Djur & natur    
 Ekonomi & ledarskap    
 Familj & hälsa    
 Film, radio & TV    
 Filosofi & Religion    
 Hem & trädgård    
 Historia & arkeologi    
 Juridik    
 Kultur    
 Mat & dryck    
 Medicin    
 Naturvetenskap & teknik    
 Psykologi & pedagogik    
 Resor    
 Samhälle & politik    
 Skrivböcker & kalendrar    
 Skönlitteratur    
 Sport, fritid & hobby    
 Språk & ordböcker    
 Tecknade serier    
 Trend & livsstil    
 Uppslagsverk & referenser    

 Topplistor per läsålder          
   
  Läsålder 0-3 år    
 Läsålder 3-6 år    
 Läsålder 6-9 år    
 Läsålder 9-12 år    
 Läsålder 12-15 år    
 Unga vuxna (15+)    

 Topplistor per format          
   
  Pocket    
 E-böcker    
 Ljudböcker    

 Nyheter    
         
  Alla nyheter    
 Aktuella böcker    
 Nya pocketböcker    
 Nya deckare    
 Nya romaner    
 Nya barnböcker    
 Nya e-böcker    
 Nya ljudböcker    
 Nyheter på engelska    
 Förboka    

 Erbjudanden    
         
  Aktuella erbjudanden    
 Månadens pocket    
 Månadens bästa pris    
 Fyndhörnan    
 Nyhetsbrev    

 Barn & tonår    
         
  Allt inom barn & tonår    
 Läsålder 0-3 år    
 Läsålder 3-6 år    
 Läsålder 6-9 år    
 Läsålder 9-12 år    
 Läsålder 12-15 år    
 Unga vuxna (15+)    
 Lättläst    
 Pysselböcker    
 Barnbokskaraktärer    
 Högläsning för barn    

 Inspiration    
         
  Nästa upplevelse väntar    
 Populära författare    
 Prisbelönade böcker    
 Personalens boktips    
 Deckarkartan    
 Signerade böcker    
 Presenttips    
 Ge bort ett presentkort    

 Populära format    
         
  Pocket    
 E-böcker    
 Ljudböcker    
 Bokus Play    

 Spel & pussel         
    
 Kontorsmaterial         
    
 För studenter    
         
  Studentlitteratur    
 Komvux    
 Bokus Pluspriser    
 Begagnad kurslitteratur    

  Ljudböcker & e-böcker från 79 kr/månad!     
 Skaffa ett abonnemang    
 Hantera abonnemang    
 Lös in presentkort    

 Köp presentkort         
    
 Mina sidor    
         
  Logga in    
 Beställningar    
 Digital bokhylla    
 Bokus Play-abonnemang    
 Nyhetsbrev    
 Bevakningar    
 Favoriter    
 Betyg & recensioner    
 Kunduppgifter    

 Kundservice    
         
  Välkommen till Kundservice!    
 Frakt och leverans    
 Retur vid ångerrätt    
 Reklamera vara    
 Betalning    
 Bokus Play    
 Ljudböcker & e-böcker    
 Alla frågor & svar    

 Gå till mobilversionen av bokus.com    
 Fri frakt över 249 kr 
  Billiga böcker 
  Snabba leveranser 
  Inloggad som | (logga ut) 
  Mina sidor 
  Kundservice 
  Företag 
  Bibliotek & Off. förvaltning 

 Ingår i kampanjer:       

 Varukorg     

 Meny 
  Nyheter 
  Topplistor 
  Bokus Play 
  JUL 
  Erbjudanden 
  Barn & tonår 
  Student 
  Pocket 
  E-böcker 
  Ljudböcker 
  Spel & pussel 

 Populära nyheter upp till 20% rabatt >>   

 Fler böcker inom  Geofysik 
  Områdesstudier 
  Politisk ekonomi 
  Statsvetenskap & politisk teori 
    
 Format  Häftad (Paperback / softback)  Språk  Engelska  Antal sidor  676  Utgivningsdatum  2011-03-27  Upplaga  Softcover reprint of hardcover 1st ed. 2005  Förlag  Springer-Verlag Berlin and Heidelberg GmbH & Co. K   Medarbetare  Fisher, Peter F. (ed.)  Illustrationer  XIX, 676 p.  Dimensioner  234 x 156 x 36 mm  Vikt  962 g  Antal komponenter  1  Komponenter  1 Paperback / softback  ISBN  9783642061486     
 Developments in Spatial Data Handling  
 11th International Symposium on Spatial Data Handling  
 av Peter F Fisher    
 Häftad,  Engelska, 2011-03-27    
   
 2301    

 Köp      
 Spara som favorit    

 Skickas från oss inom 7-10 vardagar. 
  Fri frakt över 249 kr för privatkunder i Sverige. 
    
 Developments in Spatial Data Handling    Kan levereras innan julafton!   

 Finns även som    
 Inbunden   Skickas inom 7-10 vardagar | 2301 
    
 Visa alla 1 format & utgåvor   

 The International Symposium on Spatial Data Handling (SDH) commenced in 1984, in Zurich, Switzerland, organized by the International Geographical Union Commission on Geographical Data Sensing and Processing which was later succeed by the Commission on Geographic Information Systems, Study Group on Geographical Information Science and then the Commission on Geographical Information Science (http://www. hku. hk/cupem/igugisc/). Previous symposia have been held at the following locations: 1st - Zurich, 1984 6th - Edinburgh, 1994 2nd - Seattle, 1986 7th - Delft, 1996 3rd - Sydney, 1988 8th - Vancouver, 1998 4th - Zurich, 1990 9th - Beijing, 2000 5th - Charleston, 1992 10th - Ottawa, 2002 th This book is the proceedings of the 11 International Symposium on Spatial Data Handling. The conference was held in Leicester, United rd th Kingdom, on August 23 to 25 2004, as a satellite meeting to the Congress of the International Geographical Union in Glasgow. The International Symposium on Spatial Data Handling is a refereed conference. All the papers in this book were submitted as full papers and reviewed by at least two members of the Programme Committee. 83 papers in all were submitted and among the 50 included here, all are considered above average by the reviewers. The papers cover the span of Geographical Information Science topics, which have always been the concern of the conference. Topics from uncertainty (error, vagueness, and ontology and semantics) to web issues, digital elevation models and urban infrastructure.   
   
 Visa hela texten   

 Passar bra ihop  
  + 
   De som köpt den här boken har ofta också köpt Nexus  av Yuval Noah Harari (häftad).  
 Köp båda 2 för 2540 kr      

 Kundrecensioner  
 Har du läst boken? Sätt ditt betyg »    

 Fler böcker av Peter F Fisher  
   
 Valley of Vision   
 Peter F Fisher, Northrop Frye  
 The author of this important contribution to the study of Blake was tragically drowned in a sailing accident when he had almost completed it in manuscript. His was a critical mind of singular erudition and power. As is abundantly evidenced in thes...  
    473   Ladda ned     Laddas ned direkt 

 Innehållsförteckning  
   
 Plenary of Submitted Papers.- About Invalid, Valid and Clean Polygons.- 3D Geographic Visualization: The Marine GIS.- Local Knowledge Doesnt Grow on Trees: Community-Integrated Geographic Information Systems and Rural Community Self-Definition.- Web GIS.- A Flexible Competitive Neural Network for Eliciting Users Preferences in Web Urban Spaces.- Combining Heterogeneous Spatial Data From Distributed Sources.- Security for GIS N-tier Architecture.- Progressive Transmission of Vector Data Based on Changes Accumulation Model.- Elevation modelling.- An Efficient Natural Neighbour Interpolation Algorithm for Geoscientific Modelling.- Evaluating Methods for Interpolating Continuous Surfaces from Irregular Data: a Case Study.- Contour Smoothing Based on Weighted Smoothing Splines.- Flooding Triangulated Terrain.- Vagueness and Interpolation.- Vague Topological Predicates for Crisp Regions through Metric Refinements.- Fuzzy Modeling of Sparse Data.- Handling Spatial Data Uncertainty Using a Fuzzy Geostatistical Approach for Modelling Methane Emissions at the Island of Java.- Temporal.- A Visualization Environment for the Space-Time-Cube.- Finding REMO Detecting Relative Motion Patterns in Geospatial Lifelines.- Indexing.- Spatial Hoarding: A Hoarding Strategy for Location-Dependent Systems.- Distributed Ranking Methods for Geographic Information Retrieval.- Representing Topological Relationships between Complex Regions by F-Histograms.- The Po-tree: a Real-time Spatiotemporal Data Indexing Structure.- Uncertainty.- Empirical Study on Location Indeterminacy of Localities.- Registration of Remote Sensing Image with Measurement Errors and Error Propagation.- Double Vagueness: Effect of Scale on the Modelling of Fuzzy Spatial Objects.- Area, Perimeter and Shape of FuzzyGeographical Entities.- Generalisation.- Why and How Evaluating Generalised Data ?.- Road Network Generalization Based on Connection Analysis.- Continuous Generalization for Visualization on Small Mobile Devices.- Shape-Aware Line Generalisation With Weighted Effective Area.- Spatial Relationships.- Introducing a Reasoning System Based on Ternary Projective Relations.- A Discrete Model for Topological Relationships between Uncertain Spatial Objects.- Modeling Topological Properties of a Raster Region for Spatial Optimization.- Sandbox Geography To learn from children the form of spatial concepts.- Urban Infrastructure.- Street Centreline Generation with an Approximated Area Voronoi Diagram.- Determining Optimal Critical Junctions for Real- time Traffic Monitoring for Transport GIS.- Collaborative Decision Support for Spatial Planning and Asset Management: IIUM Total Spatial Information System.- Navigation.- Automatic Generation and Application of Landmarks in Navigation Data Sets.- Towards a Classification of Route Selection Criteria for Route Planning Tools.- An Algorithm for Icon Labelling on a Real-Time Map.- Working with Elevation.- Semantically Correct 2.5D GIS Data the Integration of a DTM and Topographic Vector Data.- Generalization of integrated terrain elevation and 2D object models.- An Image Analysis and Photogrammetric Engineering Integrated Shadow Detection Model.- Semantics and Ontologies.- Understanding Taxonomies of Ecosystems: a Case Study.- Comparing and Combining Different Expert Relations of How Land Cover Ontologies Relate.- Representing, Manipulating and Reasoning with Geographic Semantics within a Knowledge Framework.- Data Quality and Metadata.- A Framework for Conceptual Modeling of Geographic Data Quality.- Consistency AssessmentBetween Multiple Representations of Geographical Databases: a Specification-Based Approach.- Integrating structured descriptions of processes in geographical metadata.- Spatial Statistics.- Toward Comparing Maps as Spatial Processes.- Integrating computational and visual analysis for the exploration of health statistics.- Using Spatially Adaptive Filters to Map Late Stage Colorectal Cancer Incidence in Iowa  

 Du kanske gillar  
 Autocracy, Inc  
 Anne Applebaum  
  Inbunden   239 
  Why Nations Fail  
 Daron Acemoglu, James A Robinson  
  Häftad   199 
  Formula One: The Rivals: Volume 4  
 Tony Dodgins, Mark Webber  
  Inbunden   498 
  The Courage To Be Disliked  
 Ichiro Kishimi, Fumitake Koga  
  Häftad   149 
  There Are Dads Way Worse Than You  
 Glenn Boozan  
  Inbunden   182 
  The Psychology of Money  
 Morgan Housel  
  Häftad   224 
  Once Upon A Broken Heart  
 Stephanie Garber  
  Häftad   139 
  Business Statistics: Communicating with Numbers ISE  
 Sanjiv Jaggia  
  Häftad   773 
  The 48 Laws of Power  
 Robert Greene  
  Häftad   271 
  War  
 Bob Woodward  
  Inbunden   299 

 Frågor & svar  MINA SIDOR  Ingår i kampanjer: | Logga in 
  Beställningar 
  Digital bokhylla 
  Bokus Play-abonnemang 
  Bevakningar 
  Favoriter 
  Kunduppgifter 
  KUNDSERVICE  Ingår i kampanjer: | Frakt och leverans 
  Retur vid ångerrätt 
  Reklamera vara 
  Betalning 
  Bokus Play 
  Ljudböcker & e-böcker 
  Alla frågor & svar 
  OM BOKUS  Ingår i kampanjer: | Om oss 
  Pressrum 
  För studenter 
  För företag 
  För bibliotek & off. förvaltning 
  För leverantörer 
  Hållbarhet 
  POPULÄRT  Ingår i kampanjer: | Nyhetsbrev 
  Fyndhörnan 
  Ljudböcker 
  E-böcker 
  Bokus Play 
  Köp presentkort 
  Begagnad kurslitteratur 
  KAMPANJER  Ingår i kampanjer: | Aktuella erbjudanden 
  Black Friday 
  Jul på Bokus 
  Bokrea 
  Singles day 
             
 Bokus har sålt böcker online sedan 1997. I utbudet på över 10 miljoner böcker hittar du både fysiska och digitala böcker till låga priser. Läs hur du vill - på papper, på skärm eller streama i Bokus Play  - abonnemanget för ljudböcker och e-böcker. Vi klimatkompenserar alla kundfrakter genom Vi-skogen  .  
 Följ oss och håll dig uppdaterad!   
  Facebook   
   Instagram   

 Avtalsvillkor 
  Avtalsvillkor Bokus Play 
  Personuppgiftsbehandling 
  Cookiepolicy 
  Cookie-inställningar 
  Desktop-version 
  Avancerad sökning 
  © Copyright 1997-2024 Bokus AB - en del av Bokusgruppen AB     

  
Call for papers data: 
undefinedImportant dates data: 
undefined

38. Conference SDM_0:
Skip to main content    
       
  Join SIAM 
  Donate 
  Log In 

 Journals 
  Books 
  SIAM Engage 
  Join SIAM 
  Donate 
  Log In 
   
 SIAM News 
  Activity Groups 
  Prizes & Awards 
  Log In 
   
 Publications | Toggle sub-menu | SIAM Journals | SIAM Review 
  Multiscale Modeling and Simulation: A SIAM Interdisciplinary Journal 
  SIAM Journal on Applied Algebra and Geometry 
  SIAM Journal on Applied Dynamical Systems 
  SIAM Journal on Applied Mathematics 
  SIAM Journal on Computing 
  SIAM Journal on Control and Optimization 
  SIAM Journal on Discrete Mathematics 
  SIAM Journal on Financial Mathematics 
  SIAM Journal on Imaging Sciences 
  SIAM Journal on Mathematical Analysis 
  SIAM Journal on Mathematics of Data Science 
  SIAM Journal on Matrix Analysis and Applications 
  SIAM Journal on Numerical Analysis 
  SIAM Journal on Optimization 
  SIAM Journal on Scientific Computing 
  SIAM / ASA Journal on Uncertainty Quantification 
  Theory of Probability and Its Applications 
  SIAM Undergraduate Research Online 
  SIAM Books  Our textbooks and monographs are indispensable to researchers, faculty, and students around the world.  SIAM Books 
  SIAM News  The newsjournal of SIAM, covering cutting-edge research and the state of the art in applied mathematics and computational science.  SIAM News 
  Reports 
  Proceedings 
  Subscriptions & Ordering 
  Programs & Initiatives | Toggle sub-menu | Programs | Gene Golub SIAM Summer School 
  Visiting Lecturer Program 
  MathWorks Math Modeling (M3) Challenge 
  SIAM-Simons Undergraduate Summer Research Program 
  SIAM Science Policy Fellowship 
  MGB-SIAM Early Career Fellowship 
  SIAM Postdoctoral Support Program 
  Graduate Student Mathematical Modeling Camp and Mathematical Problems in Industry Workshop 
  See All Programs 
  Professional Development | Careers in Applied Mathematics 
  Career Resources 
  Job Board 
  Internships 
  Prizes and Awards | Deadline Calendar 
  SIAM Fellows Program 
  Policy & Procedures 
  Save the Date for the Next Career Fair!  Happening in person March 4, 2025 during CSE25.  Save the Date for the Next Career Fair! 
  Industry 
  Equity, Diversity, & Inclusion 
  Education Resources 
  Science Policy 
  Conferences & Events | Toggle sub-menu | SIAM Conferences | More Events by Type 
  Section Meetings 
  Webinars & Seminars 
  Workshops 
  Career Fairs 
  Cooperating Conferences 
  Archive 
  See all Events 
  Conference Support | Travel & Registration Support 
  Child Care Grants 
  About SIAM Conferences & Events | For Sponsors & Exhibitors 
  Conference Guidelines 
  Featured Videos & Lectures 
  Submit Now for SIAM AN25!  The Third Joint SIAM/CAIMS Annual Meetings is happening July 28 - August 1, 2025 in Montréal, Québec, Canada.  Submit Now for SIAM AN25! 
  Membership | Toggle sub-menu | Individual Membership | Join 14,000 applied mathematicians and computational and data scientists from around the world. 
  Learn More 
  Institutional Membership | Create a custom subscription of four or more journals and your institution can become a free SIAM academic member, receiving up to a 27.5% discount on journal list prices. 
  Learn More 
  Member Support & FAQ | Questions about our membership types, benefits, how to automatically renew, or something else? 
  Get Your Questions Answered 
  Get Involved | Toggle sub-menu | Connect with a Community | Activity Groups 
  Sections 
  Student Chapters 
  SIAM Engage Online Community 
  Ways to Participate | Serve on Committees 
  Become an Author, Editor, or Referee 
  Nominate for Prizes 
  Network and Present at a Conference 
  Write for SIAM News 
  Ways to Support | Donate to SIAM 
  Spread the Word 
  Become a Sponsor 
  About Us | Toggle sub-menu | Overview 
  Mission & History 
  Governance & Leadership 
  Committees 
  Staff 
  Collaborations 
  Bylaws & Reports 
  Policies & Guidelines 
  Join SIAM 
  Contact Us 

 Back to top     
   
 Home 
  Conferences & Events 
  SIAM Conferences 
  SDM25 

 In Person   
 SIAM Conferences   
   
 SIAM International Conference on Data Mining (SDM25)  
   
 Event Details  
 May 1 –  3 , 2025 
  Alexandria Virginia, U.S. 
  The Westin Alexandria Old Town Hotel 
  Stay Connected  
 Facebook 
  #SIAMSDM25 

 In This Section 
  Registration 
  Lodging & Support 
  Program 
  Submissions 
  More 

 Deadlines   
 Deadline Passed: Abstract Submissions | September 27, 2024 
  Deadline Passed: Full Paper Submissions | October 4, 2024 
  Deadline Passed: Workshop and Tutorial Proposals | October 11, 2024 
  Deadline Passed: Blue Sky Idea Submissions Deadline | October 25, 2024 
  Apply Now: Travel Fund Application Deadline | January 30, 2025 
  Register Now: Early Registration Deadline | April 3, 2025 
  Reserve Now: Hotel Reservation Deadline | April 3, 2025 

 About the Conference  
 This meeting is sponsored by the SIAM Activity Group on Data Science  .  
 The SIAM International Conference on Data Mining (SDM25) invites submissions of high-quality research papers that present original results on data mining algorithms and their applications. Data mining is a core process within computing and statistics, aimed at discovering valuable knowledge from data. This field has significant applications across various domains including science, engineering, healthcare, business, and medicine. Datasets in these fields are typically large, complex, and noisy, necessitating sophisticated, high-performance analysis techniques grounded in sound theoretical and statistical principles. SDM25 provides a venue for researchers who are addressing these problems to present their work in a peer-reviewed forum. It also provides an ideal setting for graduate students to network and get feedback for their work (as part of the doctoral forum) and everyone new to the field to learn about cutting-edge research by hearing outstanding invited speakers and attending presentations, tutorials and a number of focused workshops. The proceedings of the conference are published in archival form and are also made available on the SIAM website.  
 Topics of Interest:  
 We welcome contributions addressing all aspects of data mining, including but not limited to:  

 Methods and Algorithms  
   
 Anomaly & outlier detection  
   
 Big data & large-scale systems  
   
 Causal inference  
   
 Classification & semi-supervised learning  
   
 Clustering & unsupervised learning  
   
 Data cleaning & integration  
   
 Deep learning & representation learning  
   
 Feature extraction, selection and dimensionality reduction  
   
 Mining data streams  
   
 Mining graphs & complex data  
   
 Mining on emerging architectures & data clouds  
   
 Mining semi structured data  
   
 Mining spatial & temporal data  
   
 Mining text, web & social media  
   
 Optimization methods  
   
 Parallel and distributed methods  
   
 Pattern mining  
   
 Probabilistic & statistical methods  
   
 Scalable & high-performance mining  

 Show more    

 Applications of Data Mining  
   
 Business and marketing  
   
 Healthcare  
   
 Scientific data  
   
 Scientific data  

 Human Factors and Social Issues  
   
 Ethics of data mining  
   
 Intellectual ownership  
   
 Intellectual ownership  
   
 Privacy and fairness models  
   
 Privacy preserving data mining  
   
 Risk analysis and risk management  
   
 Transparency and algorithmic bias  
   
 User interfaces and visual analytics  

 General Co-Chairs  
 Vagelis Papalexakis  
 University of California, Riverside U.S.  

 Matteo Riondato  
 Amherst College, U.S.  

 Program Co-Chairs  
 Tim Weninger  
 University of Notre Dame, U.S.  

 Elena Zheleva  
 University of Illinois at Chicago, U.S.  

 Local Chair  
 Carlotta Domeniconi  
 George Mason University, U.S.  

 Workshops Co-Chairs  
 Qi Li  
 Iowa State University, U.S.  

 Hua Wei  
 Arizona State University, U.S.  

 Tutorials Chair  
 Stefan Neumann  
 TU Wien, Austria  

 Doctoral Forum Co-Chairs  
 Tyler Derr  
 Vanderbilt University, U.S.  

 Li Zhang  
 University of Texas Rio Grande Valley, U.S.  

 Publicity Co-Chairs  
 Jumanah S. Alshehri  
 Imam Abdulrahman bin Faisal University, Saudi Arabia  

 Matthew Facciani  
 University of Notre Dame, U.S.  

 Willaim H. Hsu  
 Kansas State University, U.S.  

 Proceedings Co-Chairs  
 Michael Yankoski  
 University of William and Mary, U.S.  

 Sourav Medya  
 University of Illinois Chicago, U.S  

 Blue Sky Idea Track Chair  
 Wei Ding  
 University of Massachusetts, U.S.  

 Sponsorship Co-Chairs  
 Sanmitra Bhattacharya  
 Deloitte, U.S.  

 Neil Shah  
 Snap, U.S.  

 Steering Committee Chair  
 Zoran Obradovic  
 Temple University, U.S.  

 Get Involved  
 Sponsor, exhibit, or check out past content in our video and presentation archive.  

 Ways to Sponsor   
 SIAM invites you to show support of this conference through sponsorship opportunities ranging from support of receptions, audio-video needs, to awards for student travel, and more.   

 Ways to Exhibit   
 Learn about opportunities to become an exhibitor at a SIAM conference.   

 Featured Lectures & Videos   
 View slides, recordings, and video from past SIAM conferences.   

 Become a Member   
 SIAM members get 20-30% off registration for our conferences, plus deep discounts on SIAM books, journals, activity group membership, and more. Start reaping the benefits!   

 Make the Most of Your Experience   
 About SIAM Conferences  
   
 Find all of the information you'll need to prepare for and navigate SIAM conferences, including conference guidelines and how to propose a new conference.  
   
 Explore Conferences 

 Statement on Equity, Diversity, and Inclusion  
 As a professional society, SIAM is committed to empowering equitable, diverse, and inclusive participation in all aspects of our community. SIAM will provide a climate that encourages the open expression and exchange of ideas, that is free from all forms of discrimination, harassment, and retaliation, and that is welcoming and comfortable to all members and to those who participate in its activities.  
 In pursuit of this commitment, SIAM is dedicated to the philosophy of equality of opportunity and treatment for all participants regardless of gender, gender identity or expression, sexual orientation, race, color, national or ethnic origin, religion or religious belief, age, marital status, disabilities, veteran status, and field of expertise.  
 This philosophy extends from SIAM’s governing structures and bodies to its conferences, publications, awards, and to all its organized activities.  
 We expect all members of SIAM and participants in SIAM activities to work towards this commitment to equity, diversity, and inclusion.  
 If you have experienced or observed behavior that is not consistent with the principles expressed above, you are encouraged to report any violation using the SIAM hotline, hosted by the third-party hotline provider, EthicsPoint. The information you provide will be sent to us by EthicsPoint on a totally confidential and anonymous basis if you should choose. You have our guarantee that your comments will be heard. Please submit reports.   
 Read all of SIAM's conference guidelines and policies  , including the Statement on Potentially Offensive Material  

 Contact Us  
   
 Questions about SIAM conferences? Get in touch with our staff.  
 Contact SIAM Conference Staff    

 Stay Up-to-Date with Email Alerts  
 Sign up for our monthly newsletter and emails about other topics of your choosing.  
   
 Email Address     
 Sign Up Now     

   3600 Market Street  6th Floor  Philadelphia, PA 19104 USA   Facebook 
  Twitter 
  Youtube 
  LinkedIn 

 About SIAM | Mission & History 
  Governance & Leadership 
  Committees 
  Staff 
  Collaborations 
  Code of Conduct 
  Policies & Guidelines 
  Jobs at SIAM 
  Contact Us 
  Membership | Member Benefits 
  Become a Member 
  Renew Your Membership 
  Connect with a Community 
  Ways to Participate 
  Jobs in STEM 
  Share & Support | Newsroom 
  Advertise with Us 
  Become a Sponsor 
  Post a Job 
  Information for Librarians 
  Subscribe to Our Emails 
   
 © 2024 Society for Industrial and Applied Mathematics   
 Terms & Conditions 
  Privacy 

    
Call for papers data: 
  Skip to main content    
       
  Join SIAM 
  Donate 
  Log In 

 Journals 
  Books 
  SIAM Engage 
  Join SIAM 
  Donate 
  Log In 
   
 SIAM News 
  Activity Groups 
  Prizes & Awards 
  Log In 
   
 Publications | Toggle sub-menu | SIAM Journals | SIAM Review 
  Multiscale Modeling and Simulation: A SIAM Interdisciplinary Journal 
  SIAM Journal on Applied Algebra and Geometry 
  SIAM Journal on Applied Dynamical Systems 
  SIAM Journal on Applied Mathematics 
  SIAM Journal on Computing 
  SIAM Journal on Control and Optimization 
  SIAM Journal on Discrete Mathematics 
  SIAM Journal on Financial Mathematics 
  SIAM Journal on Imaging Sciences 
  SIAM Journal on Mathematical Analysis 
  SIAM Journal on Mathematics of Data Science 
  SIAM Journal on Matrix Analysis and Applications 
  SIAM Journal on Numerical Analysis 
  SIAM Journal on Optimization 
  SIAM Journal on Scientific Computing 
  SIAM / ASA Journal on Uncertainty Quantification 
  Theory of Probability and Its Applications 
  SIAM Undergraduate Research Online 
  SIAM Books  Our textbooks and monographs are indispensable to researchers, faculty, and students around the world.  SIAM Books 
  SIAM News  The newsjournal of SIAM, covering cutting-edge research and the state of the art in applied mathematics and computational science.  SIAM News 
  Reports 
  Proceedings 
  Subscriptions & Ordering 
  Programs & Initiatives | Toggle sub-menu | Programs | Gene Golub SIAM Summer School 
  Visiting Lecturer Program 
  MathWorks Math Modeling (M3) Challenge 
  SIAM-Simons Undergraduate Summer Research Program 
  SIAM Science Policy Fellowship 
  MGB-SIAM Early Career Fellowship 
  SIAM Postdoctoral Support Program 
  Graduate Student Mathematical Modeling Camp and Mathematical Problems in Industry Workshop 
  See All Programs 
  Professional Development | Careers in Applied Mathematics 
  Career Resources 
  Job Board 
  Internships 
  Prizes and Awards | Deadline Calendar 
  SIAM Fellows Program 
  Policy & Procedures 
  Save the Date for the Next Career Fair!  Happening in person March 4, 2025 during CSE25.  Save the Date for the Next Career Fair! 
  Industry 
  Equity, Diversity, & Inclusion 
  Education Resources 
  Science Policy 
  Conferences & Events | Toggle sub-menu | SIAM Conferences | More Events by Type 
  Section Meetings 
  Webinars & Seminars 
  Workshops 
  Career Fairs 
  Cooperating Conferences 
  Archive 
  See all Events 
  Conference Support | Travel & Registration Support 
  Child Care Grants 
  About SIAM Conferences & Events | For Sponsors & Exhibitors 
  Conference Guidelines 
  Featured Videos & Lectures 
  Submit Now for SIAM AN25!  The Third Joint SIAM/CAIMS Annual Meetings is happening July 28 - August 1, 2025 in Montréal, Québec, Canada.  Submit Now for SIAM AN25! 
  Membership | Toggle sub-menu | Individual Membership | Join 14,000 applied mathematicians and computational and data scientists from around the world. 
  Learn More 
  Institutional Membership | Create a custom subscription of four or more journals and your institution can become a free SIAM academic member, receiving up to a 27.5% discount on journal list prices. 
  Learn More 
  Member Support & FAQ | Questions about our membership types, benefits, how to automatically renew, or something else? 
  Get Your Questions Answered 
  Get Involved | Toggle sub-menu | Connect with a Community | Activity Groups 
  Sections 
  Student Chapters 
  SIAM Engage Online Community 
  Ways to Participate | Serve on Committees 
  Become an Author, Editor, or Referee 
  Nominate for Prizes 
  Network and Present at a Conference 
  Write for SIAM News 
  Ways to Support | Donate to SIAM 
  Spread the Word 
  Become a Sponsor 
  About Us | Toggle sub-menu | Overview 
  Mission & History 
  Governance & Leadership 
  Committees 
  Staff 
  Collaborations 
  Bylaws & Reports 
  Policies & Guidelines 
  Join SIAM 
  Contact Us 

 Back to top     
   
 Home 
  Publications 
  SIAM Journals 
  SIAM Undergraduate Research Online (SIURO) 

 SIAM Undergraduate Research Online  
 SIAM Undergraduate Research Online  (SIURO) is a web-based publication devoted to undergraduate research in applied and computational mathematics. Access is free and open to the public.  
   
 Read Current Issue  Submit a Paper    
   
 Related Links  
 Sign Up for Email Updates 

 In This Section 
  SIAM Undergraduate Research Online E-Alert 
  Editorial Policy 
  Editorial Board 
  Instructions for Authors 
  More 

 SIURO consists of articles written by undergraduate students in applied and computational mathematics, offering an opportunity for students to publish research they have completed as part of their undergraduate education and providing undergraduates incentives for conducting research.  
 The publication represents a wide range of applied topics, including but not limited to analysis, discrete mathematics, statistics, operations research, optimization, dynamical systems, modeling, and computation. Typical areas of application include but are not limited to physical, life, financial, and management sciences and engineering.  
 Each paper must be submitted with a letter from a project advisor. Faculty advisers or sponsors are listed as "project advisor" on the published paper.  
 SIURO provides an opportunity for undergraduate students to share their results and experience a full paper review process. High school students may also submit their work.  
 The project advisor may be a faculty member at the student’s institution or at an institution the student is visiting, or someone associated with a non-academic organization or government lab who supervised the research. 
  The project advisor’s letter must document the fact that the research was done while the student was an undergraduate and list the student’s graduation date or anticipated graduation date. 
  Project advisors will be listed separately from the authors with a “project advisor” byline. 

 Announcements   
 Authors: Prepare your papers using LaTex 2e macros to aid editor and referee review 

 From the Current Volume  
 Check out the latest volume and dive into advanced research and findings by undergraduate students.  
 See more   
   
 Volume 17  Accurately Classifying Out-Of-Distribution Data in Facial Recognition   
 November 13, 2024    
 By  Gianluca Barone (Corresponding author – Rowan University) 
  Aashrit Cunchala (University of Pittsburgh) 
  Rudy Nunez (Emory University) 

 Volume 17  Optimizing Energy Functional in Wave and Heat Equations with Initial Conditions in a Class of Rearrangements   
 October 30, 2024    
 By  Renjing Wang (Corresponding author – Xi'an Jiaotong-Liverpool University, China) 

 Volume 17  Travelling Waves of the Diffusive Streeter-Phelps Equations with Braun-Berthouex BOD Decay   
 October 24, 2024    
 By  Alexandra Lawryshyn (Corresponding author – University of Guelph, Ontario, Canada) 

 Browse Articles by Volume  
   
 Volume 17   
 2024   
   
 Volume 16   
 2023   
   
 Volume 15   
 2022   
   
 Volume 14   
 2021   
   
 Volume 13   
 2020   
   
 Volume 12   
 2019   
   
 Volume 11   
 2018   
   
 Volume 10   
 2017   
   
 Volume 9   
 2016   
   
 Volume 8   
 2015   
   
 Volume 7   
 2014   
   
 Volume 6   
 2013   
   
 Volume 5   
 2012   
   
 Volume 4   
 2011   
   
 Volume 3   
 2010   
   
 Volume 2, Issue 2   
 Fall 2009   
   
 Volume 2, Issue 1   
 Spring 2009   
   
 Volume 1, Issue 2   
 Fall 2008   
   
 Volume 1, Issue 1   
 Summer 2008   

 Show more    

 Publish with SIURO   
 Become an Author  
   
 SIURO offers undergraduate and high school students the early opportunity to publish their research while becoming part of the scientific community.  
   
 Learn More 
    
 SIURO is one of the best publications for undergraduate research in applied and computational mathematics. Beyond getting their results out into the world, when students publish their papers in SIURO, they have the edifying experience of taking their original work through the peer-review process.  
   Joanna Wares  University of Richmond     

 Get Involved with SIURO  
 We welcome submissions from undergraduate and high school students in applied and computational mathematics.  

 Editorial Information   
 Get the scoop on our reviewer guidelines, editorial policy, and more.   

 Instructions for Authors   
 Interested in submitting a paper to SIURO?   

 Contact Us  
   
 Questions about SIURO? Get in touch with our staff.  
 Contact SIURO Staff    

 Stay Up-to-Date with Email Alerts  
 Sign up for our monthly newsletter and emails about other topics of your choosing.  
   
 Email Address     
 Sign Up Now     

   3600 Market Street  6th Floor  Philadelphia, PA 19104 USA   Facebook 
  Twitter 
  Youtube 
  LinkedIn 

 About SIAM | Mission & History 
  Governance & Leadership 
  Committees 
  Staff 
  Collaborations 
  Code of Conduct 
  Policies & Guidelines 
  Jobs at SIAM 
  Contact Us 
  Membership | Member Benefits 
  Become a Member 
  Renew Your Membership 
  Connect with a Community 
  Ways to Participate 
  Jobs in STEM 
  Share & Support | Newsroom 
  Advertise with Us 
  Become a Sponsor 
  Post a Job 
  Information for Librarians 
  Subscribe to Our Emails 
   
 © 2024 Society for Industrial and Applied Mathematics   
 Terms & Conditions 
  Privacy 

    Important dates data: 
undefined

39. Conference SDM_1:
Skip to main content    
       
  Join SIAM 
  Donate 
  Log In 

 Journals 
  Books 
  SIAM Engage 
  Join SIAM 
  Donate 
  Log In 
   
 SIAM News 
  Activity Groups 
  Prizes & Awards 
  Log In 
   
 Publications | Toggle sub-menu | SIAM Journals | SIAM Review 
  Multiscale Modeling and Simulation: A SIAM Interdisciplinary Journal 
  SIAM Journal on Applied Algebra and Geometry 
  SIAM Journal on Applied Dynamical Systems 
  SIAM Journal on Applied Mathematics 
  SIAM Journal on Computing 
  SIAM Journal on Control and Optimization 
  SIAM Journal on Discrete Mathematics 
  SIAM Journal on Financial Mathematics 
  SIAM Journal on Imaging Sciences 
  SIAM Journal on Mathematical Analysis 
  SIAM Journal on Mathematics of Data Science 
  SIAM Journal on Matrix Analysis and Applications 
  SIAM Journal on Numerical Analysis 
  SIAM Journal on Optimization 
  SIAM Journal on Scientific Computing 
  SIAM / ASA Journal on Uncertainty Quantification 
  Theory of Probability and Its Applications 
  SIAM Undergraduate Research Online 
  SIAM Books  Our textbooks and monographs are indispensable to researchers, faculty, and students around the world.  SIAM Books 
  SIAM News  The newsjournal of SIAM, covering cutting-edge research and the state of the art in applied mathematics and computational science.  SIAM News 
  Reports 
  Proceedings 
  Subscriptions & Ordering 
  Programs & Initiatives | Toggle sub-menu | Programs | Gene Golub SIAM Summer School 
  Visiting Lecturer Program 
  MathWorks Math Modeling (M3) Challenge 
  SIAM-Simons Undergraduate Summer Research Program 
  SIAM Science Policy Fellowship 
  MGB-SIAM Early Career Fellowship 
  SIAM Postdoctoral Support Program 
  Graduate Student Mathematical Modeling Camp and Mathematical Problems in Industry Workshop 
  See All Programs 
  Professional Development | Careers in Applied Mathematics 
  Career Resources 
  Job Board 
  Internships 
  Prizes and Awards | Deadline Calendar 
  SIAM Fellows Program 
  Policy & Procedures 
  Save the Date for the Next Career Fair!  Happening in person March 4, 2025 during CSE25.  Save the Date for the Next Career Fair! 
  Industry 
  Equity, Diversity, & Inclusion 
  Education Resources 
  Science Policy 
  Conferences & Events | Toggle sub-menu | SIAM Conferences | More Events by Type 
  Section Meetings 
  Webinars & Seminars 
  Workshops 
  Career Fairs 
  Cooperating Conferences 
  Archive 
  See all Events 
  Conference Support | Travel & Registration Support 
  Child Care Grants 
  About SIAM Conferences & Events | For Sponsors & Exhibitors 
  Conference Guidelines 
  Featured Videos & Lectures 
  Submit Now for SIAM AN25!  The Third Joint SIAM/CAIMS Annual Meetings is happening July 28 - August 1, 2025 in Montréal, Québec, Canada.  Submit Now for SIAM AN25! 
  Membership | Toggle sub-menu | Individual Membership | Join 14,000 applied mathematicians and computational and data scientists from around the world. 
  Learn More 
  Institutional Membership | Create a custom subscription of four or more journals and your institution can become a free SIAM academic member, receiving up to a 27.5% discount on journal list prices. 
  Learn More 
  Member Support & FAQ | Questions about our membership types, benefits, how to automatically renew, or something else? 
  Get Your Questions Answered 
  Get Involved | Toggle sub-menu | Connect with a Community | Activity Groups 
  Sections 
  Student Chapters 
  SIAM Engage Online Community 
  Ways to Participate | Serve on Committees 
  Become an Author, Editor, or Referee 
  Nominate for Prizes 
  Network and Present at a Conference 
  Write for SIAM News 
  Ways to Support | Donate to SIAM 
  Spread the Word 
  Become a Sponsor 
  About Us | Toggle sub-menu | Overview 
  Mission & History 
  Governance & Leadership 
  Committees 
  Staff 
  Collaborations 
  Bylaws & Reports 
  Policies & Guidelines 
  Join SIAM 
  Contact Us 

 Back to top     
   
 Home 
  Conferences & Events 
  SIAM Conferences 
  SDM25 
  Submissions 

 SIAM International Conference on Data Mining (SDM25)   
 Submissions  
   
 Related Links  
 SDM25 Home 
  Registration 
  Lodging & Support 
  Program 

 Deadlines   
 Deadline Passed: Abstract Submissions | September 27, 2024 
  Deadline Passed: Full Paper Submissions | October 4, 2024 
  Deadline Passed: Workshop and Tutorial Proposals | October 11, 2024 
  Deadline Passed: Blue Sky Idea Submissions Deadline | October 25, 2024 
  Apply Now: Travel Fund Application Deadline | January 30, 2025 
  Register Now: Early Registration Deadline | April 3, 2025 
  Reserve Now: Hotel Reservation Deadline | April 3, 2025 

 General Information  
  
 Acceptance Notification | Official acceptance notices will be sent via email by the Program Co-Chairs in late December 2024. 

 You are invited to contribute a presentation for this conference in one of the formats listed below, under “Submission Formats.”  
 Abstract and Paper Submission Instructions  
 Paper Submission Instructions  
 Important Dates   
 Abstract Submission Deadline: September 27, 2024, 11:59 p.m. U.S. Pacific Time (abstract required to submit a full paper)  
 Full Paper Submission Deadline: October 4, 2024, 11:59 p.m. U.S. Pacific Time  
 Decision Notification: Late December 2024  
 Dual Submission Policy   
  Submissions that are identical (or substantially similar) to versions that have been previously published, or accepted for publication, or that have been submitted in parallel to this or other conferences or journals, are not allowed and violate our dual submission policy. Papers that have been submitted to archival repositories such as arXiv may be submitted to SDM 2025.  
 Paper Format   
  All research papers should have a maximum length of eight (8) pages, including all text and figures. References and appendices are unlimited and may not be reviewed. Authors should use U.S. Letter (8.5" x 11") paper size.  
 Papers must be prepared in LaTeX2e, and formatted using SIAM’s double column macro. The macro is available here  . Make sure you use the SIAM macro; papers prepared using other macros will not be accepted.  
 Review will be triple blind: submissions must be anonymized. Violations of the blind policy will result in rejection without review. Having papers on arXiv is allowed per the dual submission policy outlined below.  
 Conflict of Interest Guidelines for Submissions   
  As part of the submission procedure authors are asked to mark conflicts of interest with Program Committee members.  
 A paper author has a conflict of interest with a Program Committee member if any of the following hold:  
 The Program Committee member is an advisee or adviser of any one of the authors. This applies to current and former advisees and advisers. 
  The Program Committee member is a collaborator or co-author within the last two years of one of the authors. Collaborations include things like joint papers published or in submission as well as joint projects either in progress or within the last two years. 
  The Program Committee member is a relative or close personal friend of one of the authors. 
  The Program Committee member is part of the same organization or has been a part of the same organization as one of the authors within the last two years. 
  Inaccurate representation of conflicts of interest can result in the paper being rejected without review at the discretion of the program chairs.  
 Authorial Integrity in Scientific Publication  
  SIAM Policies and Procedures on Authorial Integrity   
  Policy on Large Language Models like ChatGPT  
  Authors are not prohibited from using large language models (LLMs) like ChatGPT to edit or polish the authors’ written text. However, the authors are responsible for ensuring the originality and correctness of the entire content of the paper. If the proposed research method involves the use of LLMs or comparison against existing LLMs, the paper needs to provide sufficient details on the methodology and implementation to ensure transparency and reproducibility (e.g., adding a paragraph on “use of large language model”). Authors will be required to disclose the use of LLMs in the paper submission form.  
 Submission Instructions   
  Visit the submission system  to register your abstract and upload your manuscript.  
 Submission Deadlines   
  Abstract Submission Deadline: September 27, 2024, 11:59 p.m. U.S. Pacific Time  
  Paper Submission Deadline: October 4, 2024, 11:59 p.m. U.S. Pacific Time  
 All questions regarding paper submissions must be sent via email to the Program Co-Chairs  : Tim Weninger and Elena Zheleva  
 Blue Sky Track Idea Pap  er Submission Instructions  
 Important Dates   
  Blue Sky Idea Paper Submission Deadline: October 25, 2024, 11:59 p.m. U.S. Pacific Time  
  Decision Notification: Late December 2024  
 The goal of the Blue Sky Idea Track is to invite leaders of our research community to present position papers that may help inform or shape new directions of research. These are not typical conference research papers, rather they are expected to be visionary papers that set a direction.  
 The Blue Sky Ideas should be bold in their vision, tackle a wicked problem or present new algorithmic / methodological opportunities or challenge existing assumptions behind methods or approaches. It is expected that the Blue Sky Ideas will help foster new directions or innovations through the collective initiative of our community in subsequent SDM’s and beyond. Ideally, the Blue Sky Ideas become a topical focus and our community submits research papers in response to it. There will be a special track dedicated to Blue Sky Ideas during the SDM’25 Conference.  
 The Blue Sky Ideas are not supposed to be incremental or have preliminary results. Rather, the Blue Sky Ideas present a bold vision, accompanied by the following five required elements:  
 What is the Blue Sky Idea? 
  Why is it a Blue Sky Idea? Why should the community ponder over it? Why now? 
  Does the Blue Sky Idea push the frontier or does it challenge our current set of assumptions or does it take a bold approach to solve a wicked problem? 
  What are the challenges? 
  What will success look like? 
  Submission Instructions   
  The Blue Sky Idea papers should be no more than 4 pages using the Paper Format outlined below and submitted through the submission system  .  
  The papers will be reviewed by a specially convened program committee of experts in our field. It is expected that some papers might be desk rejected based on the fit for the track.  
 Paper Format   
  All papers should have a maximum length of four pages (single-spaced, two column, 10-point font, and at least 1" margin on each side). Authors should use U.S. Letter (8.5" x 11") paper size. Papers must be prepared in LaTeX2e, and formatted using SIAM’s double column macro. The macro is available here. All submissions should clearly present the author information including the names of the authors, the affiliations and the emails. These elements, as well as the abstract, technical details, empirical results, and bibliography, are included in the four-page limit.  
 All questions regarding paper submissions must be sent via email to the Blue Sky Chair Wei Ding, [email protected]  University of Massachusetts, U.S. (email subject: SDM 2025 Blue Sky)  
 Tutorial Submission Instructions  
 Important Dates   
  Submission Deadline: October 11, 2024, 11:59 p.m. U.S. Pacific Time  
  Decision Notification: Mid-November 2024  
 The Organizing Committee invites proposals for tutorials to be held in conjunction with the conference. Tutorials are an effective way to educate and/or provide the necessary background to the intended audience enabling them to understand technical advances. They will typically cover state-of-the-art research, development and tools in a specific data mining related area, and stimulate and facilitate future work.  
 We are seeking proposals for tutorials on all topics related to data mining. A tutorial may be a theme-oriented comprehensive survey, discuss novel data mining techniques or focus on a successful and timely application of data mining in important areas (e.g., public health, medicine, security, urban computing, the web, scientific data analysis, finance). Tutorials on interdisciplinary research topics, novel and fast-growing directions, and innovative applications are highly encouraged. We also encourage tutorials in areas that are different from the usual SDM mainstream, but still related to the objectives of discovering valuable knowledge from data. As examples of typical SIAM tutorials, see the set of accepted tutorials at previous Data Mining (SDM) conferences:  
 SDM23 
  SDM24 
  Tutorials are open to all conference attendees without any extra fees. The typical tutorial will be 2 hours long (longer tutorials will be considered). Previous SDM conferences attracted up to 100 attendees in a tutorial.  
 Proposal Format   
 Proposals should include the following:  
 Basic information: Title, brief description (up to 300 words), length of the proposed tutorial. If the intended tutorial is expected to take longer than 2 hours a rationale is expected. 
  Target Audience: Proposals must clearly identify the intended audience for the tutorial (e.g., novice, intermediate, expert). | What background will be required of the audience? 
  Why is this topic important/interesting to the SIAM data mining community? 
  What is the benefit to participants? 
  Provide some informal evidence that people would attend (e.g., related workshops). 
  Tutors: Name, affiliation, email address per tutor 
  Tutors’ Bios: Provide brief biographical information on each tutor, including qualifications with respect to the tutorial's topic. | List of in-person presenters (i.e., the tutors who will attend)  
  List of contributors (i.e., the tutors who will only help prepare the tutorial material) 
  Outline and References: Enough material should be included to provide a sense of both the scope of material to be covered and the depth to which they will be covered. The more details that can be provided, the better (up to and including links to the actual slides). Note that the tutors should not focus mainly on their own research results. If, for certain parts of the tutorial, the material comes directly from the tutors' own research or product, please indicate this clearly in the proposal. 
  Similar Tutorials: Identify any other venues in which the tutorial, or a similar/highly related tutorial by the same authors, has been or will be presented, and highlight the similarity/difference between those and the one proposed (up to 100 words for each entry). 
  Optional: Video snippet of you teaching a tutorial or giving a talk. 
  Submission Instructions  
  Tutorial proposals must be submitted in PDF format to the Tutorials Chair as described below. Please use the Subject Line: SDM25 Tutorial Proposal Submission.  
 Submission Deadline   
  October 11, 2024, 11:59 p.m. U.S. Pacific Time  
 Submissions and questions must be sent directly via email to the Tutorials Chair:  
  Stefan Neumann  , TU Wien, Austria  
 Workshop and Workshop Mini-symposia Submission Instructions  
 Important Dates   
   Submission Deadline: October 11, 2024, 11:59 p.m. U.S. Pacific Time  
  Decision Notification: Mid-November 2024  
 The organizing committee invites proposals for workshops and workshop mini-symposia to be held in conjunction with the conference. The purpose is to provide participants with the opportunity to discuss research ideas on active and emerging topics of knowledge discovery and data mining. Ideally a workshop should foster interactions between different communities within the scope of SDM (e.g. statisticians, computer scientists, industry, academia etc.). A mini-symposium can consist of invited talks. It should encourage the presentation of novel ideas, even if they are in an early stage of development, contact between different points of view, and active exchanges between participants. As examples of typical SIAM mini-symposia, see the set of accepted mini-symposia at previous SIAM conferences:  
 SDM23 
  SDM24 
  The responsibilities of the workshop organizers include:  
 Preparing the call for papers and publicizing it. 
  Maintaining the workshop web site. 
  Deciding the workshop program content; this may optionally include inviting speakers, inviting reviewers, selecting the papers through a peer review process. 
  Delivering the final workshop program to the workshop chair in time. 
   
 Proposal Format   
  A workshop proposal should include the following information:  
 Workshop title. 
  Full contact information of the organizers. 
  Description of the workshop including objectives, content, topics of interest. 
  Description of the format (e.g. invited talks, round table, accepted presentations, etc.) should be included. Please indicate your preference regarding the length of the workshop: Half-day or full-day. If you are only interested in hosting a full day workshop, please indicate so. 
  A short description of the target audience. List of potential participants. This could include potential program committee members, authors, and invited speakers. 
  A summary of previous editions of the workshop (if it was run before), with an emphasis on number of attendees and paper submissions. 
  A short biography of each organizer. (Please include your experience on organizing workshops and conferences). 
  The organizing committee also invites proposals for workshop mini-symposia. A mini-symposium is a session of several coordinated (invited) presentations of substantial interest and importance in the areas covered by SDM. It is expected that a mini-symposium targets a broad research area and at the same time focuses on a few specific and emerging subjects within the area. In conducting the mini-symposium, the session organizer(s) should provide an overview of the mini-symposium, introduce the speakers, and provide an opportunity for discussion among the speakers and the audience. The organizer(s) themselves may also be one of the speakers. Organizer(s) will select the topics to be addressed, invite speakers for those topics, decide with the speakers on the title of their presentation, and provide other information as needed. A mini-symposium proposal should follow the same guidelines given for workshops above.  
 Proposals will be judged by a sub-committee of the organizing committee based on the above information.  
 Particular preference will be given to proposals that demonstrate the ability to foster interactions among multiple communities, as noted above. We prefer workshops and mini-symposia in which there is participation of diverse people who may not have worked with one another in the past, or which bridge between traditional SDM topics and communities and other fields. External sources of funding or sponsorship for special events held along with the workshop (e.g. invited talks, poster session) can be optionally included in the proposal submission.  
 Submission Instructions   
  Proposals must be prepared as a website. Send the workshop or mini-symposium URL via email to the co-chairs listed below. Please use the Subject Line: SDM25 Workshop Proposal Submission   
 Submission Deadline   
  October 11, 2024, 11:59 p.m. U.S. Pacific Time  
 Questions and workshop submissions must be sent directly to the Workshop Co-chairs:  
  Qi Li  , Iowa State University, U.S.  
  Hua Wei  , Arizona State University, U.S.  

 Next Stop: Learn More & Submit  
   
 Conference Guidelines   
   
 Submit Now   
   
 Contact Conferences   

 Stay Up-to-Date with Email Alerts  
 Sign up for our monthly newsletter and emails about other topics of your choosing.  
   
 Email Address     
 Sign Up Now     

   3600 Market Street  6th Floor  Philadelphia, PA 19104 USA   Facebook 
  Twitter 
  Youtube 
  LinkedIn 

 About SIAM | Mission & History 
  Governance & Leadership 
  Committees 
  Staff 
  Collaborations 
  Code of Conduct 
  Policies & Guidelines 
  Jobs at SIAM 
  Contact Us 
  Membership | Member Benefits 
  Become a Member 
  Renew Your Membership 
  Connect with a Community 
  Ways to Participate 
  Jobs in STEM 
  Share & Support | Newsroom 
  Advertise with Us 
  Become a Sponsor 
  Post a Job 
  Information for Librarians 
  Subscribe to Our Emails 
   
 © 2024 Society for Industrial and Applied Mathematics   
 Terms & Conditions 
  Privacy 

    
Call for papers data: 
  Skip to main content    
       
  Join SIAM 
  Donate 
  Log In 

 Journals 
  Books 
  SIAM Engage 
  Join SIAM 
  Donate 
  Log In 
   
 SIAM News 
  Activity Groups 
  Prizes & Awards 
  Log In 
   
 Publications | Toggle sub-menu | SIAM Journals | SIAM Review 
  Multiscale Modeling and Simulation: A SIAM Interdisciplinary Journal 
  SIAM Journal on Applied Algebra and Geometry 
  SIAM Journal on Applied Dynamical Systems 
  SIAM Journal on Applied Mathematics 
  SIAM Journal on Computing 
  SIAM Journal on Control and Optimization 
  SIAM Journal on Discrete Mathematics 
  SIAM Journal on Financial Mathematics 
  SIAM Journal on Imaging Sciences 
  SIAM Journal on Mathematical Analysis 
  SIAM Journal on Mathematics of Data Science 
  SIAM Journal on Matrix Analysis and Applications 
  SIAM Journal on Numerical Analysis 
  SIAM Journal on Optimization 
  SIAM Journal on Scientific Computing 
  SIAM / ASA Journal on Uncertainty Quantification 
  Theory of Probability and Its Applications 
  SIAM Undergraduate Research Online 
  SIAM Books  Our textbooks and monographs are indispensable to researchers, faculty, and students around the world.  SIAM Books 
  SIAM News  The newsjournal of SIAM, covering cutting-edge research and the state of the art in applied mathematics and computational science.  SIAM News 
  Reports 
  Proceedings 
  Subscriptions & Ordering 
  Programs & Initiatives | Toggle sub-menu | Programs | Gene Golub SIAM Summer School 
  Visiting Lecturer Program 
  MathWorks Math Modeling (M3) Challenge 
  SIAM-Simons Undergraduate Summer Research Program 
  SIAM Science Policy Fellowship 
  MGB-SIAM Early Career Fellowship 
  SIAM Postdoctoral Support Program 
  Graduate Student Mathematical Modeling Camp and Mathematical Problems in Industry Workshop 
  See All Programs 
  Professional Development | Careers in Applied Mathematics 
  Career Resources 
  Job Board 
  Internships 
  Prizes and Awards | Deadline Calendar 
  SIAM Fellows Program 
  Policy & Procedures 
  Save the Date for the Next Career Fair!  Happening in person March 4, 2025 during CSE25.  Save the Date for the Next Career Fair! 
  Industry 
  Equity, Diversity, & Inclusion 
  Education Resources 
  Science Policy 
  Conferences & Events | Toggle sub-menu | SIAM Conferences | More Events by Type 
  Section Meetings 
  Webinars & Seminars 
  Workshops 
  Career Fairs 
  Cooperating Conferences 
  Archive 
  See all Events 
  Conference Support | Travel & Registration Support 
  Child Care Grants 
  About SIAM Conferences & Events | For Sponsors & Exhibitors 
  Conference Guidelines 
  Featured Videos & Lectures 
  Submit Now for SIAM AN25!  The Third Joint SIAM/CAIMS Annual Meetings is happening July 28 - August 1, 2025 in Montréal, Québec, Canada.  Submit Now for SIAM AN25! 
  Membership | Toggle sub-menu | Individual Membership | Join 14,000 applied mathematicians and computational and data scientists from around the world. 
  Learn More 
  Institutional Membership | Create a custom subscription of four or more journals and your institution can become a free SIAM academic member, receiving up to a 27.5% discount on journal list prices. 
  Learn More 
  Member Support & FAQ | Questions about our membership types, benefits, how to automatically renew, or something else? 
  Get Your Questions Answered 
  Get Involved | Toggle sub-menu | Connect with a Community | Activity Groups 
  Sections 
  Student Chapters 
  SIAM Engage Online Community 
  Ways to Participate | Serve on Committees 
  Become an Author, Editor, or Referee 
  Nominate for Prizes 
  Network and Present at a Conference 
  Write for SIAM News 
  Ways to Support | Donate to SIAM 
  Spread the Word 
  Become a Sponsor 
  About Us | Toggle sub-menu | Overview 
  Mission & History 
  Governance & Leadership 
  Committees 
  Staff 
  Collaborations 
  Bylaws & Reports 
  Policies & Guidelines 
  Join SIAM 
  Contact Us 

 Back to top     
   
 Home 
  Publications 
  SIAM Journals 
  SIAM Undergraduate Research Online (SIURO) 

 SIAM Undergraduate Research Online  
 SIAM Undergraduate Research Online  (SIURO) is a web-based publication devoted to undergraduate research in applied and computational mathematics. Access is free and open to the public.  
   
 Read Current Issue  Submit a Paper    
   
 Related Links  
 Sign Up for Email Updates 

 In This Section 
  SIAM Undergraduate Research Online E-Alert 
  Editorial Policy 
  Editorial Board 
  Instructions for Authors 
  More 

 SIURO consists of articles written by undergraduate students in applied and computational mathematics, offering an opportunity for students to publish research they have completed as part of their undergraduate education and providing undergraduates incentives for conducting research.  
 The publication represents a wide range of applied topics, including but not limited to analysis, discrete mathematics, statistics, operations research, optimization, dynamical systems, modeling, and computation. Typical areas of application include but are not limited to physical, life, financial, and management sciences and engineering.  
 Each paper must be submitted with a letter from a project advisor. Faculty advisers or sponsors are listed as "project advisor" on the published paper.  
 SIURO provides an opportunity for undergraduate students to share their results and experience a full paper review process. High school students may also submit their work.  
 The project advisor may be a faculty member at the student’s institution or at an institution the student is visiting, or someone associated with a non-academic organization or government lab who supervised the research. 
  The project advisor’s letter must document the fact that the research was done while the student was an undergraduate and list the student’s graduation date or anticipated graduation date. 
  Project advisors will be listed separately from the authors with a “project advisor” byline. 

 Announcements   
 Authors: Prepare your papers using LaTex 2e macros to aid editor and referee review 

 From the Current Volume  
 Check out the latest volume and dive into advanced research and findings by undergraduate students.  
 See more   
   
 Volume 17  Accurately Classifying Out-Of-Distribution Data in Facial Recognition   
 November 13, 2024    
 By  Gianluca Barone (Corresponding author – Rowan University) 
  Aashrit Cunchala (University of Pittsburgh) 
  Rudy Nunez (Emory University) 

 Volume 17  Optimizing Energy Functional in Wave and Heat Equations with Initial Conditions in a Class of Rearrangements   
 October 30, 2024    
 By  Renjing Wang (Corresponding author – Xi'an Jiaotong-Liverpool University, China) 

 Volume 17  Travelling Waves of the Diffusive Streeter-Phelps Equations with Braun-Berthouex BOD Decay   
 October 24, 2024    
 By  Alexandra Lawryshyn (Corresponding author – University of Guelph, Ontario, Canada) 

 Browse Articles by Volume  
   
 Volume 17   
 2024   
   
 Volume 16   
 2023   
   
 Volume 15   
 2022   
   
 Volume 14   
 2021   
   
 Volume 13   
 2020   
   
 Volume 12   
 2019   
   
 Volume 11   
 2018   
   
 Volume 10   
 2017   
   
 Volume 9   
 2016   
   
 Volume 8   
 2015   
   
 Volume 7   
 2014   
   
 Volume 6   
 2013   
   
 Volume 5   
 2012   
   
 Volume 4   
 2011   
   
 Volume 3   
 2010   
   
 Volume 2, Issue 2   
 Fall 2009   
   
 Volume 2, Issue 1   
 Spring 2009   
   
 Volume 1, Issue 2   
 Fall 2008   
   
 Volume 1, Issue 1   
 Summer 2008   

 Show more    

 Publish with SIURO   
 Become an Author  
   
 SIURO offers undergraduate and high school students the early opportunity to publish their research while becoming part of the scientific community.  
   
 Learn More 
    
 SIURO is one of the best publications for undergraduate research in applied and computational mathematics. Beyond getting their results out into the world, when students publish their papers in SIURO, they have the edifying experience of taking their original work through the peer-review process.  
   Joanna Wares  University of Richmond     

 Get Involved with SIURO  
 We welcome submissions from undergraduate and high school students in applied and computational mathematics.  

 Editorial Information   
 Get the scoop on our reviewer guidelines, editorial policy, and more.   

 Instructions for Authors   
 Interested in submitting a paper to SIURO?   

 Contact Us  
   
 Questions about SIURO? Get in touch with our staff.  
 Contact SIURO Staff    

 Stay Up-to-Date with Email Alerts  
 Sign up for our monthly newsletter and emails about other topics of your choosing.  
   
 Email Address     
 Sign Up Now     

   3600 Market Street  6th Floor  Philadelphia, PA 19104 USA   Facebook 
  Twitter 
  Youtube 
  LinkedIn 

 About SIAM | Mission & History 
  Governance & Leadership 
  Committees 
  Staff 
  Collaborations 
  Code of Conduct 
  Policies & Guidelines 
  Jobs at SIAM 
  Contact Us 
  Membership | Member Benefits 
  Become a Member 
  Renew Your Membership 
  Connect with a Community 
  Ways to Participate 
  Jobs in STEM 
  Share & Support | Newsroom 
  Advertise with Us 
  Become a Sponsor 
  Post a Job 
  Information for Librarians 
  Subscribe to Our Emails 
   
 © 2024 Society for Industrial and Applied Mathematics   
 Terms & Conditions 
  Privacy 

    Important dates data: 
undefined

40. Conference SEA_0:
SEA 2025  
 23 rd  Symposium on Experimental Algorithms  
 Venice, Italy, July 22-24, 2025  

 Welcome to the website of the 23 rd  Symposium on Experimental Algorithm (SEA 2025) which will be held in Venice, Italy.  
  
 Home 
   
  Call for papers 
  Program 
  Invited speakers 
  Committees 
  Registration 
   
  Venue 
  Excursion and Dinner 
   
  Workshop 
  Past SEAs 

 Important dates  
 Paper Submission Deadline: January 26th, 2025 
  Authors notification: March 24th, 2025 
  Early Registration: TBA 
  Conference Dates: July 22-24, 2025 
  Workshop Date: July 25, 2025 
  Calendar  

  Contact  
 You can contact us at: sea25-organization-grpunive[at]unive.it   
  
  Sponsors  

  REGINDEX: Compressed Indexes for Regular Languages with Applications to Computational Pan-genomics.  
  Funded by ERC StG “REGINDEX: Compressed indexes for regular languages with applications to computational pan-genomics” grant nr 101039208. Views and opinions expressed are however those of the author(s) only and do not necessarily reflect those of the European Union or the European Research Council Executive Agency. Neither the European Union nor the granting authority can be held responsible for them.   

  Ca' Foscari University of Venice.  

 Pictures are provided by pexels.com   
 Click here to contact us   

  
Call for papers data: 
SEA 2025  
 23 rd  Symposium on Experimental Algorithms  
 Venice, Italy, July 22-24, 2025  

 Home 
   
  Call for papers 
  Program 
  Invited speakers 
  Committees 
  Registration 
   
  Venue 
  Excursion and Dinner 
   
  Workshop 
  Past SEAs 

 Call For Papers  
 SEA aims to attract papers from the Computer Science community, the Operations Research/Mathematical Programming community and any other scientific community that is concerned with the main theme of the symposium, namely the role of experimentation and of algorithm engineering techniques in the design and evaluation of algorithms and data structures.   
   
  Submissions should present significant contributions supported by experimental evaluation, methodological issues in the design and interpretation of experiments, the use of (meta-)heuristics, or application-driven case studies that deepen the understanding of the complexity of a problem.   
   
  Full papers must be submitted via EasyChair by: January 26th, 2025   
  Authors will be notified of acceptance status by: March 24th, 2025   
  Final version due: April 28th, 2025    

  Topics of interest  
 Contributions solicited cover a variety of topics including but not limited to:  Algorithm Engineering 
  Algorithmic Libraries and Software Repositories 
  Algorithmic Cryptography and Security 
  Algorithmic Natural Language Processing 
  Algorithmics for Databases 
  Analysis of Algorithms 
  Approximation Algorithms 
  Bioinformatics and Computational Biology 
  Branch-and-Bound Algorithms 
  Combinatorial Problems and Structures 
  Communication Networks 
  Computational Geometry 
  Computational Optimization 
  Compressed space algorithms and data structures 
  Data Structures 
  Distributed and Parallel Algorithms 
  Graph Algorithms 
  Heuristic Algorithms 
  Integer Programming 
  Logistics and Operations Management 
  Machine Learning and Data Mining 
  Mathematical Programming 
  Multiple Criteria Decision Making 
  Network Analysis 
  Online Problems 
  Randomized Algorithms 
  Semidefinite Programming 
  String Algorithms 
  Streaming and External Memory Algorithms 
   
  Best Paper Award  
 The program committee will identify a submission as the best paper.   
   
  Proceedings  
 The conference proceedings will be published in the Leibniz International Proceedings in Informatics (LIPIcs), a series of high-quality conference proceedings across all fields in informatics established in cooperation with Schloss Dagstuhl Leibniz Center for Informatics. SEA Proceedings volumes are published according to the principle of OpenAccess, i.e., they are available online and free of charge.   
   
  Submission Guidelines  
 The authors should submit a paper not exceeding 12 pages, excluding the bibliography, the front page (title, keywords, abstract, ...), and a brief appendix of up to 5 pages (figures and tables should be counted as part of the space occupied by the appendix). This year, for the first time in SEA, all papers have to be anonymized  so author names and affiliations cannot be included (see Double-Blind Reviewing section). Non-anonymized papers will be desk-rejected.   
   
  More precisely, you can see your paper as a set of four bins  :  front page (can only contain title, front matter, abstract, possibly the beginning of the introduction: its "bin capacity" is 1 page) 
  main text (can contain text, tables, figures, pseudocodes: its "bin capacity" is 12 pages) 
  bibliography pages (can only contain bibliographic references: its "bin capacity" is approximately 2 pages) 
  additional pages (may contain text, tables, figures: its "bin capacity" is 5 pages) 
  It is up to the authors to assign text, figures, tables, and other elements in such a way as to respect the bin capacities.    
  
  Authors are required to use the LaTeX style file supplied for the LIPIcs style, without changing default values nor setting font size options in the "documentclass" statement ( click here  to access LIPICs instructions for authors and download the LaTex template  ). Final proceedings papers must be camera-ready in this format. We emphasize that a clearly marked Appendix of up to 5 pages, which will not count toward the 12 page submission limit, can be included and will be read at the referees' discretion. All submissions have to be made via the EasyChair  submission page for the conference ( click here  to access the submission page).   
   
  Papers submitted for review should represent original, previously unpublished work or surveys of important results. At the time the paper is submitted to SEA, and for the entire review period, the paper (or essentially the same paper) should not be under review by any other conference with published proceedings or by a scientific journal. At least one author  of each accepted paper will be expected to attend the conference and present the paper. Specifically, no accepted paper will be published unless an author registers to participate in the conference.   
   
  Double-Blind Reviewing  
 SEA will implement a double-blind review process for the first time  . As such, submissions must not disclose the authors' identities in any way. In particular, names, affiliations, and email addresses must be excluded from the paper. Authors should reference their prior work in the third person (e.g., instead of writing "We build on our previous work...", they should write "This work builds on the research of..."). Authors should also take care of the anonymization of accompanying software and data. In particular, they cannot link software hosted on their own GitHub page, but they need to link it anonymously (for example, via DropBox). The authors can insert the public GitHub links back in the proceedings version of their papers.  
  Authors are free to share their ideas and drafts as they usually would. For instance, they can submit to repositories like arXiv or give talks on their research. If there are publicly accessible versions of the submission, authors may mention this in the submission (without including links or citations). Alternatively, they can inform the chairs, who will keep these details confidential unless sharing them is necessary for a fair review.  
   
  Double-blind reviewing aims to allow program committee members and external reviewers to evaluate the paper impartially, without bias. However, it's not intended to make determining the authors' identity impossible through investigation. Authors should not compromise the submission's quality or hinder the review process in the name of anonymity; thus, key references must not be omitted or anonymized  . Any authors with questions about the double-blind review process should contact the program committee chairs for clarification. All papers failing to meet anonymization requirements will be desk-rejected.   
   
  Large Language Models usage policy  
 Papers containing content generated by large language models (LLMs) such as ChatGPT or images created using deep generative models (DGMs) such as StableDiffusion are not allowed, except for:  
  Generating scientific plots displaying data that the authors obtained from experiments (for example: it is allowed to use an LLM for generating Python code that generates plots showing experimental results) 
  Polishing the text that the authors have personally written. 
  Despite using LLMs or DGMs, authors remain fully responsible for ensuring their submissions' accuracy, originality, and quality. We urge authors to maintain the integrity of the academic publishing process and avoid any actions that could be considered scientific misconduct, such as plagiarism and misrepresenting figures.  
   
  If a submission includes LLM-generated text or DGM-generated images, we require the authors to disclose this information to the Program Chairs at the moment of submitting the paper  , by checking a dedicated box on EasyChair (and providing details on how they used these models). If the Program Chairs should have concerns regarding potential scientific misconduct (which includes using such models and not declaring it, even for the allowed situations above listed), the submission may be subjected to checks for plagiarism or other violations. Any papers failing to meet these requirements will be desk-rejected, even after the review process.  
   
  Submission and deadlines  
  
  Full papers must be submitted via EasyChair by: January 26th, 2025   
  Authors will be notified of acceptance status by: March 24th, 2025   
  Final version due: April 28th, 2025    

  Final versions of accepted papers will be submitted to Dagstuhl's Leibniz International Proceedings in Informatics (LIPIcs). Details about the submission server will be communicated to corresponding authors of accepted papers.    
   
 Click here to contact us 
   
  Important dates data: 
undefined

41. Conference SDM_2:
Skip to main content    
       
  Join SIAM 
  Donate 
  Log In 

 Journals 
  Books 
  SIAM Engage 
  Join SIAM 
  Donate 
  Log In 
   
 SIAM News 
  Activity Groups 
  Prizes & Awards 
  Log In 
   
 Publications | Toggle sub-menu | SIAM Journals | SIAM Review 
  Multiscale Modeling and Simulation: A SIAM Interdisciplinary Journal 
  SIAM Journal on Applied Algebra and Geometry 
  SIAM Journal on Applied Dynamical Systems 
  SIAM Journal on Applied Mathematics 
  SIAM Journal on Computing 
  SIAM Journal on Control and Optimization 
  SIAM Journal on Discrete Mathematics 
  SIAM Journal on Financial Mathematics 
  SIAM Journal on Imaging Sciences 
  SIAM Journal on Mathematical Analysis 
  SIAM Journal on Mathematics of Data Science 
  SIAM Journal on Matrix Analysis and Applications 
  SIAM Journal on Numerical Analysis 
  SIAM Journal on Optimization 
  SIAM Journal on Scientific Computing 
  SIAM / ASA Journal on Uncertainty Quantification 
  Theory of Probability and Its Applications 
  SIAM Undergraduate Research Online 
  SIAM Books  Our textbooks and monographs are indispensable to researchers, faculty, and students around the world.  SIAM Books 
  SIAM News  The newsjournal of SIAM, covering cutting-edge research and the state of the art in applied mathematics and computational science.  SIAM News 
  Reports 
  Proceedings 
  Subscriptions & Ordering 
  Programs & Initiatives | Toggle sub-menu | Programs | Gene Golub SIAM Summer School 
  Visiting Lecturer Program 
  MathWorks Math Modeling (M3) Challenge 
  SIAM-Simons Undergraduate Summer Research Program 
  SIAM Science Policy Fellowship 
  MGB-SIAM Early Career Fellowship 
  SIAM Postdoctoral Support Program 
  Graduate Student Mathematical Modeling Camp and Mathematical Problems in Industry Workshop 
  See All Programs 
  Professional Development | Careers in Applied Mathematics 
  Career Resources 
  Job Board 
  Internships 
  Prizes and Awards | Deadline Calendar 
  SIAM Fellows Program 
  Policy & Procedures 
  Save the Date for the Next Career Fair!  Happening in person March 4, 2025 during CSE25.  Save the Date for the Next Career Fair! 
  Industry 
  Equity, Diversity, & Inclusion 
  Education Resources 
  Science Policy 
  Conferences & Events | Toggle sub-menu | SIAM Conferences | More Events by Type 
  Section Meetings 
  Webinars & Seminars 
  Workshops 
  Career Fairs 
  Cooperating Conferences 
  Archive 
  See all Events 
  Conference Support | Travel & Registration Support 
  Child Care Grants 
  About SIAM Conferences & Events | For Sponsors & Exhibitors 
  Conference Guidelines 
  Featured Videos & Lectures 
  Submit Now for SIAM AN25!  The Third Joint SIAM/CAIMS Annual Meetings is happening July 28 - August 1, 2025 in Montréal, Québec, Canada.  Submit Now for SIAM AN25! 
  Membership | Toggle sub-menu | Individual Membership | Join 14,000 applied mathematicians and computational and data scientists from around the world. 
  Learn More 
  Institutional Membership | Create a custom subscription of four or more journals and your institution can become a free SIAM academic member, receiving up to a 27.5% discount on journal list prices. 
  Learn More 
  Member Support & FAQ | Questions about our membership types, benefits, how to automatically renew, or something else? 
  Get Your Questions Answered 
  Get Involved | Toggle sub-menu | Connect with a Community | Activity Groups 
  Sections 
  Student Chapters 
  SIAM Engage Online Community 
  Ways to Participate | Serve on Committees 
  Become an Author, Editor, or Referee 
  Nominate for Prizes 
  Network and Present at a Conference 
  Write for SIAM News 
  Ways to Support | Donate to SIAM 
  Spread the Word 
  Become a Sponsor 
  About Us | Toggle sub-menu | Overview 
  Mission & History 
  Governance & Leadership 
  Committees 
  Staff 
  Collaborations 
  Bylaws & Reports 
  Policies & Guidelines 
  Join SIAM 
  Contact Us 

 Back to top     
   
 Home 
  Conferences & Events 
  SIAM Conferences 
  SDM25 
  Registration 

 SIAM International Conference on Data Mining (SDM25)   
 Registration  
   
 Related Links  
 SDM25 Home 
  Lodging & Support 
  Program 
  Submissions 

 Upcoming Registration Dates   
 Early Registration Deadline | April 3, 2025 

 The following registration fees are subject to change. Fees are in USD.  

 Registration Fees  
  
 SIAG/Data Member | $810   
  Early Registration Rate  
 $910   
  Standard Registration Rate 
  SIAM Member | $825   
  Early Registration Rate  
 $925   
  Standard Registration Rate 
  Non-Member | $1,035   
  Early Registration Rate  
 $1,135   
  Standard Registration Rate  
 Non-members can bundle their conference registration with a 12-month SIAM membership ending December 31, 2025, at no additional cost  . Attendees who select the Non-Member Registration Rate during the registration process will have a SIAM Membership processed automatically. Learn more about SIAM membership benefits  . 
  SIAM Student, Member | $390   
  Early Registration Rate  
 $420   
  Standard Registration Rate  
 Student registration is available for undergraduate and graduate students ONLY; this rate is not available to post-doctorates. All students must be prepared to show a current student ID at the SIAM registration desk. 
  Student, Non-Member | $415   
  Early Registration Rate  
 $445   
  Standard Registration Rate  
 The student non-member rate includes a SIAM student membership. Questions regarding SIAM membership should be directed to  [email protected]   . 
  One-day | $520   
  Early Registration Rate  
 $570   
  Standard Registration Rate 

 About SIAM Conferences  
   
 SIAM conferences are a place to learn about timely topics in the mathematical sciences and be part of a community exchanging ideas and expanding their networks across academia, industry, government, and labs.  
 Learn More    

 Stay Up-to-Date with Email Alerts  
 Sign up for our monthly newsletter and emails about other topics of your choosing.  
   
 Email Address     
 Sign Up Now     

   3600 Market Street  6th Floor  Philadelphia, PA 19104 USA   Facebook 
  Twitter 
  Youtube 
  LinkedIn 

 About SIAM | Mission & History 
  Governance & Leadership 
  Committees 
  Staff 
  Collaborations 
  Code of Conduct 
  Policies & Guidelines 
  Jobs at SIAM 
  Contact Us 
  Membership | Member Benefits 
  Become a Member 
  Renew Your Membership 
  Connect with a Community 
  Ways to Participate 
  Jobs in STEM 
  Share & Support | Newsroom 
  Advertise with Us 
  Become a Sponsor 
  Post a Job 
  Information for Librarians 
  Subscribe to Our Emails 
   
 © 2024 Society for Industrial and Applied Mathematics   
 Terms & Conditions 
  Privacy 

    
Call for papers data: 
  Skip to main content    
       
  Join SIAM 
  Donate 
  Log In 

 Journals 
  Books 
  SIAM Engage 
  Join SIAM 
  Donate 
  Log In 
   
 SIAM News 
  Activity Groups 
  Prizes & Awards 
  Log In 
   
 Publications | Toggle sub-menu | SIAM Journals | SIAM Review 
  Multiscale Modeling and Simulation: A SIAM Interdisciplinary Journal 
  SIAM Journal on Applied Algebra and Geometry 
  SIAM Journal on Applied Dynamical Systems 
  SIAM Journal on Applied Mathematics 
  SIAM Journal on Computing 
  SIAM Journal on Control and Optimization 
  SIAM Journal on Discrete Mathematics 
  SIAM Journal on Financial Mathematics 
  SIAM Journal on Imaging Sciences 
  SIAM Journal on Mathematical Analysis 
  SIAM Journal on Mathematics of Data Science 
  SIAM Journal on Matrix Analysis and Applications 
  SIAM Journal on Numerical Analysis 
  SIAM Journal on Optimization 
  SIAM Journal on Scientific Computing 
  SIAM / ASA Journal on Uncertainty Quantification 
  Theory of Probability and Its Applications 
  SIAM Undergraduate Research Online 
  SIAM Books  Our textbooks and monographs are indispensable to researchers, faculty, and students around the world.  SIAM Books 
  SIAM News  The newsjournal of SIAM, covering cutting-edge research and the state of the art in applied mathematics and computational science.  SIAM News 
  Reports 
  Proceedings 
  Subscriptions & Ordering 
  Programs & Initiatives | Toggle sub-menu | Programs | Gene Golub SIAM Summer School 
  Visiting Lecturer Program 
  MathWorks Math Modeling (M3) Challenge 
  SIAM-Simons Undergraduate Summer Research Program 
  SIAM Science Policy Fellowship 
  MGB-SIAM Early Career Fellowship 
  SIAM Postdoctoral Support Program 
  Graduate Student Mathematical Modeling Camp and Mathematical Problems in Industry Workshop 
  See All Programs 
  Professional Development | Careers in Applied Mathematics 
  Career Resources 
  Job Board 
  Internships 
  Prizes and Awards | Deadline Calendar 
  SIAM Fellows Program 
  Policy & Procedures 
  Save the Date for the Next Career Fair!  Happening in person March 4, 2025 during CSE25.  Save the Date for the Next Career Fair! 
  Industry 
  Equity, Diversity, & Inclusion 
  Education Resources 
  Science Policy 
  Conferences & Events | Toggle sub-menu | SIAM Conferences | More Events by Type 
  Section Meetings 
  Webinars & Seminars 
  Workshops 
  Career Fairs 
  Cooperating Conferences 
  Archive 
  See all Events 
  Conference Support | Travel & Registration Support 
  Child Care Grants 
  About SIAM Conferences & Events | For Sponsors & Exhibitors 
  Conference Guidelines 
  Featured Videos & Lectures 
  Submit Now for SIAM AN25!  The Third Joint SIAM/CAIMS Annual Meetings is happening July 28 - August 1, 2025 in Montréal, Québec, Canada.  Submit Now for SIAM AN25! 
  Membership | Toggle sub-menu | Individual Membership | Join 14,000 applied mathematicians and computational and data scientists from around the world. 
  Learn More 
  Institutional Membership | Create a custom subscription of four or more journals and your institution can become a free SIAM academic member, receiving up to a 27.5% discount on journal list prices. 
  Learn More 
  Member Support & FAQ | Questions about our membership types, benefits, how to automatically renew, or something else? 
  Get Your Questions Answered 
  Get Involved | Toggle sub-menu | Connect with a Community | Activity Groups 
  Sections 
  Student Chapters 
  SIAM Engage Online Community 
  Ways to Participate | Serve on Committees 
  Become an Author, Editor, or Referee 
  Nominate for Prizes 
  Network and Present at a Conference 
  Write for SIAM News 
  Ways to Support | Donate to SIAM 
  Spread the Word 
  Become a Sponsor 
  About Us | Toggle sub-menu | Overview 
  Mission & History 
  Governance & Leadership 
  Committees 
  Staff 
  Collaborations 
  Bylaws & Reports 
  Policies & Guidelines 
  Join SIAM 
  Contact Us 

 Back to top     
   
 Home 
  Publications 
  SIAM Journals 
  SIAM Undergraduate Research Online (SIURO) 

 SIAM Undergraduate Research Online  
 SIAM Undergraduate Research Online  (SIURO) is a web-based publication devoted to undergraduate research in applied and computational mathematics. Access is free and open to the public.  
   
 Read Current Issue  Submit a Paper    
   
 Related Links  
 Sign Up for Email Updates 

 In This Section 
  SIAM Undergraduate Research Online E-Alert 
  Editorial Policy 
  Editorial Board 
  Instructions for Authors 
  More 

 SIURO consists of articles written by undergraduate students in applied and computational mathematics, offering an opportunity for students to publish research they have completed as part of their undergraduate education and providing undergraduates incentives for conducting research.  
 The publication represents a wide range of applied topics, including but not limited to analysis, discrete mathematics, statistics, operations research, optimization, dynamical systems, modeling, and computation. Typical areas of application include but are not limited to physical, life, financial, and management sciences and engineering.  
 Each paper must be submitted with a letter from a project advisor. Faculty advisers or sponsors are listed as "project advisor" on the published paper.  
 SIURO provides an opportunity for undergraduate students to share their results and experience a full paper review process. High school students may also submit their work.  
 The project advisor may be a faculty member at the student’s institution or at an institution the student is visiting, or someone associated with a non-academic organization or government lab who supervised the research. 
  The project advisor’s letter must document the fact that the research was done while the student was an undergraduate and list the student’s graduation date or anticipated graduation date. 
  Project advisors will be listed separately from the authors with a “project advisor” byline. 

 Announcements   
 Authors: Prepare your papers using LaTex 2e macros to aid editor and referee review 

 From the Current Volume  
 Check out the latest volume and dive into advanced research and findings by undergraduate students.  
 See more   
   
 Volume 17  Accurately Classifying Out-Of-Distribution Data in Facial Recognition   
 November 13, 2024    
 By  Gianluca Barone (Corresponding author – Rowan University) 
  Aashrit Cunchala (University of Pittsburgh) 
  Rudy Nunez (Emory University) 

 Volume 17  Optimizing Energy Functional in Wave and Heat Equations with Initial Conditions in a Class of Rearrangements   
 October 30, 2024    
 By  Renjing Wang (Corresponding author – Xi'an Jiaotong-Liverpool University, China) 

 Volume 17  Travelling Waves of the Diffusive Streeter-Phelps Equations with Braun-Berthouex BOD Decay   
 October 24, 2024    
 By  Alexandra Lawryshyn (Corresponding author – University of Guelph, Ontario, Canada) 

 Browse Articles by Volume  
   
 Volume 17   
 2024   
   
 Volume 16   
 2023   
   
 Volume 15   
 2022   
   
 Volume 14   
 2021   
   
 Volume 13   
 2020   
   
 Volume 12   
 2019   
   
 Volume 11   
 2018   
   
 Volume 10   
 2017   
   
 Volume 9   
 2016   
   
 Volume 8   
 2015   
   
 Volume 7   
 2014   
   
 Volume 6   
 2013   
   
 Volume 5   
 2012   
   
 Volume 4   
 2011   
   
 Volume 3   
 2010   
   
 Volume 2, Issue 2   
 Fall 2009   
   
 Volume 2, Issue 1   
 Spring 2009   
   
 Volume 1, Issue 2   
 Fall 2008   
   
 Volume 1, Issue 1   
 Summer 2008   

 Show more    

 Publish with SIURO   
 Become an Author  
   
 SIURO offers undergraduate and high school students the early opportunity to publish their research while becoming part of the scientific community.  
   
 Learn More 
    
 SIURO is one of the best publications for undergraduate research in applied and computational mathematics. Beyond getting their results out into the world, when students publish their papers in SIURO, they have the edifying experience of taking their original work through the peer-review process.  
   Joanna Wares  University of Richmond     

 Get Involved with SIURO  
 We welcome submissions from undergraduate and high school students in applied and computational mathematics.  

 Editorial Information   
 Get the scoop on our reviewer guidelines, editorial policy, and more.   

 Instructions for Authors   
 Interested in submitting a paper to SIURO?   

 Contact Us  
   
 Questions about SIURO? Get in touch with our staff.  
 Contact SIURO Staff    

 Stay Up-to-Date with Email Alerts  
 Sign up for our monthly newsletter and emails about other topics of your choosing.  
   
 Email Address     
 Sign Up Now     

   3600 Market Street  6th Floor  Philadelphia, PA 19104 USA   Facebook 
  Twitter 
  Youtube 
  LinkedIn 

 About SIAM | Mission & History 
  Governance & Leadership 
  Committees 
  Staff 
  Collaborations 
  Code of Conduct 
  Policies & Guidelines 
  Jobs at SIAM 
  Contact Us 
  Membership | Member Benefits 
  Become a Member 
  Renew Your Membership 
  Connect with a Community 
  Ways to Participate 
  Jobs in STEM 
  Share & Support | Newsroom 
  Advertise with Us 
  Become a Sponsor 
  Post a Job 
  Information for Librarians 
  Subscribe to Our Emails 
   
 © 2024 Society for Industrial and Applied Mathematics   
 Terms & Conditions 
  Privacy 

    Important dates data: 
undefined

42. Conference SDM_3:
Skip to main content    
       
  Join SIAM 
  Donate 
  Log In 

 Journals 
  Books 
  SIAM Engage 
  Join SIAM 
  Donate 
  Log In 
   
 SIAM News 
  Activity Groups 
  Prizes & Awards 
  Log In 
   
 Publications | Toggle sub-menu | SIAM Journals | SIAM Review 
  Multiscale Modeling and Simulation: A SIAM Interdisciplinary Journal 
  SIAM Journal on Applied Algebra and Geometry 
  SIAM Journal on Applied Dynamical Systems 
  SIAM Journal on Applied Mathematics 
  SIAM Journal on Computing 
  SIAM Journal on Control and Optimization 
  SIAM Journal on Discrete Mathematics 
  SIAM Journal on Financial Mathematics 
  SIAM Journal on Imaging Sciences 
  SIAM Journal on Mathematical Analysis 
  SIAM Journal on Mathematics of Data Science 
  SIAM Journal on Matrix Analysis and Applications 
  SIAM Journal on Numerical Analysis 
  SIAM Journal on Optimization 
  SIAM Journal on Scientific Computing 
  SIAM / ASA Journal on Uncertainty Quantification 
  Theory of Probability and Its Applications 
  SIAM Undergraduate Research Online 
  SIAM Books  Our textbooks and monographs are indispensable to researchers, faculty, and students around the world.  SIAM Books 
  SIAM News  The newsjournal of SIAM, covering cutting-edge research and the state of the art in applied mathematics and computational science.  SIAM News 
  Reports 
  Proceedings 
  Subscriptions & Ordering 
  Programs & Initiatives | Toggle sub-menu | Programs | Gene Golub SIAM Summer School 
  Visiting Lecturer Program 
  MathWorks Math Modeling (M3) Challenge 
  SIAM-Simons Undergraduate Summer Research Program 
  SIAM Science Policy Fellowship 
  MGB-SIAM Early Career Fellowship 
  SIAM Postdoctoral Support Program 
  Graduate Student Mathematical Modeling Camp and Mathematical Problems in Industry Workshop 
  See All Programs 
  Professional Development | Careers in Applied Mathematics 
  Career Resources 
  Job Board 
  Internships 
  Prizes and Awards | Deadline Calendar 
  SIAM Fellows Program 
  Policy & Procedures 
  Save the Date for the Next Career Fair!  Happening in person March 4, 2025 during CSE25.  Save the Date for the Next Career Fair! 
  Industry 
  Equity, Diversity, & Inclusion 
  Education Resources 
  Science Policy 
  Conferences & Events | Toggle sub-menu | SIAM Conferences | More Events by Type 
  Section Meetings 
  Webinars & Seminars 
  Workshops 
  Career Fairs 
  Cooperating Conferences 
  Archive 
  See all Events 
  Conference Support | Travel & Registration Support 
  Child Care Grants 
  About SIAM Conferences & Events | For Sponsors & Exhibitors 
  Conference Guidelines 
  Featured Videos & Lectures 
  Submit Now for SIAM AN25!  The Third Joint SIAM/CAIMS Annual Meetings is happening July 28 - August 1, 2025 in Montréal, Québec, Canada.  Submit Now for SIAM AN25! 
  Membership | Toggle sub-menu | Individual Membership | Join 14,000 applied mathematicians and computational and data scientists from around the world. 
  Learn More 
  Institutional Membership | Create a custom subscription of four or more journals and your institution can become a free SIAM academic member, receiving up to a 27.5% discount on journal list prices. 
  Learn More 
  Member Support & FAQ | Questions about our membership types, benefits, how to automatically renew, or something else? 
  Get Your Questions Answered 
  Get Involved | Toggle sub-menu | Connect with a Community | Activity Groups 
  Sections 
  Student Chapters 
  SIAM Engage Online Community 
  Ways to Participate | Serve on Committees 
  Become an Author, Editor, or Referee 
  Nominate for Prizes 
  Network and Present at a Conference 
  Write for SIAM News 
  Ways to Support | Donate to SIAM 
  Spread the Word 
  Become a Sponsor 
  About Us | Toggle sub-menu | Overview 
  Mission & History 
  Governance & Leadership 
  Committees 
  Staff 
  Collaborations 
  Bylaws & Reports 
  Policies & Guidelines 
  Join SIAM 
  Contact Us 

 Back to top     
   
 Home 
  Conferences & Events 
  SIAM Conferences 
  SDM25 
  Lodging & Support 

 SIAM International Conference on Data Mining (SDM25)   
 Lodging and Support  
   
 Related Links  
 SDM25 Home 
  Registration 
  Program 
  Submissions 

 General Information   
 Learn more about travel and visa information, what to expect onsite, what's happening in the area, and more!   
   
 Hotel & Transportation   
 Find out about hotel options, deadlines, transportation information, and more.   
   
 Child Care   
 Bringing your kids to the conference? We may be able to help with financial support. Learn more about our child care grants.   
   
 Travel Support   
 Learn more about travel and visa information, what to expect onsite, what's happening in the area, and more!   

 About SIAM Conferences  
   
 SIAM conferences are a place to learn about timely topics in the mathematical sciences and be part of a community exchanging ideas and expanding their networks across academia, industry, government, and labs.  
 Learn More    

 Stay Up-to-Date with Email Alerts  
 Sign up for our monthly newsletter and emails about other topics of your choosing.  
   
 Email Address     
 Sign Up Now     

   3600 Market Street  6th Floor  Philadelphia, PA 19104 USA   Facebook 
  Twitter 
  Youtube 
  LinkedIn 

 About SIAM | Mission & History 
  Governance & Leadership 
  Committees 
  Staff 
  Collaborations 
  Code of Conduct 
  Policies & Guidelines 
  Jobs at SIAM 
  Contact Us 
  Membership | Member Benefits 
  Become a Member 
  Renew Your Membership 
  Connect with a Community 
  Ways to Participate 
  Jobs in STEM 
  Share & Support | Newsroom 
  Advertise with Us 
  Become a Sponsor 
  Post a Job 
  Information for Librarians 
  Subscribe to Our Emails 
   
 © 2024 Society for Industrial and Applied Mathematics   
 Terms & Conditions 
  Privacy 

    
Call for papers data: 
  Skip to main content    
       
  Join SIAM 
  Donate 
  Log In 

 Journals 
  Books 
  SIAM Engage 
  Join SIAM 
  Donate 
  Log In 
   
 SIAM News 
  Activity Groups 
  Prizes & Awards 
  Log In 
   
 Publications | Toggle sub-menu | SIAM Journals | SIAM Review 
  Multiscale Modeling and Simulation: A SIAM Interdisciplinary Journal 
  SIAM Journal on Applied Algebra and Geometry 
  SIAM Journal on Applied Dynamical Systems 
  SIAM Journal on Applied Mathematics 
  SIAM Journal on Computing 
  SIAM Journal on Control and Optimization 
  SIAM Journal on Discrete Mathematics 
  SIAM Journal on Financial Mathematics 
  SIAM Journal on Imaging Sciences 
  SIAM Journal on Mathematical Analysis 
  SIAM Journal on Mathematics of Data Science 
  SIAM Journal on Matrix Analysis and Applications 
  SIAM Journal on Numerical Analysis 
  SIAM Journal on Optimization 
  SIAM Journal on Scientific Computing 
  SIAM / ASA Journal on Uncertainty Quantification 
  Theory of Probability and Its Applications 
  SIAM Undergraduate Research Online 
  SIAM Books  Our textbooks and monographs are indispensable to researchers, faculty, and students around the world.  SIAM Books 
  SIAM News  The newsjournal of SIAM, covering cutting-edge research and the state of the art in applied mathematics and computational science.  SIAM News 
  Reports 
  Proceedings 
  Subscriptions & Ordering 
  Programs & Initiatives | Toggle sub-menu | Programs | Gene Golub SIAM Summer School 
  Visiting Lecturer Program 
  MathWorks Math Modeling (M3) Challenge 
  SIAM-Simons Undergraduate Summer Research Program 
  SIAM Science Policy Fellowship 
  MGB-SIAM Early Career Fellowship 
  SIAM Postdoctoral Support Program 
  Graduate Student Mathematical Modeling Camp and Mathematical Problems in Industry Workshop 
  See All Programs 
  Professional Development | Careers in Applied Mathematics 
  Career Resources 
  Job Board 
  Internships 
  Prizes and Awards | Deadline Calendar 
  SIAM Fellows Program 
  Policy & Procedures 
  Save the Date for the Next Career Fair!  Happening in person March 4, 2025 during CSE25.  Save the Date for the Next Career Fair! 
  Industry 
  Equity, Diversity, & Inclusion 
  Education Resources 
  Science Policy 
  Conferences & Events | Toggle sub-menu | SIAM Conferences | More Events by Type 
  Section Meetings 
  Webinars & Seminars 
  Workshops 
  Career Fairs 
  Cooperating Conferences 
  Archive 
  See all Events 
  Conference Support | Travel & Registration Support 
  Child Care Grants 
  About SIAM Conferences & Events | For Sponsors & Exhibitors 
  Conference Guidelines 
  Featured Videos & Lectures 
  Submit Now for SIAM AN25!  The Third Joint SIAM/CAIMS Annual Meetings is happening July 28 - August 1, 2025 in Montréal, Québec, Canada.  Submit Now for SIAM AN25! 
  Membership | Toggle sub-menu | Individual Membership | Join 14,000 applied mathematicians and computational and data scientists from around the world. 
  Learn More 
  Institutional Membership | Create a custom subscription of four or more journals and your institution can become a free SIAM academic member, receiving up to a 27.5% discount on journal list prices. 
  Learn More 
  Member Support & FAQ | Questions about our membership types, benefits, how to automatically renew, or something else? 
  Get Your Questions Answered 
  Get Involved | Toggle sub-menu | Connect with a Community | Activity Groups 
  Sections 
  Student Chapters 
  SIAM Engage Online Community 
  Ways to Participate | Serve on Committees 
  Become an Author, Editor, or Referee 
  Nominate for Prizes 
  Network and Present at a Conference 
  Write for SIAM News 
  Ways to Support | Donate to SIAM 
  Spread the Word 
  Become a Sponsor 
  About Us | Toggle sub-menu | Overview 
  Mission & History 
  Governance & Leadership 
  Committees 
  Staff 
  Collaborations 
  Bylaws & Reports 
  Policies & Guidelines 
  Join SIAM 
  Contact Us 

 Back to top     
   
 Home 
  Publications 
  SIAM Journals 
  SIAM Undergraduate Research Online (SIURO) 

 SIAM Undergraduate Research Online  
 SIAM Undergraduate Research Online  (SIURO) is a web-based publication devoted to undergraduate research in applied and computational mathematics. Access is free and open to the public.  
   
 Read Current Issue  Submit a Paper    
   
 Related Links  
 Sign Up for Email Updates 

 In This Section 
  SIAM Undergraduate Research Online E-Alert 
  Editorial Policy 
  Editorial Board 
  Instructions for Authors 
  More 

 SIURO consists of articles written by undergraduate students in applied and computational mathematics, offering an opportunity for students to publish research they have completed as part of their undergraduate education and providing undergraduates incentives for conducting research.  
 The publication represents a wide range of applied topics, including but not limited to analysis, discrete mathematics, statistics, operations research, optimization, dynamical systems, modeling, and computation. Typical areas of application include but are not limited to physical, life, financial, and management sciences and engineering.  
 Each paper must be submitted with a letter from a project advisor. Faculty advisers or sponsors are listed as "project advisor" on the published paper.  
 SIURO provides an opportunity for undergraduate students to share their results and experience a full paper review process. High school students may also submit their work.  
 The project advisor may be a faculty member at the student’s institution or at an institution the student is visiting, or someone associated with a non-academic organization or government lab who supervised the research. 
  The project advisor’s letter must document the fact that the research was done while the student was an undergraduate and list the student’s graduation date or anticipated graduation date. 
  Project advisors will be listed separately from the authors with a “project advisor” byline. 

 Announcements   
 Authors: Prepare your papers using LaTex 2e macros to aid editor and referee review 

 From the Current Volume  
 Check out the latest volume and dive into advanced research and findings by undergraduate students.  
 See more   
   
 Volume 17  Accurately Classifying Out-Of-Distribution Data in Facial Recognition   
 November 13, 2024    
 By  Gianluca Barone (Corresponding author – Rowan University) 
  Aashrit Cunchala (University of Pittsburgh) 
  Rudy Nunez (Emory University) 

 Volume 17  Optimizing Energy Functional in Wave and Heat Equations with Initial Conditions in a Class of Rearrangements   
 October 30, 2024    
 By  Renjing Wang (Corresponding author – Xi'an Jiaotong-Liverpool University, China) 

 Volume 17  Travelling Waves of the Diffusive Streeter-Phelps Equations with Braun-Berthouex BOD Decay   
 October 24, 2024    
 By  Alexandra Lawryshyn (Corresponding author – University of Guelph, Ontario, Canada) 

 Browse Articles by Volume  
   
 Volume 17   
 2024   
   
 Volume 16   
 2023   
   
 Volume 15   
 2022   
   
 Volume 14   
 2021   
   
 Volume 13   
 2020   
   
 Volume 12   
 2019   
   
 Volume 11   
 2018   
   
 Volume 10   
 2017   
   
 Volume 9   
 2016   
   
 Volume 8   
 2015   
   
 Volume 7   
 2014   
   
 Volume 6   
 2013   
   
 Volume 5   
 2012   
   
 Volume 4   
 2011   
   
 Volume 3   
 2010   
   
 Volume 2, Issue 2   
 Fall 2009   
   
 Volume 2, Issue 1   
 Spring 2009   
   
 Volume 1, Issue 2   
 Fall 2008   
   
 Volume 1, Issue 1   
 Summer 2008   

 Show more    

 Publish with SIURO   
 Become an Author  
   
 SIURO offers undergraduate and high school students the early opportunity to publish their research while becoming part of the scientific community.  
   
 Learn More 
    
 SIURO is one of the best publications for undergraduate research in applied and computational mathematics. Beyond getting their results out into the world, when students publish their papers in SIURO, they have the edifying experience of taking their original work through the peer-review process.  
   Joanna Wares  University of Richmond     

 Get Involved with SIURO  
 We welcome submissions from undergraduate and high school students in applied and computational mathematics.  

 Editorial Information   
 Get the scoop on our reviewer guidelines, editorial policy, and more.   

 Instructions for Authors   
 Interested in submitting a paper to SIURO?   

 Contact Us  
   
 Questions about SIURO? Get in touch with our staff.  
 Contact SIURO Staff    

 Stay Up-to-Date with Email Alerts  
 Sign up for our monthly newsletter and emails about other topics of your choosing.  
   
 Email Address     
 Sign Up Now     

   3600 Market Street  6th Floor  Philadelphia, PA 19104 USA   Facebook 
  Twitter 
  Youtube 
  LinkedIn 

 About SIAM | Mission & History 
  Governance & Leadership 
  Committees 
  Staff 
  Collaborations 
  Code of Conduct 
  Policies & Guidelines 
  Jobs at SIAM 
  Contact Us 
  Membership | Member Benefits 
  Become a Member 
  Renew Your Membership 
  Connect with a Community 
  Ways to Participate 
  Jobs in STEM 
  Share & Support | Newsroom 
  Advertise with Us 
  Become a Sponsor 
  Post a Job 
  Information for Librarians 
  Subscribe to Our Emails 
   
 © 2024 Society for Industrial and Applied Mathematics   
 Terms & Conditions 
  Privacy 

    Important dates data: 
undefined

43. Conference SEAA_0:
Skip to content      
 DSD/SEAA 2025 Conference  

 Menu   About 
  News 
  DSD 2025 
  SEAA 2025 
  Contact 
  Archive | DSD 2024 | Keynotes 2024 
  Industrial 2024 
  Call for Papers 
  Committees 
  Registration 
  Program 
  Venue and travel 
  SEAA 2024 | Call for Papers 
  Indexing 
  Registration 
  Program 
  Venue and travel 
  DSD/SEAA 2024 
  DSD/SEAA 2023 

 Salerno, Italy, September 10-12, 2025  
 DSD/SEAA 2025  
 28th Euromicro Conference Series on Digital System Design (DSD) and 51th Euromicro Conference Series on Software Engineering and Advanced Applications (SEAA)  

 Conference  
 Events  

 DSD 2025   
 28th Euromicro Conference Series on Digital System Design (DSD)  

 SEAA 2025   
 51th Euromicro Conference Series on Software Engineering and Advanced Applications (SEAA)  

 HISTORY  
 Moments  
 Here you can see the galleries from our previous Euromicro conference editions  

 EUROMICRO facts  
 DSD SEAA  
   
 1974    
 Founded   

 27    
 DSD Editions   

 50    
 SEAA Editions   

 21    
 Host Countries   

 Latest  
 Conference News  

 Conference News    
 2025 DSD/SEAA Conference Call for Papers announced!   
  
 Call for papers for the ucpoming jubilee 51st Euromicro Conference Series on Software Engineering and Advanced Applications (SEAA) 2025 and Digital System Design (DSD) 2025 conference have been officially announced! …  

 Conference News    
 50th Anniversary Edition of DSD/SEAA 2024 Conference has been successfully completed!   
  
 This years Euromicro Conference Series DSD/SEAA consisted of 27th Euromicro Conference on Digital System Design (DSD) as well as 50th Euromicro Conference Series on Software Engineering and Advanced Applications (SEAA) has …  

 Conference News    
 Program of DSD & SEAA 2024 and WiP Proceedings Announced   
  
 We are excited to announce the release of the latest issue of WiPiEC Journal! This edition features a DSD’2024 and SEAA’2024 WiP session. We invite you to explore the …  

 Read more    

 Contact details  
 Get involved  
   
 FOR ANY INQUIRES OR INFORMATION CONTACT US.  
 Feel free to contact us for any further inquires or required necessary information, from either previous conferences or upcoming ones. Use the following contact details for any clarifications.  

  DSD/SEAA Details  
    EUROMICRO  
  P.O.Box 2043 D-53743  
  Sankt Augustin  
  Germany   
   
    info@dsd-seaa.com    

 Stay Tuned  

 Copyright © 2024 DSD/SEAA 2025 –  OnePress  theme by FameThemes   

  
Call for papers data: 
                                                                                Skip to content      
 DSD/SEAA 2025 Conference  

 Menu   About 
  News 
  DSD 2025 
  SEAA 2025 
  Contact 
  Archive | DSD 2024 | Keynotes 2024 
  Industrial 2024 
  Call for Papers 
  Committees 
  Registration 
  Program 
  Venue and travel 
  SEAA 2024 | Call for Papers 
  Indexing 
  Registration 
  Program 
  Venue and travel 
  DSD/SEAA 2024 
  DSD/SEAA 2023 

 DSD 2024  

 27th Euromicro Conference Series on Digital System Design (DSD) 2024 will be held at Sorbonne University, Paris, France, from 28th to 30th of August 2024.   
 This edition will mark a milestone as we celebrate the 50th Anniversary  of Euromicro and Euromicro Conferences.   

 Call for Papers  
 The Euromicro Conference on Digital System Design (DSD) addresses all aspects of (embedded, pervasive and high-performance) digital and mixed HW/SW system development and covers the entire design process from specification to microarchitectures, digital circuits and VLSI implementations. It is a forum for researchers and engineers from academia and industry working on advanced research, development and applications. It focuses on the current and future challenges of: advanced embedded, high-performance and cyber-physical applications; system and processor architectures for embedded and high performance HW/SW systems; design methodology and design automation for all design levels of embedded, high performance and cyber-physical systems; modern implementation technologies ranging from full-custom circuits in nanometer technology nodes to FPGAs and MPSoC infrastructures. Authors are cordially invited to submit their work on (but not limited to) the topics of the main track of the conference. In addition, contributions to various special sessions (with dedicated coordinators and sub-program committees) on specific topics of special interest are welcome. All papers will be reviewed according to common guidelines, quality requirements and acceptance thresholds.  
 Main Topics  
 Artificial intelligence from edge to cloud: architectures, methods, tools and applications 
  Design and synthesis of systems, hardware and embedded software – specification, modelling, analysis, validation and testing 
  Design automation at system, processor, register-transfer, logic and physical levels 
  Formal methods in system and hardware design 
  IoT, cyber-physical, embedded systems and applications 
  Systems-on-a-chip, networks-on-a-chip and systems-in-a-package 
  High-performance, energy-efficient multi-core and many-core (heterogeneous) processor architectures. 
  Autonomous/adaptable/reconfigurable systems and architectures 
  Security, safety, reliability and multi-objective optimization of embedded and cyber-physical systems 
  Future trends, new applications and new technologies 
  Special sessions   
 AHSA: Architectures and Hardware for Security Applications | , | P. Kitsos (University of Peloponnese, GR), M. Novotny (CTU Prague, CZ) 
  ASHWPA: Advanced Systems for Health Wellness and Personal Monitoring | , | F | . | Leporati (U Pavia, IT), R. Stojanovic (U Montenegro, ME), E. Marenzi (U Pavia, IT) 
  DDVC: Digital Design and Verification with Chisel | , | M. Schoeberl (DTU, DK) 
  DTFT: Dependability, Testing and Fault Tolerance in Digital Systems | , | P. Fiser (CTU Prague, CZ), H. Kubátová (CTU in Prague, CZ) 
  EPDSD: European Projects in Digital Systems Design | , | L. Jozwiak (TU/e, NL), F. Leporati (U Pavia, IT), E. Torti (U Pavia, IT) 
  HIAAA: Hyperspectral Imaging Applications, Algorithms and Architectures | , | G. M. Callico (IUMA/ULPGC, ES), H. Fabelo (FIISC/IUMA/ULPGC, ES), S. Ortega (NOFIMA, NO) 
  HSTIEC: Hardware, Software, and Tools for the IoT-to-Edge-to-Cloud Continuum, | F. Aromolo (Scuola Superiore Sant’Anna, IT), D. Casini (Scuola Superiore Sant’Anna, IT), G. Rossolini (Scuola Superiore Sant’Anna, IT) 
  MATTERV : Opensource Methods, architectures, tools and technologies for RISC-V | , | S. | Pillement (U. Nantes, FR), K. Martin (U. Bretagne-Sud, FR) 
  SDSD: Sustainable Digital System Design | , | T. | Marty (Insa, Rennes, FR), T. Scheipel (Graz University of Technology, AT), M. Baunach (Graz University of Technology, AT) 
  SPCPS: Safety, Security and Privacy of Cyber-Physical Systems | , | S | . Dey (IIT Kharagpur, India), S. Park (TU Berlin, D), J. Sepúlveda (Airbus Defence and Space GmbH, D) 
  Important dates   
 Deadline for abstract submission: | 27th May 2024 (AoE) /firm/ 
  Deadline for full paper submission: | 05th May 2024 | 3rd | June 2024 (AoE) /firm/ 
  Notification of acceptance: | 12th June 2024 | 28th June 2024 | 01th July 2024 
  Camera ready papers: | 26th June 2024 | 11th July 2024 (AoE) 
  Submission guidelines  
 Authors are encouraged to submit their manuscripts via EasyChair web service at web page | https://easychair.org/conferences/?conf=dsd2024 | . Should an unexpected web access problem be encountered, please contact the Program Chairs Frédéric Pétrot ( | frederic.petrot@univ-grenoble-alpes.fr | ) and Tomasz Kryjak ( | tomasz.kryjak@agh.edu.pl | ) 
  Each manuscript should include the complete paper text, all illustrations, and references. The manuscript should conform to the IEEE format: single-spaced, double column, US letter page size, 10-point size Times Roman font, up to 8 pages. In order to conduct a blind review, no indication of the authors’ names should appear in the manuscript, references included. However, but authors should not hide previous work, instead, they need to make self-references in the third person. 
  IEEE Conference Publishing Services (CPS) will publish accepted papers in the conference proceedings and the proceedings will be submitted to the IEEE Xplore Digital library and indexing  services. 
  IEEE No-Show Policy  
 Please take note that IEEE has a strict policy on no-show. Therefore, if your paper is accepted, one of the authors and their representatives MUST PRESENT their paper at the conference. Papers with no-show participants without a valid reason will not be submitted to IEEE Xplore. No refund of the paid fees may be claimed by the no-show author.  
 Journal Publication  
  Authors of the selected best papers will be invited to submit extended versions of their research to the ISI indexed Euromicro/Elsevier journal ”Microprocessors and Microsystems: Embedded Hardware Design”  (MICPRO) which has an 2022 Impact Factor of 2.6 and Cite Score of 4.9.  
 Indexing  
 The proceedings of the DSD conference are indexed in the following databases:  
  
 IEEE Xplore (more…) 
  SCOPUS 
  Web of Science (WoS) 
  Microsoft Academic 
  Schematic Scholar 
  Google Scholar | Research Gate 
  SJRScimago Journal & Country Rank, 
  DBLB Computer Science Bibliography 
  Research.com 
  and other relevant database 

 Program  
 Will be announced later.   
 Registration  
 Early bird registration finish: 1st July 2024  
 Will be announced later.   
 Venue and travel  
 Sorbonne University, Paris, France.   
 More details will be announced later.   
  
 Committees  
 DSD Steering Committee:  
 Lech Jóźwiak ( | Eindhoven University of Technology | , NL) – Chairman 
  Paris Kitsos ( | University of Peloponnese | , GR) 
  Tomasz Kryjak ( | AGH University of Krakow | , PL) 
  Hana Kubatova ( | Czech Technical University in Prague | , CZ) 
  Francesco Leporati ( | University | of Pavia, IT) 
  José Silva Matos ( | University of | Porto, PT) 
  Smail Niar ( | Polytechnic University of Hauts de-France | , FR) 
  António Nuñez ( | University of Las Palmas de Gran Canaria, | ES) 
  Eugenio Villar ( | University of Cantabria | , ES) 
  DSD 2024 General Chairs:  
 Lilia Zaourar (CEA, FR) 
  Andrea Pinna (Sorbonne University, FR) 
  DSD 2024 Program Chairs:  
 Frédéric Pétrot | ( | Grenoble Alpes University | , FR) 
  Tomasz Kryjak | ( | AGH University of Krakow | , PL) 
  DSD 2024 Publication Chair:  
 Amund Skavhaug (Norwegian Institute of Science and Technology, NO) 
  DSD 2024 Publicity Chair:  
 João Canas Ferreira (Univeristy of Porto, PT) 
  DSD 2024 Finance Co-Chairs:  
 Francesco Leporati ( | University | of Pavia, IT) 
  Karl-Erwin Grosspietsch (Euromicro, DE) 
  DSD 2024 Technical Program Committee:  
 Status 18.05.2024  
 Ihsen Alouani (Queen’s university Belfast, UK) 
  Liliana Andrade (Universite Grenoble Alpes) 
  Federico Aromolo (Scuola Superiore Sant’Anna) 
  Mohamed Benazouz (CEA LIST DILS LISE) 
  Hadjer Benmeziane (IBM Zurich, Switzerland) 
  Jalil Boukhobza (ENSTA-Bretagne) 
  Fabien Bouquillon (Università degli studi di Modena e Reggio Emmilia) 
  Halima Bouzidi (Queen’s university Belfast, UK) 
  João Canas Ferreira (Univeristy of Porto) 
  José Cano (University of Glasgow) 
  Alessandro Capotondi (University of Modena and Reggio Emilia) 
  Pedro P. Carballo (University of Las Palmas de Gran Canaria) 
  Antonio Carlos Schneider Beck (Federal University of Rio Grande do Sul) 
  Daniel Casini (School of Advanced Studies Sant’Anna) 
  Tom Chen (Colorado State University) 
  Alessandro Cilardo (University of Naples Federico II) 
  Giovanni Danese (University of Pavia) 
  Karol Desnos (INSA Rennes) 
  Tiago Dias (Instituto Superior de Engenharia de Lisboa) 
  Rolf Drechsler (University of Bremen) 
  Miguel Figueroa (Universidad de Concepcion) 
  Petr Fišer (Czech Technical University in Prague) 
  Ghayoor Gillani (University of Twente) 
  Roberto Giorgi (University of Siena) 
  Ouarnoughi Hamza (Polytechnic University of Hauts de-France) 
  Roel Jordans (Eindhoven University of Technology) 
  Lech Jozwiak (Eindhoven University of Technology) 
  Ercan Kalali (Eindhoven University of Technology) 
  Oliver Keszocze (University of Erlangen–Nuremberg) 
  Paris Kitsos (University of Peloponnese) 
  Mateusz Komorkiewicz (IEEE: VTS Chapter) 
  Tomasz Kryjak (AGH University of Krakow) 
  Hana Kubatova (Czech Technical University in Prague) 
  José L. Abellán (University of Murcia) 
  Alexey Lastovetsky (University College Dublin) 
  Francesco Leporati (University of Pavia) 
  Alberto Marchisio (New York University) 
  Maurizio Martina (Polytechnic University of Turin) 
  Jose Matos (University of Porto) 
  Antonio Miele (Polytechnic University of Milan) 
  Sajid Mohamed (ITEC) 
  Sergey Mosin (Kazan Federal University) 
  Vojtech Mrazek (Brno University of Technology) 
  Nadia Nedjah (State University of Rio de Janeiro) 
  Smail Niar (Polytechnic University of Hauts de-France) 
  Antonio Nuñez (IUMA-ULPGC) 
  Arnaldo Oliveira (University of Aveiro) 
  Alex Orailoglu (University of California San Diego) 
  Ozcan Ozturk (Bilkent University) 
  Christian Pilato (Polytechnic University of Milan) 
  Thilo Pionteck (Otto von Guericke University Magdeburg) 
  Sai Manoj Pudukotai Dinakarrao (George Mason University) 
  Frédéric Pétrot (Grenoble Alpes University) 
  Yang Qu (Broadcom) 
  Davide Quaglia (University of Verona) 
  Alfonso Rodriguez (Technical University of Madrid) 
  Sepideh Safari (Institute for Research in Fundamental Sciences) 
  Mazen Saghir (American University of Beirut) 
  Tobias Scheipel (Graz University of Technology) 
  Jan Schmidt (Czech Technical University in Prague) 
  Nicolas Sklavos (University of Patras) 
  Radovan Stojanovic (University of Montenegro) 
  Emanuele Torti (University of Pavia) 
  Miroslav Velev (Aries Design Automation) 
  Eugenio Villar (University of Cantabria) 
  Chao Wang (University of Science and Technology of China) 
  Arda Yurdakul (Boğaziçi University) 
  Andrej Zemva (University of Ljubljana) 
    
 Feel free to contact us regarding any information or queries.    

 Search for:       
 Recent Posts  
 2025 DSD/SEAA Conference Call for Papers announced! 
  50th Anniversary Edition of DSD/SEAA 2024 Conference has been successfully completed! 
  Program of DSD & SEAA 2024 and WiP Proceedings Announced 
  General scheudle avaliable ! 
  DSD/SEAA 2024 Registration is now open !!! 
   
 Archives  
 November 2024 
  September 2024 
  August 2024 
  July 2024 
  June 2024 
  May 2024 
  April 2024 
  February 2024 
  December 2023 
  November 2023 
  February 2023 
   
 Categories  
 Conference News 

 Stay Tuned  

 Copyright © 2024 DSD/SEAA 2025 –  OnePress  theme by FameThemes   

  Important dates data: 
undefined

44. Conference SEA_1:
Il GRIN | Chi siamo 
  Presidente e organi 
  Sedi 
  Soci GRIN 
  Gruppi di Lavoro 
  Collaborazioni e accordi 
  Assemblee 
  Formazione 
  Ricerca 
  Territorio e società 
  Il Bollino 
  Contatti 
  Aree di discussione 
  Accedi/Registrati 
   
 Seleziona una pagina     

 Ricerca  | Uncategorized   

 23rd Symposium on Experimental Algorithms (SEA 2025) – Call for Papers  

 Leggi Tutto     

 Commenta     

      
 Novembre 9, 2024   

      
 Comments (0)    

      
 By Mattia D'Emidio   

 SEA 2025 CALL FOR PAPERS - apologies for cross-posting   
   
  ***********************************************************  
  23rd Symposium on Experimental Algorithms (SEA 2025)  
  Location: Venice, Italy  
  Dates: July 22-24, 2025  
  Web site: <https://urldefense.us/v3/__https://regindex.github.io/sea2025.github.io__;!!G_uCfscf7eWS!cPSBgGvMmQTZp4YADFFnksU_4lGivtjtdY-6yh9xd8Irdmbrz8Up48IDJ23jhFlcax9858fzXuiPGqIQfzTehXNl3V4jFCOHhwM$ >   
  Submission: <https://urldefense.us/v3/__https://easychair.org/conferences/?conf=sea2025__;!!G_uCfscf7eWS!cPSBgGvMmQTZp4YADFFnksU_4lGivtjtdY-6yh9xd8Irdmbrz8Up48IDJ23jhFlcax9858fzXuiPGqIQfzTehXNl3V4jWTzqE98$ >   
  Important dates:  
  - paper submission deadline: January 26th, 2025  
  - notification of acceptance: March 24th, 2025  
  - final version: April 28th, 2025  
  ***********************************************************  
   
  The Symposium of Experimental Algorithms 2025 (SEA 2025) will take place from  
  22 to 24 July 2025 in Venice, Italy, in auditorium "Santa Margherita",  
  a historical building from the IX century in the Dorsoduro neighborhood of  
  Venice.  
   
  SEA aims to attract papers from the Computer Science community, the Operations  
  Research/Mathematical Programming community and any other scientific community  
  that is concerned with the main theme of the symposium, namely the role of  
  experimentation and of algorithm engineering techniques in the design and  
  evaluation of algorithms and data structures. Submissions should present  
  significant contributions supported by experimental evaluation, methodological  
  issues in the design and interpretation of experiments, the use of  
  (meta-)heuristics, or application-driven case studies that deepen the  
  understanding of the complexity of a problem.  

  TOPICS OF INTEREST  
   
  Topics include but not limited to:  
   
  Algorithm Engineering  
  Algorithmic Libraries and Software Repositories  
  Algorithmic Cryptography and Security  
  Algorithmic Natural Language Processing  
  Algorithmics for Databases  
  Analysis of Algorithms  
  Approximation Algorithms  
  Bioinformatics and Computational Biology  
  Branch-and-Bound Algorithms  
  Combinatorial Problems and Structures  
  Communication Networks  
  Computational Geometry  
  Computational Optimization  
  Compressed space algorithms and data structures  
  Data Structures  
  Distributed and Parallel Algorithms  
  Graph Algorithms  
  Heuristic Algorithms  
  Integer Programming  
  Logistics and Operations Management  
  Machine Learning and Data Mining  
  Mathematical Programming  
  Multiple Criteria Decision Making  
  Network Analysis  
  Online Problems  
  Randomized Algorithms  
  Semidefinite Programming  
  String Algorithms  
  Streaming and External Memory Algorithms  
   
  We emphasize that SEA welcomes submissions that introduce novel  
  applications of algorithms in other disciplines. Note that the SEA list of  
  topics was updated with respect to past years.  

  INVITED SPEAKERS  
   
  Giulia Bernardini, University of Trieste <https://urldefense.us/v3/__https://sites.google.com/view/giulia-bernardini__;!!G_uCfscf7eWS!cPSBgGvMmQTZp4YADFFnksU_4lGivtjtdY-6yh9xd8Irdmbrz8Up48IDJ23jhFlcax9858fzXuiPGqIQfzTehXNl3V4jYrcZMVM$ >   
  Daniel Lemire, University of Quebec <https://urldefense.us/v3/__https://lemire.me/en/__;!!G_uCfscf7eWS!cPSBgGvMmQTZp4YADFFnksU_4lGivtjtdY-6yh9xd8Irdmbrz8Up48IDJ23jhFlcax9858fzXuiPGqIQfzTehXNl3V4j2F9G-KE$ >   
  Sebastiano Vigna, University of Milan <https://urldefense.us/v3/__https://vigna.di.unimi.it/__;!!G_uCfscf7eWS!cPSBgGvMmQTZp4YADFFnksU_4lGivtjtdY-6yh9xd8Irdmbrz8Up48IDJ23jhFlcax9858fzXuiPGqIQfzTehXNl3V4jhOD5Zvo$ >   

  BEST PAPER AWARD  
   
  The program committee will identify a submission as the best paper.  

  PROCEEDINGS  
   
  The conference proceedings will be published in the Leibniz International  
  Proceedings in Informatics (LIPIcs), a series of high-quality conference  
  proceedings across all fields in informatics established in cooperation with  
  Schloss Dagstuhl Leibniz Center for Informatics. SEA Proceedings volumes are  
  published according to the principle of OpenAccess, i.e., they are available  
  online and free of charge.  

  SUBMISSION GUIDELINES  
   
  The authors should submit a paper not exceeding 12 pages, excluding the  
  bibliography, the front page (title, keywords, abstract, ...), and a brief  
  appendix of up to 5 pages (figures and tables should be counted as part of  
  the space occupied by the appendix). This year, for the first time in ESA,  
  all papers have to be anonymized so author names and affiliations cannot be  
  included (see Double-Blind Reviewing section). Non-anonymized papers will be  
  desk-rejected.  
   
  Authors are required to use the LaTeX style file supplied for the LIPIcs  
  style, without changing default values nor setting font size options in the  
  "documentclass" statement. Final proceedings papers must be camera-ready  
  in this format. We emphasize that a clearly marked Appendix of up to 5 pages,  
  which will not count toward the 12 page submission limit, can be included and  
  will be read at the referees' discretion. All submissions have to be made via  
  the EasyChair submission page for the conference.  
   
  Papers submitted for review should represent original, previously unpublished  
  work or surveys of important results. At the time the paper is submitted to  
  SEA, and for the entire review period, the paper (or essentially the same  
  paper) should not be under review by any other conference with published  
  proceedings or by a scientific journal. At least one author of each accepted  
  paper will be expected to attend the conference and present the paper.  
  Specifically, no accepted paper will be published unless an author registers  
  to participate in the conference.  

  DOUBLE-BLIND REVIEWING  
   
  SEA will implement a double-blind review process for the first time. As such,  
  submissions must not disclose the authors' identities in any way. In particular,  
  names, affiliations, and email addresses must be excluded from the paper.  
  Authors should reference their prior work in the third person (e.g., instead of  
  writing "We build on our previous work...", they should write "This work builds  
  on the research of..."). Authors should also take care of the anonymization of  
  accompanying software and data. In particular, they cannot link software hosted  
  on their own GitHub page, but they need to link it anonymously (for example,  
  via DropBox). The authors can insert the public GitHub links back in the  
  proceedings version of their papers. Authors are free to share their ideas and  
  drafts as they usually would. For instance, they can submit to repositories like  
  arXiv or give talks on their research. If there are publicly accessible versions  
  of the submission, authors may mention this in the submission (without including  
  links or citations). Alternatively, they can inform the chairs, who will keep  
  these details confidential unless sharing them is necessary for a fair review.  
   
  Double-blind reviewing aims to allow program committee members and external  
  reviewers to evaluate the paper impartially, without bias. However, it's not  
  intended to make determining the authors' identity impossible through  
  investigation. Authors should not compromise the submission's quality or hinder  
  the review process in the name of anonymity; thus, key references must not be  
  omitted or anonymized. Any authors with questions about the double-blind review  
  process should contact the program committee chairs for clarification. All  
  papers failing to meet anonymization requirements will be desk-rejected.  

  LARGE LANGUAGE MODELS USAGE POLICY  
   
  Papers containing content generated by large language models (LLMs) such as  
  ChatGPT or images created using deep generative models (DGMs) such as  
  StableDiffusion are not allowed, except for:  
   
  - Generating scientific plots displaying data that the authors obtained from  
  experiments (for example: it is allowed to use an LLM for generating Python  
  code that generates plots showing experimental results)  
  - Polishing the text that the authors have personally written.  
   
  Despite using LLMs or DGMs, authors remain fully responsible for ensuring their  
  submissions' accuracy, originality, and quality. We urge authors to maintain the  
  integrity of the academic publishing process and avoid any actions that could be  
  considered scientific misconduct, such as plagiarism and misrepresenting figures.  
   
  If a submission includes LLM-generated text or DGM-generated images, we require  
  the authors to disclose this information to the Program Chairs at the moment of  
  submitting the paper, by checking a dedicated box on EasyChair (and providing  
  details on how they used these models). If the Program Chairs should have concerns  
  regarding potential scientific misconduct (which includes using such models and  
  not declaring it, even for the allowed situations above listed), the submission  
  may be subjected to checks for plagiarism or other violations. Any papers failing  
  to meet these requirements will be desk-rejected, even after the review process.  

  WORKSHOP  
   
  On July 25, 2025, there will be a workshop on Compressed Self-Indexes at the  
  same venue. The occasion of the workshop is the 25th anniversary of the following  
  two important data structures:  
   
  FM-index  
  Paolo Ferragina, Giovanni Manzini.  
  Opportunistic Data Structures with Applications.  
  41st Annual Symposium on Foundations of Computer Science (FOCS '00).  
  Awarded with the Paris Kanellakis Award '22.  
   
  Compressed Suffix Array  
  Roberto Grossi, Jeffrey Scott Vitter.  
  Compressed Suffix Arrays and Suffix Trees with Applications to Text Indexing and  
  String Matching.  
  32nd Annual ACM Symposium on Theory of Computing (STOC '00).  
   
  The workshop will feature invited talks by Giovanni Manzini and Roberto Grossi as  
  well as contributed talks on related topics.  

  LOCAL INFORMATION  
   
  Organizing committee chair: Ruben Becker.  
  Program committee co-chairs: Petra Mutzel and Nicola Prezza.  
  Conference Website: <https://urldefense.us/v3/__https://regindex.github.io/sea2025.github.io__;!!G_uCfscf7eWS!cPSBgGvMmQTZp4YADFFnksU_4lGivtjtdY-6yh9xd8Irdmbrz8Up48IDJ23jhFlcax9858fzXuiPGqIQfzTehXNl3V4jFCOHhwM$ >   
  Write to <sea25-organization-grpunive@unive.it>  for any query about the conference.  
  Venue address: Auditorium Santa Margherita (ground floor), Campo Santa Margherita,  
  Dorsoduro 3689, 30123 Venice, Italy <https://urldefense.us/v3/__https://maps.app.goo.gl/t5inP44zU58KmgEb8__;!!G_uCfscf7eWS!cPSBgGvMmQTZp4YADFFnksU_4lGivtjtdY-6yh9xd8Irdmbrz8Up48IDJ23jhFlcax9858fzXuiPGqIQfzTehXNl3V4jkyQvkhA$ >   

 Discussione  

 0 commenti  
   
 Invia un commento  Annulla risposta    
 Devi essere connesso  per inviare un commento.  

 GRIN Società Informatica Italiana  

 Associazione senza scopo di lucro   

 Sede ufficiale  

 Dipartimento di Informatica dell’Università di Pisa  

 Partita IVA e C.F.  

 123454323  

 Contatti    
 Organizzazione    
 Area di Discussione    
 Archivio    

 © 2024 GRIN Società Informatica Italiana, All Rights Reserved – P.Iva: 000000 – Design by  Declar    

 Archives  
 Novembre 2024 
  Ottobre 2024 
  Settembre 2024 
  Agosto 2024 
  Luglio 2024 
  Giugno 2024 
  Maggio 2024 
  Aprile 2024 
  Marzo 2024 
  Febbraio 2024 
  Dicembre 2023 

 Categories  
 Eventi 
  Formazione 
  News 
  Ricerca 
  Territorio 
  Uncategorized 

 Facebook 
  X 
  Instagram 
  RSS 
  Progettato da Elegant Themes  | Sviluppato da WordPress   

 Scroll Up      
 Gestisci Consenso Cookie   

 Per fornire le migliori esperienze, utilizziamo tecnologie come i cookie per memorizzare e/o accedere alle informazioni del dispositivo. Il consenso a queste tecnologie ci permetterà di elaborare dati come il comportamento di navigazione o ID unici su questo sito. Non acconsentire o ritirare il consenso può influire negativamente su alcune caratteristiche e funzioni.   
 Funzionale   Funzionale    Always active       L'archiviazione tecnica o l'accesso sono strettamente necessari al fine legittimo di consentire l'uso di un servizio specifico esplicitamente richiesto dall'abbonato o dall'utente, o al solo scopo di effettuare la trasmissione di una comunicazione su una rete di comunicazione elettronica.    
  Preferenze   Preferenze         L'archiviazione tecnica o l'accesso sono necessari per lo scopo legittimo di memorizzare le preferenze che non sono richieste dall'abbonato o dall'utente.    
  Statistiche   Statistiche         L'archiviazione tecnica o l'accesso che viene utilizzato esclusivamente per scopi statistici.  L'archiviazione tecnica o l'accesso che viene utilizzato esclusivamente per scopi statistici anonimi. Senza un mandato di comparizione, una conformità volontaria da parte del vostro Fornitore di Servizi Internet, o ulteriori registrazioni da parte di terzi, le informazioni memorizzate o recuperate per questo scopo da sole non possono di solito essere utilizzate per l'identificazione.    
  Marketing   Marketing         L'archiviazione tecnica o l'accesso sono necessari per creare profili di utenti per inviare pubblicità, o per tracciare l'utente su un sito web o su diversi siti web per scopi di marketing simili.    

 Manage options  Manage services  Manage {vendor_count} vendors  Read more about these purposes    
   
 Accetta  Nega  Visualizza preferenze  Salva preferenze  Visualizza preferenze    
 {title}  {title}  {title}    

 Gestisci consenso    
      
Call for papers data: 
     
 Il GRIN | Chi siamo 
  Presidente e organi 
  Sedi 
  Soci GRIN 
  Gruppi di Lavoro 
  Collaborazioni e accordi 
  Assemblee 
  Formazione 
  Ricerca 
  Territorio e società 
  Il Bollino 
  Contatti 
  Aree di discussione 
  Accedi/Registrati 
   
 Seleziona una pagina     

 Ricerca  | Uncategorized   

 23rd Symposium on Experimental Algorithms (SEA 2025) – Call for Papers  

 Leggi Tutto     

 Commenta     

      
 Novembre 9, 2024   

      
 Comments (0)    

      
 By Mattia D'Emidio   

 SEA 2025 CALL FOR PAPERS - apologies for cross-posting   
   
  ***********************************************************  
  23rd Symposium on Experimental Algorithms (SEA 2025)  
  Location: Venice, Italy  
  Dates: July 22-24, 2025  
  Web site: <https://urldefense.us/v3/__https://regindex.github.io/sea2025.github.io__;!!G_uCfscf7eWS!cPSBgGvMmQTZp4YADFFnksU_4lGivtjtdY-6yh9xd8Irdmbrz8Up48IDJ23jhFlcax9858fzXuiPGqIQfzTehXNl3V4jFCOHhwM$ >   
  Submission: <https://urldefense.us/v3/__https://easychair.org/conferences/?conf=sea2025__;!!G_uCfscf7eWS!cPSBgGvMmQTZp4YADFFnksU_4lGivtjtdY-6yh9xd8Irdmbrz8Up48IDJ23jhFlcax9858fzXuiPGqIQfzTehXNl3V4jWTzqE98$ >   
  Important dates:  
  - paper submission deadline: January 26th, 2025  
  - notification of acceptance: March 24th, 2025  
  - final version: April 28th, 2025  
  ***********************************************************  
   
  The Symposium of Experimental Algorithms 2025 (SEA 2025) will take place from  
  22 to 24 July 2025 in Venice, Italy, in auditorium "Santa Margherita",  
  a historical building from the IX century in the Dorsoduro neighborhood of  
  Venice.  
   
  SEA aims to attract papers from the Computer Science community, the Operations  
  Research/Mathematical Programming community and any other scientific community  
  that is concerned with the main theme of the symposium, namely the role of  
  experimentation and of algorithm engineering techniques in the design and  
  evaluation of algorithms and data structures. Submissions should present  
  significant contributions supported by experimental evaluation, methodological  
  issues in the design and interpretation of experiments, the use of  
  (meta-)heuristics, or application-driven case studies that deepen the  
  understanding of the complexity of a problem.  

  TOPICS OF INTEREST  
   
  Topics include but not limited to:  
   
  Algorithm Engineering  
  Algorithmic Libraries and Software Repositories  
  Algorithmic Cryptography and Security  
  Algorithmic Natural Language Processing  
  Algorithmics for Databases  
  Analysis of Algorithms  
  Approximation Algorithms  
  Bioinformatics and Computational Biology  
  Branch-and-Bound Algorithms  
  Combinatorial Problems and Structures  
  Communication Networks  
  Computational Geometry  
  Computational Optimization  
  Compressed space algorithms and data structures  
  Data Structures  
  Distributed and Parallel Algorithms  
  Graph Algorithms  
  Heuristic Algorithms  
  Integer Programming  
  Logistics and Operations Management  
  Machine Learning and Data Mining  
  Mathematical Programming  
  Multiple Criteria Decision Making  
  Network Analysis  
  Online Problems  
  Randomized Algorithms  
  Semidefinite Programming  
  String Algorithms  
  Streaming and External Memory Algorithms  
   
  We emphasize that SEA welcomes submissions that introduce novel  
  applications of algorithms in other disciplines. Note that the SEA list of  
  topics was updated with respect to past years.  

  INVITED SPEAKERS  
   
  Giulia Bernardini, University of Trieste <https://urldefense.us/v3/__https://sites.google.com/view/giulia-bernardini__;!!G_uCfscf7eWS!cPSBgGvMmQTZp4YADFFnksU_4lGivtjtdY-6yh9xd8Irdmbrz8Up48IDJ23jhFlcax9858fzXuiPGqIQfzTehXNl3V4jYrcZMVM$ >   
  Daniel Lemire, University of Quebec <https://urldefense.us/v3/__https://lemire.me/en/__;!!G_uCfscf7eWS!cPSBgGvMmQTZp4YADFFnksU_4lGivtjtdY-6yh9xd8Irdmbrz8Up48IDJ23jhFlcax9858fzXuiPGqIQfzTehXNl3V4j2F9G-KE$ >   
  Sebastiano Vigna, University of Milan <https://urldefense.us/v3/__https://vigna.di.unimi.it/__;!!G_uCfscf7eWS!cPSBgGvMmQTZp4YADFFnksU_4lGivtjtdY-6yh9xd8Irdmbrz8Up48IDJ23jhFlcax9858fzXuiPGqIQfzTehXNl3V4jhOD5Zvo$ >   

  BEST PAPER AWARD  
   
  The program committee will identify a submission as the best paper.  

  PROCEEDINGS  
   
  The conference proceedings will be published in the Leibniz International  
  Proceedings in Informatics (LIPIcs), a series of high-quality conference  
  proceedings across all fields in informatics established in cooperation with  
  Schloss Dagstuhl Leibniz Center for Informatics. SEA Proceedings volumes are  
  published according to the principle of OpenAccess, i.e., they are available  
  online and free of charge.  

  SUBMISSION GUIDELINES  
   
  The authors should submit a paper not exceeding 12 pages, excluding the  
  bibliography, the front page (title, keywords, abstract, ...), and a brief  
  appendix of up to 5 pages (figures and tables should be counted as part of  
  the space occupied by the appendix). This year, for the first time in ESA,  
  all papers have to be anonymized so author names and affiliations cannot be  
  included (see Double-Blind Reviewing section). Non-anonymized papers will be  
  desk-rejected.  
   
  Authors are required to use the LaTeX style file supplied for the LIPIcs  
  style, without changing default values nor setting font size options in the  
  "documentclass" statement. Final proceedings papers must be camera-ready  
  in this format. We emphasize that a clearly marked Appendix of up to 5 pages,  
  which will not count toward the 12 page submission limit, can be included and  
  will be read at the referees' discretion. All submissions have to be made via  
  the EasyChair submission page for the conference.  
   
  Papers submitted for review should represent original, previously unpublished  
  work or surveys of important results. At the time the paper is submitted to  
  SEA, and for the entire review period, the paper (or essentially the same  
  paper) should not be under review by any other conference with published  
  proceedings or by a scientific journal. At least one author of each accepted  
  paper will be expected to attend the conference and present the paper.  
  Specifically, no accepted paper will be published unless an author registers  
  to participate in the conference.  

  DOUBLE-BLIND REVIEWING  
   
  SEA will implement a double-blind review process for the first time. As such,  
  submissions must not disclose the authors' identities in any way. In particular,  
  names, affiliations, and email addresses must be excluded from the paper.  
  Authors should reference their prior work in the third person (e.g., instead of  
  writing "We build on our previous work...", they should write "This work builds  
  on the research of..."). Authors should also take care of the anonymization of  
  accompanying software and data. In particular, they cannot link software hosted  
  on their own GitHub page, but they need to link it anonymously (for example,  
  via DropBox). The authors can insert the public GitHub links back in the  
  proceedings version of their papers. Authors are free to share their ideas and  
  drafts as they usually would. For instance, they can submit to repositories like  
  arXiv or give talks on their research. If there are publicly accessible versions  
  of the submission, authors may mention this in the submission (without including  
  links or citations). Alternatively, they can inform the chairs, who will keep  
  these details confidential unless sharing them is necessary for a fair review.  
   
  Double-blind reviewing aims to allow program committee members and external  
  reviewers to evaluate the paper impartially, without bias. However, it's not  
  intended to make determining the authors' identity impossible through  
  investigation. Authors should not compromise the submission's quality or hinder  
  the review process in the name of anonymity; thus, key references must not be  
  omitted or anonymized. Any authors with questions about the double-blind review  
  process should contact the program committee chairs for clarification. All  
  papers failing to meet anonymization requirements will be desk-rejected.  

  LARGE LANGUAGE MODELS USAGE POLICY  
   
  Papers containing content generated by large language models (LLMs) such as  
  ChatGPT or images created using deep generative models (DGMs) such as  
  StableDiffusion are not allowed, except for:  
   
  - Generating scientific plots displaying data that the authors obtained from  
  experiments (for example: it is allowed to use an LLM for generating Python  
  code that generates plots showing experimental results)  
  - Polishing the text that the authors have personally written.  
   
  Despite using LLMs or DGMs, authors remain fully responsible for ensuring their  
  submissions' accuracy, originality, and quality. We urge authors to maintain the  
  integrity of the academic publishing process and avoid any actions that could be  
  considered scientific misconduct, such as plagiarism and misrepresenting figures.  
   
  If a submission includes LLM-generated text or DGM-generated images, we require  
  the authors to disclose this information to the Program Chairs at the moment of  
  submitting the paper, by checking a dedicated box on EasyChair (and providing  
  details on how they used these models). If the Program Chairs should have concerns  
  regarding potential scientific misconduct (which includes using such models and  
  not declaring it, even for the allowed situations above listed), the submission  
  may be subjected to checks for plagiarism or other violations. Any papers failing  
  to meet these requirements will be desk-rejected, even after the review process.  

  WORKSHOP  
   
  On July 25, 2025, there will be a workshop on Compressed Self-Indexes at the  
  same venue. The occasion of the workshop is the 25th anniversary of the following  
  two important data structures:  
   
  FM-index  
  Paolo Ferragina, Giovanni Manzini.  
  Opportunistic Data Structures with Applications.  
  41st Annual Symposium on Foundations of Computer Science (FOCS '00).  
  Awarded with the Paris Kanellakis Award '22.  
   
  Compressed Suffix Array  
  Roberto Grossi, Jeffrey Scott Vitter.  
  Compressed Suffix Arrays and Suffix Trees with Applications to Text Indexing and  
  String Matching.  
  32nd Annual ACM Symposium on Theory of Computing (STOC '00).  
   
  The workshop will feature invited talks by Giovanni Manzini and Roberto Grossi as  
  well as contributed talks on related topics.  

  LOCAL INFORMATION  
   
  Organizing committee chair: Ruben Becker.  
  Program committee co-chairs: Petra Mutzel and Nicola Prezza.  
  Conference Website: <https://urldefense.us/v3/__https://regindex.github.io/sea2025.github.io__;!!G_uCfscf7eWS!cPSBgGvMmQTZp4YADFFnksU_4lGivtjtdY-6yh9xd8Irdmbrz8Up48IDJ23jhFlcax9858fzXuiPGqIQfzTehXNl3V4jFCOHhwM$ >   
  Write to <sea25-organization-grpunive@unive.it>  for any query about the conference.  
  Venue address: Auditorium Santa Margherita (ground floor), Campo Santa Margherita,  
  Dorsoduro 3689, 30123 Venice, Italy <https://urldefense.us/v3/__https://maps.app.goo.gl/t5inP44zU58KmgEb8__;!!G_uCfscf7eWS!cPSBgGvMmQTZp4YADFFnksU_4lGivtjtdY-6yh9xd8Irdmbrz8Up48IDJ23jhFlcax9858fzXuiPGqIQfzTehXNl3V4jkyQvkhA$ >   

 Discussione  

 0 commenti  
   
 Invia un commento  Annulla risposta    
 Devi essere connesso  per inviare un commento.  

 GRIN Società Informatica Italiana  

 Associazione senza scopo di lucro   

 Sede ufficiale  

 Dipartimento di Informatica dell’Università di Pisa  

 Partita IVA e C.F.  

 123454323  

 Contatti    
 Organizzazione    
 Area di Discussione    
 Archivio    

 © 2024 GRIN Società Informatica Italiana, All Rights Reserved – P.Iva: 000000 – Design by  Declar    

 Archives  
 Novembre 2024 
  Ottobre 2024 
  Settembre 2024 
  Agosto 2024 
  Luglio 2024 
  Giugno 2024 
  Maggio 2024 
  Aprile 2024 
  Marzo 2024 
  Febbraio 2024 
  Dicembre 2023 

 Categories  
 Eventi 
  Formazione 
  News 
  Ricerca 
  Territorio 
  Uncategorized 

 Facebook 
  X 
  Instagram 
  RSS 
  Progettato da Elegant Themes  | Sviluppato da WordPress   

 Scroll Up      
 Gestisci Consenso Cookie   

 Per fornire le migliori esperienze, utilizziamo tecnologie come i cookie per memorizzare e/o accedere alle informazioni del dispositivo. Il consenso a queste tecnologie ci permetterà di elaborare dati come il comportamento di navigazione o ID unici su questo sito. Non acconsentire o ritirare il consenso può influire negativamente su alcune caratteristiche e funzioni.   
 Funzionale   Funzionale    Always active       L'archiviazione tecnica o l'accesso sono strettamente necessari al fine legittimo di consentire l'uso di un servizio specifico esplicitamente richiesto dall'abbonato o dall'utente, o al solo scopo di effettuare la trasmissione di una comunicazione su una rete di comunicazione elettronica.    
  Preferenze   Preferenze         L'archiviazione tecnica o l'accesso sono necessari per lo scopo legittimo di memorizzare le preferenze che non sono richieste dall'abbonato o dall'utente.    
  Statistiche   Statistiche         L'archiviazione tecnica o l'accesso che viene utilizzato esclusivamente per scopi statistici.  L'archiviazione tecnica o l'accesso che viene utilizzato esclusivamente per scopi statistici anonimi. Senza un mandato di comparizione, una conformità volontaria da parte del vostro Fornitore di Servizi Internet, o ulteriori registrazioni da parte di terzi, le informazioni memorizzate o recuperate per questo scopo da sole non possono di solito essere utilizzate per l'identificazione.    
  Marketing   Marketing         L'archiviazione tecnica o l'accesso sono necessari per creare profili di utenti per inviare pubblicità, o per tracciare l'utente su un sito web o su diversi siti web per scopi di marketing simili.    

 Manage options  Manage services  Manage {vendor_count} vendors  Read more about these purposes    
   
 Accetta  Nega  Visualizza preferenze  Salva preferenze  Visualizza preferenze    
 {title}  {title}  {title}    

 Gestisci consenso    
      Important dates data: 
undefined

45. Conference SCN_3:
Miyaji Laboratory   
 English 

 研究室紹介 | 研究概要・運営方針 
  博士論文・修士論文・学士論文リスト 
  年間スケジュール 
  研究テーマ 
  研究活動(写真) 
  研究室の様子(写真) 
  講義資料 
  研究生の申請方法 
  メンバー紹介 | 教授 宮地 充子 
  助教 奥村 伸也 
  講師 樽谷優弥 
  招へい准教授 三本知明 
  アシスタント 野村 美恵 
  在学生一覧 
  修了生一覧 
  研究生一覧 
  研究室業績 | 論文リスト 
  受賞歴 
  研究助成金 
  実用化研究 
  学会関連 | 国際会議日程 
  国内会議日程 
  Conference Analysis 
  学会参加報告 
  学会ランキング 
  暗号関連学会 
  セキュリティ学会 
  暗号関連論文誌 
  プロジェクト | セコム科学技術振興財団 
  CREST 
  PDDIシステム 
  ProSec 
  Basic SecCap 
  SecCap 
  日台研究交流 
  日本学術会議(セキュリティ・ディベンダビリティ分科会関連) 
  安全・信頼データ解析研究ユニット 
  関連教官・企業 
  イベント | サマースクール 
  招待講演 
  国内学会 
  国際学会 
  情報セキュリティ研究会 
  暗号フロンティア研究会 
  情報セキュリティフォーラム 
  seeds 

 国際会議日程   
  
 Sort by Conference Name [ASCENDING]  Conference Name [DESCENDING]  Deadline [ASCENDING]  Deadline [DESCENDING]  Notification [ASCENDING]  Notification [DESCENDING]  Date [ASCENDING]  Date [DESCENDING]  Site / Journal [ASCENDING]  Site / Journal [DESCENDING]    
  
 Name | Deadline | Notification | Date | Site / Journal 
 CANS 2025    
  24th International Conference on Cryptology and Network Security | 2025/11/17 - 2025/11/20 | Osaka, Japan 
 Security and Regulation: Cybersecurity, Privacy, and Trust- Protecting information and ensuring responsible technology use | 2025/05/01 | Computers & Security 
 Advances in Robust Intrusion Detection through Machine Learning | 2024/12/20 | Computers & Security 
 ACISP 2025    
  30th Australasian Conference on Information Security and Privacy | 2024/11/06 | 2025/01/22 | 2025/07/14 - 2025/07/16 | Wollongong, Australia 
 PQCrypto 2025    
  16th International Conference on Post-Quantum Cryptography | 2024/10/25 | 2025/01/06 | 2025/08/08 - 2025/08/10 | Taipei, Taiwan 
 EuroS&P    
  IEEE European Symposium on Security and Privacy 2025 | 2024/10/24 | 2025/02/13 | 2025/06/30 - 2025/07/04 | Venice, Italy 
 PKC 2025    
  The International Conference on Practice and Theory in Public Key Cryptography | 2024/10/16 | 2025/02/05 | 2025/05/12 - 2025/05/15 | Røros, Norway 
 TPMPC 2025    
  11th Theory and Practice of Multi-Party Computation Workshop | 2024/10/15 | 2024/11/15 | 2025/03/03 - 2025/03/06 | Bangalore, India 
 Special Session on Federated Learning on Big Data | 2024/10/04 | 2024/10/27 | 2024/12/15 - 2024/12/18 | Washington DC, USA 
 CSCI-RTBD    
  Research Track on BIG DATA AND DATA SCIENCE | 2024/10/03 | 2024/10/16 | 2024/12/11 - 2024/12/13 | Luxor - an MGM property, Las Vegas, USA 
 CSCI-RTAI    
  Research Track on ARTIFICIAL INTELLIGENCE | 2024/10/03 | 2024/10/16 | 2024/12/11 - 2024/12/13 | Luxor - an MGM property, Las Vegas, USA 
 ACNS' 25    
  2025 International Conference on Applied Cryptography and Network Security | 2024/09/09 | 2024/11/11 | 2025/01/23 - 2025/01/26 | Munich, Germany 
 ICISC 2024    
  The 27th Annual International Conference on Information Security and Cryptology | 2024/09/06 | 2024/10/30 | 2024/11/20 - 2024/11/22 | Seoul, South Korea 
 Inscrypt 2024    
  20th International Conference on Information Security and Cryptology | 2024/08/15 | 2024/11/10 | 2024/12/14 - 2024/12/16 | Kunming, China 
 ICMC 2025    
  11-th International Conference on Mathematics and Computing | 2024/08/15 | 2024/09/30 | 2025/01/09 - 2025/01/11 | Bhilai, India 
 ICSP 2024 | 2024/08/10 | 2024/09/10 | 2024/11/20 - 2024/11/21 | Jamshedpur, India 
 PRDC 2024    
  29th IEEE Pacific Rim International Conference on Dependable Computing | 2024/08/07 | 2024/08/31 | 2024/11/13 - 2024/11/15 | Osaka, Japan 
 The 8th Mobisec    
  The 8th International Conference on Mobile Internet Security | 2024/08/16 | 2024/10/11 | 2024/12/17 - 2024/12/19 | Sapporo, Japan 
 NSS-SocialSec 2024    
  NSS 2024: 18th International Conference on Network and System Security, SocialSec 2024: 10th International Symposium on Security and Privacy in Social Networks and Big Data | 2024/07/28 | 2024/08/30 | 2024/11/20 - 2024/11/22 | Abu Dhabi, UAE 
 Topic: Key Management and Key Recovery    
  A Special Issue of Journal of Surveillance, Security and Safety | 2024/12/31 |  
 Topic: Intrusion Detection and Prevention in Networks: Trends, Issues, and Challenges    
  A Special Issue of Journal of Surveillance, Security and Safety | 2024/11/30 |  
 ICISS    
  20th International Conference on Information Systems Security (ICISS) | 2024/07/10 | 2024/09/10 | 2024/12/16 - 2024/12/20 | Jaipur, India 
 CSCML 2024    
  Cyber Security, Cryptology, and Machine Learning | 2024/07/09 | 2024/08/13 | 2024/12/19 - 2024/12/20 | Virtual event, Anywhere on Earth 
 Indocrypt 2024    
  25th International Conference on Cryptology in India | 2024/09/08 | 2024/10/18 | 2024/12/18 - 2024/12/21 | Chennai, India 
 UbiSec 2024    
  The 4th International Conference on Ubiquitous Security | 2024/07/15 | 2024/08/15 | 2024/12/29 - 2024/12/31 | changsha, China 
 ISCISC 2024    
  21st International ISC Conference on Information Security and Cryptology | 2024/06/15 | 2024/08/14 | 2024/10/16 - 2024/10/17 | Teheran, Iran 
 ICNS ZKP Workshop    
  Foundations and Applications of Zero-Knowledge Proofs | 2024/06/14 | 2024/09/02 - 2024/09/06 | City of Edinburgh, United Kingdom 
 ISC 2024    
  27th Information Security Conference | 2024/06/06 | 2024/07/30 | 2024/10/23 - 2024/10/25 | Arlington, USA 
 FMCP 2024    
  NIST Workshop on Formal Methods within Certification Programs 2024 | 2024/05/27 | 2024/06/10 | 2024/07/23 - 2024/07/25 | Rockwille, USA 
 Asiacrypt 2024    
  ASIACRYPT 2024 | 2024/05/26 | 2024/08/25 | 2024/12/09 - 2024/12/13 | Kolkata, India 
 IEEE DSC2024    
  The 2024 7th IEEE Conference on Dependable and Secure Computing | 2024/07/30 | 2024/09/12 | 2024/11/06 - 2024/11/08 | Tokyo, Japan 
 NSS 2024    
  18th International Conference on Network and System Security (NSS 2024) | 2024/07/20 | 2024/08/30 | 2024/11/20 - 2024/11/22 | Zayed University 
 CANDAR 2024    
  The Twelfth International Symposium on Computing and Networking (CANDAR 2024) | 2024/07/30 | 2024/09/25 | 2024/11/26 - 2024/11/29 | Okinawa, Japan 
 PSD 2024    
  Privacy in statistical databases 2024 (PSD 2024) | 2024/05/19 | 2024/06/21 | 2024/09/25 - 2024/09/27 | Antibes, France 
 SCN 2024    
  The 14th International Conference on Security and Cryptography for Networks | 2024/04/24 | 2024/06/24 | 2024/09/11 - 2024/09/13 | Amalfi, Italy 
 ITC 2024    
  The 5th Conference on Information-Theoretic Cryptography | 2024/03/10 | 2024/05/31 | 2024/08/14 - 2024/08/16 | Stanford, USA 
 Crypto 2024    
  Crypto 2024 | 2024/02/13 | 2024/05/03 | 2024/08/18 - 2024/08/22 | Santa Barbara, USA 
 SAC 2024    
  31st International Conference on Selected Areas in Cryptography 2024, Round 1 | 2024/02/07 | 2024/03/20 | 2024/08/26 - 2024/08/30 | Montreal, Canada 
 AsiaJCIS 2024    
  The19th Asia Joint Conference on Information Security | 2024/04/15 | 2024/06/14 | 2024/08/13 - 2024/08/14 | Taiwan (Virtual & Physical) 
 Scisec 2024    
  The 6th International Conference on Science of Cyber Security (Scisec 2024) | 2024/04/07 | 2024/05/20 | 2024/08/14 - 2024/08/16 | Copenhagen, Denmark 
 ISITA 2024    
  2024 International Symposium on Information Theory Its Applications(ISITA) | 2024/04/30 | 2024/07/31 | 2024/11/10 - 2024/11/13 | National Taiwan University of Science and Technology, TAIWAN 

 大阪大学  〒565-0871 大阪府吹田市山田丘2-1 大阪大学 大学院工学研究科  
  電気電子情報工学専攻 情報通信工学部門 通信システム工学講座 サイバーセキュリティ工学領域 E3棟9F  Tel : 06-6879-4179  ご意見・ご質問等ございましたらメールにてお問い合わせください  
  web-admin23[at]crypto-cybersec.comm.eng.osaka-u.ac.jp     © Miyaji Laboratory   . All Rights Reserved.    

  
Call for papers data: 
404  Not Found  Please forward this error screen to prdc.dependability.org's WebMaster  .  
 The server cannot find the requested page:  
    
 prdc.dependability.org/prdc2024/cfp.html (port 443) 

  Copyright © 2016 cPanel, Inc.   

  Important dates data: 
undefined

46. Conference SEAA_1:
Skip to content      
 DSD/SEAA 2025 Conference  

 Menu   About 
  News 
  DSD 2025 
  SEAA 2025 
  Contact 
  Archive | DSD 2024 | Keynotes 2024 
  Industrial 2024 
  Call for Papers 
  Committees 
  Registration 
  Program 
  Venue and travel 
  SEAA 2024 | Call for Papers 
  Indexing 
  Registration 
  Program 
  Venue and travel 
  DSD/SEAA 2024 
  DSD/SEAA 2023 

 SEAA 2025  

 51st Euromicro Conference Series on Software Engineering and Advanced Applications (SEAA) 2025 will be held at Grant Hotel, Salerno, Italy, from 10th to 12th of September 2025.   
  
 Scope  
 The Euromicro Conference Series on Software Engineering and Advanced Applications (SEAA) is a long-standing international forum for researchers, practitioners, and students to present and discuss the latest innovations, trends, experiences, and concerns in the field of Software Engineering and Advanced Applications in information technology for software-intensive systems.  
 Program  
 Will be announced later.  
 Registration  
 Will be announced later.  
 Venue and travel  
 Grand Hotel, Salerno, Italy.   
 More details will be announced later.  

 Search for:       
 Recent Posts  
 2025 DSD/SEAA Conference Call for Papers announced! 
  50th Anniversary Edition of DSD/SEAA 2024 Conference has been successfully completed! 
  Program of DSD & SEAA 2024 and WiP Proceedings Announced 
  General scheudle avaliable ! 
  DSD/SEAA 2024 Registration is now open !!! 
   
 Archives  
 November 2024 
  September 2024 
  August 2024 
  July 2024 
  June 2024 
  May 2024 
  April 2024 
  February 2024 
  December 2023 
  November 2023 
  February 2023 
   
 Categories  
 Conference News 

 Stay Tuned  

 Copyright © 2024 DSD/SEAA 2025 –  OnePress  theme by FameThemes   

  
Call for papers data: 
                                                                                Skip to content      
 DSD/SEAA 2025 Conference  

 Menu   About 
  News 
  DSD 2025 
  SEAA 2025 
  Contact 
  Archive | DSD 2024 | Keynotes 2024 
  Industrial 2024 
  Call for Papers 
  Committees 
  Registration 
  Program 
  Venue and travel 
  SEAA 2024 | Call for Papers 
  Indexing 
  Registration 
  Program 
  Venue and travel 
  DSD/SEAA 2024 
  DSD/SEAA 2023 

 DSD 2024  

 27th Euromicro Conference Series on Digital System Design (DSD) 2024 will be held at Sorbonne University, Paris, France, from 28th to 30th of August 2024.   
 This edition will mark a milestone as we celebrate the 50th Anniversary  of Euromicro and Euromicro Conferences.   

 Call for Papers  
 The Euromicro Conference on Digital System Design (DSD) addresses all aspects of (embedded, pervasive and high-performance) digital and mixed HW/SW system development and covers the entire design process from specification to microarchitectures, digital circuits and VLSI implementations. It is a forum for researchers and engineers from academia and industry working on advanced research, development and applications. It focuses on the current and future challenges of: advanced embedded, high-performance and cyber-physical applications; system and processor architectures for embedded and high performance HW/SW systems; design methodology and design automation for all design levels of embedded, high performance and cyber-physical systems; modern implementation technologies ranging from full-custom circuits in nanometer technology nodes to FPGAs and MPSoC infrastructures. Authors are cordially invited to submit their work on (but not limited to) the topics of the main track of the conference. In addition, contributions to various special sessions (with dedicated coordinators and sub-program committees) on specific topics of special interest are welcome. All papers will be reviewed according to common guidelines, quality requirements and acceptance thresholds.  
 Main Topics  
 Artificial intelligence from edge to cloud: architectures, methods, tools and applications 
  Design and synthesis of systems, hardware and embedded software – specification, modelling, analysis, validation and testing 
  Design automation at system, processor, register-transfer, logic and physical levels 
  Formal methods in system and hardware design 
  IoT, cyber-physical, embedded systems and applications 
  Systems-on-a-chip, networks-on-a-chip and systems-in-a-package 
  High-performance, energy-efficient multi-core and many-core (heterogeneous) processor architectures. 
  Autonomous/adaptable/reconfigurable systems and architectures 
  Security, safety, reliability and multi-objective optimization of embedded and cyber-physical systems 
  Future trends, new applications and new technologies 
  Special sessions   
 AHSA: Architectures and Hardware for Security Applications | , | P. Kitsos (University of Peloponnese, GR), M. Novotny (CTU Prague, CZ) 
  ASHWPA: Advanced Systems for Health Wellness and Personal Monitoring | , | F | . | Leporati (U Pavia, IT), R. Stojanovic (U Montenegro, ME), E. Marenzi (U Pavia, IT) 
  DDVC: Digital Design and Verification with Chisel | , | M. Schoeberl (DTU, DK) 
  DTFT: Dependability, Testing and Fault Tolerance in Digital Systems | , | P. Fiser (CTU Prague, CZ), H. Kubátová (CTU in Prague, CZ) 
  EPDSD: European Projects in Digital Systems Design | , | L. Jozwiak (TU/e, NL), F. Leporati (U Pavia, IT), E. Torti (U Pavia, IT) 
  HIAAA: Hyperspectral Imaging Applications, Algorithms and Architectures | , | G. M. Callico (IUMA/ULPGC, ES), H. Fabelo (FIISC/IUMA/ULPGC, ES), S. Ortega (NOFIMA, NO) 
  HSTIEC: Hardware, Software, and Tools for the IoT-to-Edge-to-Cloud Continuum, | F. Aromolo (Scuola Superiore Sant’Anna, IT), D. Casini (Scuola Superiore Sant’Anna, IT), G. Rossolini (Scuola Superiore Sant’Anna, IT) 
  MATTERV : Opensource Methods, architectures, tools and technologies for RISC-V | , | S. | Pillement (U. Nantes, FR), K. Martin (U. Bretagne-Sud, FR) 
  SDSD: Sustainable Digital System Design | , | T. | Marty (Insa, Rennes, FR), T. Scheipel (Graz University of Technology, AT), M. Baunach (Graz University of Technology, AT) 
  SPCPS: Safety, Security and Privacy of Cyber-Physical Systems | , | S | . Dey (IIT Kharagpur, India), S. Park (TU Berlin, D), J. Sepúlveda (Airbus Defence and Space GmbH, D) 
  Important dates   
 Deadline for abstract submission: | 27th May 2024 (AoE) /firm/ 
  Deadline for full paper submission: | 05th May 2024 | 3rd | June 2024 (AoE) /firm/ 
  Notification of acceptance: | 12th June 2024 | 28th June 2024 | 01th July 2024 
  Camera ready papers: | 26th June 2024 | 11th July 2024 (AoE) 
  Submission guidelines  
 Authors are encouraged to submit their manuscripts via EasyChair web service at web page | https://easychair.org/conferences/?conf=dsd2024 | . Should an unexpected web access problem be encountered, please contact the Program Chairs Frédéric Pétrot ( | frederic.petrot@univ-grenoble-alpes.fr | ) and Tomasz Kryjak ( | tomasz.kryjak@agh.edu.pl | ) 
  Each manuscript should include the complete paper text, all illustrations, and references. The manuscript should conform to the IEEE format: single-spaced, double column, US letter page size, 10-point size Times Roman font, up to 8 pages. In order to conduct a blind review, no indication of the authors’ names should appear in the manuscript, references included. However, but authors should not hide previous work, instead, they need to make self-references in the third person. 
  IEEE Conference Publishing Services (CPS) will publish accepted papers in the conference proceedings and the proceedings will be submitted to the IEEE Xplore Digital library and indexing  services. 
  IEEE No-Show Policy  
 Please take note that IEEE has a strict policy on no-show. Therefore, if your paper is accepted, one of the authors and their representatives MUST PRESENT their paper at the conference. Papers with no-show participants without a valid reason will not be submitted to IEEE Xplore. No refund of the paid fees may be claimed by the no-show author.  
 Journal Publication  
  Authors of the selected best papers will be invited to submit extended versions of their research to the ISI indexed Euromicro/Elsevier journal ”Microprocessors and Microsystems: Embedded Hardware Design”  (MICPRO) which has an 2022 Impact Factor of 2.6 and Cite Score of 4.9.  
 Indexing  
 The proceedings of the DSD conference are indexed in the following databases:  
  
 IEEE Xplore (more…) 
  SCOPUS 
  Web of Science (WoS) 
  Microsoft Academic 
  Schematic Scholar 
  Google Scholar | Research Gate 
  SJRScimago Journal & Country Rank, 
  DBLB Computer Science Bibliography 
  Research.com 
  and other relevant database 

 Program  
 Will be announced later.   
 Registration  
 Early bird registration finish: 1st July 2024  
 Will be announced later.   
 Venue and travel  
 Sorbonne University, Paris, France.   
 More details will be announced later.   
  
 Committees  
 DSD Steering Committee:  
 Lech Jóźwiak ( | Eindhoven University of Technology | , NL) – Chairman 
  Paris Kitsos ( | University of Peloponnese | , GR) 
  Tomasz Kryjak ( | AGH University of Krakow | , PL) 
  Hana Kubatova ( | Czech Technical University in Prague | , CZ) 
  Francesco Leporati ( | University | of Pavia, IT) 
  José Silva Matos ( | University of | Porto, PT) 
  Smail Niar ( | Polytechnic University of Hauts de-France | , FR) 
  António Nuñez ( | University of Las Palmas de Gran Canaria, | ES) 
  Eugenio Villar ( | University of Cantabria | , ES) 
  DSD 2024 General Chairs:  
 Lilia Zaourar (CEA, FR) 
  Andrea Pinna (Sorbonne University, FR) 
  DSD 2024 Program Chairs:  
 Frédéric Pétrot | ( | Grenoble Alpes University | , FR) 
  Tomasz Kryjak | ( | AGH University of Krakow | , PL) 
  DSD 2024 Publication Chair:  
 Amund Skavhaug (Norwegian Institute of Science and Technology, NO) 
  DSD 2024 Publicity Chair:  
 João Canas Ferreira (Univeristy of Porto, PT) 
  DSD 2024 Finance Co-Chairs:  
 Francesco Leporati ( | University | of Pavia, IT) 
  Karl-Erwin Grosspietsch (Euromicro, DE) 
  DSD 2024 Technical Program Committee:  
 Status 18.05.2024  
 Ihsen Alouani (Queen’s university Belfast, UK) 
  Liliana Andrade (Universite Grenoble Alpes) 
  Federico Aromolo (Scuola Superiore Sant’Anna) 
  Mohamed Benazouz (CEA LIST DILS LISE) 
  Hadjer Benmeziane (IBM Zurich, Switzerland) 
  Jalil Boukhobza (ENSTA-Bretagne) 
  Fabien Bouquillon (Università degli studi di Modena e Reggio Emmilia) 
  Halima Bouzidi (Queen’s university Belfast, UK) 
  João Canas Ferreira (Univeristy of Porto) 
  José Cano (University of Glasgow) 
  Alessandro Capotondi (University of Modena and Reggio Emilia) 
  Pedro P. Carballo (University of Las Palmas de Gran Canaria) 
  Antonio Carlos Schneider Beck (Federal University of Rio Grande do Sul) 
  Daniel Casini (School of Advanced Studies Sant’Anna) 
  Tom Chen (Colorado State University) 
  Alessandro Cilardo (University of Naples Federico II) 
  Giovanni Danese (University of Pavia) 
  Karol Desnos (INSA Rennes) 
  Tiago Dias (Instituto Superior de Engenharia de Lisboa) 
  Rolf Drechsler (University of Bremen) 
  Miguel Figueroa (Universidad de Concepcion) 
  Petr Fišer (Czech Technical University in Prague) 
  Ghayoor Gillani (University of Twente) 
  Roberto Giorgi (University of Siena) 
  Ouarnoughi Hamza (Polytechnic University of Hauts de-France) 
  Roel Jordans (Eindhoven University of Technology) 
  Lech Jozwiak (Eindhoven University of Technology) 
  Ercan Kalali (Eindhoven University of Technology) 
  Oliver Keszocze (University of Erlangen–Nuremberg) 
  Paris Kitsos (University of Peloponnese) 
  Mateusz Komorkiewicz (IEEE: VTS Chapter) 
  Tomasz Kryjak (AGH University of Krakow) 
  Hana Kubatova (Czech Technical University in Prague) 
  José L. Abellán (University of Murcia) 
  Alexey Lastovetsky (University College Dublin) 
  Francesco Leporati (University of Pavia) 
  Alberto Marchisio (New York University) 
  Maurizio Martina (Polytechnic University of Turin) 
  Jose Matos (University of Porto) 
  Antonio Miele (Polytechnic University of Milan) 
  Sajid Mohamed (ITEC) 
  Sergey Mosin (Kazan Federal University) 
  Vojtech Mrazek (Brno University of Technology) 
  Nadia Nedjah (State University of Rio de Janeiro) 
  Smail Niar (Polytechnic University of Hauts de-France) 
  Antonio Nuñez (IUMA-ULPGC) 
  Arnaldo Oliveira (University of Aveiro) 
  Alex Orailoglu (University of California San Diego) 
  Ozcan Ozturk (Bilkent University) 
  Christian Pilato (Polytechnic University of Milan) 
  Thilo Pionteck (Otto von Guericke University Magdeburg) 
  Sai Manoj Pudukotai Dinakarrao (George Mason University) 
  Frédéric Pétrot (Grenoble Alpes University) 
  Yang Qu (Broadcom) 
  Davide Quaglia (University of Verona) 
  Alfonso Rodriguez (Technical University of Madrid) 
  Sepideh Safari (Institute for Research in Fundamental Sciences) 
  Mazen Saghir (American University of Beirut) 
  Tobias Scheipel (Graz University of Technology) 
  Jan Schmidt (Czech Technical University in Prague) 
  Nicolas Sklavos (University of Patras) 
  Radovan Stojanovic (University of Montenegro) 
  Emanuele Torti (University of Pavia) 
  Miroslav Velev (Aries Design Automation) 
  Eugenio Villar (University of Cantabria) 
  Chao Wang (University of Science and Technology of China) 
  Arda Yurdakul (Boğaziçi University) 
  Andrej Zemva (University of Ljubljana) 
    
 Feel free to contact us regarding any information or queries.    

 Search for:       
 Recent Posts  
 2025 DSD/SEAA Conference Call for Papers announced! 
  50th Anniversary Edition of DSD/SEAA 2024 Conference has been successfully completed! 
  Program of DSD & SEAA 2024 and WiP Proceedings Announced 
  General scheudle avaliable ! 
  DSD/SEAA 2024 Registration is now open !!! 
   
 Archives  
 November 2024 
  September 2024 
  August 2024 
  July 2024 
  June 2024 
  May 2024 
  April 2024 
  February 2024 
  December 2023 
  November 2023 
  February 2023 
   
 Categories  
 Conference News 

 Stay Tuned  

 Copyright © 2024 DSD/SEAA 2025 –  OnePress  theme by FameThemes   

  Important dates data: 
undefined

47. Conference SEAA_2:
Skip to content      
 DSD/SEAA 2025 Conference  

 Menu   About 
  News 
  DSD 2025 
  SEAA 2025 
  Contact 
  Archive | DSD 2024 | Keynotes 2024 
  Industrial 2024 
  Call for Papers 
  Committees 
  Registration 
  Program 
  Venue and travel 
  SEAA 2024 | Call for Papers 
  Indexing 
  Registration 
  Program 
  Venue and travel 
  DSD/SEAA 2024 
  DSD/SEAA 2023 

 SEAA 2024  

 Call for Papers  
 50th Euromicro Conference Series on Software Engineering and Advanced Applications (SEAA) 2024 has been officially announced!  
 Euromicro Conference Series SEAA 2024 will be held at Sorbonne University, Paris, France, from 28th to 30th of August 2024.   
 This edition will mark a milestone as we celebrate the 50th Anniversary  of Euromicro and Euromicro Conferences.   
 More information about the upcoming events will be announced timely.  
 Feel free to contact us regarding any information or queries.    
 Scope  
 The Euromicro Conference Series on Software Engineering and Advanced Applications (SEAA) is a long-standing international forum for researchers, practitioners, and students to present and discuss the latest innovations, trends, experiences, and concerns in the field of Software Engineering and Advanced Applications in information technology for software-intensive systems.  
 Tracks and Organizers  
 – CPS: Cyber-Physical Systems    
  V. Klös (Technische Universität Dresden), S. Mubeen (Mälardalen University, Sweden)  
 – DAIDE: Data and AI Driven Engineering    
  J. Bosch (Chalmers & Gothenburg University, Sweden) and H. Holmström Olsson (Malmö University, Sweden)  
 – ECT: Emerging Computing Technologies    
  A. Janes (Vorarlberg University of Applied Sciences, Austria), R. Maranhão (University of Porto, Portugal), V. Lenarduzzi (University of Oulu, Finland), D. Taibi (University of Oulu, Finland)  
 – MDEML: Model-Driven Engineering and Modeling Languages    
  A. Bucaioni (Mälardalen University, Sweden), F. Ciccozzi (Mälardalen University, Sweden), and A. Wortmann (Stuttgart University, Germany)  
 – SM: Software management: Measurement, Peopleware, and Innovation    
  O. Demirors (Izmir Institute of Technology, Turkey), C. Gravino (University of Salerno, Italy), and F. Pecorelli (JADS & Eindhoven University of Technology, Netherlands)  
 – SMSE: Systematic Literature Reviews and Mapping Studies in Software Engineering    
  S. Swift (Brunel University, United Kingdom) and Mahir Arzoky (Brunel University, United Kingdom)  
 – SPPI: Software Process and Product Improvement    
  S. Biffl (Vienna University of Technology, Austria), R. Rabiser (Johannes Kepler University Linz, Austria), and D. Winkler (Vienna University of Technology, Austria)  
 – STREAM: Software Analytics: Mining Software Open Datasets and Repositories    
  A. Ampatzoglou (University of Macedonia, Greece) and E.M. Arvanitou (University of Macedonia, Greece)  
 – KKIO: Practical Aspects of Software Engineering    
  Ł. Radliński (West Pomeranian University of Technology in Szczecin, Poland), M, Staron (University of Gothenburg, Sweden), and J. Swacha, (University of Szczecin, Poland)  
 Special Sessions and Organizers  
 – EUP: European Research Projects    
  G. Quattrocchi (Politecnico di Milano, Italy) and D. A. Tamburri (JADS & Eindhoven University of Technology, Netherlands)  
 Submission Guidelines  
 SEAA 2024 encourages the submission of full research papers, short papers, tool demo papers (maximum 4 pages), and posters (maximum 2 pages). A maximum of 8 pages is allowed for each full research paper. Papers follow a single-blinded reviewing process and must contain original unpublished work, describe significant novel contributions, and provide evidence about the validation of the results. Reports on industrial applications are also welcome.  
 Papers submitted to SEAA 2024 must not be under review or submitted for review elsewhere whilst under consideration for SEAA 2024. Contravention of this concurrent submission policy will be deemed a serious breach of scientific ethics, and appropriate action will be taken in all such cases.  
 Conference Publishing Services (CPS) will publish accepted papers in the conference proceedings, and the proceedings will be submitted to the IEEE Xplore digital library and indexing services. We reserve the right to exclude a paper from distribution after the conference (e.g., by not placing it in the IEEE Xplore Digital Library) if it is not presented at the conference.  
 Best papers of SEAA 2024 will be invited to submit extended versions for a theme issue at Elsevier Journal of Systems and Software. Selected papers will be expected to comply with the standard guidelines of the journal when publishing an extended version of a paper, including adding about 30% new material.  
  Papers must strictly adhere to the two-column IEEE conference proceedings format.  
 Please use the available templates  . LaTeX users should use the following configuration: \documentclass[conference]{IEEEtran}.  
 Microsoft Word users should use the US Letter format template. All submissions of all the tracks and special sessions at SEAA 2024 must be in PDF and submitted online by the deadline via the EasyChair conference management system at: https://easychair.org/conferences/?conf=seaa2024   
 For further information, please contact Shaukat Ali or Nour Ali via seaa2024@easychair.org  .  
 Important Dates  
 Deadline for abstract submission: | 27th May 2024 (AoE) /firm/ 
  Deadline for full paper submission: | 05th May 2024 | 3rd | June 2024 (AoE) /firm/ 
  Notification of acceptance: | 12th June 2024 | 28th June 2024 
  Camera ready papers: | 26th June 2024 | 11th July 2024 (AoE) 
  Organizers  
 General Chair  
 – Andrea Pinna (Sorbonne University)   
  – Lilia Zaourar (Université Paris-Saclay, CEA)   
 Program Chairs  
 – Nour Ali (Brunel University London, UK)  
  – Shaukat Ali (Simula Research Laboratory and Oslo Metropolitan University, Oslo Norway)  
 Proceedings Chair  
 – Hassan Sartaj (Simula Research Laboratory, Oslo, Norway)  
 Publicity Chair  
 – Andila Asim (Brunel University London, UK)  
 Posters and Demo Chair  
 – Hassan Sartaj (Simula Research Laboratory, Oslo, Norway)   
  
 Steering Committee  
 – Stefan Biffl – Chairman (Vienna University of Technology, Austria)  
  – Michel Chaudron (Eindhoven University of Technology, Netherlands)  
  – Onur Demirors (IzTech / UNSW, Turkey and Australia)  
  – Carmine Gravino (University of Salerno, Italy)  
  – Helena Holmström Olsson (Malmö University, Sweden)  
  – Rick Rabiser (Johannes Kepler University Linz, Austria)  
  – Andreas Wortmann (Stuttgart University, Germany)  
 More Information  
 Website: https://dsd-seaa.com/seaa2024/   
  Twitter account: https://twitter.com/EuromicroOrg   
  Facebook page: https://www.facebook.com/dsdseaa   

 Search for:       
 Recent Posts  
 2025 DSD/SEAA Conference Call for Papers announced! 
  50th Anniversary Edition of DSD/SEAA 2024 Conference has been successfully completed! 
  Program of DSD & SEAA 2024 and WiP Proceedings Announced 
  General scheudle avaliable ! 
  DSD/SEAA 2024 Registration is now open !!! 
   
 Archives  
 November 2024 
  September 2024 
  August 2024 
  July 2024 
  June 2024 
  May 2024 
  April 2024 
  February 2024 
  December 2023 
  November 2023 
  February 2023 
   
 Categories  
 Conference News 

 Stay Tuned  

 Copyright © 2024 DSD/SEAA 2025 –  OnePress  theme by FameThemes   

  
Call for papers data: 
                                                                                Skip to content      
 DSD/SEAA 2025 Conference  

 Menu   About 
  News 
  DSD 2025 
  SEAA 2025 
  Contact 
  Archive | DSD 2024 | Keynotes 2024 
  Industrial 2024 
  Call for Papers 
  Committees 
  Registration 
  Program 
  Venue and travel 
  SEAA 2024 | Call for Papers 
  Indexing 
  Registration 
  Program 
  Venue and travel 
  DSD/SEAA 2024 
  DSD/SEAA 2023 

 DSD 2024  

 27th Euromicro Conference Series on Digital System Design (DSD) 2024 will be held at Sorbonne University, Paris, France, from 28th to 30th of August 2024.   
 This edition will mark a milestone as we celebrate the 50th Anniversary  of Euromicro and Euromicro Conferences.   

 Call for Papers  
 The Euromicro Conference on Digital System Design (DSD) addresses all aspects of (embedded, pervasive and high-performance) digital and mixed HW/SW system development and covers the entire design process from specification to microarchitectures, digital circuits and VLSI implementations. It is a forum for researchers and engineers from academia and industry working on advanced research, development and applications. It focuses on the current and future challenges of: advanced embedded, high-performance and cyber-physical applications; system and processor architectures for embedded and high performance HW/SW systems; design methodology and design automation for all design levels of embedded, high performance and cyber-physical systems; modern implementation technologies ranging from full-custom circuits in nanometer technology nodes to FPGAs and MPSoC infrastructures. Authors are cordially invited to submit their work on (but not limited to) the topics of the main track of the conference. In addition, contributions to various special sessions (with dedicated coordinators and sub-program committees) on specific topics of special interest are welcome. All papers will be reviewed according to common guidelines, quality requirements and acceptance thresholds.  
 Main Topics  
 Artificial intelligence from edge to cloud: architectures, methods, tools and applications 
  Design and synthesis of systems, hardware and embedded software – specification, modelling, analysis, validation and testing 
  Design automation at system, processor, register-transfer, logic and physical levels 
  Formal methods in system and hardware design 
  IoT, cyber-physical, embedded systems and applications 
  Systems-on-a-chip, networks-on-a-chip and systems-in-a-package 
  High-performance, energy-efficient multi-core and many-core (heterogeneous) processor architectures. 
  Autonomous/adaptable/reconfigurable systems and architectures 
  Security, safety, reliability and multi-objective optimization of embedded and cyber-physical systems 
  Future trends, new applications and new technologies 
  Special sessions   
 AHSA: Architectures and Hardware for Security Applications | , | P. Kitsos (University of Peloponnese, GR), M. Novotny (CTU Prague, CZ) 
  ASHWPA: Advanced Systems for Health Wellness and Personal Monitoring | , | F | . | Leporati (U Pavia, IT), R. Stojanovic (U Montenegro, ME), E. Marenzi (U Pavia, IT) 
  DDVC: Digital Design and Verification with Chisel | , | M. Schoeberl (DTU, DK) 
  DTFT: Dependability, Testing and Fault Tolerance in Digital Systems | , | P. Fiser (CTU Prague, CZ), H. Kubátová (CTU in Prague, CZ) 
  EPDSD: European Projects in Digital Systems Design | , | L. Jozwiak (TU/e, NL), F. Leporati (U Pavia, IT), E. Torti (U Pavia, IT) 
  HIAAA: Hyperspectral Imaging Applications, Algorithms and Architectures | , | G. M. Callico (IUMA/ULPGC, ES), H. Fabelo (FIISC/IUMA/ULPGC, ES), S. Ortega (NOFIMA, NO) 
  HSTIEC: Hardware, Software, and Tools for the IoT-to-Edge-to-Cloud Continuum, | F. Aromolo (Scuola Superiore Sant’Anna, IT), D. Casini (Scuola Superiore Sant’Anna, IT), G. Rossolini (Scuola Superiore Sant’Anna, IT) 
  MATTERV : Opensource Methods, architectures, tools and technologies for RISC-V | , | S. | Pillement (U. Nantes, FR), K. Martin (U. Bretagne-Sud, FR) 
  SDSD: Sustainable Digital System Design | , | T. | Marty (Insa, Rennes, FR), T. Scheipel (Graz University of Technology, AT), M. Baunach (Graz University of Technology, AT) 
  SPCPS: Safety, Security and Privacy of Cyber-Physical Systems | , | S | . Dey (IIT Kharagpur, India), S. Park (TU Berlin, D), J. Sepúlveda (Airbus Defence and Space GmbH, D) 
  Important dates   
 Deadline for abstract submission: | 27th May 2024 (AoE) /firm/ 
  Deadline for full paper submission: | 05th May 2024 | 3rd | June 2024 (AoE) /firm/ 
  Notification of acceptance: | 12th June 2024 | 28th June 2024 | 01th July 2024 
  Camera ready papers: | 26th June 2024 | 11th July 2024 (AoE) 
  Submission guidelines  
 Authors are encouraged to submit their manuscripts via EasyChair web service at web page | https://easychair.org/conferences/?conf=dsd2024 | . Should an unexpected web access problem be encountered, please contact the Program Chairs Frédéric Pétrot ( | frederic.petrot@univ-grenoble-alpes.fr | ) and Tomasz Kryjak ( | tomasz.kryjak@agh.edu.pl | ) 
  Each manuscript should include the complete paper text, all illustrations, and references. The manuscript should conform to the IEEE format: single-spaced, double column, US letter page size, 10-point size Times Roman font, up to 8 pages. In order to conduct a blind review, no indication of the authors’ names should appear in the manuscript, references included. However, but authors should not hide previous work, instead, they need to make self-references in the third person. 
  IEEE Conference Publishing Services (CPS) will publish accepted papers in the conference proceedings and the proceedings will be submitted to the IEEE Xplore Digital library and indexing  services. 
  IEEE No-Show Policy  
 Please take note that IEEE has a strict policy on no-show. Therefore, if your paper is accepted, one of the authors and their representatives MUST PRESENT their paper at the conference. Papers with no-show participants without a valid reason will not be submitted to IEEE Xplore. No refund of the paid fees may be claimed by the no-show author.  
 Journal Publication  
  Authors of the selected best papers will be invited to submit extended versions of their research to the ISI indexed Euromicro/Elsevier journal ”Microprocessors and Microsystems: Embedded Hardware Design”  (MICPRO) which has an 2022 Impact Factor of 2.6 and Cite Score of 4.9.  
 Indexing  
 The proceedings of the DSD conference are indexed in the following databases:  
  
 IEEE Xplore (more…) 
  SCOPUS 
  Web of Science (WoS) 
  Microsoft Academic 
  Schematic Scholar 
  Google Scholar | Research Gate 
  SJRScimago Journal & Country Rank, 
  DBLB Computer Science Bibliography 
  Research.com 
  and other relevant database 

 Program  
 Will be announced later.   
 Registration  
 Early bird registration finish: 1st July 2024  
 Will be announced later.   
 Venue and travel  
 Sorbonne University, Paris, France.   
 More details will be announced later.   
  
 Committees  
 DSD Steering Committee:  
 Lech Jóźwiak ( | Eindhoven University of Technology | , NL) – Chairman 
  Paris Kitsos ( | University of Peloponnese | , GR) 
  Tomasz Kryjak ( | AGH University of Krakow | , PL) 
  Hana Kubatova ( | Czech Technical University in Prague | , CZ) 
  Francesco Leporati ( | University | of Pavia, IT) 
  José Silva Matos ( | University of | Porto, PT) 
  Smail Niar ( | Polytechnic University of Hauts de-France | , FR) 
  António Nuñez ( | University of Las Palmas de Gran Canaria, | ES) 
  Eugenio Villar ( | University of Cantabria | , ES) 
  DSD 2024 General Chairs:  
 Lilia Zaourar (CEA, FR) 
  Andrea Pinna (Sorbonne University, FR) 
  DSD 2024 Program Chairs:  
 Frédéric Pétrot | ( | Grenoble Alpes University | , FR) 
  Tomasz Kryjak | ( | AGH University of Krakow | , PL) 
  DSD 2024 Publication Chair:  
 Amund Skavhaug (Norwegian Institute of Science and Technology, NO) 
  DSD 2024 Publicity Chair:  
 João Canas Ferreira (Univeristy of Porto, PT) 
  DSD 2024 Finance Co-Chairs:  
 Francesco Leporati ( | University | of Pavia, IT) 
  Karl-Erwin Grosspietsch (Euromicro, DE) 
  DSD 2024 Technical Program Committee:  
 Status 18.05.2024  
 Ihsen Alouani (Queen’s university Belfast, UK) 
  Liliana Andrade (Universite Grenoble Alpes) 
  Federico Aromolo (Scuola Superiore Sant’Anna) 
  Mohamed Benazouz (CEA LIST DILS LISE) 
  Hadjer Benmeziane (IBM Zurich, Switzerland) 
  Jalil Boukhobza (ENSTA-Bretagne) 
  Fabien Bouquillon (Università degli studi di Modena e Reggio Emmilia) 
  Halima Bouzidi (Queen’s university Belfast, UK) 
  João Canas Ferreira (Univeristy of Porto) 
  José Cano (University of Glasgow) 
  Alessandro Capotondi (University of Modena and Reggio Emilia) 
  Pedro P. Carballo (University of Las Palmas de Gran Canaria) 
  Antonio Carlos Schneider Beck (Federal University of Rio Grande do Sul) 
  Daniel Casini (School of Advanced Studies Sant’Anna) 
  Tom Chen (Colorado State University) 
  Alessandro Cilardo (University of Naples Federico II) 
  Giovanni Danese (University of Pavia) 
  Karol Desnos (INSA Rennes) 
  Tiago Dias (Instituto Superior de Engenharia de Lisboa) 
  Rolf Drechsler (University of Bremen) 
  Miguel Figueroa (Universidad de Concepcion) 
  Petr Fišer (Czech Technical University in Prague) 
  Ghayoor Gillani (University of Twente) 
  Roberto Giorgi (University of Siena) 
  Ouarnoughi Hamza (Polytechnic University of Hauts de-France) 
  Roel Jordans (Eindhoven University of Technology) 
  Lech Jozwiak (Eindhoven University of Technology) 
  Ercan Kalali (Eindhoven University of Technology) 
  Oliver Keszocze (University of Erlangen–Nuremberg) 
  Paris Kitsos (University of Peloponnese) 
  Mateusz Komorkiewicz (IEEE: VTS Chapter) 
  Tomasz Kryjak (AGH University of Krakow) 
  Hana Kubatova (Czech Technical University in Prague) 
  José L. Abellán (University of Murcia) 
  Alexey Lastovetsky (University College Dublin) 
  Francesco Leporati (University of Pavia) 
  Alberto Marchisio (New York University) 
  Maurizio Martina (Polytechnic University of Turin) 
  Jose Matos (University of Porto) 
  Antonio Miele (Polytechnic University of Milan) 
  Sajid Mohamed (ITEC) 
  Sergey Mosin (Kazan Federal University) 
  Vojtech Mrazek (Brno University of Technology) 
  Nadia Nedjah (State University of Rio de Janeiro) 
  Smail Niar (Polytechnic University of Hauts de-France) 
  Antonio Nuñez (IUMA-ULPGC) 
  Arnaldo Oliveira (University of Aveiro) 
  Alex Orailoglu (University of California San Diego) 
  Ozcan Ozturk (Bilkent University) 
  Christian Pilato (Polytechnic University of Milan) 
  Thilo Pionteck (Otto von Guericke University Magdeburg) 
  Sai Manoj Pudukotai Dinakarrao (George Mason University) 
  Frédéric Pétrot (Grenoble Alpes University) 
  Yang Qu (Broadcom) 
  Davide Quaglia (University of Verona) 
  Alfonso Rodriguez (Technical University of Madrid) 
  Sepideh Safari (Institute for Research in Fundamental Sciences) 
  Mazen Saghir (American University of Beirut) 
  Tobias Scheipel (Graz University of Technology) 
  Jan Schmidt (Czech Technical University in Prague) 
  Nicolas Sklavos (University of Patras) 
  Radovan Stojanovic (University of Montenegro) 
  Emanuele Torti (University of Pavia) 
  Miroslav Velev (Aries Design Automation) 
  Eugenio Villar (University of Cantabria) 
  Chao Wang (University of Science and Technology of China) 
  Arda Yurdakul (Boğaziçi University) 
  Andrej Zemva (University of Ljubljana) 
    
 Feel free to contact us regarding any information or queries.    

 Search for:       
 Recent Posts  
 2025 DSD/SEAA Conference Call for Papers announced! 
  50th Anniversary Edition of DSD/SEAA 2024 Conference has been successfully completed! 
  Program of DSD & SEAA 2024 and WiP Proceedings Announced 
  General scheudle avaliable ! 
  DSD/SEAA 2024 Registration is now open !!! 
   
 Archives  
 November 2024 
  September 2024 
  August 2024 
  July 2024 
  June 2024 
  May 2024 
  April 2024 
  February 2024 
  December 2023 
  November 2023 
  February 2023 
   
 Categories  
 Conference News 

 Stay Tuned  

 Copyright © 2024 DSD/SEAA 2025 –  OnePress  theme by FameThemes   

  Important dates data: 
undefined

48. Conference SEAA_3:
Welcome 
 About 
 Privacy Policy 
 News 
 Members 
 Events 
 Tech. committees | Welcome | About | Privacy Policy | News | Members | Events | Tech. committees 
 Welcome 
 About 
 Privacy Policy 
 News 
 Members 
 Events 
 Tech. committees | Welcome 
 About 
 Privacy Policy 
 News 
 Members 
 Events 
 Tech. committees | Welcome | About | Privacy Policy | News | Members | Events | Tech. committees 
 Welcome 
 About 
 Privacy Policy 
 News 
 Members 
 Events 
 Tech. committees | Welcome | About | Privacy Policy | News | Members | Events | Tech. committees 
 Welcome 
 About 
 Privacy Policy 
 News 
 Members 
 Events 
 Tech. committees | Welcome 
 About 
 Privacy Policy 
 News 
 Members 
 Events 
 Tech. committees | Welcome | About | Privacy Policy | News | Members | Events | Tech. committees 
 Welcome 
 About 
 Privacy Policy 
 News 
 Members 
 Events 
 Tech. committees | Welcome 
 About 
 Privacy Policy 
 News 
 Members 
 Events 
 Tech. committees | Welcome | About | Privacy Policy | News | Members | Events | Tech. committees |  
 Welcome 
 About 
 Privacy Policy 
 News 
 Members 
 Events 
 Tech. committees | Welcome | About | Privacy Policy | News | Members | Events | Tech. committees 
 Welcome 
 About 
 Privacy Policy 
 News 
 Members 
 Events 
 Tech. committees | Welcome 
 About 
 Privacy Policy 
 News 
 Members 
 Events 
 Tech. committees | Welcome | About | Privacy Policy | News | Members | Events | Tech. committees 
 Welcome 
 About 
 Privacy Policy 
 News 
 Members 
 Events 
 Tech. committees | Welcome | About | Privacy Policy | News | Members | Events | Tech. committees 
 Welcome 
 About 
 Privacy Policy 
 News 
 Members 
 Events 
 Tech. committees 
 Upcoming 
 Past 
 Related events 
 Maps 
 Photos | Upcoming | Past | Related events | Maps | Photos 
 Upcoming 
 Past 
 Related events 
 Maps 
 Photos | Upcoming 
 Past 
 Related events 
 Maps 
 Photos | Upcoming | Past | Related events | Maps | Photos 
 Upcoming 
 Past 
 Related events 
 Maps 
 Photos | Upcoming | Past | Related events | Maps | Photos 
 Upcoming 
 Past 
 Related events 
 Maps 
 Photos | Upcoming 
 Past 
 Related events 
 Maps 
 Photos | Upcoming | Past | Related events | Maps | Photos 
 Upcoming 
 Past 
 Related events 
 Maps 
 Photos | Upcoming 
 Past 
 Related events 
 Maps 
 Photos | Upcoming | Past | Related events | Maps | Photos | 27 th  EUROMICRO Conference on Digital System Design    
  Paris, France, August 28th - 30th, 2024 |  
 50 th  EUROMICRO Conference on Software Engineering and Advanced Applications (SEAA)    
  Paris, France, August 28th - 30th, 2024 |  
 32 th  Euromicro International Conference on Parallel, Distributed and Network-Based Processing    
  Dublin, Ireland, March 20th - 22nd, 2024 |  
  
 On the subsequent subpages you find the information about the earlier   events. | 27 th  EUROMICRO Conference on Digital System Design    
  Paris, France, August 28th - 30th, 2024 | 50 th  EUROMICRO Conference on Software Engineering and Advanced Applications (SEAA)    
  Paris, France, August 28th - 30th, 2024 | 32 th  Euromicro International Conference on Parallel, Distributed and Network-Based Processing    
  Dublin, Ireland, March 20th - 22nd, 2024 |  
 Upcoming 
 Past 
 Related events 
 Maps 
 Photos | Upcoming | Past | Related events | Maps | Photos 
 Upcoming 
 Past 
 Related events 
 Maps 
 Photos | Upcoming 
 Past 
 Related events 
 Maps 
 Photos | Upcoming | Past | Related events | Maps | Photos 
 Upcoming 
 Past 
 Related events 
 Maps 
 Photos | Upcoming | Past | Related events | Maps | Photos 
 Upcoming 
 Past 
 Related events 
 Maps 
 Photos 
 27 th  EUROMICRO Conference on Digital System Design    
  Paris, France, August 28th - 30th, 2024 |  
 50 th  EUROMICRO Conference on Software Engineering and Advanced Applications (SEAA)    
  Paris, France, August 28th - 30th, 2024 |  
 32 th  Euromicro International Conference on Parallel, Distributed and Network-Based Processing    
  Dublin, Ireland, March 20th - 22nd, 2024 |  
 Imprint | Imprint |  
 Imprint 
  
  
Call for papers data: 
undefinedImportant dates data: 
undefined

49. Conference SEAMS_0:
SEAMS 2025   Mon 28 - Tue 29 April 2025 Ottawa, Ontario, Canada    
 co-located with ICSE 2025    

 Toggle navigation        
 Tracks | SEAMS 2025 
  Research Track 
  Artifact Track 
  Keynotes 
  Attending | Venue: Rogers Centre, Ottawa (formerly Shaw Centre) 
  ICSE 2025 
  Registration 
  Hotels 
  Visa and Travel Authorization 
  Travelling to Ottawa 
  Getting Around Ottawa 
  Food at ICSE2025 
  Code of Conduct 
  Equity, Diversity, and Inclusion Plan 
  Fun Activities 
  Organization | SEAMS 2025 Committees 
  Organizing Committee 
  MIP Award Committee 
  Track Committees 
  Research Track 
  Artifact Track 
  Contributors 
  People Index 
  Search 
  Series | Series 
   SEAMS 2025 
  SEAMS 2024 
  SEAMS 2023 
  SEAMS 2022 
  SEAMS 2021 
  SEAMS 2020 
  SEAMS 2019 
  SEAMS 2018 
  Sign in 
  Sign up 

 20th International Conference on Software Engineering for Adaptive and Self-Managing Systems  
   
 Today we are building an exciting future in which autonomous vehicles navigate complex environments, smart cities help solve public problems and achieve a higher quality of life, and service robots support social care workers or perform tasks that are too dangerous for humans. However, these software-intensive systems must continuously preserve and optimize their operation in the presence of uncertain changes in their operating environment, resource variability, evolving user needs, attacks and faults. In addition, the complexity of these systems demands them to adapt and manage themselves autonomously.  
 SEAMS is a CORE-A ranked conference that applies software engineering methods, techniques, processes, and tools to support the construction of safe, performant, and cost-effective self-adaptive and autonomous systems that provide self-* properties like self-configuration, self-healing, self-optimization, and self-protection. The objective of SEAMS is to bring together researchers and practitioners from academia, industry, and government to investigate, discuss, examine, and advance the fundamental principles, state of the art, and the solutions addressing critical challenges of engineering self-adaptive and self-managing systems.  

  SEAMS 2025 Tracks   
   
 Research Track  | Artifact Track    

 Important Dates  up till Tue 28 Jan 2025     

 Fri 6 Dec 2024      
  Artifact Track  Artifact Abstract Deadline 
 Fri 6 Dec 2024     
  Research Track  2nd Round: Abstract Deadline 
 Fri 13 Dec 2024     
  Research Track  2nd Round: New and Revised (from 1st Round) Paper Submission 
 Fri 13 Dec 2024      
  Artifact Track  Artifact Submission Deadline 
 Tue 14 Jan 2025     
  Artifact Track  Notification of Decision 
 Tue 14 Jan 2025     
  Research Track  2nd Round: Notification 
 Tue 28 Jan 2025     
  Research Track  All Rounds: Camera Ready 
 Tue 28 Jan 2025     
  Artifact Track  Camera Ready 
 All important dates 

   Posts   
   
 Tweets by SEAMSconf    
 Supporters   

 Sponsor 

 x  Thu 5 Dec 12:37    

  SEAMS 2025   
  using conf.researchr.org  ( v1.67.1  )  
   Support page    
     
 Tracks  
 Research Track   
  Artifact Track    

 Attending  
 Venue: Rogers Centre, Ottawa (formerly Shaw Centre)   
  Registration   
  Hotels   
  Visa and Travel Authorization Information for ICSE 2025 and its Co-Located Events   
  Travelling to Ottawa   
  Getting Around Ottawa   
  Food at ICSE2025   
  Code of Conduct for ICSE 2025 and its Co-Located Events   
  Equity, Diversity, and Inclusion Plan for ICSE 2025   
  Fun Activities    
 Sign Up    

  
Call for papers data: 
SEAMS 2025   Mon 28 - Tue 29 April 2025 Ottawa, Ontario, Canada    
 co-located with ICSE 2025    

 Toggle navigation        
 Tracks | SEAMS 2025 
  Research Track 
  Artifact Track 
  Keynotes 
  Attending | Venue: Rogers Centre, Ottawa (formerly Shaw Centre) 
  ICSE 2025 
  Registration 
  Hotels 
  Visa and Travel Authorization 
  Travelling to Ottawa 
  Getting Around Ottawa 
  Food at ICSE2025 
  Code of Conduct 
  Equity, Diversity, and Inclusion Plan 
  Fun Activities 
  Organization | SEAMS 2025 Committees 
  Organizing Committee 
  MIP Award Committee 
  Track Committees 
  Research Track 
  Artifact Track 
  Contributors 
  People Index 
  Search 
  Series | Series 
   SEAMS 2025 
  SEAMS 2024 
  SEAMS 2023 
  SEAMS 2022 
  SEAMS 2021 
  SEAMS 2020 
  SEAMS 2019 
  SEAMS 2018 
  Sign in 
  Sign up 

 20th International Conference on Software Engineering for Adaptive and Self-Managing Systems  
   
 Today we are building an exciting future in which autonomous vehicles navigate complex environments, smart cities help solve public problems and achieve a higher quality of life, and service robots support social care workers or perform tasks that are too dangerous for humans. However, these software-intensive systems must continuously preserve and optimize their operation in the presence of uncertain changes in their operating environment, resource variability, evolving user needs, attacks and faults. In addition, the complexity of these systems demands them to adapt and manage themselves autonomously.  
 SEAMS is a CORE-A ranked conference that applies software engineering methods, techniques, processes, and tools to support the construction of safe, performant, and cost-effective self-adaptive and autonomous systems that provide self-* properties like self-configuration, self-healing, self-optimization, and self-protection. The objective of SEAMS is to bring together researchers and practitioners from academia, industry, and government to investigate, discuss, examine, and advance the fundamental principles, state of the art, and the solutions addressing critical challenges of engineering self-adaptive and self-managing systems.  

  SEAMS 2025 Tracks   
   
 Research Track  | Artifact Track    

 Important Dates  up till Tue 28 Jan 2025     

 Fri 6 Dec 2024      
  Artifact Track  Artifact Abstract Deadline 
 Fri 6 Dec 2024     
  Research Track  2nd Round: Abstract Deadline 
 Fri 13 Dec 2024     
  Research Track  2nd Round: New and Revised (from 1st Round) Paper Submission 
 Fri 13 Dec 2024      
  Artifact Track  Artifact Submission Deadline 
 Tue 14 Jan 2025     
  Artifact Track  Notification of Decision 
 Tue 14 Jan 2025     
  Research Track  2nd Round: Notification 
 Tue 28 Jan 2025     
  Research Track  All Rounds: Camera Ready 
 Tue 28 Jan 2025     
  Artifact Track  Camera Ready 
 All important dates 

   Posts   
   
 Tweets by SEAMSconf    
 Supporters   

 Sponsor 

 x  Thu 5 Dec 12:37    

  SEAMS 2025   
  using conf.researchr.org  ( v1.67.1  )  
   Support page    
     
 Tracks  
 Research Track   
  Artifact Track    

 Attending  
 Venue: Rogers Centre, Ottawa (formerly Shaw Centre)   
  Registration   
  Hotels   
  Visa and Travel Authorization Information for ICSE 2025 and its Co-Located Events   
  Travelling to Ottawa   
  Getting Around Ottawa   
  Food at ICSE2025   
  Code of Conduct for ICSE 2025 and its Co-Located Events   
  Equity, Diversity, and Inclusion Plan for ICSE 2025   
  Fun Activities    
 Sign Up    

  Important dates data: 
SEAMS 2025   Mon 28 - Tue 29 April 2025 Ottawa, Ontario, Canada    
 co-located with ICSE 2025    

 Toggle navigation        
 Tracks | SEAMS 2025 
  Research Track 
  Artifact Track 
  Keynotes 
  Attending | Venue: Rogers Centre, Ottawa (formerly Shaw Centre) 
  ICSE 2025 
  Registration 
  Hotels 
  Visa and Travel Authorization 
  Travelling to Ottawa 
  Getting Around Ottawa 
  Food at ICSE2025 
  Code of Conduct 
  Equity, Diversity, and Inclusion Plan 
  Fun Activities 
  Organization | SEAMS 2025 Committees 
  Organizing Committee 
  MIP Award Committee 
  Track Committees 
  Research Track 
  Artifact Track 
  Contributors 
  People Index 
  Search 
  Series | Series 
   SEAMS 2025 
  SEAMS 2024 
  SEAMS 2023 
  SEAMS 2022 
  SEAMS 2021 
  SEAMS 2020 
  SEAMS 2019 
  SEAMS 2018 
  Sign in 
  Sign up 

  ICSE 2025  ( series  ) /   SEAMS 2025  ( series  ) /  Important Dates  

 When | Track | What 
 Fri 6 Dec 2024 | Artifact Track | Artifact Abstract Deadline 
 Fri 6 Dec 2024 | Research Track | 2nd Round: Abstract Deadline 
 Fri 13 Dec 2024 | Research Track | 2nd Round: New and Revised (from 1st Round) Paper Submission 
 Fri 13 Dec 2024 | Artifact Track | Artifact Submission Deadline 
 Tue 14 Jan 2025 | Artifact Track | Notification of Decision 
 Tue 14 Jan 2025 | Research Track | 2nd Round: Notification 
 Tue 28 Jan 2025 | Research Track | All Rounds: Camera Ready 
 Tue 28 Jan 2025 | Artifact Track | Camera Ready 
 Mon 11 Nov 2024 | Research Track | 1st Round: Notification 
 Tue 8 Oct 2024 | Research Track | 1st Round: Paper Submission 
 Tue 1 Oct 2024 | Research Track | 1st Round: Abstract Deadline 

 x  Thu 5 Dec 12:37    

  SEAMS 2025   
  using conf.researchr.org  ( v1.67.1  )  
   Support page    
     
 Tracks  
 Research Track   
  Artifact Track    

 Attending  
 Venue: Rogers Centre, Ottawa (formerly Shaw Centre)   
  Registration   
  Hotels   
  Visa and Travel Authorization Information for ICSE 2025 and its Co-Located Events   
  Travelling to Ottawa   
  Getting Around Ottawa   
  Food at ICSE2025   
  Code of Conduct for ICSE 2025 and its Co-Located Events   
  Equity, Diversity, and Inclusion Plan for ICSE 2025   
  Fun Activities    
 Sign Up

50. Conference SEA_2:
Go directly to main content   
 Show navigation      
 Hide navigation      
   
 Call for Papers | Show navigation 
  Registration | Show navigation 
  Venue & Travel | Show navigation | Travel Information 
  Hotels 
  Program | Show navigation | Accepted Papers 
  Schedule 
  Proceedings 
  Committees | Show navigation 
  Past SEAs | Show navigation 

 Show search form  Hide search form 
  Quick links 
    
 Websites 
  Staff search 
  Search        

 Call for Papers 
  Registration 
  Venue & Travel 
  Program 
  Committees 
  Past SEAs 

  Search | Websites    Staff search     Start search 
  Quick links 

 Call for Papers 
  Registration 
  Venue & Travel 
  Program 
  Committees 
  Past SEAs 

 Symposium on Experimental Algorithms (SEA) 2024    

 You are here: 
  Faculty of Computer Science 
  Symposium on Experimental Algorithms (SEA) 2024 

 Visit Vienna for SEA 2024!  

 The Symposium on Experimental Algorithms  (SEA)  2024 will take place at the University of Vienna in the Sky Lounge, located high above the roofs in the center of Vienna, Austria, and offering a stunning view over the city!  

 Deadlines   
 Submission: February 10, 2024, AoE   
 Final version due: April 28, 2024, AoE   
   
 Conference Dates   
 July 24 - July 26, 2024   

 There will be a welcome reception on the evening of July 23.  

 Location   
 Sky Lounge  , 12th floor, Oskar-Morgenstern-Platz 1, 1090 Vienna, Austria  
   
 Accepted Papers   
 28 papers have been accepted  for presentation at SEA 2024!  
   
 Registration   
 is now open  . We also have blocked rooms in a number of hotels  (hotel booking closes on June 11).  
   
 Program   
 A detailed schedule with speaker information is now available  .  
   
 Proceeedings   
 The official proceedings of SEA 2024 have been published  .  

  Contact  
 Symposium on Experimental Algorithms  
   
  Kathrin Hanauer (local organizer)  
  Theory and Application of Algorithms  
  Fakultät für Informatik  
  Universität Wien  
  sea24.taa @  univie.ac.at   
    
 We thank our sponsors:   

  Sitemap  |  Imprint  |  Accessibility  |  Data Protection Declaration  | Printable version   

  Sitemap  |  Imprint  |  Accessibility  |  Data Protection Declaration  | Printable version   

  
Call for papers data: 
Go directly to main content   
 Show navigation      
 Hide navigation      
   
 Call for Papers | Hide navigation 
  Registration | Show navigation 
  Venue & Travel | Show navigation | Travel Information 
  Hotels 
  Program | Show navigation | Accepted Papers 
  Schedule 
  Proceedings 
  Committees | Show navigation 
  Past SEAs | Show navigation 

 Show search form  Hide search form 
  Quick links 
    
 Websites 
  Staff search 
  Search        

 Call for Papers 
  Registration 
  Venue & Travel 
  Program 
  Committees 
  Past SEAs 

  Search | Websites    Staff search     Start search 
  Quick links 

 Call for Papers 
  Registration 
  Venue & Travel 
  Program 
  Committees 
  Past SEAs 

 Symposium on Experimental Algorithms (SEA) 2024    

 You are here: 
  Faculty of Computer Science 
  Symposium on Experimental Algorithms (SEA) 2024 
  Call for Papers 

 Call for Papers  
   
 SEA aims to attract papers from the Computer Science community, the Operations Research/Mathematical Programming community and any other scientific community that is concerned with the main theme of the symposium, namely the role of experimentation and of algorithm engineering techniques in the design and evaluation of algorithms and data structures.  
  
 Submissions should present significant contributions supported by experimental evaluation, methodological issues in the design and interpretation of experiments, the use of (meta-)heuristics, or application-driven case studies that deepen the understanding of the complexity of a problem.  

 Topics of Interest  
 Contributions solicited cover a variety of topics including but not limited to:  

 Algorithm Engineering 
  Algorithmic Libraries and Software Repositories 
  Algorithmic Cryptography and Security 
  Algorithmic Natural Language Processing 
  Algorithmics for Databases 
  Analysis of Algorithms 
  Approximation Algorithms 
  Bioinformatics and Computational Biology 
  Branch-and-Bound Algorithms 
  Combinatorial Problems and Structures 
  Communication Networks 
  Computational Geometry 
  Computational Optimization 
  Data Structures 
  Distributed and Parallel Algorithms 
  Graph Algorithms 
  Heuristic Algorithms 
  Integer Programming 
  Logistics and Operations Management 
  Machine Learning and Data Mining 
  Mathematical Programming 
  Multiple Criteria Decision Making 
  Network Analysis 
  Online Problems 
  Randomized Algorithms 
  Semidefinite Programming 
  Streaming and External Memory Algorithms 

 We emphasize that SEA welcomes submissions that introduce novel applications of algorithms in other disciplines. Note that the SEA list of topics was updated with respect to past years.  

 Best Paper Award  
 The program committee will identify a submission as the best paper.  

 Proceedings  
 The conference proceedings will be published in the Leibniz International Proceedings in Informatics (LIPIcs)  , a series of high-quality conference proceedings across all fields in informatics established in cooperation with Schloss Dagstuhl Leibniz Center for Informatics. SEA Proceedings volumes are published according to the principle of OpenAccess, i.e., they are available online and free of charge.  

 Submission Guidelines  
 The authors should submit a paper not exceeding 12 pages, excluding the bibliography, the front page (authors, affiliation, keywords, abstract, ...), and brief appendix of up to 5 pages (figures and tables should be counted as part of the space occupied by the appendix).  
 Update:  More precisely, you can see your paper as a set of four bins:  
 front page (can only contain title, authors, affiliation, front matter, abstract, possibly the beginning of the introduction: its "bin capacity" is 1 page) 
  main text (can contain text, tables, figures, pseudocodes: its "bin capacity" is 12 pages) 
  bibliography pages (can only contain bibliographic references: its "bin capacity" is approximately 2 pages) 
  additional pages (may contain text, tables, figures: its "bin capacity" is 5 pages) 
  It is up to the authors to assign text, figures, tables, and other elements in such a way as to respect the bin capacities.  
  
 Authors are required to use the LaTeX style file supplied for the LIPIcs style  , without changing default values nor setting font size options in the "documentclass" statement. Final proceedings papers must be camera-ready in this format. We emphasize that a clearly marked Appendix of up to 5 pages, which will not count toward the 12 page submission limit, can be included and will be read at the referees' discretion. All submissions have to be made via the EasyChair submission page for the conference  .  
  
 Papers submitted for review should represent original, previously unpublished work or surveys of important results. At the time the paper is submitted to SEA, and for the entire review period, the paper (or essentially the same paper) should not be under review by any other conference with published proceedings or by a scientific journal. At least one author of each accepted paper will be expected to attend the conference and present the paper. Specifically, no accepted paper will be published unless an author registers to participate in the conference.  
  
 Authors are strongly encouraged to include a link to the source code and/or datasets to increase confidence in the reproducibility of their experiments; the code may be read and/or executed at the referees' discretion.  
 Full papers must be submitted via EasyChair by January 29, 2024, AoE   February 10, 2024, AoE   
   
 Authors will be notified of acceptance status by March 15, 2024, AoE  March 27, 2024, AoE  

 Final version due: April 28, 2024, AoE   

 Final versions of accepted papers will be submitted to Dagstuhl's Leibniz International Proceedings in Informatics (LIPIcs). Details about the submission server will be communicated to corresponding authors of accepted papers.  

  Contact  
 Symposium on Experimental Algorithms  
   
  Kathrin Hanauer (local organizer)  
  Theory and Application of Algorithms  
  Fakultät für Informatik  
  Universität Wien  
  sea24.taa @  univie.ac.at   
   Page content   
 Topics of Interest 
  Proceedings 
  Submission Guidelines 

 We thank our sponsors:   

  Sitemap  |  Imprint  |  Accessibility  |  Data Protection Declaration  | Printable version   

  Sitemap  |  Imprint  |  Accessibility  |  Data Protection Declaration  | Printable version   

  Important dates data: 
undefined

